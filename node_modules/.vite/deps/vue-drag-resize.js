import {
  __commonJS
} from "./chunk-3EJPJMEH.js";

// node_modules/vue-drag-resize/dist/index.js
var require_dist = __commonJS({
  "node_modules/vue-drag-resize/dist/index.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.VueDragResize = e() : t.VueDragResize = e();
    }(window, function() {
      return function(t) {
        function e(n) {
          if (i[n])
            return i[n].exports;
          var o = i[n] = { i: n, l: false, exports: {} };
          return t[n].call(o.exports, o, o.exports, e), o.l = true, o.exports;
        }
        var i = {};
        return e.m = t, e.c = i, e.d = function(t2, i2, n) {
          e.o(t2, i2) || Object.defineProperty(t2, i2, { configurable: false, enumerable: true, get: n });
        }, e.r = function(t2) {
          Object.defineProperty(t2, "__esModule", { value: true });
        }, e.n = function(t2) {
          var i2 = t2 && t2.__esModule ? function() {
            return t2.default;
          } : function() {
            return t2;
          };
          return e.d(i2, "a", i2), i2;
        }, e.o = function(t2, e2) {
          return Object.prototype.hasOwnProperty.call(t2, e2);
        }, e.p = "", e(e.s = 25);
      }([function(t, e, i) {
        var n = i(11);
        "string" == typeof n && (n = [[t.i, n, ""]]);
        var o = {};
        o.transform = void 0;
        i(3)(n, o);
        n.locals && (t.exports = n.locals);
      }, function(t, e, i) {
        "use strict";
        function n(t2, e2, i2, n2, o, r, s, a) {
          var h = "function" == typeof t2 ? t2.options : t2;
          e2 && (h.render = e2, h.staticRenderFns = i2, h._compiled = true), n2 && (h.functional = true), r && (h._scopeId = "data-v-" + r);
          var c;
          if (s ? (c = function(t3) {
            t3 = t3 || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, t3 || "undefined" == typeof __VUE_SSR_CONTEXT__ || (t3 = __VUE_SSR_CONTEXT__), o && o.call(this, t3), t3 && t3._registeredComponents && t3._registeredComponents.add(s);
          }, h._ssrRegister = c) : o && (c = a ? function() {
            o.call(this, this.$root.$options.shadowRoot);
          } : o), c)
            if (h.functional) {
              h._injectStyles = c;
              var u = h.render;
              h.render = function(t3, e3) {
                return c.call(e3), u(t3, e3);
              };
            } else {
              var l = h.beforeCreate;
              h.beforeCreate = l ? [].concat(l, c) : [c];
            }
          return { exports: t2, options: h };
        }
        i.d(e, "a", function() {
          return n;
        });
      }, function(t, e, i) {
        "use strict";
        function n(t2) {
          return a(t2) || s(t2) || r(t2) || o();
        }
        function o() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function r(t2, e2) {
          if (t2) {
            if ("string" == typeof t2)
              return h(t2, e2);
            var i2 = Object.prototype.toString.call(t2).slice(8, -1);
            return "Object" === i2 && t2.constructor && (i2 = t2.constructor.name), "Map" === i2 || "Set" === i2 ? Array.from(t2) : "Arguments" === i2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i2) ? h(t2, e2) : void 0;
          }
        }
        function s(t2) {
          if ("undefined" != typeof Symbol && null != t2[Symbol.iterator] || null != t2["@@iterator"])
            return Array.from(t2);
        }
        function a(t2) {
          if (Array.isArray(t2))
            return h(t2);
        }
        function h(t2, e2) {
          (null == e2 || e2 > t2.length) && (e2 = t2.length);
          for (var i2 = 0, n2 = new Array(e2); i2 < e2; i2++)
            n2[i2] = t2[i2];
          return n2;
        }
        function c(t2) {
          t2.forEach(function(t3, e2) {
            document.documentElement.addEventListener(e2, t3);
          });
        }
        function u(t2) {
          t2.forEach(function(t3, e2) {
            document.documentElement.removeEventListener(e2, t3);
          });
        }
        var l = function() {
          var t2 = this, e2 = t2.$createElement, i2 = t2._self._c || e2;
          return i2("div", { staticClass: "vdr", class: (t2.active || t2.isActive ? "active" : "inactive") + " " + (t2.contentClass ? t2.contentClass : ""), style: t2.positionStyle, on: { mousedown: function(e3) {
            t2.bodyDown(e3);
          }, touchstart: function(e3) {
            t2.bodyDown(e3);
          }, touchend: function(e3) {
            t2.up(e3);
          } } }, [i2("div", { ref: "container", staticClass: "content-container", style: t2.sizeStyle }, [t2._t("default")], 2), t2._v(" "), t2._l(t2.sticks, function(e3) {
            return i2("div", { staticClass: "vdr-stick", class: ["vdr-stick-" + e3, t2.isResizable ? "" : "not-resizable"], style: t2.vdrStick(e3), on: { mousedown: function(i3) {
              i3.stopPropagation(), i3.preventDefault(), t2.stickDown(e3, i3);
            }, touchstart: function(i3) {
              i3.stopPropagation(), i3.preventDefault(), t2.stickDown(e3, i3);
            } } });
          })], 2);
        }, f = [];
        l._withStripped = true;
        var d = { y: { t: "top", m: "marginTop", b: "bottom" }, x: { l: "left", m: "marginLeft", r: "right" } }, p = { name: "vue-drag-resize", emits: ["clicked", "dragging", "dragstop", "resizing", "resizestop", "activated", "deactivated"], props: { stickSize: { type: Number, default: 8 }, parentScaleX: { type: Number, default: 1 }, parentScaleY: { type: Number, default: 1 }, isActive: { type: Boolean, default: false }, preventActiveBehavior: { type: Boolean, default: false }, isDraggable: { type: Boolean, default: true }, isResizable: { type: Boolean, default: true }, aspectRatio: { type: Boolean, default: false }, parentLimitation: { type: Boolean, default: false }, snapToGrid: { type: Boolean, default: false }, gridX: { type: Number, default: 50, validator: function(t2) {
          return t2 >= 0;
        } }, gridY: { type: Number, default: 50, validator: function(t2) {
          return t2 >= 0;
        } }, parentW: { type: Number, default: 0, validator: function(t2) {
          return t2 >= 0;
        } }, parentH: { type: Number, default: 0, validator: function(t2) {
          return t2 >= 0;
        } }, w: { type: [String, Number], default: 200, validator: function(t2) {
          return "string" == typeof t2 ? "auto" === t2 : t2 >= 0;
        } }, h: { type: [String, Number], default: 200, validator: function(t2) {
          return "string" == typeof t2 ? "auto" === t2 : t2 >= 0;
        } }, minw: { type: Number, default: 50, validator: function(t2) {
          return t2 >= 0;
        } }, minh: { type: Number, default: 50, validator: function(t2) {
          return t2 >= 0;
        } }, x: { type: Number, default: 0, validator: function(t2) {
          return "number" == typeof t2;
        } }, y: { type: Number, default: 0, validator: function(t2) {
          return "number" == typeof t2;
        } }, z: { type: [String, Number], default: "auto", validator: function(t2) {
          return "string" == typeof t2 ? "auto" === t2 : t2 >= 0;
        } }, dragHandle: { type: String, default: null }, dragCancel: { type: String, default: null }, sticks: { type: Array, default: function() {
          return ["tl", "tm", "tr", "mr", "br", "bm", "bl", "ml"];
        } }, axis: { type: String, default: "both", validator: function(t2) {
          return -1 !== ["x", "y", "both", "none"].indexOf(t2);
        } }, contentClass: { type: String, required: false, default: "" } }, data: function() {
          return { fixAspectRatio: null, active: null, zIndex: null, parentWidth: null, parentHeight: null, left: null, top: null, right: null, bottom: null, minHeight: null };
        }, beforeCreate: function() {
          this.stickDrag = false, this.bodyDrag = false, this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } }, this.currentStick = null;
        }, mounted: function() {
          var t2 = this;
          this.parentElement = this.$el.parentNode, this.parentWidth = this.parentW ? this.parentW : this.parentElement.clientWidth, this.parentHeight = this.parentH ? this.parentH : this.parentElement.clientHeight, this.left = this.x, this.top = this.y, this.right = this.parentWidth - ("auto" === this.w ? this.$refs.container.scrollWidth : this.w) - this.left, this.bottom = this.parentHeight - ("auto" === this.h ? this.$refs.container.scrollHeight : this.h) - this.top, this.domEvents = /* @__PURE__ */ new Map([["mousemove", this.move], ["mouseup", this.up], ["mouseleave", this.up], ["mousedown", this.deselect], ["touchmove", this.move], ["touchend", this.up], ["touchcancel", this.up], ["touchstart", this.up]]), c(this.domEvents), this.dragHandle && n(this.$el.querySelectorAll(this.dragHandle)).forEach(function(e2) {
            e2.setAttribute("data-drag-handle", t2._uid);
          }), this.dragCancel && n(this.$el.querySelectorAll(this.dragCancel)).forEach(function(e2) {
            e2.setAttribute("data-drag-cancel", t2._uid);
          });
        }, beforeDestroy: function() {
          u(this.domEvents);
        }, methods: { deselect: function() {
          this.preventActiveBehavior || (this.active = false);
        }, move: function(t2) {
          if (this.stickDrag || this.bodyDrag) {
            t2.stopPropagation();
            var e2 = void 0 !== t2.pageX ? t2.pageX : t2.touches[0].pageX, i2 = void 0 !== t2.pageY ? t2.pageY : t2.touches[0].pageY, n2 = this.dimensionsBeforeMove, o2 = { x: (n2.pointerX - e2) / this.parentScaleX, y: (n2.pointerY - i2) / this.parentScaleY };
            if (this.stickDrag && this.stickMove(o2), this.bodyDrag) {
              if ("x" === this.axis)
                o2.y = 0;
              else if ("y" === this.axis)
                o2.x = 0;
              else if ("none" === this.axis)
                return;
              this.bodyMove(o2);
            }
          }
        }, up: function(t2) {
          this.stickDrag ? this.stickUp(t2) : this.bodyDrag && this.bodyUp(t2);
        }, bodyDown: function(t2) {
          var e2 = t2.target, i2 = t2.button;
          if (this.preventActiveBehavior || (this.active = true), (!i2 || 0 === i2) && (this.$emit("clicked", t2), this.active && !(this.dragHandle && e2.getAttribute("data-drag-handle") !== this._uid.toString() || this.dragCancel && e2.getAttribute("data-drag-cancel") === this._uid.toString()))) {
            void 0 !== t2.stopPropagation && t2.stopPropagation(), void 0 !== t2.preventDefault && t2.preventDefault(), this.isDraggable && (this.bodyDrag = true);
            var n2 = void 0 !== t2.pageX ? t2.pageX : t2.touches[0].pageX, o2 = void 0 !== t2.pageY ? t2.pageY : t2.touches[0].pageY;
            this.saveDimensionsBeforeMove({ pointerX: n2, pointerY: o2 }), this.parentLimitation && (this.limits = this.calcDragLimitation());
          }
        }, bodyMove: function(t2) {
          var e2 = this.dimensionsBeforeMove, i2 = this.parentWidth, n2 = this.parentHeight, o2 = this.gridX, r2 = this.gridY, s2 = this.width, a2 = this.height, h2 = e2.top - t2.y, c2 = e2.bottom + t2.y, u2 = e2.left - t2.x, l2 = e2.right + t2.x;
          if (this.snapToGrid) {
            var f2 = true, d2 = true, p2 = h2 - Math.floor(h2 / r2) * r2, m2 = n2 - c2 - Math.floor((n2 - c2) / r2) * r2, v2 = u2 - Math.floor(u2 / o2) * o2, g2 = i2 - l2 - Math.floor((i2 - l2) / o2) * o2;
            p2 > r2 / 2 && (p2 -= r2), m2 > r2 / 2 && (m2 -= r2), v2 > o2 / 2 && (v2 -= o2), g2 > o2 / 2 && (g2 -= o2), Math.abs(m2) < Math.abs(p2) && (f2 = false), Math.abs(g2) < Math.abs(v2) && (d2 = false), h2 -= f2 ? p2 : m2, c2 = n2 - a2 - h2, u2 -= d2 ? v2 : g2, l2 = i2 - s2 - u2;
          }
          var b = this.rectCorrectionByLimit({ newLeft: u2, newRight: l2, newTop: h2, newBottom: c2 });
          this.left = b.newLeft, this.right = b.newRight, this.top = b.newTop, this.bottom = b.newBottom, this.$emit("dragging", this.rect);
        }, bodyUp: function() {
          this.bodyDrag = false, this.$emit("dragging", this.rect), this.$emit("dragstop", this.rect), this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } };
        }, stickDown: function(t2, e2) {
          var i2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          if (this.isResizable && this.active || i2) {
            this.stickDrag = true;
            var n2 = void 0 !== e2.pageX ? e2.pageX : e2.touches[0].pageX, o2 = void 0 !== e2.pageY ? e2.pageY : e2.touches[0].pageY;
            this.saveDimensionsBeforeMove({ pointerX: n2, pointerY: o2 }), this.currentStick = t2, this.limits = this.calcResizeLimits();
          }
        }, saveDimensionsBeforeMove: function(t2) {
          var e2 = t2.pointerX, i2 = t2.pointerY;
          this.dimensionsBeforeMove.pointerX = e2, this.dimensionsBeforeMove.pointerY = i2, this.dimensionsBeforeMove.left = this.left, this.dimensionsBeforeMove.right = this.right, this.dimensionsBeforeMove.top = this.top, this.dimensionsBeforeMove.bottom = this.bottom, this.dimensionsBeforeMove.width = this.width, this.dimensionsBeforeMove.height = this.height, this.aspectFactor = this.width / this.height;
        }, stickMove: function(t2) {
          var e2 = this.currentStick, i2 = this.dimensionsBeforeMove, n2 = this.gridY, o2 = this.gridX, r2 = this.snapToGrid, s2 = this.parentHeight, a2 = this.parentWidth, h2 = i2.top, c2 = i2.bottom, u2 = i2.left, l2 = i2.right;
          switch (e2[0]) {
            case "b":
              c2 = i2.bottom + t2.y, r2 && (c2 = s2 - Math.round((s2 - c2) / n2) * n2);
              break;
            case "t":
              h2 = i2.top - t2.y, r2 && (h2 = Math.round(h2 / n2) * n2);
          }
          switch (e2[1]) {
            case "r":
              l2 = i2.right + t2.x, r2 && (l2 = a2 - Math.round((a2 - l2) / o2) * o2);
              break;
            case "l":
              u2 = i2.left - t2.x, r2 && (u2 = Math.round(u2 / o2) * o2);
          }
          var f2 = this.rectCorrectionByLimit({ newLeft: u2, newRight: l2, newTop: h2, newBottom: c2 });
          if (u2 = f2.newLeft, l2 = f2.newRight, h2 = f2.newTop, c2 = f2.newBottom, this.aspectRatio) {
            var d2 = this.rectCorrectionByAspectRatio({ newLeft: u2, newRight: l2, newTop: h2, newBottom: c2 });
            u2 = d2.newLeft, l2 = d2.newRight, h2 = d2.newTop, c2 = d2.newBottom;
          }
          this.left = u2, this.right = l2, this.top = h2, this.bottom = c2, this.$emit("resizing", this.rect);
        }, stickUp: function() {
          this.stickDrag = false, this.dimensionsBeforeMove = { pointerX: 0, pointerY: 0, x: 0, y: 0, w: 0, h: 0 }, this.limits = { left: { min: null, max: null }, right: { min: null, max: null }, top: { min: null, max: null }, bottom: { min: null, max: null } }, this.$emit("resizing", this.rect), this.$emit("resizestop", this.rect);
        }, calcDragLimitation: function() {
          var t2 = this.parentWidth, e2 = this.parentHeight;
          return { left: { min: 0, max: t2 - this.width }, right: { min: 0, max: t2 - this.width }, top: { min: 0, max: e2 - this.height }, bottom: { min: 0, max: e2 - this.height } };
        }, calcResizeLimits: function() {
          var t2 = this.aspectFactor, e2 = this.width, i2 = this.height, n2 = this.bottom, o2 = this.top, r2 = this.left, s2 = this.right, a2 = this.minh, h2 = this.minw, c2 = this.parentLimitation ? 0 : null;
          this.aspectRatio && (h2 / a2 > t2 ? a2 = h2 / t2 : h2 = t2 * a2);
          var u2 = { left: { min: c2, max: r2 + (e2 - h2) }, right: { min: c2, max: s2 + (e2 - h2) }, top: { min: c2, max: o2 + (i2 - a2) }, bottom: { min: c2, max: n2 + (i2 - a2) } };
          if (this.aspectRatio) {
            var l2 = { left: { min: r2 - Math.min(o2, n2) * t2 * 2, max: r2 + (i2 - a2) / 2 * t2 * 2 }, right: { min: s2 - Math.min(o2, n2) * t2 * 2, max: s2 + (i2 - a2) / 2 * t2 * 2 }, top: { min: o2 - Math.min(r2, s2) / t2 * 2, max: o2 + (e2 - h2) / 2 / t2 * 2 }, bottom: { min: n2 - Math.min(r2, s2) / t2 * 2, max: n2 + (e2 - h2) / 2 / t2 * 2 } };
            "m" === this.currentStick[0] ? (u2.left = { min: Math.max(u2.left.min, l2.left.min), max: Math.min(u2.left.max, l2.left.max) }, u2.right = { min: Math.max(u2.right.min, l2.right.min), max: Math.min(u2.right.max, l2.right.max) }) : "m" === this.currentStick[1] && (u2.top = { min: Math.max(u2.top.min, l2.top.min), max: Math.min(u2.top.max, l2.top.max) }, u2.bottom = { min: Math.max(u2.bottom.min, l2.bottom.min), max: Math.min(u2.bottom.max, l2.bottom.max) });
          }
          return u2;
        }, sideCorrectionByLimit: function(t2, e2) {
          var i2 = e2;
          return null !== t2.min && e2 < t2.min ? i2 = t2.min : null !== t2.max && t2.max < e2 && (i2 = t2.max), i2;
        }, rectCorrectionByLimit: function(t2) {
          var e2 = this.limits, i2 = t2.newRight, n2 = t2.newLeft, o2 = t2.newBottom, r2 = t2.newTop;
          return n2 = this.sideCorrectionByLimit(e2.left, n2), i2 = this.sideCorrectionByLimit(e2.right, i2), r2 = this.sideCorrectionByLimit(e2.top, r2), o2 = this.sideCorrectionByLimit(e2.bottom, o2), { newLeft: n2, newRight: i2, newTop: r2, newBottom: o2 };
        }, rectCorrectionByAspectRatio: function(t2) {
          var e2 = t2.newLeft, i2 = t2.newRight, n2 = t2.newTop, o2 = t2.newBottom, r2 = this.parentWidth, s2 = this.parentHeight, a2 = this.currentStick, h2 = this.aspectFactor, c2 = this.dimensionsBeforeMove, u2 = r2 - e2 - i2, l2 = s2 - n2 - o2;
          if ("m" === a2[1]) {
            var f2 = l2 - c2.height;
            e2 -= f2 * h2 / 2, i2 -= f2 * h2 / 2;
          } else if ("m" === a2[0]) {
            var d2 = u2 - c2.width;
            n2 -= d2 / h2 / 2, o2 -= d2 / h2 / 2;
          } else
            u2 / l2 > h2 ? (u2 = h2 * l2, "l" === a2[1] ? e2 = r2 - i2 - u2 : i2 = r2 - e2 - u2) : (l2 = u2 / h2, "t" === a2[0] ? n2 = s2 - o2 - l2 : o2 = s2 - n2 - l2);
          return { newLeft: e2, newRight: i2, newTop: n2, newBottom: o2 };
        } }, computed: { positionStyle: function() {
          return { top: this.top + "px", left: this.left + "px", zIndex: this.zIndex };
        }, sizeStyle: function() {
          return { width: "auto" == this.w ? "auto" : this.width + "px", height: "auto" == this.h ? "auto" : this.height + "px" };
        }, vdrStick: function() {
          var t2 = this;
          return function(e2) {
            var i2 = { width: "".concat(t2.stickSize / t2.parentScaleX, "px"), height: "".concat(t2.stickSize / t2.parentScaleY, "px") };
            return i2[d.y[e2[0]]] = "".concat(t2.stickSize / t2.parentScaleX / -2, "px"), i2[d.x[e2[1]]] = "".concat(t2.stickSize / t2.parentScaleX / -2, "px"), i2;
          };
        }, width: function() {
          return this.parentWidth - this.left - this.right;
        }, height: function() {
          return this.parentHeight - this.top - this.bottom;
        }, rect: function() {
          return { left: Math.round(this.left), top: Math.round(this.top), width: Math.round(this.width), height: Math.round(this.height) };
        } }, watch: { active: function(t2) {
          t2 ? this.$emit("activated") : this.$emit("deactivated");
        }, isActive: { immediate: true, handler: function(t2) {
          this.active = t2;
        } }, z: { immediate: true, handler: function(t2) {
          (t2 >= 0 || "auto" === t2) && (this.zIndex = t2);
        } }, x: { handler: function(t2, e2) {
          var i2 = this;
          if (!this.stickDrag && !this.bodyDrag && t2 !== this.left) {
            var n2 = e2 - t2;
            this.bodyDown({ pageX: this.left, pageY: this.top }), this.bodyMove({ x: n2, y: 0 }), this.$nextTick(function() {
              i2.bodyUp();
            });
          }
        } }, y: { handler: function(t2, e2) {
          var i2 = this;
          if (!this.stickDrag && !this.bodyDrag && t2 !== this.top) {
            var n2 = e2 - t2;
            this.bodyDown({ pageX: this.left, pageY: this.top }), this.bodyMove({ x: 0, y: n2 }), this.$nextTick(function() {
              i2.bodyUp();
            });
          }
        } }, w: { handler: function(t2, e2) {
          var i2 = this;
          if (!this.stickDrag && !this.bodyDrag && t2 !== this.width) {
            var n2 = e2 - t2;
            this.stickDown("mr", { pageX: this.right, pageY: this.top + this.height / 2 }, true), this.stickMove({ x: n2, y: 0 }), this.$nextTick(function() {
              i2.stickUp();
            });
          }
        } }, h: { handler: function(t2, e2) {
          var i2 = this;
          if (!this.stickDrag && !this.bodyDrag && t2 !== this.height) {
            var n2 = e2 - t2;
            this.stickDown("bm", { pageX: this.left + this.width / 2, pageY: this.bottom }, true), this.stickMove({ x: 0, y: n2 }), this.$nextTick(function() {
              i2.stickUp();
            });
          }
        } }, parentW: function(t2) {
          this.right = t2 - this.width - this.left, this.parentWidth = t2;
        }, parentH: function(t2) {
          this.bottom = t2 - this.height - this.top, this.parentHeight = t2;
        } } }, m = p, v = (i(12), i(1)), g = Object(v.a)(m, l, f, false, null, null, null);
        g.options.__file = "src/components/vue-drag-resize.vue";
        e.a = g.exports;
      }, function(t, e, i) {
        function n(t2, e2) {
          for (var i2 = 0; i2 < t2.length; i2++) {
            var n2 = t2[i2], o2 = p[n2.id];
            if (o2) {
              o2.refs++;
              for (var r2 = 0; r2 < o2.parts.length; r2++)
                o2.parts[r2](n2.parts[r2]);
              for (; r2 < n2.parts.length; r2++)
                o2.parts.push(u(n2.parts[r2], e2));
            } else {
              for (var s2 = [], r2 = 0; r2 < n2.parts.length; r2++)
                s2.push(u(n2.parts[r2], e2));
              p[n2.id] = { id: n2.id, refs: 1, parts: s2 };
            }
          }
        }
        function o(t2, e2) {
          for (var i2 = [], n2 = {}, o2 = 0; o2 < t2.length; o2++) {
            var r2 = t2[o2], s2 = e2.base ? r2[0] + e2.base : r2[0], a2 = r2[1], h2 = r2[2], c2 = r2[3], u2 = { css: a2, media: h2, sourceMap: c2 };
            n2[s2] ? n2[s2].parts.push(u2) : i2.push(n2[s2] = { id: s2, parts: [u2] });
          }
          return i2;
        }
        function r(t2, e2) {
          var i2 = v(t2.insertInto);
          if (!i2)
            throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
          var n2 = y[y.length - 1];
          if ("top" === t2.insertAt)
            n2 ? n2.nextSibling ? i2.insertBefore(e2, n2.nextSibling) : i2.appendChild(e2) : i2.insertBefore(e2, i2.firstChild), y.push(e2);
          else {
            if ("bottom" !== t2.insertAt)
              throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
            i2.appendChild(e2);
          }
        }
        function s(t2) {
          if (null === t2.parentNode)
            return false;
          t2.parentNode.removeChild(t2);
          var e2 = y.indexOf(t2);
          e2 >= 0 && y.splice(e2, 1);
        }
        function a(t2) {
          var e2 = document.createElement("style");
          return t2.attrs.type = "text/css", c(e2, t2.attrs), r(t2, e2), e2;
        }
        function h(t2) {
          var e2 = document.createElement("link");
          return t2.attrs.type = "text/css", t2.attrs.rel = "stylesheet", c(e2, t2.attrs), r(t2, e2), e2;
        }
        function c(t2, e2) {
          Object.keys(e2).forEach(function(i2) {
            t2.setAttribute(i2, e2[i2]);
          });
        }
        function u(t2, e2) {
          var i2, n2, o2, r2;
          if (e2.transform && t2.css) {
            if (!(r2 = e2.transform(t2.css)))
              return function() {
              };
            t2.css = r2;
          }
          if (e2.singleton) {
            var c2 = b++;
            i2 = g || (g = a(e2)), n2 = l.bind(null, i2, c2, false), o2 = l.bind(null, i2, c2, true);
          } else
            t2.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (i2 = h(e2), n2 = d.bind(null, i2, e2), o2 = function() {
              s(i2), i2.href && URL.revokeObjectURL(i2.href);
            }) : (i2 = a(e2), n2 = f.bind(null, i2), o2 = function() {
              s(i2);
            });
          return n2(t2), function(e3) {
            if (e3) {
              if (e3.css === t2.css && e3.media === t2.media && e3.sourceMap === t2.sourceMap)
                return;
              n2(t2 = e3);
            } else
              o2();
          };
        }
        function l(t2, e2, i2, n2) {
          var o2 = i2 ? "" : n2.css;
          if (t2.styleSheet)
            t2.styleSheet.cssText = w(e2, o2);
          else {
            var r2 = document.createTextNode(o2), s2 = t2.childNodes;
            s2[e2] && t2.removeChild(s2[e2]), s2.length ? t2.insertBefore(r2, s2[e2]) : t2.appendChild(r2);
          }
        }
        function f(t2, e2) {
          var i2 = e2.css, n2 = e2.media;
          if (n2 && t2.setAttribute("media", n2), t2.styleSheet)
            t2.styleSheet.cssText = i2;
          else {
            for (; t2.firstChild; )
              t2.removeChild(t2.firstChild);
            t2.appendChild(document.createTextNode(i2));
          }
        }
        function d(t2, e2, i2) {
          var n2 = i2.css, o2 = i2.sourceMap, r2 = void 0 === e2.convertToAbsoluteUrls && o2;
          (e2.convertToAbsoluteUrls || r2) && (n2 = x(n2)), o2 && (n2 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(o2)))) + " */");
          var s2 = new Blob([n2], { type: "text/css" }), a2 = t2.href;
          t2.href = URL.createObjectURL(s2), a2 && URL.revokeObjectURL(a2);
        }
        var p = {}, m = /* @__PURE__ */ function(t2) {
          var e2;
          return function() {
            return void 0 === e2 && (e2 = t2.apply(this, arguments)), e2;
          };
        }(function() {
          return window && document && document.all && !window.atob;
        }), v = /* @__PURE__ */ function(t2) {
          var e2 = {};
          return function(i2) {
            return void 0 === e2[i2] && (e2[i2] = t2.call(this, i2)), e2[i2];
          };
        }(function(t2) {
          return document.querySelector(t2);
        }), g = null, b = 0, y = [], x = i(10);
        t.exports = function(t2, e2) {
          if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document)
            throw new Error("The style-loader cannot be used in a non-browser environment");
          e2 = e2 || {}, e2.attrs = "object" == typeof e2.attrs ? e2.attrs : {}, e2.singleton || (e2.singleton = m()), e2.insertInto || (e2.insertInto = "head"), e2.insertAt || (e2.insertAt = "bottom");
          var i2 = o(t2, e2);
          return n(i2, e2), function(t3) {
            for (var r2 = [], s2 = 0; s2 < i2.length; s2++) {
              var a2 = i2[s2], h2 = p[a2.id];
              h2.refs--, r2.push(h2);
            }
            if (t3) {
              n(o(t3, e2), e2);
            }
            for (var s2 = 0; s2 < r2.length; s2++) {
              var h2 = r2[s2];
              if (0 === h2.refs) {
                for (var c2 = 0; c2 < h2.parts.length; c2++)
                  h2.parts[c2]();
                delete p[h2.id];
              }
            }
          };
        };
        var w = /* @__PURE__ */ function() {
          var t2 = [];
          return function(e2, i2) {
            return t2[e2] = i2, t2.filter(Boolean).join("\n");
          };
        }();
      }, function(t, e) {
        function i(t2, e2) {
          var i2 = t2[1] || "", o = t2[3];
          if (!o)
            return i2;
          if (e2 && "function" == typeof btoa) {
            var r = n(o);
            return [i2].concat(o.sources.map(function(t3) {
              return "/*# sourceURL=" + o.sourceRoot + t3 + " */";
            })).concat([r]).join("\n");
          }
          return [i2].join("\n");
        }
        function n(t2) {
          return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(t2)))) + " */";
        }
        t.exports = function(t2) {
          var e2 = [];
          return e2.toString = function() {
            return this.map(function(e3) {
              var n2 = i(e3, t2);
              return e3[2] ? "@media " + e3[2] + "{" + n2 + "}" : n2;
            }).join("");
          }, e2.i = function(t3, i2) {
            "string" == typeof t3 && (t3 = [[null, t3, ""]]);
            for (var n2 = {}, o = 0; o < this.length; o++) {
              var r = this[o][0];
              "number" == typeof r && (n2[r] = true);
            }
            for (o = 0; o < t3.length; o++) {
              var s = t3[o];
              "number" == typeof s[0] && n2[s[0]] || (i2 && !s[2] ? s[2] = i2 : i2 && (s[2] = "(" + s[2] + ") and (" + i2 + ")"), e2.push(s));
            }
          }, e2;
        };
      }, function(t, e) {
        var i;
        i = /* @__PURE__ */ function() {
          return this;
        }();
        try {
          i = i || Function("return this")() || (0, eval)("this");
        } catch (t2) {
          "object" == typeof window && (i = window);
        }
        t.exports = i;
      }, , , , , function(t, e) {
        t.exports = function(t2) {
          var e2 = "undefined" != typeof window && window.location;
          if (!e2)
            throw new Error("fixUrls requires window.location");
          if (!t2 || "string" != typeof t2)
            return t2;
          var i = e2.protocol + "//" + e2.host, n = i + e2.pathname.replace(/\/[^\/]*$/, "/");
          return t2.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(t3, e3) {
            var o = e3.trim().replace(/^"(.*)"$/, function(t4, e4) {
              return e4;
            }).replace(/^'(.*)'$/, function(t4, e4) {
              return e4;
            });
            if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(o))
              return t3;
            var r;
            return r = 0 === o.indexOf("//") ? o : 0 === o.indexOf("/") ? i + o : n + o.replace(/^\.\//, ""), "url(" + JSON.stringify(r) + ")";
          });
        };
      }, function(t, e, i) {
        e = t.exports = i(4)(false), e.push([t.i, '\n.vdr,.vdr.active:before{position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box\n}\n.vdr.active:before{content:"";width:100%;height:100%;top:0;left:0;outline:1px dashed #d6d6d6\n}\n.vdr-stick{-webkit-box-sizing:border-box;box-sizing:border-box;position:absolute;font-size:1px;background:#fff;border:1px solid #6c6c6c;-webkit-box-shadow:0 0 2px #bbb;box-shadow:0 0 2px #bbb\n}\n.inactive .vdr-stick{display:none\n}\n.vdr-stick-br,.vdr-stick-tl{cursor:nwse-resize\n}\n.vdr-stick-bm,.vdr-stick-tm{left:50%;cursor:ns-resize\n}\n.vdr-stick-bl,.vdr-stick-tr{cursor:nesw-resize\n}\n.vdr-stick-ml,.vdr-stick-mr{top:50%;cursor:ew-resize\n}\n.vdr-stick.not-resizable{display:none\n}\n.content-container{display:block;position:relative\n}', ""]);
      }, function(t, e, i) {
        "use strict";
        var n = i(0), o = i.n(n);
        o.a;
      }, , , , , , , , , , , , , function(t, e, i) {
        "use strict";
        i.r(e), (function(t2) {
          function n(t3) {
            n.installed || (n.installed = true, t3.component("vue-drag-resize", o.a));
          }
          i.d(e, "install", function() {
            return n;
          });
          var o = i(2), r = { install: n }, s = null;
          "undefined" != typeof window ? s = window.Vue : void 0 !== t2 && (s = t2.Vue), s && s.use(r), e.default = o.a;
        }).call(this, i(5));
      }]);
    });
  }
});
export default require_dist();
//# sourceMappingURL=vue-drag-resize.js.map
