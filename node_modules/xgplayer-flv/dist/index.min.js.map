{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/flv/services/buffer-service.js","../src/flv/utils.js","../src/flv/index.js","../src/flv/options.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nexport const SafeJSON = {\n  stringify (obj) {\n    try {\n      return JSON.stringify(obj)\n    } catch (e) {\n      return ''\n    }\n  },\n  parse (obj) {\n    try {\n      return JSON.parse(obj)\n    } catch (e) {\n      return undefined\n    }\n  }\n}\n","/* eslint-disable no-undef */\nimport { Buffer } from './buffer'\nimport { isBrowser } from './env'\nimport { ERR, StreamingError } from './error'\nimport { Logger } from './logger'\nimport { createPublicPromise, nowTime, SafeJSON } from './utils'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\nfunction isMMS (mediaSource) {\n  return /ManagedMediaSource/gi.test(Object.prototype.toString.call(mediaSource))\n}\n\n/**\n * @param {TimeRanges} buffered\n */\nfunction getTimeRanges (buffered) {\n  const ranges = []\n\n  if (buffered instanceof TimeRanges) {\n    for (let i = 0; i < buffered.length; i++) {\n      ranges.push({\n        start: buffered.start(i),\n        end: buffered.end(i)\n      })\n    }\n  }\n  return ranges\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @param { boolean} preferMMS\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  static isMMSOnly () {\n    return typeof ManagedMediaSource !== 'undefined' && typeof MediaSource === 'undefined'\n  }\n\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      preferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get hasOpTasks () {\n    let flag = false\n    Object.keys(this._queue).forEach(k => {\n      const queue = this._queue[k]\n      if (Array.isArray(queue)) {\n        flag ||= queue.length > 0\n      }\n    })\n    return flag\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  get streaming () {\n    return isMMS(this.mediaSource) ? this.mediaSource.streaming : true\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('setDuration but ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('setDuration', duration)\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costTime = nowTime() - this._st\n        this._logger.debug('sourceopen', costTime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime: costTime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @private\n   */\n  _onStartStreaming = () => {\n    this._logger.debug('startstreaming')\n  }\n\n  /**\n   * @private\n   */\n  _onEndStreaming = () => {\n    this._logger.debug('endstreaming')\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.preferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    const useMMS = isMMS(ms)\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costTime = nowTime() - this._st\n      this._logger.debug('sourceopen')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime: costTime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    if (useMMS) {\n      ms.addEventListener('startstreaming', this._onStartStreaming)\n      ms.addEventListener('endstreaming', this._onEndStreaming)\n    }\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    media.disableRemotePlayback = useMMS\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n\n      if (isMMS(ms)) {\n        ms.removeEventListener('startstreaming', this._onStartStreaming)\n        ms.removeEventListener('endstreaming', this._onEndStreaming)\n      }\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initQueue = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initQueue.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initQueue.length > 0 && this._queue[type].push(...initQueue)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug(`UpdateEnd(${type}/${op.opName})`, SafeJSON.stringify(getTimeRanges(this._sourceBuffer[type]?.buffered)), costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  MEDIASOURCE_OPENED: 'core.mediasourceopened',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  CHASEFRAME: 'core.chaseframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, sei => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime, isLive) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach(sei => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n\n    if (!isLive) return\n\n    this._seiSet.forEach(s => {\n      if (s.time < currentTime - 5) {\n        this._seiSet.delete(s)\n      }\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","export class BandwidthService {\n  _chunkSpeeds = [] // bps\n  _speeds = [] // bps\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-3)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._chunkSpeeds.push(8000 * totalByte / ms)\n    this._chunkSpeeds = this._chunkSpeeds.slice(-100)\n  }\n\n  getAvgSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n    return this._chunkSpeeds.reduce((a, c) => (a += c)) / this._chunkSpeeds.length\n  }\n\n  getLatestSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeeds[this._chunkSpeeds.length - 1]\n  }\n\n  reset () {\n    this._chunkSpeeds = []\n    this._speeds = []\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n  _startGopId = -1\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (this._startGopId === -1) {\n        this._startGopId = sample.gopId\n      }\n      if (sample.gopId === this._startGopId) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption () {\n    return this.isAudioEncryption\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        case 38: // HEVC FD_NUT\n          if (isHevc) {\n            let ffByteFound = false\n            for (let i = 2; i < unit.byteLength; i++) {\n              if (unit[i] === 0xff) {\n                ffByteFound = true\n                break\n              }\n            }\n            if (!ffByteFound) {\n              return\n            }\n          }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { FlvDemuxer, FMP4Remuxer, WarningType } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, EVENT, ERR, StreamingError, Logger, concatUint8Array } from 'xgplayer-streaming-shared'\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  /** @type {import('../index').Flv | null} */\n  flv = null\n\n  _demuxer = new FlvDemuxer()\n  _remuxer = null\n  _mse = null\n  _softVideo = null\n\n  _sourceCreated = false\n\n  _needInitSegment = true\n  _discontinuity = true\n  _contiguous = false\n\n  _initSegmentId = ''\n\n  _cachedBuffer = null\n\n  _demuxStartTime = 0\n\n  _opts = null\n\n  get baseDts () {\n    return this._demuxer?._fixer?._baseDts\n  }\n\n  get blobUrl () {\n    return this._mse?.url\n  }\n\n  /**\n   * @param {import('../index').Flv} flv\n   * @param {Object} [softVideo]\n   */\n  constructor (flv, softVideo, opts = {}) {\n    this.flv = flv\n    this._opts = opts\n\n    if (softVideo) { // soft decode\n      this._softVideo = softVideo\n    } else {\n      this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n      this._mse = new MSE(null, {\n        preferMMS:\n          typeof opts.preferMMS === 'boolean' ? opts.preferMMS : !!opts.perferMMS /* perferMMS is typo, deprecated */\n      })\n      this._mse.bindMedia(flv.media)\n    }\n  }\n\n  isFull (mediaType = MSE.VIDEO){\n    return this._mse.isFull(mediaType)\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = true\n    this._initSegmentId = ''\n  }\n\n  unContiguous (startTime) {\n    this._contiguous = false\n    this._demuxStartTime = startTime\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.flv.media)\n    }\n    this._needInitSegment = true\n    this._discontinuity = true\n    this._contiguous = false\n    this._sourceCreated = false\n    this._initSegmentId = ''\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.flv.emit(EVENT.BUFFEREOS)\n      }\n    } else if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async updateDuration (duration) {\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      logger.debug('update duration', duration)\n      await this._mse.updateDuration(duration)\n    }\n  }\n\n  async destroy () {\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n\n    this._mse = null\n    this._softVideo = null\n    this._demuxer = null\n    this._remuxer = null\n  }\n\n  async appendBuffer (chunk) {\n    if (this._cachedBuffer) {\n      chunk = concatUint8Array(this._cachedBuffer, chunk)\n      this._cachedBuffer = null\n    }\n\n    const demuxer = this._demuxer\n    if (!chunk || !chunk.length || !demuxer) return\n\n    try {\n      demuxer.demuxAndFix(chunk, this._discontinuity, this._contiguous, this._demuxStartTime)\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.FLV, error)\n    }\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n\n    let videoExist = videoTrack.exist()\n    let audioExist = audioTrack.exist()\n\n    if (this._opts.onlyAudio) {\n      videoExist = false\n      videoTrack.present = false\n    }\n\n    if (this._opts.onlyVideo) {\n      audioExist = false\n      audioTrack.present = false\n    }\n\n    if (\n      (!videoExist && videoTrack.present) ||\n      (!audioExist && audioTrack.present)\n    ) {\n      let duration = 0\n      const track = videoExist ? videoTrack : audioExist ? audioTrack : undefined\n      if (track && track.samples.length) {\n        duration = ((track.samples[track.samples.length - 1].originPts - track.samples[0].originPts) / track.timescale) * 1000\n      }\n      if (duration > this._opts.analyzeDuration) {\n        logger.warn(`analyze duration exceeded, ${duration}ms`, track)\n        videoTrack.present = videoExist\n        audioTrack.present = audioExist\n        this.flv.emit(EVENT.ANALYZE_DURATION_EXCEEDED, { duration })\n      } else {\n        this._cachedBuffer = chunk\n        return\n      }\n    }\n\n    const videoType = videoTrack.type\n    const audioType = audioTrack.type\n    this._fireEvents(videoTrack, audioTrack, metadataTrack)\n    this._discontinuity = false\n    this._contiguous = true\n    this._demuxStartTime = 0\n\n    const mse = this._mse\n\n    // emit demuxed track\n    this.flv.emit(EVENT.DEMUXED_TRACK, {videoTrack})\n\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._needInitSegment = true\n      this._initSegmentId = newId\n      this._emitMetaParsedEvent(videoTrack, audioTrack)\n    }\n\n    if (mse) {\n      if (!this._sourceCreated) {\n        await mse.open()\n        if (videoExist) {\n          logger.log(`codec: video/mp4;codecs=${videoTrack.codec}`)\n          mse.createSource(videoType, `video/mp4;codecs=${videoTrack.codec}`)\n        }\n        if (audioExist) {\n          logger.log(`codec: audio/mp4;codecs=${audioTrack.codec}`)\n          mse.createSource(audioType, `audio/mp4;codecs=${audioTrack.codec}`)\n        }\n        this._sourceCreated = true\n        this.flv.emit(EVENT.SOURCEBUFFER_CREATED)\n      }\n\n      let remuxResult\n      try {\n        // LG webos5.4系统上发现, 直播流开启low latency mode渲染的话，出首帧后需要等一段时间才触发loadeddata、canplay事件,影响首帧统计\n        // low latency mode通过解析封装的fmp4中对媒体播放时长的描述判断 https://issues.chromium.org/issues/41161663\n        if (this._needInitSegment && !this._opts.mseLowLatency) {\n          videoTrack.duration = this._opts.durationForMSELowLatencyOff * videoTrack.timescale\n          audioTrack.duration = this._opts.durationForMSELowLatencyOff * audioExist.timescale\n        }\n        remuxResult = this._remuxer.remux(this._needInitSegment)\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n\n      if (this._needInitSegment && !remuxResult.videoInitSegment && !remuxResult.audioInitSegment) {\n        return\n      }\n\n      this._needInitSegment = false\n\n      const p = []\n      if (remuxResult.videoInitSegment) p.push(mse.append(videoType, remuxResult.videoInitSegment))\n      if (remuxResult.audioInitSegment) p.push(mse.append(audioType, remuxResult.audioInitSegment))\n      if (remuxResult.videoSegment) p.push(mse.append(videoType, remuxResult.videoSegment))\n      if (remuxResult.audioSegment) p.push(mse.append(audioType, remuxResult.audioSegment))\n\n      return Promise.all(p)\n    } else if (this._softVideo) {\n      this._softVideo.appendBuffer(videoTrack, audioTrack)\n    }\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.flv.media\n    if (!this._mse || !this._demuxer || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this._mse.clearBuffer(0, removeEnd).then(() => this.flv.emit(EVENT.REMOVE_BUFFER, { removeEnd }))\n  }\n\n  _emitMetaParsedEvent (videoTrack, audioTrack) {\n    if (videoTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'video',\n        track: videoTrack,\n        meta: {\n          codec: videoTrack.codec,\n          timescale: videoTrack.timescale,\n          width: videoTrack.width,\n          height: videoTrack.height,\n          sarRatio: videoTrack.sarRatio,\n          baseDts: videoTrack.baseDts\n        }\n      })\n    }\n    if (audioTrack.exist()) {\n      this.flv.emit(EVENT.METADATA_PARSED, {\n        type: 'audio',\n        track: audioTrack,\n        meta: {\n          codec: audioTrack.codec,\n          channelCount: audioTrack.channelCount,\n          sampleRate: audioTrack.sampleRate,\n          timescale: audioTrack.timescale,\n          baseDts: audioTrack.baseDts\n        }\n      })\n    }\n\n    logger.debug('track parsed', videoTrack, audioTrack)\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack) {\n    logger.debug(videoTrack.samples, audioTrack.samples)\n\n    metadataTrack.flvScriptSamples.forEach(sample => {\n      this.flv.emit(EVENT.FLV_SCRIPT_DATA, sample)\n      logger.debug('flvScriptData', sample)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.flv.emit(EVENT.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = EVENT.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = EVENT.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = EVENT.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = EVENT.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = EVENT.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = EVENT.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.flv.emit(EVENT.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.flv.emit(EVENT.SEI, {\n        ...sei,\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","export function searchKeyframeIndex (list, value) {\n  let idx = 0\n\n  const last = list.length - 1\n  let mid = 0\n  let lbound = 0\n  let ubound = last\n\n  if (value < list[0]) {\n    idx = 0\n    lbound = ubound + 1 // skip search\n  }\n\n  while (lbound <= ubound) {\n    mid = lbound + Math.floor((ubound - lbound) / 2)\n    if (mid === last || (value >= list[mid] && value < list[mid + 1])) {\n      idx = mid\n      break\n    } else if (list[mid] < value) {\n      lbound = mid + 1\n    } else {\n      ubound = mid - 1\n    }\n  }\n\n  return idx\n}\n","import EventEmitter from 'eventemitter3'\nimport {\n  NetLoader,\n  Buffer,\n  MSE,\n  EVENT,\n  StreamingError,\n  BandwidthService,\n  SeiService,\n  GapService,\n  MediaStatsService,\n  isMediaPlaying,\n  Logger,\n  getVideoPlaybackQuality\n} from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './services'\nimport { getOption } from './options'\nimport { searchKeyframeIndex } from './utils'\n\nexport const logger = new Logger('flv')\n\nconst MAX_HOLE = 0.1\nconst MAX_START_GAP = 0.3\n\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\nexport class Flv extends EventEmitter {\n  /** @type {HTMLMediaElement | null} */\n  media = null\n\n  _loading = false\n\n  /** @type {import('./options').FlvOption} */\n  _opts = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  /** @type {NetLoader} */\n  _mediaLoader = null\n\n  _maxChunkWaitTimer = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _urlSwitching = false\n  _seamlessSwitching = false\n  _disconnectRetryCount = 0\n  _preLoadEndPoint = 0\n\n  _keyframes = null\n  _acceptRanges = true\n\n  /**\n   * @param {import('./options').FlvOption} opts\n   */\n  constructor (opts) {\n    super()\n    this._opts = getOption(opts)\n    this.media = this._opts.media || document.createElement('video')\n    this._opts.media = null\n    this._firstProgressEmit = false\n    this._mediaLoader = new NetLoader({\n      ...this._opts.fetchOptions,\n      retry: this._opts.retryCount,\n      retryDelay: this._opts.retryDelay,\n      timeout: this._opts.loadTimeout,\n      onRetryError: this._onRetryError,\n      onProgress: this._onProgress,\n      responseType: 'arraybuffer'\n    })\n\n    this._disconnectRetryCount = this._opts.disconnectRetryCount\n\n    this._bufferService = new BufferService(\n      this,\n      this._opts.softDecode ? this.media : undefined,\n      this._opts\n    )\n    this._seiService = new SeiService(this)\n    this._bandwidthService = new BandwidthService()\n    this._stats = new MediaStatsService(this)\n\n    if (!this._opts.softDecode) {\n      this._gapService = new GapService()\n    }\n\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('loadeddata', this._onLoadeddata)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n    this.media.addEventListener('progress', this._onBufferUpdate)\n    this.media.addEventListener('waiting', this._onWaiting)\n\n    this.on(EVENT.FLV_SCRIPT_DATA, this._onFlvScriptData)\n  }\n\n  get version () {\n    return __VERSION__\n  }\n\n  get isLive () {\n    return this._opts.isLive\n  }\n\n  get baseDts () {\n    return this._bufferService?.baseDts\n  }\n\n  get seekable () {\n    return !!this._keyframes && this._acceptRanges\n  }\n\n  get loader () {\n    return this._mediaLoader\n  }\n\n  get blobUrl () {\n    return this._bufferService?.blobUrl\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  bufferInfo (maxHole = MAX_HOLE) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  /**\n   * load or reload source\n   * @param {string} [url]\n   * @return {Promise}\n   */\n  async load (url, reuseMse = false) {\n    if (!this._bufferService) return\n    await this._reset(reuseMse)\n\n    this._loadData(url, this._opts.isLive ? [] : [0, this._opts.defaultVodLoadSize])\n\n    clearTimeout(this._tickTimer)\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /** @return {Promise} */\n  async replay (seamlesslyReload = this._opts.seamlesslyReload, isPlayEmit) {\n    if (!this.media) return\n\n    this._resetDisconnectCount()\n\n    if (seamlesslyReload) {\n      await this._clear()\n\n      setTimeout(() => {\n        this._loadData(this._opts.url)\n        this._bufferService.seamlessSwitch()\n        this._seamlessSwitching = true\n      })\n    } else {\n      await this.load()\n    }\n    return this.media.play(!isPlayEmit).catch(() => {})\n  }\n\n  disconnect () {\n    logger.debug('disconnect!')\n    return this._clear()\n  }\n\n  /**\n   * @param {string} url\n   * @param {boolean} [seamless=false]\n   */\n  async switchURL (url, seamless) {\n    if (!this._bufferService) return\n\n    this._resetDisconnectCount()\n\n    if (!seamless || !this._opts.isLive) {\n      await this.load(url)\n      this._urlSwitching = true\n      return this.media.play(true).catch(() => {})\n    }\n\n    await this._clear()\n\n    setTimeout(() => {\n      this._urlSwitching = true\n      this._seamlessSwitching = true\n      this._loadData(url)\n      this._bufferService.seamlessSwitch()\n    })\n  }\n\n  /** @return {Promise} */\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._seiService.reset()\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('loadeddata', this._onLoadeddata)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    this.media.removeEventListener('waiting', this._onWaiting)\n    this.media.removeEventListener('progress', this._onBufferUpdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n    this._bufferService = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  _emitError (error, endOfStream = true) {\n    logger.table(error)\n    logger.error(error)\n    logger.error(this.media?.error)\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this._seamlessSwitching = false\n      this.emit(EVENT.SWITCH_URL_FAILED, error)\n    }\n    this.emit(EVENT.ERROR, error)\n    if (endOfStream) {\n      this._seiService.reset()\n      this._end()\n    }\n  }\n\n  async _reset (reuseMse = false) {\n    this._seiService.reset()\n    this._bandwidthService.reset()\n    this._stats.reset()\n    await this._clear()\n    await this._bufferService.reset(reuseMse)\n  }\n\n  async _loadData (url, range) {\n    if (url) this._opts.url = url\n    let finnalUrl = (url = this._opts.url)\n    if (!url) throw new Error('Source url is missing')\n\n    if (this._opts.preProcessUrl) {\n      finnalUrl = this._opts.preProcessUrl(url).url\n    }\n\n    this._mediaLoader.finnalUrl = finnalUrl\n\n    this.emit(EVENT.LOAD_START, { url: finnalUrl, seamlessSwitching: this._seamlessSwitching })\n\n    logger.debug('load data, loading:', this._loading, finnalUrl)\n\n    if (this._loading) {\n      await this._mediaLoader.cancel()\n    }\n\n    this._loading = true\n    try {\n      await this._mediaLoader.load({ url: finnalUrl, range })\n    } catch (error) {\n      this._loading = false\n      return this._emitError(StreamingError.network(error))\n    }\n  }\n\n  /**\n   *\n   * @param {ArrayBuffer} chunk\n   * @param {boolean} done\n   * @param { {startTime: number, endTime: number, st: number, firstByteTime: number}}\n   * startTime: 当前流式分段开始read时间\n   * endTime: 当前流式分段结束read时间\n   * st: 拉流开始时间\n   * firstByteTime: 首字节响应时间\n   * @param {Response} response\n   */\n  _onProgress = async (\n    chunk,\n    done,\n    { startTime, endTime, st, firstByteTime },\n    response\n  ) => {\n    this._loading = !done\n    if (!this._firstProgressEmit) {\n      if (!this.media) {\n        this._mediaLoader?.cancel()\n        return\n      }\n      const headers = response.headers\n      this.emit(EVENT.TTFB, {\n        url: this._opts.url,\n        responseUrl: response.url,\n        elapsed: st ? firstByteTime - st : endTime - startTime\n      })\n      this.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers })\n      this._acceptRanges =\n        !!headers?.get('Accept-Ranges') || !!headers?.get('Content-Range')\n      this._firstProgressEmit = true\n    }\n\n    if (!this._bufferService) return\n    clearTimeout(this._maxChunkWaitTimer)\n\n    this._bandwidthService.addChunkRecord(chunk?.byteLength, endTime - startTime)\n\n    try {\n      await this._bufferService.appendBuffer(chunk)\n      this._bufferService?.evictBuffer(this._opts.bufferBehind)\n    } catch (error) {\n      if (!this.isLive && this._bufferService.isFull()) {\n        await this._mediaLoader.cancel()\n        this._loading = false\n        // detect the large buffer size can appended\n        const remaining = this.bufferInfo().remaining\n        this._opts.preloadTime = parseInt(remaining) / 2\n        return\n      }\n      return this._emitError(StreamingError.create(error))\n    }\n\n    if (this._urlSwitching) {\n      this._urlSwitching = false\n      this.emit(EVENT.SWITCH_URL_SUCCESS, { url: this._opts.url })\n    }\n\n    // ！！\n    if (this._seamlessSwitching) {\n      this._seamlessSwitching = false\n      this._tick()\n    }\n\n    if (done && !this.media.seeking) {\n      this.emit(EVENT.LOAD_COMPLETE)\n      logger.debug('load done')\n\n      if (this.isLive && this._disconnectRetryCount <= 0) {\n        this._end()\n      }\n      return\n    }\n\n    if (!this.isLive) return\n\n    const { maxReaderInterval } = this._opts\n    if (maxReaderInterval) {\n      clearTimeout(this._maxChunkWaitTimer)\n      this._maxChunkWaitTimer = setTimeout(() => {\n        if (this._disconnectRetryCount) {\n          this._disconnectRetryCount--\n          this.load()\n          return\n        }\n        logger.debug('onMaxChunkWait', maxReaderInterval)\n        this._end()\n      }, maxReaderInterval)\n    }\n  }\n\n  _onRetryError = (error, retryTime) => {\n    logger.debug('load retry', error, retryTime)\n\n    this.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n\n  async _clear () {\n    if (this._mediaLoader) await this._mediaLoader.cancel()\n    clearTimeout(this._maxChunkWaitTimer)\n    clearTimeout(this._tickTimer)\n    this._loading = false\n    this._firstProgressEmit = false\n  }\n\n  _end = () => {\n    this._clear()\n    if (this._bufferService) {\n      this._bufferService.endOfStream()\n    }\n\n    logger.debug('end stream')\n  }\n\n  _resetDisconnectCount = () => {\n    this._disconnectRetryCount = this._opts.disconnectRetryCount\n  }\n\n  _tick = () => {\n    clearTimeout(this._tickTimer)\n    const { media } = this\n    if (!media) return\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n\n    const bufferEnd = Buffer.end(Buffer.get(media))\n\n    if (bufferEnd < MAX_HOLE || !media.readyState) return\n\n    const opts = this._opts\n    if (isMediaPlaying(media)) {\n      if (this._gapService) {\n        this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n      }\n    } else {\n      if (!media.currentTime && this._gapService) {\n        // 起播跳洞检测\n        const gapJump = this._opts.mseLowLatency || (this._opts.mseLowLatency === false && this.bufferInfo(MAX_START_GAP).nextStart)\n        if (gapJump) {\n          this._gapService.do(media, opts.maxJumpDistance, this.isLive, 3)\n        }\n        return\n      }\n      if (opts.isLive && media.readyState === 4 && bufferEnd > opts.disconnectTime) {\n        this.disconnect()\n      }\n    }\n  }\n\n  _onPlay = () => {\n    const canReplay = this._opts.softDecode || this.media?.buffered?.length\n    if (this.isLive) {\n      if (!this._loading && canReplay) {\n        this.replay(undefined, true)\n      }\n      return\n    }\n\n    const info = this.bufferInfo()\n    if ((info.start || info.nextStart) > MAX_HOLE) {\n      this._tick()\n    }\n  }\n\n  _onLoadeddata = () => {\n    if (this.isLive && !this._opts.mseLowLatency) {\n      // update duration to Infinity\n      if (this.media.duration !== Infinity) {\n        this._bufferService.updateDuration(Infinity).catch(e=>{})\n      }\n    }\n  }\n\n  _onSeeking = async () => {\n    if (!this.isLive && this.seekable) {\n      this._preLoadEndPoint = -1\n      this._checkPreload()\n    }\n  }\n\n  _onTimeupdate = () => {\n    if (!this.media) return\n\n    const opts = this._opts\n    const currentTime = this.media.currentTime\n\n    if (opts.isLive && opts.maxLatency && opts.targetLatency) {\n      const bufferEnd = Buffer.end(Buffer.get(this.media))\n      const latency = bufferEnd - currentTime\n      if (latency >= opts.maxLatency) {\n        this.media.currentTime = bufferEnd - opts.targetLatency\n        this.emit(EVENT.CHASEFRAME, {currentTime: this.media.currentTime, latency: opts.targetLatency})\n      }\n    }\n    this._seiService.throw(currentTime, true)\n\n    if (opts.isLive || !this.seekable || this._loading) return\n\n    this._checkPreload()\n  }\n\n  _onWaiting = () => {\n    // retry for stream disconnect\n    if (this.isLive && !this._loading && this._disconnectRetryCount) {\n      this._disconnectRetryCount--\n      this.load()\n    }\n  }\n\n  _onBufferUpdate = () => {\n    if (this._opts.isLive) return\n    const { end, nextEnd } = this.bufferInfo()\n    if (Math.abs((end || nextEnd) - this.media.duration) < 1) {\n      this._end()\n      // start with gap and buffer append finished untimely\n      if (this.media.readyState <= 2) {\n        this._tick()\n      }\n    }\n  }\n\n  _checkPreload = async () => {\n    const { remaining: remainingBuffer = 0 } = this.bufferInfo()\n    const opts = this._opts\n    const filepositions = this._keyframes.filepositions\n    const times = this._keyframes.times\n    const currentTime = this.media.currentTime\n\n    if (remainingBuffer < opts.preloadTime) {\n      const i = searchKeyframeIndex(\n        this._keyframes.times,\n        currentTime + remainingBuffer + MAX_HOLE\n      )\n      let end = searchKeyframeIndex(\n        this._keyframes.times,\n        currentTime + remainingBuffer + this._opts.preloadTime\n      )\n      if (end === i) {\n        end = i + 1\n      }\n\n      if (this._preLoadEndPoint === end) return\n\n      const startByte = filepositions[i]\n      if (startByte === null || startByte === undefined) return\n      await this._mediaLoader.cancel()\n      this._loadData(null, [startByte, filepositions[end]])\n      this._preLoadEndPoint = end\n      this._bufferService.unContiguous(times[i])\n    }\n  }\n\n  _onFlvScriptData = sample => {\n    const keyframes = sample.data?.onMetaData?.keyframes\n    const duration = sample.data?.onMetaData?.duration\n    if (keyframes) {\n      this._keyframes = keyframes\n    }\n\n    if (!this._opts.isLive && duration) {\n      this._bufferService.updateDuration(duration)\n    }\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Flv.enableLogger()\n  } else {\n    Flv.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  analyzeDuration?: number,\n *  maxJumpDistance?: number,\n *  maxLatency?: number,\n *  targetLatency?: number,\n *  bufferBehind?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  disconnectRetryCount?: number\n *  loadTimeout?: number,\n *  maxReaderInterval?: number,\n *  preloadTime?: number,\n *  defaultVodLoadSize?: number,\n *  disconnectTime?: number,\n *  fetchOptions?: RequestInit,\n *  seamlesslyReload: boolean,\n*   keepStatusAfterSwitch?: boolean,\n*   onlyVideo?: boolean,\n*   onlyAudio?: boolean,\n*   preferMMS?: boolean,\n*   mseLowLatency?: boolean,\n*   durationForLowLatency?: number, // s\n*   preProcessUrl?: (url: string, ext?: { [propName: string]: any }) => { url: string, [propName: string]: any }\n * }} FlvOption\n */\n\n/**\n * @param {FlvOption} opts\n * @returns {FlvOption}\n */\nexport function getOption (opts) {\n  const ret = {\n    retryCount: 3,\n    retryDelay: 1000,\n    disconnectRetryCount: 0,\n    loadTimeout: 10000,\n    maxReaderInterval: 5000,\n    preloadTime: 5,\n    defaultVodLoadSize: 10000000,\n    isLive: false,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    analyzeDuration: 20000,\n    seamlesslyReload: false,\n    keepStatusAfterSwitch: true,\n    onlyVideo: false,\n    onlyAudio: false,\n    preferMMS: false,\n    mseLowLatency: true, // mse 低延迟模式渲染 https://issues.chromium.org/issues/41161663\n    durationForMSELowLatencyOff: 6, // s\n    ...opts\n  }\n\n  if (ret.isLive) {\n    if (ret.preloadTime) {\n      // compat old\n\n      if (!ret.maxLatency) {\n        ret.maxLatency = ret.preloadTime * 2\n      }\n      if (!ret.targetLatency) {\n        ret.targetLatency = ret.preloadTime\n      }\n\n      if (ret.disconnectTime === null || ret.disconnectTime === undefined) {\n        ret.disconnectTime = ret.maxLatency\n      }\n    }\n  }\n\n  return ret\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport default class PluginExtension {\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, decodeMode } = this._opts\n\n    if (!media) return\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    if (media.setDecodeMode) {\n      media.setDecodeMode(decodeMode)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n    _onLowDecode = () => {\n      const { media, innerDegrade, backupURL } = this._opts\n\n      this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n      this._plugin?.player?.emit('core_event', {\n        ...media.degradeInfo,\n        eventName: EVENT.LOWDECODE\n      })\n\n      if ((innerDegrade === 1 || innerDegrade === 3) && backupURL) {\n        this._degrade(backupURL)\n      }\n    }\n\n    /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo?.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const flvPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(flvPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1 || innerDegrade === 3) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Events, Errors } from 'xgplayer'\nimport { EVENT } from 'xgplayer-streaming-shared'\nimport { Flv } from './flv'\nimport PluginExtension from './plugin-extension'\n\nexport class FlvPlugin extends BasePlugin {\n  static Flv = Flv\n\n  static get pluginName () {\n    return 'flv'\n  }\n\n  /** @type {Flv} */\n  flv = null;\n\n  /** @type {PluginExtension} */\n  pluginExtension = null\n\n  /** @type {Flv} */\n  get core () {\n    return this.flv\n  }\n\n  /** @type {string} */\n  get version () {\n    return this.flv?.version\n  }\n\n  /** @type {boolean} */\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio'\n  }\n\n  get loader () {\n    return this.flv?.loader\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n\n    if (!config.url) return\n\n    if (this.flv) this.flv.destroy()\n\n    this.player.switchURL = this._onSwitchURL\n\n    const flvOpts = config.flv || {}\n    if (flvOpts.disconnectTime === null || flvOpts.disconnectTime === undefined) {\n      flvOpts.disconnectTime = 0\n    }\n\n    this.flv = new Flv({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: this.player.video,\n      preProcessUrl: (url, ext) => this.player.preProcessUrl?.(url, ext) || {url, ext},\n      ...flvOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => {\n            return this.flv?.blobUrl\n          },\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        media: this.player.video,\n        ...config.flv\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      this.player?.useHooks('replay', () => this.flv?.replay())\n    }\n\n    this.on(Events.URL_CHANGE, this._onSwitchURL)\n    this.on(Events.DESTROY, this.destroy)\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.ANALYZE_DURATION_EXCEEDED)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.CHASEFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.FLV_SCRIPT_DATA)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n\n    this.flv.load(config.url, true)\n  }\n\n  /**\n   * @return {import('./flv').Stats | undefined}\n   */\n  getStats = () => {\n    return this.flv?.getStats()\n  }\n\n  destroy = () => {\n    if (this.flv) {\n      this.flv.destroy()\n      this.flv = null\n    }\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Flv.isSupported(mediaType, codec)\n  }\n\n  static isSupportedMMS () {\n    return typeof ManagedMediaSource !== 'undefined'\n  }\n\n  /**\n   *\n   * @param {string} url\n   * @param {boolean | {seamless: boolean}} seamless\n   */\n  _onSwitchURL = (url, seamless) => {\n    if (this.flv) {\n      this.player.config.url = url\n\n      if (typeof seamless === 'object') {\n        seamless = seamless.seamless\n      }\n\n      this.flv.switchURL(url, seamless)\n\n      if (!seamless && this.player.config?.flv?.keepStatusAfterSwitch) {\n        this._keepPauseStatus()\n      }\n    }\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _onDefinitionChange = ({ to }) => {\n    if (this.flv) this.flv.switchURL(to)\n  }\n\n  _transError () {\n    this.flv.on(EVENT.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.flv.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n      }\n    })\n  }\n}\n"],"names":["Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","arguments","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","isBrowser","window","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","apply","disabled","console","debug","nowTime","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","e","delLog","shift","join","reset","_console5","group","table","groupEnd","val","Date","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","createPublicPromise","res","rej","promise","Promise","resolve","reject","used","parseInt","performance","now","getTime","SafeJSON","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","isMMS","mediaSource","test","OP_NAME","MSE","media","_this2","create","_logger","queue","_queue","op","opName","_this2$_sourceBuffer$","costtime","_opst","ranges","TimeRanges","getTimeRanges","_sourceBuffer","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","readyState","_this3","flag","keys","forEach","k","isArray","_url","_this$mediaSource2","duration","streaming","_mseFullFlag","VIDEO","_this4","isReduceDuration","bufferEnd","Math","max","_enqueueBlockingOp","isEnded","_this5","_openPromise","isOpened","ms","addEventListener","onOpen","costTime","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMMS","_this6","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","_onStartStreaming","_onEndStreaming","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this7","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this8","changeType","_enqueueOp","createSource","buffer","_this9","byteLength","_this9$_sourceBuffer$","appendBuffer","startTime","endTime","_this10","isInsertHead","remove","p","_this11","_this12","allClear","_this$_queue$type","initQueue","isinit","reason","_this13","setLiveSeekableRange","exec","_this14","splice","then","_callee3","types","waiters","_this15","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this16","_this17","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","totalByte","_speeds","_chunkSpeeds","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","_startGopId","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","dts","pts","first","isVideoEncryption","AudioTrack","sampleDuration","isAudioEncryption","VideoSample","originPts","originDts","keyframe","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","isFirefox","isAndroid","readBig32","getAvcCodec","codecs","h","parse","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","Concat","ResultConstructor","arrays","self","UINT32_MAX","pow","tracks","find","FTYPHEV1","FTYPAVC1","ftyp","moov","content","kid","box","pssh","useEME","encv","enca","mvhd","mvhdDurtion","mvhdTimecale","mvex","_toConsumableArray","trak","tkhd","id","tkhdDuration","mdia","mdhd","hdlr","minf","HDLR_TYPES","VMHD","SMHD","DINF","stbl","extBox","stss","entries","stsd","STTS","STSC","STSZ","STCO","mp4a","avc1hev1","esds","sinf","_concat$concat","hSpacing","vSpacing","avcc","btrt","pasp","avcC","tenc","schi","default_IsEncrypted","default_IV_size","default_KID","frma","data_format","charCodeAt","schm","typ","hvc1","avc1","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","moof","mfhd","traf","tfhd","tfdt","sencLength","isVideo","videoSenc","subsamples","videoSencLength","saiz","saio","trun","trun1","senc","sbgp","sdtp","extension","sampleCount","writeUint32","audioSenc","flags","samplesLength","InitializationVector","writeUint16","BytesOfClearData","BytesOfProtectedData","version","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i","_samples$i$flag","_samples$i$cts","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","trackMP4","mdiaMP4","minfMP4","stblMP4","stts","stsc","stsz","stco","ctts","_ref5","_ref6","firstChunk","samplesPerChunk","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","vmhd","smhd","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","r","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","iv","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","BufferService","flv","softVideo","opts","_opts","_softVideo","_remuxer","_demuxer","_mse","perferMMS","_evictBuffer","_appendBuffer","_destroy","_updateDuration","_endOfStream","_reset","_this$_demuxer","_this$_demuxer$_fixer","_this$_mse","mediaType","isFull","_needInitSegment","_discontinuity","_contiguous","_initSegmentId","_demuxStartTime","reuseMse","_args","_sourceCreated","updateDuration","_callee4","_context4","_callee5","demuxer","videoExist","audioExist","videoType","audioType","mse","newId","remuxResult","_context5","_cachedBuffer","demuxAndFix","onlyAudio","onlyVideo","analyzeDuration","_fireEvents","_emitMetaParsedEvent","mseLowLatency","durationForMSELowLatencyOff","remux","_callee6","bufferBehind","removeEnd","_context6","clearBuffer","meta","code","searchKeyframeIndex","list","idx","mid","lbound","ubound","MAX_HOLE","Flv","_clear2","_loadData2","_reset2","_switchURL","_replay","_load","_this$_mediaLoader","_this$_bufferService","maxReaderInterval","_loading","_firstProgressEmit","_mediaLoader","elapsed","_acceptRanges","_bufferService","_maxChunkWaitTimer","_bandwidthService","addChunkRecord","evictBuffer","preloadTime","_emitError","_urlSwitching","_seamlessSwitching","_tick","_disconnectRetryCount","_end","retryTime","network","_clear","disconnectRetryCount","_tickTimer","_tickInterval","isMediaPlaying","paused","ended","playbackRate","_gapService","do","disconnectTime","disconnect","_this$media","_this$media$buffered","canReplay","softDecode","replay","seekable","_preLoadEndPoint","_checkPreload","maxLatency","targetLatency","latency","_seiService","throw","_this$bufferInfo","_this$bufferInfo2","_this$bufferInfo2$rem","remainingBuffer","filepositions","times","_keyframes","_loadData","unContiguous","_sample$data","_sample$data$onMetaDa","_sample$data2","_sample$data2$onMetaD","keyframes","loadTimeout","defaultVodLoadSize","seamlesslyReload","keepStatusAfterSwitch","document","createElement","fetchOptions","_onRetryError","_onPlay","_onLoadeddata","_onSeeking","_onTimeupdate","_onBufferUpdate","_onWaiting","_onFlvScriptData","_this$_bufferService2","_this$_bufferService3","blobUrl","getLatestSpeed","getAvgSpeed","_this$media2","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args4","_x5","isPlayEmit","_args5","_resetDisconnectCount","seamlessSwitch","play","seamless","switchURL","_x6","_x7","_callee7","_context7","destroy","_this$media3","_callee8","_args8","_context8","_callee9","finnalUrl","_context9","preProcessUrl","seamlessSwitching","_x8","_x9","_callee10","_context10","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","_this$_opts","innerDegrade","backupURL","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","flvPlugin","pluginName","unRegisterPlugin","_init","_this$_opts2","decodeMode","setAttribute","setDecodeMode","_onLowDecode","_this$_opts3","_this$_opts3$media","FlvPlugin","_BasePlugin","_this$flv","_this$pluginExtension","pluginExtension","_this$player$config","_this$player$config$f","_keepPauseStatus","pause","_this$flv2","_this$player","_this$player$config2","_this$flv3","_onSwitchURL","flvOpts","_this$player2","_this2$player$preProc","_this2$player","defineGetterOrSetter","_this2$flv","configurable","forceDegradeToVideo","_this2$pluginExtensio","useHooks","_this2$flv2","URL_CHANGE","DESTROY","_transError","_transCoreEvent","Errors","BasePlugin"],"mappings":"sqmBAAA,MAAaA,EAAM,WAAA,SAAAA,IAAAC,OAAAD,GAmIhBA,OAnIgBA,EAAAA,EAAA,KAAA,CAAA,CAAAE,IAAA,QAAAC,MAKjB,SAAcC,GACR,OAACA,GAAQA,EAAIC,OAGE,IAAfD,EAAIC,QAAgBD,EAAIE,IAAI,GAAKF,EAAIG,MAAM,GAAK,MAEjC,IAAfH,EAAIC,QAAgBD,EAAIG,MAAM,GAAK,EAF0B,EAI1DH,EAAIG,MAAM,GAPe,IAUlC,CAAAL,IAAA,MAAAC,MAIA,SAAYC,GACN,OAACA,GAAQA,EAAIC,OAGE,IAAfD,EAAIC,QAAgBD,EAAIE,IAAI,GAAKF,EAAIG,MAAM,GAAK,KAAa,EAE1DH,EAAIE,IAAIF,EAAIC,OAAS,GALI,IAQlC,CAAAH,IAAA,MAAAC,MAIA,SAAYK,GACV,GAAKA,EACD,IACF,OAAOA,EAAEC,eACFC,OAKX,CAAAR,IAAA,UAAAC,MAKA,SAAgBC,EAAKO,GACf,IAACP,IAAQA,EAAIC,OAAQ,MAAO,GAGhC,IADA,IAAMO,EAAU,GACPC,EAAI,EAAGC,EAAIV,EAAIC,OAAQQ,EAAIC,EAAGD,IAAK,CAC1C,IAAME,EAASH,EAAQP,OACnB,GAACU,GAAWJ,EAET,CACCK,IAAAA,EAAOJ,EAAQG,EAAS,GACxBE,EAAUD,EAAK,GAEjBT,GADUH,EAAIG,MAAMM,GACZI,GAAWN,EAAS,CACxBL,IAAAA,EAAMF,EAAIE,IAAIO,GAChBP,EAAMW,IACRD,EAAK,GAAKV,QAGZM,EAAQM,KAAK,CAACd,EAAIG,MAAMM,GAAIT,EAAIE,IAAIO,UAXtCD,EAAQM,KAAK,CAACd,EAAIG,MAAMM,GAAIT,EAAIE,IAAIO,KAejCD,OAAAA,IAGT,CAAAV,IAAA,cAAAC,MAKA,SAAoBS,GACd,OAACA,GAAYA,EAAQP,OAClBO,EAAQO,QAAO,SAACC,EAAGC,GAAOD,OAAAA,GAAMC,EAAE,GAAKA,EAAE,MAAM,GADd,IAI1C,CAAAnB,IAAA,OAAAC,MAOA,SAAaC,GAAKkB,IAAAA,EAAGC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGZ,EAAOY,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/B,IAACnB,IAAQA,EAAIC,OAAe,MAAA,CAAEE,MAAO,EAAGD,IAAK,EAAGM,QAAS,IAW7D,IATA,IAAIL,EAAQ,EACRD,EAAM,EACNmB,EAAQ,EACRC,EAAY,EACZC,EAAU,EACVC,EAAY,EACZC,EAAU,EACRjB,EAAUZ,EAAOY,QAAQR,EAAKO,GAE3BE,EAAI,EAAGC,EAAIF,EAAQP,OAAQQ,EAAIC,EAAGD,IAAK,CAC9C,IAAMiB,EAAOlB,EAAQC,GACrB,GAAIS,EAAMX,GAAWmB,EAAK,IAAMR,GAAOQ,EAAK,GAC1CvB,EAAQuB,EAAK,GACbxB,EAAMwB,EAAK,GACHjB,EAAAA,MACCS,CAAAA,GAAAA,EAAMX,EAAUmB,EAAK,GAAI,CAClCJ,EAAYI,EAAK,GACjBH,EAAUG,EAAK,GACf,MACSR,EAAMX,EAAUmB,EAAK,KAC9BF,EAAYE,EAAK,GACjBD,EAAUC,EAAK,KAIZ,MAAA,CACLvB,MAAAA,EACAD,IAAAA,EACAmB,MAAAA,EACAb,QAAAA,EACAc,UAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAE,YAAaT,EACbU,OAAQV,EAAMf,EACd0B,UAAW3B,EAAMA,EAAMgB,EAAM,EAC7BjB,OAAQL,EAAOkC,aAAelC,EAAOkC,YAAYtB,QAEpDZ,EAnIgB,GCANmC,EAA8B,oBAAXC,OCAnBC,EAEF,UAFEA,EAGM,kBAHNA,EAIO,oBAJPA,EAKO,mBALPA,EAMmB,gCANnBA,EAOJ,QAPIA,EAQJ,QARIA,EASJ,QATIA,EAUN,MAVMA,EAWJ,QAXIA,EAYH,UAZGA,EAcA,CACTC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,WAAY,aACZC,kBAAmB,oBACnBC,UAAW,YACXC,SAAU,WACVC,OAAQ,SACRC,KAAK,OACLC,QAAQ,UACRC,eAAe,iBACfC,WAAW,aACXC,WAAW,aACXC,KAAK,OACLC,iBAAiB,mBACjBC,kBAAkB,oBAClBC,sBAAuB,wBACvBC,kBAAkB,oBAClBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,4BAA4B,8BAC5BC,8BAA8B,gCAC9BC,oBAAoB,uBAIXC,GAAQC,EAAAC,EAAAD,GAzCT,WA0CM,CACdxB,IAAK,KACLQ,KAAK,OACNgB,EAAAC,EACA3B,EAAc,MAAI0B,EAAAC,EAClB3B,EAAsB,MAAI0B,EAAAC,EAC1B3B,EAAuB,MAAI0B,EAAAC,EAC3B3B,EAAsB,MAAI0B,EAAAC,EAC1B3B,EAAmC,MAAI0B,EAAAC,EACvC3B,EAAY,CACXC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,KAAM,KACNW,KAAM,OACPW,EAAAC,EACA3B,EAAY,CACXI,KAAM,KACND,IAAK,OACNuB,EAAAC,EACA3B,EAAY,CACXmB,kBAAmB,KACnBC,kBAAmB,KACnBC,iBAAkB,KAClBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,oBAAqB,KACrBnB,WAAY,KACZC,kBAAmB,KACnBC,UAAW,KACXC,SAAU,KACVK,WAAW,KACXC,WAAW,OACZY,EAAAC,EACA3B,EAAS,CACRW,QAAQ,KACRC,eAAe,OAChBc,EAAAC,EACA3B,EAAY,KAAI0B,EAAAC,EAChB3B,EAAa,CACZgB,iBAAiB,KACjBC,kBAAkB,KAClBC,sBAAsB,OACvBS,GAKUC,WAAcC,GAAAC,EAAAF,EAAAC,GAAAE,IAAAA,EAAAC,EAAAJ,GACzB,SAAAA,EAAaK,EAAMC,EAASC,EAAQC,EAASC,GAAKC,IAAAA,EAU/CA,OAV+C1E,OAAAgE,IAChDG,EAAAA,EAAAQ,KAAMF,KAAAA,IAAOF,MAAAA,OAAAA,EAAAA,EAAQK,WAChBC,UAAYR,IAASjC,EAAsBA,EAAciC,EAC9DK,EAAKI,YAAcP,EACnBG,EAAKK,IAAMP,EACXE,EAAKM,UAAYnB,EAASQ,GAAMC,IAAYT,EAASQ,GACrDK,EAAKO,aAAeP,EAAKE,QACpBF,EAAKM,YACRN,EAAKG,UAAYzC,EACZ4C,EAAAA,UAAYnB,EAASa,EAAKG,YAChCH,EA2BFV,OA1BAA,EAAAA,EAAA,KAAA,CAAA,CAAA/D,IAAA,SAAAC,MAED,SAAemE,EAAMC,EAASC,EAAQC,EAASC,GAC7C,OAAIJ,aAAgBL,EACXK,GACEA,aAAgBa,QAChBb,EAAAA,EACFA,EAAA,IAGJA,IAAMA,EAAOjC,GAEX,IAAI4B,EAAeK,EAAMC,EAASC,EAAQC,EAASC,MAC3D,CAAAxE,IAAA,UAAAC,MAED,SAAgBO,GAAO0E,IAAAA,EACrB,OAAO,IAAInB,EACTvD,MAAAA,GAAAA,EAAO2E,UAAYhD,EAAsBA,EACzC,KACA3B,aAAiByE,MAAQzE,EAAQ,KACjC,CACE4E,IAAK5E,MAAAA,OAAAA,EAAAA,EAAO4E,IACZC,SAAU7E,MAAAA,OAAAA,EAAAA,EAAO6E,SACjBC,SAAU9E,MAAAA,GAAe,QAAV0E,EAAL1E,EAAO6E,gBAAQ,IAAAH,SAAfA,EAAiBK,aAGhCxB,GAtCiCkB,EAAAA,QC1FvBO,EAAgB,CAC3BC,MAAS,EACTC,IAAO,EACPC,KAAQ,EACRC,MAAS,GAGLC,EAAc,CAAC,UAAW,SAAU,SAAU,YAAY,OAAQ,OAAO,UAClEC,EAAM,WACjBA,SAAAA,EAAaC,EAAKC,GAAQjG,OAAA+F,GACxBG,KAAKF,KAAOA,GAAQ,GACpBE,KAAKC,QAAOC,IAAAA,OAAOF,KAAKF,KAAO,KAC/BE,KAAKG,eAAgBJ,MAAAA,OAAM,EAANA,EAAQI,gBAAiB,EAC9CH,KAAKI,YAAaL,MAAAA,OAAM,EAANA,EAAQK,aAPT,OAQjBJ,KAAKK,QAAU,EACfL,KAAKM,aAAe,GAwErBT,OAvEAU,EAAAV,EAAA,CAAA,CAAA9F,IAAA,QAAAC,MAED,WAAgB,IAAAwG,IAAAA,EAAAC,EAAArF,UAAAlB,OAANwG,EAAIC,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAxF,UAAAwF,GACPC,KAAAA,SAAQC,MAAbd,KAAI,CAAUT,EAAcC,OAAKU,OAAIQ,IACjCb,EAAOkB,WACXP,EAAAQ,SAAQC,MAAKH,MAAAN,EAAA,CAACR,KAAKC,QAASiB,KAAShB,OAAKQ,MAC3C,CAAA3G,IAAA,MAAAC,MAED,WAAc,IAAAmH,IAAAA,EAAAC,EAAAhG,UAAAlB,OAANwG,EAAIC,IAAAA,MAAAS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJX,EAAIW,GAAAjG,UAAAiG,GACLR,KAAAA,SAAQC,MAAbd,KAAI,CAAUT,EAAcE,KAAGS,OAAIQ,IAC/Bb,EAAOkB,WACXI,EAAAH,SAAQM,IAAGR,MAAAK,EAAA,CAACnB,KAAKC,QAASiB,KAAShB,OAAKQ,MACzC,CAAA3G,IAAA,OAAAC,MAED,WAAe,IAAAuH,IAAAA,EAAAC,EAAApG,UAAAlB,OAANwG,EAAIC,IAAAA,MAAAa,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJf,EAAIe,GAAArG,UAAAqG,GACNZ,KAAAA,SAAQC,MAAbd,KAAI,CAAUT,EAAcG,MAAIQ,OAAIQ,IAChCb,EAAOkB,WACXQ,EAAAP,SAAQU,KAAIZ,MAAAS,EAAA,CAACvB,KAAKC,QAASiB,KAAShB,OAAKQ,MAC1C,CAAA3G,IAAA,QAAAC,MAED,WAAgB,IAAA2H,IAAAA,EAAAC,EAAAxG,UAAAlB,OAANwG,EAAIC,IAAAA,MAAAiB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnB,EAAImB,GAAAzG,UAAAyG,GACPhB,KAAAA,SAAQC,MAAbd,KAAI,CAAUT,EAAcI,OAAKO,OAAIQ,IACjCb,EAAOkB,WACXY,EAAAX,SAAQzG,MAAKuG,MAAAa,EAAA,CAAC3B,KAAKC,QAASiB,KAAShB,OAAKQ,MAC3C,CAAA3G,IAAA,WAAAC,MAED,SAAUmG,GACR,KAAIA,EAAgBH,KAAKG,eAAzB,CACA,IAAI2B,EAAO,GACP,IAAA,IAAA,IAAAC,EAAA3G,UAAAlB,OAHsB8H,MAAOrB,MAAAoB,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAA7G,GAAAA,UAAA6G,GAI/B,IAAMC,EAAaF,EAAQG,KAAK,SAAAxG,GAAI,OAAIyG,EAAQzG,MAChDmG,EAAO9B,KAAKC,QAAUiB,IAAamB,KAAKC,UAAUJ,SAC3CK,GACP,OAME,GAJApC,GAAiBH,KAAKG,gBACxBH,KAAKK,SAAWyB,EAAK5H,OAChBoG,KAAAA,aAAavF,KAAK+G,IAErB9B,KAAKK,QAAUL,KAAKI,WAAY,CAC5BoC,IAAAA,EAASxC,KAAKM,aAAamC,QACjCzC,KAAKK,SAAWmC,EAAOtI,WAE1B,CAAAH,IAAA,cAAAC,MAED,WACE,IAAMgI,EAAUhC,KAAKM,aAAaoC,KAAK,MAEhCV,OADPhC,KAAK2C,QACEX,IACR,CAAAjI,IAAA,QAAAC,MAED,WACEgG,KAAKM,aAAe,GACpBN,KAAKK,QAAU,IAChB,CAAAtG,IAAA,QAAAC,MAED,WAAgB4I,IAAAA,EACV/C,EAAOkB,WACH8B,QAAAA,MAAM7C,KAAKC,UACnB2C,EAAA5B,SAAQ8B,MAAKhC,MAAA8B,EAAAxH,WACb4F,QAAQ+B,cACT,CAAAhJ,IAAA,cAAAC,MAYD,SAAagJ,GACXhD,KAAKG,cAAgB6C,KACtB,CAAA,CAAAjJ,IAAA,SAAAC,MAVD,WACE6F,EAAOkB,UAAW,IACnB,CAAAhH,IAAA,UAAAC,MAED,WACE6F,EAAOkB,UAAW,MACnBlB,EA/EgB,GAqFnB,SAASqB,IACA,OAAA,IAAI+B,MAAOC,iBAGpB,SAASC,EAAaH,GAChBI,GAAe,WAAfA,EAAOJ,GACFA,OAAAA,EAEHK,IAAAA,EAAUC,OAAOC,UAAUC,SAAS/E,KAAKuE,GAAKS,MAAM,GAAK,GACvDJ,OAAAA,GACD,IAAA,QACA,IAAA,aACA,IAAA,cAEIA,OAAAA,EAAU,IAAML,EAAI9I,OAAS,IACjC,IAAA,SACI,MAAA,KAAA,QAEAmJ,OAAAA,GAIJjB,SAAAA,EAASsB,EAAKC,EAAUC,GAC1BA,IAAeA,EAAA,GACfD,IAAqBA,EAAA,GAC1B,IAAME,EAAS,GAEf,IAAKH,GAAsB,WAAfN,EAAOM,GACVA,OAAAA,EAGHL,IAAAA,EAAUC,OAAOC,UAAUC,SAAS/E,KAAKiF,GAAKD,MAAM,GAAK,GAC/D,IAAK7D,EAAYkE,SAAST,GACjBA,OAAAA,EAGT,KAAIO,EAAQD,GAAZ,CAKA,IAAA,IAAW5J,KAAO2J,EACZJ,OAAOC,UAAUQ,eAAetF,KAAKiF,EAAK3J,KACxC6J,IAAUD,EACL5J,EAAAA,GAAOoJ,EAAYO,EAAI3J,IACD,WAApBqJ,EAAOM,EAAI3J,IACpB8J,EAAO9J,GAAOqI,EAAQsB,EAAI3J,GAAM4J,EAAUC,EAAQ,GAElDC,EAAO9J,GAAO2J,EAAI3J,IAIjB8J,OAAAA,GClJF,SAASG,IACd,IAAIC,EAAKC,EACHC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAC9BD,EAAAA,EACAC,EAAAA,KAWDH,OATPA,EAAQI,MAAO,EACfJ,EAAQE,QAAU,WAETJ,OADPE,EAAQI,MAAO,EACRN,EAAGnD,WAAA,EAAA1F,YAEZ+I,EAAQG,OAAS,WAERJ,OADPC,EAAQI,MAAO,EACRL,EAAGpD,WAAA,EAAA1F,YAEL+I,EAGF,SAASjD,IACV,IACF,OAAOsD,SAASC,YAAYC,MAAO,UAC5BnC,GACA,OAAA,IAAIU,MAAO0B,WDbT9E,EAAAA,EAAM,YAuEC,GCrDb,IAAM+E,GACF,SAAElB,GACL,IACKrB,OAAAA,KAAKC,UAAUoB,SACfnB,GACA,MAAA,KCzBb,SAASsC,KAAgBC,IAAAA,IAAS1J,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,KAAAA,UAAA,GAC5B,IACF,OAAKY,EAED8I,GAA2C,oBAAvBC,mBAA2CA,mBAE5D9I,OAAO+I,YAJS,WAKhBzC,KAGX,SAAS0C,GAAOC,GACd,MAAO,uBAAuBC,KAAK7B,OAAOC,UAAUC,SAAS/E,KAAKyG,IAyBpE,IAAME,GACI,eADJA,GAEI,eAFJA,GAGY,iBAeLC,GAAG,WA2DdA,SAAAA,EAAaC,EAAOvF,GAAQ,IAAAwF,EAAAvF,KAAAlG,OAAAuL,kBAjCpB,2BAGM,MAAIzH,EAAAoC,KAAA,eAEHgE,KAAqBpG,gBAEpB4H,OAAAA,OAAO,OAAK5H,uBAEL4H,OAAAA,OAAO,OAAK5H,EAAAoC,KAAA,eAEpB,iBAET,kBAEE,oBAEE,uBAEA,oBACH,kCA8Ga,WACbyF,EAAAA,QAAQxE,MAAM,+CAMH,WACXwE,EAAAA,QAAQxE,MAAM,mBACpBrD,EAAAoC,KAAA,kBA8WgB,SAAC7B,GACVuH,IAAAA,EAAQH,EAAKI,OAAOxH,GAC1B,GAAIuH,EAAO,CACT,IAAME,EAAKF,EAAM,GAIjB,IAHME,MAAAA,OAAAA,EAAAA,EAAIC,UAAWT,IACnBM,EAAMjD,QAEJmD,EAAI,CAAAE,IAAAA,EACAC,EAAW7E,IAAYqE,EAAKS,MAClCT,EAAKE,QAAQxE,MAAKf,aAAAA,OAAc/B,EAAI,KAAA+B,OAAI0F,EAAGC,OAAM,KAAKjB,GAjkB9D,SAAwBtK,GACtB,IAAM2L,EAAS,GAEf,GAAI3L,aAAoB4L,WACtB,IAAA,IAASxL,EAAI,EAAGA,EAAIJ,EAASJ,OAAQQ,IACnCuL,EAAOlL,KAAK,CACVX,MAAOE,EAASF,MAAMM,GACtBP,IAAKG,EAASH,IAAIO,KAIjBuL,OAAAA,EAsjBwEE,CAAsC,QAAzBL,EAACP,EAAKa,cAAcjI,UAAnB2H,IAAwBA,OAAxBA,EAAAA,EAA0BxL,WAAYyL,EAAUH,EAAGS,SAC1IT,EAAGzB,QAAQE,QAAQ,CAACvE,KAAM8F,EAAGC,OAAQQ,QAAST,EAAGS,QAASN,SAAAA,IAC1DR,EAAKe,YAAYnI,QAGtBP,EAEkBoC,KAAA,oBAAA,SAAC7B,EAAMoI,GAClBb,IAAAA,EAAQH,EAAKI,OAAOxH,GAC1B,GAAIuH,EAAO,CACT,IAAME,EAAKF,EAAM,GACbE,IACFL,EAAKE,QAAQlL,MAAM,cAAe4D,EAAMyH,EAAGC,OAAQD,EAAGS,SACnDlC,EAAAA,QAAQG,OAAO,IAAIxG,EAAe5B,EAAWA,EAAcM,kBAAmB+J,SA7erFvG,KAAKwG,QAAUlD,OAAOmD,OAAOpB,EAAIqB,mBAAoB3G,GACjDuF,GAAOtF,KAAK2G,UAAUrB,GACrBG,KAAAA,QAAU,IAAI5F,EAAO,OACtBG,KAAKwG,QAAQI,SACf/G,EAAOgH,SAuZV,IAAAC,EA7QDC,EAnCAC,EAjHC3B,OAYA9E,EAAA8E,EAAA,CAAA,CAAAtL,IAAA,WAAAkN,IAED,WAAgBC,IAAAA,EACPA,MAAiC,UAAjB,QAAhBA,EAAIlH,KAACkF,mBAAW,IAAAgC,OAAA,EAAhBA,EAAkBC,cAC1B,CAAApN,IAAA,aAAAkN,IAED,WAAkB,IAAAG,EAAApH,KACZqH,GAAO,EAOJA,OANP/D,OAAOgE,KAAKtH,KAAK2F,QAAQ4B,SAAQ,SAAAC,GACzB9B,IAAAA,EAAQ0B,EAAKzB,OAAO6B,GACtB7G,MAAM8G,QAAQ/B,KAChB2B,IAAAA,EAAS3B,EAAMxL,OAAS,OAGrBmN,IACR,CAAAtN,IAAA,MAAAkN,IAED,WACE,OAAOjH,KAAK0H,OACb,CAAA3N,IAAA,WAAAkN,IAED,WAAgBU,IAAAA,EACPA,OAAgB,QAAhBA,EAAI3H,KAACkF,mBAAW,IAAAyC,OAAA,EAAhBA,EAAkBC,YAAY,IACtC,CAAA7N,IAAA,UAAAkN,IAED,WACE,QAAOjH,KAAKkF,aAA8C,UAAhClF,KAAKkF,YAAYiC,aAC5C,CAAApN,IAAA,YAAAkN,IAED,WACE,OAAOhC,GAAMjF,KAAKkF,cAAelF,KAAKkF,YAAY2C,YACnD,CAAA9N,IAAA,SAAAC,MAED,SAAQmE,GACN,OAAOA,EAAO6B,KAAK8H,aAAa3J,GAAQ6B,KAAK8H,aAAazC,EAAI0C,SAGhE,CAAAhO,IAAA,iBAAAC,MAIA,SAAgB4N,GAAU,IAAAI,EAAAhI,KAClBiI,EAAmBjI,KAAKkF,aAAelF,KAAKkF,YAAY0C,SAAWA,EACzE,GAAI5H,KAAKkF,aAAelF,KAAKkF,YAAY0C,SAAWA,EAAU,CAC5D,IAAIM,EAAY,EAQhB,GAPA5E,OAAOgE,KAAKtH,KAAKoG,eAAemB,SAAQ,SAAAC,GAClC,IACFU,EAAYC,KAAKC,IAAIJ,EAAKE,UAAUV,IAAM,EAAGU,SACtC3N,QAIPqN,EAAWM,EAEb,OAAO9D,QAAQC,UAIZ,OAAArE,KAAKqI,oBAAmB,WACzBL,EAAKM,QACF7C,EAAAA,QAAQxE,MAAM,yBAGjB+G,EAAK9C,cACP8C,EAAK9C,YAAY0C,SAAWA,EACvBnC,EAAAA,QAAQxE,MAAM,cAAe2G,MAEnCxC,GAAyB,CAAC6C,iBAAAA,MAG/B,CAAAlO,IAAA,OAAAC,MACA,WAAQ,IAAAuO,EAAAvI,KACN,GAAIA,KAAKwI,aAAajE,OAASvE,KAAKyI,UAAYzI,KAAKkF,YAAa,CAChE,IAAMwD,EAAK1I,KAAKkF,YAObyD,EAAAA,iBAAiB,cANL,SAATC,IACEC,IAAAA,EAAW3H,IAAYqH,EAAKO,IAC7BrD,EAAAA,QAAQxE,MAAM,aAAc4H,GAC9BE,EAAAA,oBAAoB,aAAcH,GACrCL,EAAKC,aAAanE,QAAQ,CAAC0B,SAAU8C,OAGvC7I,KAAKwI,aAAexE,IAGtB,OAAOhE,KAAKwI,eACb,CAAAzO,IAAA,YAAAC,OAgBDgN,EAAAgC,EAAAC,IAAAC,MAIA,SAAAC,EAAiB7D,GAAK,IAAAN,EAAA0D,EAAAU,EAAAR,EAAAS,EAAArJ,KAAA,OAAAiJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,IAChBzJ,KAAKkF,cAAelF,KAAKsF,MAAK,CAAAiE,EAAAE,KAAA,EAAA,MAAA,OAAAF,EAAAE,KAAA,EAAQzJ,KAAK0J,cAAa,KAAA,EAEF,GAApD1E,EAAcH,GAAe7E,KAAKwG,QAAQ1B,WAE3CQ,GAAUN,EAAW,CAAAuE,EAAAE,KAAA,EAAA,MAAQ,MAAA,IAAIzK,MAAM,6CAA4C,KAAA,EAqBpD,OApBpCgB,KAAKsF,MAAQA,EACFoD,EAAA1I,KAAKkF,YAAc,IAAIF,EAC5BoE,EAASnE,GAAMyD,GACrB1I,KAAK8I,IAAM5H,IAEL0H,EAAS,SAATA,IACEC,IAAAA,EAAW3H,IAAYmI,EAAKP,IAC7BrD,EAAAA,QAAQxE,MAAM,cAChB8H,EAAAA,oBAAoB,aAAcH,GACjCe,IAAAA,gBAAgBrE,EAAMsE,KAC1BP,EAAKb,aAAanE,QAAQ,CAAC0B,SAAU8C,KAEpCF,EAAAA,iBAAiB,aAAcC,GAC9BQ,IACCT,EAAAA,iBAAiB,iBAAkB3I,KAAK6J,mBACxClB,EAAAA,iBAAiB,eAAgB3I,KAAK8J,kBAGtCpC,KAAAA,KAAOqC,IAAIC,gBAAgBtB,GAChCpD,EAAMsE,IAAM5J,KAAK0H,KACjBpC,EAAM2E,sBAAwBb,EAAMG,EAAAW,OAE7B,SAAAlK,KAAKwI,cAAY,KAAA,GAAA,IAAA,MAAA,OAAAe,EAAAY,UAAAhB,EAAAnJ,UACzB,SAAAoK,GAAApD,OAAAA,EAAAlG,MAAAd,KAAA5E,cAED,CAAArB,IAAA,cAAAC,OAAA+M,EAAAiC,EAAAC,IAAAC,MACA,SAAAmB,IAAA,IAAA3B,EAAA4B,EAAAC,EAAAC,EAAAxK,KAAA,OAAAiJ,IAAAK,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAIE,GAHKzJ,KAAKwI,aAAajE,MAAMvE,KAAKwI,aAAanE,UACzCqE,EAAK1I,KAAKkF,YAER,CAWN,GAVA5B,OAAOgE,KAAKtH,KAAK2F,QAAQ4B,SAAQ,SAACmD,GAC1BhF,IAAAA,EAAQ8E,EAAK7E,OAAO+E,GACtBhF,GACI6B,EAAAA,SAAQ,SAAAoD,GAAC,IAAAC,EAAAC,EAAA,OAAaD,QAAbA,EAAID,EAAExG,mBAAOyG,WAAAC,EAATD,EAAWvG,eAAO,IAAAwG,SAAlBA,EAAApM,KAAAmM,SAIjBN,IAAgBtK,KAAKsF,OAAStF,KAAKsF,MAAM6B,YAAc,EACvDoD,EAA4B,SAAlB7B,EAAGvB,WAEfmD,GAAeC,EACb,IACF7B,EAAGoC,oBACIvQ,IAKX+I,OAAOgE,KAAKtH,KAAKoG,eAAemB,SAAQ,SAAAC,GAClC,IACCuD,EAAAA,mBAAmBP,EAAKpE,cAAcoB,UAClCjN,QAKP0K,GAAMyD,KACLK,EAAAA,oBAAoB,iBAAkB/I,KAAK6J,mBAC3Cd,EAAAA,oBAAoB,eAAgB/I,KAAK8J,kBAIhD,GAAI9J,KAAKsF,MAAO,CACdtF,KAAKsF,MAAM2E,uBAAwB,EAC9B3E,KAAAA,MAAM0F,gBAAgB,OACvB,IACFhL,KAAKsF,MAAM2F,aACJ1Q,IAGTyF,KAAKsF,MAAQ,KAGftF,KAAKkF,YAAc,KACnBlF,KAAKwI,aAAexE,IACf2B,KAAAA,OAAgBH,OAAAA,OAAO,MACvBY,KAAAA,cAAuBZ,OAAAA,OAAO,MAAK,KAAA,EAAA,IAAA,MAAA,OAAAiF,EAAAN,UAAAE,EAAArK,UACzC,WAAA+G,OAAAA,EAAAjG,MAAAd,KAAA5E,cAED,CAAArB,IAAA,eAAAC,MAIA,SAAcmE,EAAM+M,GAClB,IAAIlL,KAAKoG,cAAcjI,IAAU6B,KAAKkF,YAAtC,CACIiG,IAAAA,EACA,IACFA,EAAKnL,KAAKoG,cAAcjI,GAAQ6B,KAAKkF,YAAYkG,gBAAgBF,SAC1D3Q,GACP,MAAM,IAAIuD,EAAe5B,EAAWA,EAAcK,WAAYhC,GAEhE4Q,EAAGD,SAAWA,EACdC,EAAGxC,iBAAiB,YAAa3I,KAAKqL,eAAeC,KAAKtL,KAAM7B,IAChEgN,EAAGxC,iBAAiB,QAAS3I,KAAKuL,iBAAiBD,KAAKtL,KAAM7B,OAGhE,CAAApE,IAAA,aAAAC,MAKA,SAAYmE,EAAM+M,GAAU,IAAAM,EAAAxL,KACpBmL,EAAKnL,KAAKoG,cAAcjI,GAC9B,OAAK6B,KAAKkF,aAAgBiG,GAAMA,EAAGD,WAAaA,EAEnB,mBAAlBC,EAAGM,WAAkCrH,QAAQE,SAEjDtE,KAAK0L,WAAWvN,GAAM,WAC3BgN,EAAGM,WAAWP,GACdC,EAAGD,SAAWA,EACdM,EAAKH,eAAelN,KACnB,aAAc,CAAC+M,SAAAA,IAR+C9G,QAAQC,YAW3E,CAAAtK,IAAA,uBAAAC,MAKA,SAAsBmE,EAAM+M,GAEnB,OADFS,KAAAA,aAAaxN,EAAM+M,GACjBlL,KAAKyL,WAAWtN,EAAM+M,KAG/B,CAAAnR,IAAA,SAAAC,MAKA,SAAQmE,EAAMyN,EAAQvF,GAAS,IAAAwF,EAAA7L,KAC7B,OAAK4L,GAAWA,EAAOE,YAIlB9L,KAAKoG,cAAcjI,GAEjB6B,KAAK0L,WAAWvN,GAAM,WAAM4N,IAAAA,EAC5BF,EAAK3G,cAAe2G,EAAKvG,MAAM/K,QAC/BkL,EAAAA,QAAQxE,MAAM,mBAAoBoF,GACvCwF,EAAK7F,MAAQ9E,IACW6K,QAAxBA,EAAAF,EAAKzF,cAAcjI,cAAK4N,GAAxBA,EAA0BC,aAAaJ,MACtCxG,GAAgBiB,GAVVjC,QAAQC,YAcnB,CAAAtK,IAAA,SAAAC,MAMA,SAAQmE,EAAM8N,EAAWC,EAAS7F,GAAS,IAAA8F,EAAAnM,KAErCoM,GAAe,EAIZ,OAHHpM,KAAK8H,aAAa3J,KACLiO,GAAA,GAEVpM,KAAK0L,WAAWvN,GAAM,WAC3B,GAAKgO,EAAKjH,cAAeiH,EAAK7G,MAAM/K,MAApC,CACM4Q,IAAAA,EAAKgB,EAAK/F,cAAcjI,GAC1B8N,GAAaC,IAAYf,EAC3BgB,EAAKd,eAAelN,IAGtBgO,EAAKnG,MAAQ9E,IACbiL,EAAK1G,QAAQxE,MAAM,mBAAoB9C,EAAM8N,EAAWC,EAAS7F,GAC9DgG,EAAAA,OAAOJ,EAAWC,OACpB9G,GAAgBiB,EAAS+F,KAC7B,CAAArS,IAAA,cAAAC,MAED,SAAaiS,EAAWC,GAAS,IAC3BI,EAD2BC,EAAAvM,KAKxBsM,OAHPhJ,OAAOgE,KAAKtH,KAAKoG,eAAemB,SAAQ,SAAAC,GACtC8E,EAAIC,EAAKF,OAAO7E,EAAGyE,EAAWC,MAEzBI,GAAKlI,QAAQC,YACrB,CAAAtK,IAAA,iBAAAC,MAED,WAAkB,IACZsS,EADYE,EAAAxM,KAMTsM,OAJPhJ,OAAOgE,KAAKtH,KAAKoG,eAAemB,SAAQ,SAAAC,GAChC2D,IAAAA,EAAKqB,EAAKpG,cAAcoB,GAC1BgF,EAAAA,EAAKH,OAAO7E,EAAG,EAAG3N,EAAOM,IAAIN,EAAOoN,IAAIkE,QAEvCmB,IACR,CAAAvS,IAAA,gBAAAC,MAED,SAAemE,EAAMsO,GAAUC,IAAAA,EACxBjH,KAAAA,QAAQxE,MAAM,0BACbyE,IAAAA,EAAQ1F,KAAK2F,OAAOxH,GAC1B,GAAIsO,GAAY/G,EACTC,KAAAA,OAAOxH,GAAQ,QAGtB,GAAKuH,GAAUA,EAAMvH,MAASuH,EAAMxL,OAAS,GAA7C,CACA,IAAMyS,EAAY,GACZpF,EAAAA,SAAQ,SAAA3B,GACRA,EAAGS,SAAWT,EAAGS,QAAQuG,QAC3BD,EAAU5R,KAAK6K,MAGnB5F,KAAK2F,OAAOxH,GAAQuH,EAAMjC,MAAM,EAAG,GACzBvJ,EAAAA,OAAS,IAAKwS,OAAK/G,OAAOxH,IAAMpD,KAAI+F,MAAA4L,EAAIC,MAGpD,CAAA5S,IAAA,cAAAC,MAIA,SAAa6S,GAAQ,IAAAC,EAAA9M,KACnB,OAAKA,KAAKkF,aAA+C,SAAhClF,KAAKkF,YAAYiC,WACnCnH,KAAKqI,oBAAmB,WAC7B,IAAMK,EAAKoE,EAAK5H,YACXwD,GAAwB,SAAlBA,EAAGvB,aACT1B,EAAAA,QAAQxE,MAAM,yBACf4L,EACFnE,EAAGoC,YAAY+B,GAEfnE,EAAGoC,iBAEJ,eAVqE1G,QAAQC,YAWjF,CAAAtK,IAAA,uBAAAC,MAED,SAAsBI,EAAOD,GAC3B,IAAMuO,EAAK1I,KAAKkF,YACZ9K,EAAQ,GAAKD,EAAMC,GAAUsO,MAAAA,IAAAA,EAAIqE,sBAA0C,SAAlBrE,EAAGvB,YAC7D4F,EAAAA,qBAAqB3S,EAAOD,KAGjC,CAAAJ,IAAA,kBAAAC,MAIA,SAAiBmE,GACf,OAAO6B,KAAKoG,cAAcjI,KAG5B,CAAApE,IAAA,WAAAC,MAIA,SAAUmE,GACR,OAAOtE,EAAOoN,IAAIjH,KAAKoG,cAAcjI,MAGvC,CAAApE,IAAA,cAAAC,MAIA,SAAamE,GACX,OAAOtE,EAAOO,MAAM4F,KAAK1F,SAAS6D,MAGpC,CAAApE,IAAA,YAAAC,MAIA,SAAWmE,GACT,OAAOtE,EAAOM,IAAI6F,KAAK1F,SAAS6D,MACjC,CAAApE,IAAA,aAAAC,MAED,SAAYmE,EAAM6O,EAAMnH,EAAQQ,EAAS+F,GAAc,IAAAa,EAAAjN,KACrD,IAAKA,KAAKkF,YAAa,OAAOd,QAAQC,UACtC,IAAMqB,EAAQ1F,KAAK2F,OAAOxH,GAAQ6B,KAAK2F,OAAOxH,IAAS,GACjDyH,EAAK,CACToH,KAAAA,EACA7I,QAASH,IACT6B,OAAAA,EACAQ,QAAAA,GAwBF,OArBI+F,GACIc,EAAAA,OAAO,EAAG,EAAGtH,GACnB5F,KAAK8H,aAAa3J,IAAQ,EAC1B6B,KAAKsG,YAAYnI,IAEjBuH,EAAM3K,KAAK6K,GAGT5F,KAAKyI,UAAYzI,KAAKsI,QACH,IAAjB5C,EAAMxL,QACR8F,KAAKsG,YAAYnI,GAGdqK,KAAAA,aAAa2E,MAAK,WACA,IAAjBzH,EAAMxL,QACR+S,EAAK3G,YAAYnI,MAMhByH,EAAGzB,UACX,CAAApK,IAAA,qBAAAC,OAAA8M,EAAAkC,MAAAE,MAED,SAAAkE,EAA0BJ,EAAMnH,EAAQQ,GAAO,IAAAgH,EAAAC,EAAAC,EAAAvN,KAAA,OAAAiJ,IAAAK,MAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,KAAA,EAAA,GACxCzJ,KAAKkF,YAAW,CAAAsI,EAAA/D,KAAA,EAAA,MAAA,OAAA+D,EAAAtD,OAAA,SAAS9F,QAAQC,WAAS,KAAA,EACF,IAA/Bf,EAAAA,OAAOgE,KAAKtH,KAAKoG,gBACpBlM,OAAM,CAAAsT,EAAA/D,KAAA,EAAA,MAAA,OAAA+D,EAAAtD,OACR8C,SAAAA,KAAM,KAAA,EAabQ,OAVIF,EAAU,GACV/F,EAAAA,SAAQ,SAAAmD,GACNhF,IAAAA,EAAQ6H,EAAK5H,OAAO+E,GACpB+C,EAAOzJ,IACbsJ,EAAQvS,KAAK0S,GACb/H,EAAM3K,KAAK,CAACiS,KAAM,WAChBS,EAAKpJ,WAAYF,QAASsJ,EAAM5H,OAAAA,EAAQQ,QAAAA,IACrB,IAAjBX,EAAMxL,QACRqT,EAAKjH,YAAYoE,MAEnB8C,EAAAtD,OAAA,SAEK9F,QAAQsJ,IAAIJ,GAASH,MAAK,WAC3B,IACF,OAAOH,IACC,QACFzF,EAAAA,SAAQ,SAAAmD,GACNhF,IAAAA,EAAQ6H,EAAK5H,OAAO+E,GACpBS,EAAKoC,EAAKnH,cAAcsE,GAC9BhF,MAAAA,GAAAA,EAAOjD,QACF0I,GAAOA,EAAGwC,UACbJ,EAAKjH,YAAYoE,WAIvB,KAAA,EAAA,IAAA,MAAA,OAAA8C,EAAArD,UAAAiD,EAAApN,UACHqI,SAAAuF,EAAAC,EAAAC,GAAAhH,OAAAA,EAAAhG,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,cAAAC,MAED,SAAamE,GACLuH,IAAAA,EAAQ1F,KAAK2F,OAAOxH,GAC1B,GAAIuH,EAAO,CACT,IAAME,EAAKF,EAAM,GACjB,GAAIE,IAAO5F,KAAK8H,aAAa3J,GACvB,IACFyH,EAAGoH,aACIzS,GACHA,GAASA,EAAMmE,SAAWnE,EAAMmE,QAAQqP,QAAQ,yBAA2B,GAC7E/N,KAAK8H,aAAa3J,IAAQ,EACrBsH,KAAAA,QAAQlL,MAAM,yBAA0BqL,EAAGS,QAAS,UAAWT,EAAGC,OAAQ,6BAC5E1B,EAAAA,QAAQG,OAAO,IAAIxG,EAAe5B,EAAWA,EAAcQ,SAAUnC,MAEnEkL,KAAAA,QAAQlL,MAAMA,GAChB4J,EAAAA,QAAQG,OAAO,IAAIxG,EAAe5B,EAAWA,EAAcO,UAAWlC,IACzEmL,EAAMjD,QACNzC,KAAKsG,YAAYnI,QAK1B,CAAApE,IAAA,gBAAAC,MA8BD,SAAemE,EAAM6P,EAAiB3H,GAAS,IAAA4H,EAAAjO,KACtC,OAAAA,KAAK0L,WAAWvN,GAAM,WACvB6P,EAAkB,IACDA,GAAA,MAEhB5H,EAAAA,cAAcjI,GAAM6P,gBAAkBA,EAC3CC,EAAK5C,eAAelN,KACnB,gBAAiBkI,KAGtB,CAAAtM,IAAA,QAAAC,MACA,SAAOmE,EAAMkI,GAAS,IAAA6H,EAAAlO,KAChB,OAACA,KAAKyI,SAGHzI,KAAK0L,WAAWvN,GAAM,WACtBiI,EAAAA,cAAcjI,GAAMgQ,QACzBD,EAAK7C,eAAelN,KACnB,QAASkI,GALHjC,QAAQC,aAMlB,CAAA,CAAAtK,IAAA,cAAAC,MAxjBD,WAAoBoU,IAAAA,EAAIhT,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,4CACnB4J,EAAcH,KACpB,IAAKG,EAAoB,OAAA,EACrB,IACKA,OAAAA,EAAYqJ,gBAAgBD,SAC5B7T,GAEA,OADFkL,KAAAA,QAAQlL,MAAM6T,EAAM7T,IAClB,KAEV,CAAAR,IAAA,YAAAC,MAED,WACE,MAAqC,oBAAvB+K,oBAA6D,oBAAhBC,cAC5D,CAAAjL,IAAA,mBAAAC,MA0BD,WACS,MAAA,CACL4M,SAAS,EACT9B,WAAW,OAEdO,EAtDa,GAAHA,EAAAA,GAAG,QACC,SADJA,EAAAA,GAAG,QAGC,SChEV,IAAMiJ,GACJ,QADIA,GAEN,MAGMC,GACG,cADHA,GAEL,OAFKA,GAGL,OCNKC,YAAQzQ,GAAAC,EAAAwQ,EAAAzQ,GAAAE,IAAAA,EAAAC,EAAAsQ,GAQnB,SAAAA,EAAarP,EAAKsP,EAASrP,EAAUb,GAAKC,IAAAA,EAIhBA,OAJgB1E,OAAA0U,GAC9B5Q,EAAA8Q,EAAVzQ,EAAAA,EAAAQ,UAAMF,iBARK,GAACX,EAAA8Q,EAAAlQ,gBACF,GAAKZ,EAAA8Q,EAAAlQ,GACJ8P,aAAAA,IAAgB1Q,EAAA8Q,EAAAlQ,eACjB,GAACZ,EAAA8Q,EAAAlQ,aACH,GAACZ,EAAA8Q,EAAAlQ,GAAA,UACD,IAIRA,EAAKW,IAAMA,EACXX,EAAKiQ,QAAUA,EACfjQ,EAAKY,SAAWA,EAAQZ,EACzB,OAAA+B,EAAAiO,IAb2BxP,EAAAA,QCFxBwE,GAAWF,OAAOC,UAAUC,SAM3B,SAASmL,GAAe3L,GAC7B,GAA2B,oBAAvBQ,GAAS/E,KAAKuE,GACT,OAAA,EAGHO,IAAAA,EAAYD,OAAOsL,eAAe5L,GACjCO,OAAc,OAAdA,GAAsBA,IAAcD,OAAOC,UCV7C,SAASsL,GAAe7U,GAC7B,GAAKA,GAAsB,OAAbA,EAAM,SAA4BqB,IAAbrB,EAAM,KAAkC,IAAbA,EAAM,IAA0B,OAAbA,EAAM,SAA4BqB,IAAbrB,EAAM,IAA5G,CAGI8U,IAAAA,EAAM,SAAW9U,EAAM,GAAK,IAEzB8U,OADH9U,EAAM,KAAI8U,GAAO9U,EAAM,IACpB8U,GAGT,SAASC,GAAQ/L,GACRgM,OAAAA,mBAAmBhM,GACvBiM,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAGNC,SAAAA,GAAc/P,EAAKgQ,GACjC,GAAKhQ,EAAL,CACA,IAAKgQ,EAAehQ,OAAAA,EAChBiQ,IAAAA,EACEC,EAAM/L,OAAOgE,KAAK6H,GAAQhN,KAAI,SAAAqF,GAE9B4H,GAAAA,OADJA,EAAID,EAAO3H,IAQJ4H,OANHzO,MAAM8G,QAAQ2H,GAChB5H,GAAQ,KAER4H,EAAI,CAACA,GAGAA,EAAEjN,KAAI,SAAAwI,GDnBV,IAAiB1P,ECyBlB,ODzBkBA,ECoBP0P,EDnBa,kBAArBnH,GAAS/E,KAAKxD,GCoBf0P,EAAIA,EAAE2E,cDlCP,SAAmBrU,GACxB,OAAa,OAANA,GAA2B,WAAbmI,EAAOnI,GCkCbsU,CAAS5E,KAClBA,EAAItI,KAAKC,UAAUqI,IAErB,GAAAzK,OAAU6O,GAAOvH,GAAEtH,KAAAA,OAAI6O,GAAOpE,OAC7BjI,KAAK,QACP8M,OAAOC,SAAS/M,KAAK,KAExB,GAAI2M,EAAK,CACDK,IAAAA,EAAYvQ,EAAI4O,QAAQ,MACR,IAAlB2B,IACIvQ,EAAAA,EAAIsE,MAAM,EAAGiM,IAGrBvQ,KAA6B,IAArBA,EAAI4O,QAAQ,KAAc,IAAM,KAAOsB,EAG1ClQ,OAAAA,GAGOwQ,SAAAA,GACdC,EACAC,EACAzQ,EACA0Q,EACAC,EACA9D,EACA+D,EACA1U,EACA2U,EACAC,EACAC,GAMO,OAJPJ,EAAOA,MAAAA,EAAqCK,WAAWL,GAAO,KAC9CvL,EAAAA,SAASsL,GAAiB,IAAK,IAC3CO,OAAOC,MAAMR,KAAgCA,EAAA,GAE1C,CAAEF,KAAAA,EAAMC,KAAAA,EAAMU,QADL,CAAEN,MAAAA,EAAOC,IAAAA,EAAK5U,MAAAA,EAAOwU,cAAAA,EAAeC,IAAAA,EAAK9D,UAAAA,EAAW+D,cAAAA,EAAe9D,QAASjJ,KAAKyB,MAAOyL,WAAAA,GAC1E/Q,SAAAA,GAGhBoR,SAAAA,GAAgBC,EAASC,GACvC,OAAOvI,KAAKwI,MAAgB,EAAVF,EAAc,IAAOC,EAAW,MC7E7C,IAAME,GACJ,QADIA,GAGL,YAHKA,GAIC,iBAJDA,GAKY,2BALZA,GAMI,oBANJA,GAOC,iBAPDA,GAQW,2BARXA,GAUgB,+BAVhBA,GAWI,oBAXJA,GAYA,iBAZAA,GAaD,gBAbCA,GAcC,kBAdDA,GAeM,sBAfNA,GAgBN,WAhBMA,GAiBE,iBAjBFA,GAkBM,qBAlBNA,GAmBA,iBAnBAA,GAoBS,wBApBTA,GAqBQ,uBArBRA,GAyBG,oBAzBHA,GA2BO,uBA3BPA,GA4BsB,kCA5BtBA,GA6BiB,6BA7BjBA,GA8BiB,6BA9BjBA,GA+BO,mBA/BPA,GAgCW,uBAhCXA,GAiC6B,yCAjC7BA,GAkCM,+CChCnB,IAAIC,EAAMvN,OAAOC,UAAUQ,eACvB+M,EAAS,IASb,SAASC,KA4BAC,SAAAA,EAAGC,EAAI5K,EAAS6K,GACvBlR,KAAKiR,GAAKA,EACVjR,KAAKqG,QAAUA,EACfrG,KAAKkR,KAAOA,IAAQ,EActB,SAASC,EAAYC,EAAS7K,EAAO0K,EAAI5K,EAAS6K,GAC5C,GAAc,mBAAPD,EACH,MAAA,IAAII,UAAU,mCAGlBC,IAAAA,EAAW,IAAIN,EAAGC,EAAI5K,GAAW+K,EAASF,GAC1CK,EAAMT,EAASA,EAASvK,EAAQA,EAM7B6K,OAJFA,EAAQI,QAAQD,GACXH,EAAQI,QAAQD,GAAKN,GAC1BG,EAAQI,QAAQD,GAAO,CAACH,EAAQI,QAAQD,GAAMD,GADRE,EAAAA,QAAQD,GAAKxW,KAAKuW,IAD1BE,EAAAA,QAAQD,GAAOD,EAAUF,EAAQK,gBAI7DL,EAUAM,SAAAA,EAAWN,EAASG,GACI,KAAzBH,EAAQK,aAA4BD,EAAAA,QAAU,IAAIT,SAC5CK,EAAQI,QAAQD,GAU9B,SAASI,IACFH,KAAAA,QAAU,IAAIT,EACnB/Q,KAAKyR,aAAe,EAxElBnO,OAAOkC,SACFjC,EAAAA,UAAmBiC,OAAAA,OAAO,OAM5B,IAAIuL,GAASa,YAAoBd,GAAA,IA2ExCa,EAAapO,UAAUsO,WAAa,WAC9BC,IACAC,EACAjS,EAFAgS,EAAQ,GAIZ,GAA0B,IAAtB9R,KAAKyR,aAA2BK,OAAAA,EAE/BhS,IAAAA,KAASiS,EAAS/R,KAAKwR,QACtBX,EAAIpS,KAAKsT,EAAQjS,IAAOgS,EAAM/W,KAAK+V,EAAShR,EAAK2D,MAAM,GAAK3D,GAGlE,OAAIwD,OAAO0O,sBACFF,EAAM5R,OAAOoD,OAAO0O,sBAAsBD,IAG5CD,GAUTH,EAAapO,UAAU0O,UAAY,SAAmB1L,GACpD,IAAIgL,EAAMT,EAASA,EAASvK,EAAQA,EAChC2L,EAAWlS,KAAKwR,QAAQD,GAE5B,IAAKW,EAAU,MAAO,GACtB,GAAIA,EAASjB,GAAW,MAAA,CAACiB,EAASjB,IAElC,IAAA,IAASvW,EAAI,EAAGC,EAAIuX,EAAShY,OAAQiY,EAAK,IAAIxR,MAAMhG,GAAID,EAAIC,EAAGD,IAC1DA,EAAAA,GAAKwX,EAASxX,GAAGuW,GAGfkB,OAAAA,GAUTR,EAAapO,UAAU6O,cAAgB,SAAuB7L,GAC5D,IAAIgL,EAAMT,EAASA,EAASvK,EAAQA,EAChC0L,EAAYjS,KAAKwR,QAAQD,GAE7B,OAAKU,EACDA,EAAUhB,GAAW,EAClBgB,EAAU/X,OAFM,GAYzByX,EAAapO,UAAU8O,KAAO,SAAc9L,EAAO+L,EAAIC,EAAIC,EAAIC,EAAIC,GAC7DnB,IAAAA,EAAMT,EAASA,EAASvK,EAAQA,EAEhC,IAACvG,KAAKwR,QAAQD,GAAa,OAAA,EAE/B,IAEI7Q,EACAhG,EAHAuX,EAAYjS,KAAKwR,QAAQD,GACzBoB,EAAMvX,UAAUlB,OAIpB,GAAI+X,EAAUhB,GAAI,CAGR0B,OAFJV,EAAUf,MAAMlR,KAAK4S,eAAerM,EAAO0L,EAAUhB,QAAI5V,GAAW,GAEhEsX,GACD,KAAA,EAAG,OAAOV,EAAUhB,GAAGxS,KAAKwT,EAAU5L,UAAU,EAChD,KAAA,EAAG,OAAO4L,EAAUhB,GAAGxS,KAAKwT,EAAU5L,QAASiM,IAAK,EACpD,KAAA,EAAG,OAAOL,EAAUhB,GAAGxS,KAAKwT,EAAU5L,QAASiM,EAAIC,IAAK,EACxD,KAAA,EAAUN,OAAAA,EAAUhB,GAAGxS,KAAKwT,EAAU5L,QAASiM,EAAIC,EAAIC,IAAK,EAC5D,KAAA,EAAUP,OAAAA,EAAUhB,GAAGxS,KAAKwT,EAAU5L,QAASiM,EAAIC,EAAIC,EAAIC,IAAK,EAChE,KAAA,EAAUR,OAAAA,EAAUhB,GAAGxS,KAAKwT,EAAU5L,QAASiM,EAAIC,EAAIC,EAAIC,EAAIC,IAAK,EAGtEhY,IAAAA,EAAI,EAAGgG,EAAO,IAAIC,MAAMgS,EAAK,GAAIjY,EAAIiY,EAAKjY,IACxCA,EAAAA,EAAI,GAAKU,UAAUV,GAG1BuX,EAAUhB,GAAGnQ,MAAMmR,EAAU5L,QAAS3F,OACjC,CACDxG,IACA2Y,EADA3Y,EAAS+X,EAAU/X,OAGvB,IAAKQ,EAAI,EAAGA,EAAIR,EAAQQ,IAGdiY,OAFJV,EAAUvX,GAAGwW,MAAMlR,KAAK4S,eAAerM,EAAO0L,EAAUvX,GAAGuW,QAAI5V,GAAW,GAEtEsX,GACD,KAAA,EAAGV,EAAUvX,GAAGuW,GAAGxS,KAAKwT,EAAUvX,GAAG2L,SAAU,MAC/C,KAAA,EAAG4L,EAAUvX,GAAGuW,GAAGxS,KAAKwT,EAAUvX,GAAG2L,QAASiM,GAAK,MACnD,KAAA,EAAGL,EAAUvX,GAAGuW,GAAGxS,KAAKwT,EAAUvX,GAAG2L,QAASiM,EAAIC,GAAK,MACvD,KAAA,EAAa7X,EAAAA,GAAGuW,GAAGxS,KAAKwT,EAAUvX,GAAG2L,QAASiM,EAAIC,EAAIC,GAAK,MAAA,QAE9D,IAAK9R,EAAWmS,IAAAA,EAAI,EAAGnS,EAAO,IAAIC,MAAMgS,EAAK,GAAIE,EAAIF,EAAKE,IACnDA,EAAAA,EAAI,GAAKzX,UAAUyX,GAG1BZ,EAAUvX,GAAGuW,GAAGnQ,MAAMmR,EAAUvX,GAAG2L,QAAS3F,IAK7C,OAAA,GAYTiR,EAAapO,UAAUuP,GAAK,SAAYvM,EAAO0K,EAAI5K,GACjD,OAAO8K,EAAYnR,KAAMuG,EAAO0K,EAAI5K,GAAS,IAY/CsL,EAAapO,UAAU2N,KAAO,SAAc3K,EAAO0K,EAAI5K,GACrD,OAAO8K,EAAYnR,KAAMuG,EAAO0K,EAAI5K,GAAS,IAa/CsL,EAAapO,UAAUqP,eAAiB,SAAwBrM,EAAO0K,EAAI5K,EAAS6K,GAC9EK,IAAAA,EAAMT,EAASA,EAASvK,EAAQA,EAEhC,IAACvG,KAAKwR,QAAQD,GAAa,OAAAvR,KAC/B,IAAKiR,EAEI,OADPS,EAAW1R,KAAMuR,GACVvR,KAGLiS,IAAAA,EAAYjS,KAAKwR,QAAQD,GAE7B,GAAIU,EAAUhB,GAEVgB,EAAUhB,KAAOA,GACfC,IAAQe,EAAUf,MAClB7K,GAAW4L,EAAU5L,UAAYA,GAEnCqL,EAAW1R,KAAMuR,OAEd,CACI7W,IAAAA,IAAAA,EAAI,EAAGqX,EAAS,GAAI7X,EAAS+X,EAAU/X,OAAQQ,EAAIR,EAAQQ,KAEhEuX,EAAUvX,GAAGuW,KAAOA,GACnBC,IAASe,EAAUvX,GAAGwW,MACtB7K,GAAW4L,EAAUvX,GAAG2L,UAAYA,IAE9BtL,EAAAA,KAAKkX,EAAUvX,IAOtBqX,EAAO7X,OAAQ8F,KAAKwR,QAAQD,GAAyB,IAAlBQ,EAAO7X,OAAe6X,EAAO,GAAKA,EACpEL,EAAW1R,KAAMuR,GAGjB,OAAAvR,MAUT2R,EAAapO,UAAUwP,mBAAqB,SAA4BxM,GAClEgL,IAAAA,EAUG,OARHhL,GACIuK,EAAAA,EAASA,EAASvK,EAAQA,EAC5BvG,KAAKwR,QAAQD,IAAMG,EAAW1R,KAAMuR,KAEnCC,KAAAA,QAAU,IAAIT,EACnB/Q,KAAKyR,aAAe,GAGfzR,MAMT2R,EAAapO,UAAUyP,IAAMrB,EAAapO,UAAUqP,eACpDjB,EAAapO,UAAU4N,YAAcQ,EAAapO,UAAUuP,GAK5DnB,EAAasB,SAAWnC,EAKxBa,EAAaA,aAAeA,EAM1BuB,EAAAC,QAAiBxB,yBCzUbyB,GAAY,QACLC,YAAWC,GAAAtV,EAAAqV,EAAAC,GAAArV,IAoKrBsV,EApKqBtV,EAAAC,EAAAmV,GAgBtB,SAAAA,IAAe7U,IAAAA,EAFGA,OAEH1E,OAAAuZ,GACNzV,EAAA8Q,EAAPzQ,EAAAA,EAAAQ,KAAAuB,0BAhBiB,MAAIpC,EAAA8Q,EAAAlQ,mBACP,MAAIZ,EAAA8Q,EAAAlQ,aACV,MAAIZ,EAAA8Q,EAAAlQ,eACF,MAAIZ,EAAA8Q,EAAAlQ,eACL,GAAKZ,EAAA8Q,EAAAlQ,GAAA,UACL,GAAAZ,EAAA8Q,EAAAlQ,YACF,MAAIZ,EAAA8Q,EAAAlQ,qBACK,GAACZ,EAAA8Q,EAAAlQ,eACR,GAAKZ,EAAA8Q,EAAAlQ,aACN,MAAIZ,EAAA8Q,EAAAlQ,UACP,IAAEZ,EAAA8Q,EAAAlQ,sBACU,GAACZ,EAAA8Q,EAAAlQ,eACR,MAAIZ,EAAA8Q,EAAAlQ,iBACF,MAAIA,EA8SjB6U,OA1SA9S,EAAA8S,EAAA,CAAA,CAAAtZ,IAAA,OAAAC,MAED,SAAAwZ,GA0BG,IAAAC,EAAAlO,EAAAvF,KAzBDb,EAAGqU,EAAHrU,IACA+Q,EAAGsD,EAAHtD,IACAwD,EAAOF,EAAPE,QACAC,EAAYH,EAAZG,aACAC,EAAUJ,EAAVI,WACAtY,EAAKkY,EAALlY,MACAuY,EAASL,EAATK,UACAC,EAAQN,EAARM,SACA7D,EAAKuD,EAALvD,MACA8D,EAAiBP,EAAjBO,kBACAtF,EAAO+E,EAAP/E,QACAU,EAAMqE,EAANrE,OACA6E,EAAMR,EAANQ,OAEAC,EAAMT,EAANS,OACAC,EAAOV,EAAPU,QACAC,EAAIX,EAAJW,KACAC,EAAIZ,EAAJY,KACAC,EAAWb,EAAXa,YACAC,EAAKd,EAALc,MACAC,EAAQf,EAARe,SACAC,EAAQhB,EAARgB,SACAC,EAAcjB,EAAdiB,eACAC,EAAelB,EAAfkB,gBACAvE,EAAUqD,EAAVrD,WAEAnQ,KAAKyF,QAAUuO,EACfhU,KAAK2U,UAAW,EAChB3U,KAAK4U,iBAAmBF,EACxB1U,KAAK6U,UAAYf,EACjB9T,KAAK8U,iBAA8C,oBAApBC,iBAAmC,IAAIA,gBACtE/U,KAAKgV,UAAW,EAChBhV,KAAKiV,OAAS3Z,EACd0E,KAAKkV,OAASjF,GAAS,CAAC,EAAG,GAC3BjQ,KAAKmV,KAAOjF,GAAO/Q,EACdiW,KAAAA,YAAcjF,GAAc,GACjC,IAAMkF,EAAO,CACXpB,OAAAA,EACAC,QAAAA,EACAC,KAAAA,EACAC,KAAAA,EACAC,YAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAa,OAA6B7B,QAAvBA,EAAEzT,KAAK8U,wBAALrB,IAAqBA,OAArBA,EAAAA,EAAuB6B,QAG7BpW,GAAY,EAChBqW,aAAavV,KAAKwV,eAEZtG,EAAAA,GAAa/P,EAAKgQ,GAElBsG,IAAAA,EAAa5G,GAAcoB,GAC7BwF,IAEAvB,EADEzF,EACQA,EAAQyF,QAERmB,EAAKnB,QAAUmB,EAAKnB,UAAYwB,QAAU,IAAIA,QAAY,IAElEA,SAAWxB,aAAmBwB,QACxBC,EAAAA,OAAO,QAASF,GAExBvB,EAAQ0B,MAAQH,GAIhB/B,IACG8B,KAAAA,cAAgBK,YAAW,WAG9B,GAFY3W,GAAA,EACZqG,EAAKuQ,SACDjC,EAAW,CACb,IAAMtZ,EAAQ,IAAIiU,GAASrP,EAAKkW,EAAM,KAAM,WAC5C9a,EAAM2E,WAAY,EAClB2U,EAAUtZ,EAAO,CAACe,MAAOiK,EAAK0P,OAAQhF,MAAO1K,EAAK2P,OAAQhF,IAAK3K,EAAK4P,KAAMhF,WAAY5K,EAAK6P,iBAE5F1B,IAGCzH,IAAAA,EAAYhJ,KAAKyB,MAEvB,OADA1E,KAAKyF,QAAQxE,MAAM,6BAA8B3F,EAAO,UAAW2U,GAC5D,IAAI7L,SAAQ,SAACC,EAASC,GAC3ByR,MAAMtH,GAAWtP,EAAKsP,OAAUpT,EAAYga,GAAMlI,KAAI,WAAA,IAAA6I,EAAAhN,EAAAC,IAAAC,MAAC,SAAAC,EAAO/J,GAAQ4Q,IAAAA,EAAAJ,EAAA/G,EAAAoN,EAAA,OAAAhN,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAE3C,GADzB8L,aAAahQ,EAAKiQ,eAClBjQ,EAAK2Q,UAAY9W,GACbmG,EAAKoP,UAAapP,EAAKyP,SAAQ,CAAAzL,EAAAE,KAAA,EAAA,MAAAF,OAAAA,EAAAW,OAAA,UAAA,KAAA,EAGlC,GAFG6J,IACSA,EAAAA,EAAkB3U,EAAUD,IAAQC,GAE5CA,EAAS+W,GAAE,CAAA5M,EAAAE,KAAA,EAAA,MAAA,MACR,IAAI+E,GAASrP,EAAKkW,EAAMjW,EAAU,wBAAuB,KAAA,EAGjC,GAA1B4Q,EAAgB/M,KAAKyB,MAEvBiP,IAAiBpF,GAAiB,CAAAhF,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAE,KAAA,GACvBrK,EAAS0C,OAAM,KAAA,GAA5B8N,EAAIrG,EAAA6M,KACJ7Q,EAAKyP,UAAW,EAAKzL,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,GACZkK,IAAiBpF,GAAiB,CAAAhF,EAAAE,KAAA,GAAA,MAAA,OAAAF,EAAAE,KAAA,GAC9BrK,EAASiX,OAAM,KAAA,GAA5BzG,EAAIrG,EAAA6M,KACJ7Q,EAAKyP,UAAW,EAAKzL,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,IAEjBmK,EAAU,CAAArK,EAAAE,KAAA,GAAA,MAGmDF,OAF/DhE,EAAKlB,QAAUA,EACfkB,EAAKjB,OAASA,EACdiB,EAAK+Q,WAAWlX,EAAUwU,EAAY3H,EAAW+D,GAAczG,EAAAW,OAAA,UAAA,KAAA,GAAA,OAAAX,EAAAE,KAAA,GAGlDrK,EAASmX,cAAa,KAAA,GAAnC3G,EAAIrG,EAAA6M,KACGxG,EAAA,IAAI4G,WAAW5G,GACtBrK,EAAKyP,UAAW,EACC/R,EAAAA,KAAKyB,MAAQuH,EAChBuE,EAAAA,GAAeZ,EAAK9D,WAAYjD,GACzCwJ,EAAAA,KAAKzB,GAAuB,CAACqF,MAAAA,EAAMtD,IAAK/C,EAAK9D,WAAY2K,KAAM5N,EAAUqH,IAAK3K,EAAK4P,KAAM7Z,MAAOiK,EAAK0P,OAAQhF,MAAO1K,EAAK2P,OAAQ/E,WAAY5K,EAAK6P,cAAa,KAAA,GAGxK7P,EAAKE,QAAQxE,MAAM,2BAA4B3F,EAAO,UAAW2U,GACzDN,EAAAA,GACNC,GACA,EACAxQ,EACAA,EAAS8U,QAAQjN,IAAI,kBACrB7H,EAAS8U,QAAQjN,IAAI,OACrBgF,EACA+D,EACA1U,EACA2U,EACA1K,EAAK4P,KACL5P,EAAK6P,cACL,KAAA,GAAA,IAAA,MAAA,OAAA7L,EAAAY,UAAAhB,OACH,OAAA,SAAAiB,GAAA4L,OAAAA,EAAAlV,MAAAd,KAAA5E,YAhDqD,IAgDnDsb,OAAM,SAACnc,GAAUoc,IAAAA,EAClBpB,aAAahQ,EAAKiQ,eAClBjQ,EAAKyP,UAAW,EACZzP,EAAKoP,WAAazV,KACtB3E,EAAQA,aAAiBiU,GAAWjU,EAAQ,IAAIiU,GAASrP,EAAKkW,EAAM,KAAWsB,QAAPA,EAAEpc,SAAAoc,IAAKA,OAALA,EAAAA,EAAOjY,UAC3EuN,UAAYA,EACZC,EAAAA,QAAUjJ,KAAKyB,MACrBnK,EAAM2E,UAAYA,EAClB3E,EAAMgW,QAAU,CAACjV,MAAOiK,EAAK0P,OAAQhF,MAAO1K,EAAK2P,OAAQhF,IAAK3K,EAAK4P,KAAMhF,WAAY5K,EAAK6P,aAC1F9Q,EAAO/J,YAGZ,CAAAR,IAAA,SAAAC,OAAAuZ,EAAAvK,EAAAC,IAAAC,MAED,SAAAmB,IAAA,OAAApB,IAAAK,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EACM,IAAAzJ,KAAK2U,SAAQ,CAAAlK,EAAAhB,KAAA,EAAA,MAAAgB,OAAAA,EAAAP,OAAA,UAAA,KAAA,EAGb,GAFJlK,KAAK2U,UAAW,EAChB3U,KAAKgV,UAAW,GACZhV,KAAKkW,UAAS,CAAAzL,EAAAhB,KAAA,GAAA,MAGV,GAHUgB,EAAAjB,KAAA,GAGVxJ,KAAK4W,QAAO,CAAAnM,EAAAhB,KAAA,EAAA,MACR,OADQgB,EAAAhB,KAAA,EACRzJ,KAAK4W,QAAQd,SAAQ,KAAA,EAAArL,EAAAhB,KAAA,GAAA,MAAA,KAAA,GAAAgB,EAAAjB,KAAA,GAAAqN,EAAAA,GAAApM,EAAA,MAAA,GAAA,KAAA,GAK1ByL,KAAAA,UAAYlW,KAAK4W,QAAU,KAAI,KAAA,GAGtC,GAAI5W,KAAK8U,iBAAkB,CACrB,IACF9U,KAAK8U,iBAAiB3G,cACf5T,IAGTyF,KAAK8U,iBAAmB,KAEtB9U,KAAK6U,WACP7U,KAAK6U,UAAU,CAACvZ,MAAO0E,KAAKiV,OAAQhF,MAAOjQ,KAAKkV,OAAQhF,IAAKlQ,KAAKmV,KAAMhF,WAAYnQ,KAAKoV,cAC1F,KAAA,GAAA,IAAA,MAAA,OAAA3K,EAAAN,UAAAE,EAAArK,KAAA,CAAA,CAAA,EAAA,UACF,WAAAuT,OAAAA,EAAAzS,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,aAAAC,MAED,SAAYoF,EAAUwU,EAAYkD,EAAI9G,GAAe,IAAA5I,EAAApH,KACnD,IAAKZ,EAAS+U,OAAS/U,EAAS+U,KAAK4C,UAAW,CAC9C/W,KAAKgV,UAAW,EAChB,IAAMgC,EAAM,IAAIxI,GAASpP,EAASD,IAAK,GAAIC,EAAU,6CAGrD,OAFA4X,EAAIzG,QAAU,CAACjV,MAAO0E,KAAKiV,OAAQhF,MAAOjQ,KAAKkV,OAAQhF,IAAKlQ,KAAKmV,KAAMhF,WAAYnQ,KAAKoV,kBACxFpV,KAAKsE,OAAO0S,GAGVhX,KAAK4U,iBAAmB,IACrBqC,KAAAA,OAAS,IAAIT,WAAWpD,IAC7BpT,KAAKkX,UAAY,GAEnB,IACItH,EAEA3D,EACAC,EAJEiL,EAASnX,KAAK4W,QAAUxX,EAAS+U,KAAK4C,YAKtCK,EAAI,WAAA,IAAAC,EAAArO,EAAAC,IAAAC,MAAG,SAAAkE,IAAAkK,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9O,EAAAoN,EAAA,OAAAhN,IAAAK,MAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,KAAA,EACW,OAAtBwC,EAAYhJ,KAAKyB,MAAK8I,EAAAhE,KAAA,EAAAgE,EAAA/D,KAAA,EAEP0N,EAAOS,OAAM,KAAA,EAA1BhI,EAAIpC,EAAA4I,KACJlK,EAAUjJ,KAAKyB,MAAK8I,EAAA/D,KAAA,GAAA,MAAA,KAAA,EAQnB+D,OARmBA,EAAAhE,KAAA,EAAAqN,EAAAA,GAAArJ,EAAA,MAAA,GAGpBtB,EAAUjJ,KAAKyB,MACV0C,EAAKuN,WACRvN,EAAK4N,UAAW,EAChBxH,EAAAqJ,GAAEtG,QAAU,CAACjV,MAAO8L,EAAK6N,OAAQhF,MAAO7I,EAAK8N,OAAQhF,IAAK9I,EAAK+N,KAAMhF,WAAY/I,EAAKgO,aACjF9Q,EAAAA,OAAMkJ,EAAAqJ,KACZrJ,EAAAtD,OAAA,UAAA,KAAA,GAKC9C,GAFEmQ,GAAwBD,QAAXA,EAAAlQ,EAAK8N,cAALoC,IAAWA,OAAXA,EAAAA,EAAapd,QAAS,EAAIkN,EAAK8N,OAAO,GAAK,EACxDsC,EAAYD,EAAanQ,EAAKyQ,iBAChCzQ,EAAKuN,SAAQ,CAAAnH,EAAA/D,KAAA,GAAA,MAEkK+D,OADjLpG,EAAK4N,UAAW,EAChBpB,OAAWvY,GAAW,EAAO,CAAE4U,MAAO,CAACuH,EAAWA,GAAYtH,IAAK9I,EAAK+N,KAAM7Z,MAAO8L,EAAK6N,OAAQhJ,UAAAA,EAAWC,QAAAA,EAAS4K,GAAAA,EAAI9G,cAAAA,EAAeG,WAAW/I,EAAKgO,aAAehW,GAASoO,EAAAtD,OAAA,UAAA,KAAA,GAG7KuN,EAAS7H,EAAK5V,MAAQ4V,EAAK5V,MAAM8R,WAAa,EACpD1E,EAAKyQ,iBAAmBJ,EACxBrQ,EAAK3B,QAAQxE,MAAM,sCAAuCmG,EAAK8N,OAAQ,WAAYsC,EAAW,SAAUD,EAAanQ,EAAKyQ,gBAAiB,UAAWjI,EAAKC,MAEvJzI,EAAKwN,iBAAmB,EACtBxN,EAAK8P,UAAYO,GAAUrQ,EAAKwN,kBAAoBhF,EAAKC,OAC3D6H,EAAU,IAAIlB,WAAWpP,EAAK8P,UAAYO,IAClCK,IAAI1Q,EAAK6P,OAAOxT,MAAM,EAAG2D,EAAK8P,WAAY,GAClDO,EAAS,GAAKC,EAAQI,IAAIlI,EAAK5V,MAAOoN,EAAK8P,WAC3C9P,EAAK8P,UAAY,EACZzR,EAAAA,QAAQxE,MAAM,wCAAyC2O,EAAKC,KAAM,QAAS6H,EAAQ5L,WAAY,cAAe1E,EAAK8P,YAEpHO,EAAS,GAAKrQ,EAAK8P,UAAYO,EAASrE,IAC1ChM,EAAK6P,OAAOa,IAAIlI,EAAK5V,MAAOoN,EAAK8P,WACjC9P,EAAK8P,WAAaO,EAClBrQ,EAAK3B,QAAQxE,MAAM,sCAAuCwW,EAAQ,cAAerQ,EAAK8P,YAC7EO,EAAS,IACZE,EAAO,IAAInB,WAAWpP,EAAK8P,UAAYO,EAAS,MACjDhS,EAAAA,QAAQxE,MAAM,6CAA8CmG,EAAK8P,UAAYO,EAAS,KAAM,aAAcA,EAAQ,cAAerQ,EAAK8P,WACtIY,EAAAA,IAAI1Q,EAAK6P,OAAOxT,MAAM,EAAG2D,EAAK8P,WAAY,GAC/CO,EAAS,GAAKE,EAAKG,IAAIlI,EAAK5V,MAAOoN,EAAK8P,WACxC9P,EAAK8P,WAAaO,SACXrQ,EAAK6P,OACZ7P,EAAK6P,OAASU,EACdvQ,EAAK3B,QAAQxE,MAAM,0CAA2CwW,EAAQ,cAAerQ,EAAK8P,YAI9FQ,EAAU9H,EAAK5V,OAEb0d,GAAWA,EAAQ5L,WAAa,GAAK8D,EAAKC,OACjC6H,EAAAA,EAAS9H,EAAKC,KAAM,CAC7BI,MAAO,CAAC7I,EAAK8N,OAAO,GAAK9N,EAAKyQ,iBAAmBH,EAAUA,EAAQ5L,WAAa,GAAI1E,EAAK8N,OAAO,GAAK9N,EAAKyQ,iBAC1G3H,IAAK9I,EAAK+N,KACV7Z,MAAO8L,EAAK6N,OACZhJ,UAAAA,EACAC,QAAAA,EACA4K,GAAAA,EACA9G,cAAAA,EACAG,WAAW/I,EAAKgO,aACfhW,GAEAwQ,EAAKC,MAGS5M,EAAAA,KAAKyB,MAAQoS,EAChBtG,EAAAA,GAAepJ,EAAKyQ,gBAAiBhP,GAC9CwJ,EAAAA,KAAKzB,GAAuB,CAACqF,MAAAA,EAAMtD,IAAKvL,EAAKyQ,gBAAiBpB,KAAM5N,EAAUqH,IAAK9I,EAAK+N,KAAM7Z,MAAO8L,EAAK6N,OAAQhF,MAAO7I,EAAK8N,OAAQ/E,WAAY/I,EAAKgO,cAC5JhO,EAAK4N,UAAW,EAChB5N,EAAK3B,QAAQxE,MAAM,qCAAsCmG,EAAK8N,OAAQ,SAAUtF,EAAKC,MAChFxL,EAAAA,QAAQsL,GACXC,GACA,EACAxQ,EACAA,EAAS8U,QAAQjN,IAAI,kBACrB7H,EAAS8U,QAAQjN,IAAI,OACrB6P,EACA9G,EACA5I,EAAK6N,OACL7N,EAAK8N,OACL9N,EAAK+N,KACL/N,EAAKgO,mBAER,KAAA,GAAA,IAAA,MAAA,OAAA5H,EAAArD,UAAAiD,EAAA,KAAA,CAAA,CAAA,EAAA,SACF,OAAA,WAtFSiK,OAAAA,EAAAvW,MAAAd,KAAA5E,YAAA,SAwFX,CAAArB,IAAA,aAAAkN,IAED,WACE,OAAOjH,KAAK6X,kBACb,CAAA9d,IAAA,UAAAkN,IAED,WACE,OAAOjH,KAAKgV,UACb8C,IAED,SAAaxY,GACXU,KAAKgV,SAAW1V,KACjB,CAAA,CAAAvF,IAAA,cAAAC,MAED,WACS,QAAoB,oBAAV+b,WAClB1C,GA5T8B1B,ICDpBoG,IAAAA,YAASzE,GAAAtV,EAAA+Z,EAAAzE,GAAArV,IAAAA,EAAAC,EAAA6Z,GAmCpB,SAAAA,IAAevZ,IAAAA,EAHGA,OAGH1E,OAAAie,GACNna,EAAA8Q,EAAPzQ,EAAAA,EAAAQ,KAAAuB,cAlCK,MAAIpC,EAAA8Q,EAAAlQ,eACA,GAAKZ,EAAA8Q,EAAAlQ,mBACA,MAAIZ,EAAA8Q,EAAAlQ,YACX,MAAIZ,EAAA8Q,EAAAlQ,qBACK,GAACZ,EAAA8Q,EAAAlQ,UACZ,MAAIZ,EAAA8Q,EAAAlQ,iBACG,MAAIZ,EAAA8Q,EAAAlQ,GAAA,UACP,GAAAZ,EAAA8Q,EAAAlQ,cACA,MAGXZ,EAAA8Q,EAAAlQ,yBAEsB,KAAGZ,EAAA8Q,EAAAlQ,cACd,MAAIZ,EAAA8Q,EAAAlQ,UACR,MAAIZ,EAAA8Q,EAAAlQ,sBACQ,MAAIZ,EAAA8Q,EAAAlQ,GAAA,cACR,GACfZ,EAAA8Q,EAAAlQ,0BACuB,MAAIZ,EAAA8Q,EAAAlQ,yBACL,MAAIZ,EAAA8Q,EAAAlQ,cAChB,GAAKZ,EAAA8Q,EAAAlQ,cACL,GAAKZ,EAAA8Q,EAAAlQ,UACR,IAAEZ,EAAA8Q,EAAAlQ,GAAA,qBAAA,GAAAZ,EAAA8Q,EAAAlQ,GAAA,oBAAA,GAAAZ,EAAA8Q,EAAAlQ,GAAA,eAAA,GAAAZ,EAAA8Q,EAAAlQ,GAAA,0BAAA,GAAAZ,EAAA8Q,EAAAlQ,GAAA,iBAAA,GAAAZ,EAAA8Q,EAAAlQ,eAMG,MAAIZ,EAAA8Q,EAAAlQ,iBACF,MAAIA,EAwMjBuZ,OAnMAxX,EAAAwX,EAAA,CAAA,CAAAhe,IAAA,OAAAC,MAED,SAAMge,GAAK,IAAAzS,EAAAvF,KACTuV,aAAavV,KAAKwV,eAClBxV,KAAKyF,QAAUuS,EAAIhE,OACnBhU,KAAKkV,OAAS8C,EAAI/H,MAClBjQ,KAAKiY,YAAcD,EAAIpE,WACvB5T,KAAKiV,OAAS+C,EAAI1c,MAClB0E,KAAKkY,SAAWF,EAAI9D,QACpBlU,KAAKmY,iBAAuC,YAApBH,EAAI3D,aAAiD,gBAApB2D,EAAI3D,YACxD+D,KAAAA,MAAQJ,EAAI7D,MAAQ,KACrBF,EAAAA,SAAWjU,KAAKqY,QAAUL,EAAI/D,QAC7BqE,KAAAA,SAAWN,EAAItE,SAAW,KAC/B1T,KAAKuY,SAAU,EACVpD,KAAAA,KAAO6C,EAAI9H,KAAO8H,EAAI7Y,IAC3Ba,KAAKwY,cAAgBR,EAAIrE,aACzB3T,KAAKyY,WAAY,EACjBzY,KAAK0Y,WAAaV,EAAInE,UACtB7T,KAAK6U,UAAYmD,EAAIlE,SACrB9T,KAAK2Y,SAAWX,EAAIvJ,QACf2G,KAAAA,YAAc4C,EAAI7H,YAAc,GACrCnQ,KAAKyF,QAAQxE,MAAM,0BAA2BjB,KAAKkV,QAEnDlV,KAAK0H,KAAOwH,GAAa8I,EAAI7Y,IAAK6Y,EAAI7I,QAEhClD,IAAAA,EAAYhJ,KAAKyB,MACvB,OAAO,IAAIN,SAAQ,SAACC,EAASC,GAC3BiB,EAAKqT,qBAAuBvU,EAC5BkB,EAAKsT,oBAAsBvU,EAC3BiB,EAAKuT,gBACJpC,OAAM,SAACnc,GAGR,GAFAgb,aAAahQ,EAAKiQ,eAClBjQ,EAAKgT,SAAU,GACXhT,EAAKoP,SAKHpa,MAJEA,EAAAA,aAAiBiU,GAAWjU,EAAQ,IAAIiU,GAASjJ,EAAKmC,KAAMnC,EAAKoT,WACnE1M,UAAYA,EACZC,EAAAA,QAAUjJ,KAAKyB,MACrBnK,EAAMgW,QAAU,CAACjV,MAAOiK,EAAK0P,OAAQ/E,IAAK3K,EAAK4P,KAAMhF,WAAY5K,EAAK6P,aAChE7a,OAET,CAAAR,IAAA,aAAAC,MAED,WACE,IAAIiW,EAAQ,KACR,GAAAjQ,KAAKwY,gBAAkBjK,IAA6BvO,KAAKkV,QAAUlV,KAAKkV,OAAOhb,OAAS,EAC1F,GAAI8F,KAAKiY,YAAa,CACpBjY,KAAKyY,WAAY,EACXM,IAAAA,EAAuC,KAA3B/Y,KAAKgZ,oBACjBC,EAAOjZ,KAAKkV,OAAO,GAAKlV,KAAK6X,gBAC/BqB,EAAKlZ,KAAKkV,OAAO,GACjB6D,EAAY/Y,KAAKkV,OAAO,GAAK+D,IAC/BC,EAAKD,EAAOF,GAEN9I,EAAA,CAACgJ,EAAMC,GACflZ,KAAKyF,QAAQxE,MAAM,wBAAyBjB,KAAKkV,OAAQ,eAAgBjF,QAEzEA,EAAQjQ,KAAKkV,OACblV,KAAKyF,QAAQxE,MAAM,wBAAyBjB,KAAKkV,OAAQ,eAAgBjF,GAG7EjQ,KAAKmZ,cAAclJ,KACpB,CAAAlW,IAAA,gBAAAC,MAED,SAAeiW,GAAO,IAAA7I,EAAApH,KAChB,IACGoZ,KAAAA,WAAanW,KAAKyB,MACvB,IAAM2U,EAAMrZ,KAAKsZ,KAAO,IAAIC,eAC5BF,EAAIG,KAAKxZ,KAAKqY,SAAW,MAAOrY,KAAK0H,MAAM,GAC3C2R,EAAI1F,aAAe3T,KAAKwY,cACnBF,KAAAA,WAAae,EAAI3F,QAAU1T,KAAKsY,UACrCe,EAAII,gBAAkBzZ,KAAKmY,iBAC3BkB,EAAIK,OAAS1Z,KAAK2Z,QAAQrO,KAAKtL,MAC/BqZ,EAAIO,mBAAqB5Z,KAAK6Z,oBAAoBvO,KAAKtL,MACnD8Z,EAAAA,QAAU,SAACC,GAAe,IAAAC,EAAAC,EAAAC,EAC5B9S,EAAK4N,UAAW,EACVza,IAAAA,EAAQ,IAAIiU,GAASpH,EAAKM,KAAMN,EAAKuR,SAAUoB,MAAAA,GAAyB,QAAfC,EAAVD,EAAYI,qBAAa,IAAAH,OAAf,EAAVA,EAA2B5a,SAAW,uBAAwB2a,MAAAA,GAAyBE,QAAfA,EAAVF,EAAYI,qBAAZF,IAAyBA,OAAfA,EAAVA,EAA2B3a,QAAS,gBAAiBya,MAAAA,GAAyBG,QAAfA,EAAVH,EAAYI,qBAAZD,IAAyBA,OAAf,EAAVA,EAA2BE,aACnM7f,EAAMgW,QAAU,CAACjV,MAAO8L,EAAK6N,OAAQhF,MAAO7I,EAAK8N,OAAQhF,IAAK9I,EAAK+N,KAAMhF,WAAY/I,EAAKgO,aAC1FhO,EAAKyR,oBAAoBte,IAEvB8f,EAAAA,UAAY,SAAC9T,GACfa,EAAK0O,SACL,IAAMvb,EAAQ,IAAIiU,GAASpH,EAAKM,KAAMN,EAAKuR,SAAU,CAACrZ,OAAO,KAAM,WAC/D8H,EAAKsR,aACPne,EAAM2E,WAAY,EAClBkI,EAAKsR,WAAWne,EAAM,CAACe,MAAO8L,EAAK6N,OAAQhF,MAAO7I,EAAK8N,OAAQhF,IAAK9I,EAAK+N,KAAMhF,WAAY/I,EAAKgO,eAElG7a,EAAMgW,QAAU,CAACjV,MAAO8L,EAAK6N,OAAQhF,MAAO7I,EAAK8N,OAAQhF,IAAK9I,EAAK+N,KAAMhF,WAAY/I,EAAKgO,aAC1FhO,EAAKyR,oBAAoBte,IAErB2Z,IAAAA,EAAUlU,KAAKkY,UAAY,GAC3BzC,EAAa5G,GAAcoB,GAC7BwF,IACFvB,EAAQ0B,MAAQH,GAEdvB,GACF5Q,OAAOgE,KAAK4M,GAAS3M,SAAQ,SAAAC,GACvB8S,EAAAA,iBAAiB9S,EAAG0M,EAAQ1M,OAGpCxH,KAAKyF,QAAQxE,MAAM,qBAAsBjB,KAAKkV,OAAQ,oBAAqBjF,GACvEsK,EAAAA,KAAKva,KAAKoY,aACP7V,GACPA,EAAEgO,QAAU,CAACjV,MAAO0E,KAAKiV,OAAQhF,MAAAA,EAAOC,IAAKlQ,KAAKmV,KAAMhF,WAAYnQ,KAAKoV,aACzEpV,KAAK6Y,oBAAoBtW,MAE5B,CAAAxI,IAAA,sBAAAC,MAED,SAAqBuI,GAEI,IADXA,EAAEiY,OACNrT,YACNnH,KAAKyY,UAAY,IAAMzY,KAAKyY,UAAYxV,KAAKyB,SAEhD,CAAA3K,IAAA,UAAAC,MAED,SAASuI,GAAGkY,IAAAA,EACJnb,EAASiD,EAAEiY,OAAOlb,OACpBA,GAAAA,EAAS,KAAOA,EAAS,IAAK,CAChC,IAAM/E,EAAQ,IAAIiU,GAASxO,KAAK0H,KAAM,KAAIgT,EAAAA,EAAA,GAAOnY,EAAEiY,OAAOpb,UAAQ,GAAA,CAAEE,OAAAA,IAAU,uBAAyBA,GAEhG,OADP/E,EAAMgW,QAAU,CAACjV,MAAO0E,KAAKiV,OAAQhF,MAAOjQ,KAAKkV,OAAQhF,IAAKlQ,KAAKmV,KAAMhF,WAAYnQ,KAAKoV,aACnFpV,KAAK6Y,oBAAoBte,GAElC,IAEIogB,EAFA/K,EAAO,KACPC,GAAO,EAEL0H,GAAyBkD,QAAXA,OAAKvF,cAALuF,IAAWA,OAAXA,EAAAA,EAAavgB,QAAS,EAAI8F,KAAKkV,OAAQ,GAAK,EAC5D,GAAAlV,KAAKwY,gBAAkBjK,GAA2B,CAAAqM,IAAAA,EAC9CC,EAAQ,IAAIrE,WAAWjU,EAAEiY,OAAOpb,UAElCyb,GADJF,EAAYpD,EAAavX,KAAK6X,gBAC1BgD,GAASA,EAAM/O,WAAa,EAAG,CACjC9L,KAAK6X,iBAAmBgD,EAAM/O,WAC9B,IAAMjD,EAAW5F,KAAKyB,MAAQ1E,KAAKoZ,WAC7BnD,EAAQzF,GAAexQ,KAAK6X,gBAAiBhP,GAC9CwJ,KAAAA,KAAKzB,GAAuB,CAACqF,MAAAA,EAAOtD,IAAK3S,KAAK6X,gBAAiBpB,KAAM5N,EAAUqH,IAAKlQ,KAAKmV,KAAM7Z,MAAO0E,KAAKiV,OAAQhF,MAAO,CAAC0K,EAAWpD,EAAavX,KAAK6X,iBAAkB1H,WAAYnQ,KAAKoV,cAE3LyF,EAAAA,EAEEhL,aADL+K,EAAA5a,KAAKkV,cAAM,IAAA0F,OAAA,EAAXA,EAAa1gB,QAAS,GAAK8F,KAAKkV,OAAO,IAAMlV,KAAK6X,gBAAkB7X,KAAKkV,OAAO,GAAKlV,KAAKkV,OAAO,IAKhGzP,KAAAA,QAAQxE,MAAM,4BAA6BjB,KAAKkV,OAAQ,UAAWyF,EAAW,OAAQpD,EAAavX,KAAK6X,gBAAiB,YAAcgD,EAAQA,EAAM/O,WAAa,EAAI,kBAAmB9L,KAAK6X,gBAAiB,UAAW7X,KAAKiV,OAAQ,UAAWpF,QAEhPA,GAAA,EACPD,EAAOrN,EAAEiY,OAAOpb,SAElB,IAAIA,EAAW,CACb+W,GAAI7W,GAAU,KAAOA,EAAS,IAC9BA,OAAAA,EACA8a,WAAYpa,KAAKsZ,KAAKc,WACtBjb,IAAKa,KAAKsZ,KAAKwB,YACf5G,QAASlU,KAAK+a,YAAY/a,KAAKsZ,MAC/BnF,KAAMnU,KAAKsZ,KAAKla,UAEdY,KAAKgb,qBACP5b,EAAWY,KAAKgb,mBAAmB5b,EAAUY,KAAK0H,OAAStI,GAEzDY,KAAKiY,aACFA,KAAAA,YAAYrI,EAAMC,EAAM,CAAEvU,MAAO0E,KAAKiV,OAAQ/E,IAAKlQ,KAAKmV,KAAMlF,MAAO,CAAC0K,EAAWpD,EAAavX,KAAK6X,iBAAkB5L,UAAWjM,KAAKoZ,WAAYlN,QAASjJ,KAAKyB,MAAOyL,WAAYnQ,KAAKoV,aAAehW,GAGxMyQ,GAGH7P,KAAKuY,SAAU,EACfvY,KAAK4Y,sBAAwB5Y,KAAK4Y,qBAAqBjJ,GACrD3P,KAAKiY,YAAc,KAAOrI,EAC1BC,EACAzQ,EACAA,EAAS8U,QAAQ,kBACjB9U,EAAS8U,QAAQnE,IACjB/P,KAAKoZ,WACLpZ,KAAKyY,UACLzY,KAAKiV,OACLjV,KAAKkV,OACLlV,KAAKmV,KACLnV,KAAKoV,eAdPpV,KAAK8Y,eAiBR,CAAA/e,IAAA,SAAAC,MAED,WACE,IAAIgG,KAAK2U,SAOT,OANA3U,KAAK2U,UAAW,EAChB3U,KAAKuY,SAAU,EACf0C,EAAAA,EAAAlD,EAAAxU,sCAAA9E,KAAAuB,MACIA,KAAK6U,WACP7U,KAAK6U,UAAU,CAACvZ,MAAO0E,KAAKiV,OAAQhF,MAAOjQ,KAAKkV,OAAQhF,IAAKlQ,KAAKmV,KAAMhF,WAAYnQ,KAAKoV,cAEvFpV,KAAKsZ,KACAtZ,KAAKsZ,KAAKnL,aADnB,IAGD,CAAApU,IAAA,aAAAkN,IAMD,WACE,OAAOjH,KAAK6X,kBACb,CAAA9d,IAAA,UAAAkN,IAED,WACE,OAAOjH,KAAKgV,UACb8C,IAED,SAAaxY,GACXU,KAAKgV,SAAW1V,IACjB,CAAAvF,IAAA,cAAAC,MAED,SAAaqf,GACX,IAEgC6B,EAD1BhH,EAAU,GAAEiH,koBAAAC,CADE/B,EAAIgC,wBAAwBC,OAAOC,MAAM,SAE7B,IAAhCJ,IAAAA,EAAAK,MAAAN,EAAAC,EAAAM,KAAA5L,MAAkC,CAAA,IAC1B6L,EADSR,EAAAlhB,MACMuhB,MAAM,MACnBG,EAAAA,EAAM,GAAGC,eAAiBD,EAAMjY,MAAM,GAAGf,KAAK,aACvDsU,GAAAmE,EAAA5Y,EAAAyU,GAAA,QAAAmE,EAAAS,IACM1H,OAAAA,KACR,CAAA,CAAAna,IAAA,cAAAC,MAxBD,WACE,MAAiC,oBAAnBuf,mBACfxB,GAxO4BpG,8DCClBkK,GAAI,WACfA,SAAAA,EAAa1d,EAAM4B,GAAQjG,OAAA+hB,GACzB7b,KAAKmE,QAAUH,IACV8X,KAAAA,QAAU/b,EAAO6T,YACrB7T,EAAOiU,SAAWjU,EAAOiU,OAAS,IAAInU,EAAO,WAC9CG,KAAK+b,YAAc5d,EACd6d,KAAAA,QAAU7d,IAASmQ,IAAqC,oBAAVyH,MAAwB,IAAI1C,GAAgB,IAAI0E,GACnG/X,KAAKwG,QAAUzG,EACfC,KAAKic,YAAc,EACnBjc,KAAKkc,YAAc,KACnBlc,KAAKmc,WAAY,EACjBnc,KAAKoc,gBAAkBrc,EAAOsc,eAC9Brc,KAAKyF,QAAU1F,EAAOiU,OAgDvB,IAAAT,EAeAsI,OA9DAtb,EAAAsb,EAAA,CAAA,CAAA9hB,IAAA,OAAAC,MAED,WAAQ,IAAAwE,EAAAwB,KACNsc,EAMItc,KAAKwG,QALP+V,EAAKD,EAALC,MACAC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAcJ,EAAdI,eACGC,EAAIC,EAAAN,EAAAO,IAGHpO,EAAO,WAAA,IAAA+E,EAAAxK,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA/J,EAAA7E,EAAAuiB,EAAA,OAAA7T,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAEWjL,OAFX+K,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEWjL,EAAKwd,QAAQ/Q,KAAK0R,GAAK,KAAA,EAAxCvd,EAAQmK,EAAA6M,KACTjS,EAAAA,QAAQE,QAAQjF,GAASmK,EAAAE,KAAA,GAAA,MAAA,KAAA,EAI1BjL,GAJ0B+K,EAAAC,KAAA,EAAAqN,EAAAA,GAAAtN,EAAA,MAAA,GAE9B/K,EAAKwd,QAAQe,SAAU,EACvBve,EAAKiH,QAAQxE,MAAM,2BAA0BsI,EAAAsN,KACzCrY,EAAK2d,UAAS,CAAA5S,EAAAE,KAAA,GAAA,MAAAF,OAAAA,EAAAW,OAAA,UAAA,KAAA,GAgBjB,GAdD2M,EAAAA,GAAEmG,WAAaxe,EAAKud,YACpBlF,EAAAA,GAAEoG,WAAaze,EAAKyd,YAEhB1hB,EAAKgP,EAAAsN,GACL6F,IACMA,EAAAA,EAAeniB,IAAUA,GAG/BkiB,GAAgBje,EAAKyd,YAAc,GAAgB1hB,EAAAA,EAAOiE,EAAKyd,YAAa,CAAC3gB,MAAOqhB,EAAKrhB,MAAO4U,IAAKyM,EAAKzM,IAAKD,MAAO0M,EAAK1M,MAAOE,WAAYwM,EAAKxM,aAElJ8L,EAAAA,cACSa,GAAA,EACVte,EAAK4d,kBACG5d,EAAAA,EAAK4d,gBAAe7S,EAAAsN,OAE5BiG,GAAWte,EAAKyd,aAAeM,GAAK,CAAAhT,EAAAE,KAAA,GAAA,MAGYF,OAFlDgM,aAAa/W,EAAK0d,aAClB1d,EAAKiH,QAAQxE,MAAM,kCAAmCzC,EAAKyd,YAAa,gBAAiBU,EAAK1M,OACzFiM,EAAAA,YAAcrG,WAAWpH,EAAS+N,GAAWjT,EAAAW,OAAA,UAAA,KAAA,GAG/C/F,EAAAA,QAAQG,OAAO/J,GAAM,KAAA,GAAA,IAAA,MAAA,OAAAgP,EAAAY,UAAAhB,EAAA,KAAA,CAAA,CAAA,EAAA,SAE7B,OAAA,WAhCYqK,OAAAA,EAAA1S,MAAAd,KAAA5E,YAAA,GAmCb,WAAO4E,KAAKmE,UACb,CAAApK,IAAA,SAAAC,OAAAuZ,EAAAvK,EAAAC,IAAAC,MAED,SAAAmB,IAAA,OAAApB,IAAAK,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EAG8B,OAF5B8L,aAAavV,KAAKkc,aAClBlc,KAAKmc,WAAY,EACjBnc,KAAKgc,QAAQe,SAAU,EAAKtS,EAAAP,OACrB,SAAAlK,KAAKgc,QAAQlG,UAAQ,KAAA,EAAA,IAAA,MAAA,OAAArL,EAAAN,UAAAE,EAAArK,UAC7B,WAAAuT,OAAAA,EAAAzS,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,UAAAkN,IAED,WACS,OAAAjH,KAAKgc,SAAWhc,KAAKgc,QAAQe,UACrC,CAAAhjB,IAAA,SAAAkN,IAED,WACE,OAAOjH,KAAKgc,YACbH,EA3Ec,GCoBV,SAASqB,KAA0B,IAAA,IAAAzc,EAAArF,UAAAlB,OAALijB,EAAGxc,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAHuc,EAAGvc,GAAAxF,UAAAwF,GAEtC,IADMuc,EAAAA,EAAI3N,OAAOC,UACTvV,OAAS,EAAG,OAAOijB,EAAI,GAC/B,IAAMvN,EAAO,IAAI4G,WAAW2G,EAAIniB,QAAO,SAACsR,EAAGpR,GAAC,OAAKoR,EAAIpR,EAAE4Q,aAAY,IAC/DsR,EAAU,EAKPxN,OAJHrI,EAAAA,SAAQ,SAAC8V,GACNvF,EAAAA,IAAIuF,EAAGD,GACZA,GAAWC,EAAEvR,cAER8D,EAGF,SAAS0N,KAAO5S,IAAAA,EAACtP,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAClB,OAAA,IAAIgJ,SAAQ,SAACC,GAAYwR,OAAAA,WAAWxR,EAASqG,MCzBzC6S,IAAAA,YAASjK,GAAAtV,EAAAuf,EAAAjK,GAAArV,IA6DnBsV,EA7DmBtV,EAAAC,EAAAqf,GAapB,SAAAA,EAAaC,GAAKhf,IAAAA,EASKA,OATL1E,OAAAyjB,GACN3f,EAAA8Q,EAAVzQ,EAAAA,EAAAQ,UAAM+e,IAbDlP,OAAAA,IAAgB1Q,EAAA8Q,EAAAlQ,YAEd,IAAEZ,EAAA8Q,EAAAlQ,YAEF,IAAEZ,EAAA8Q,EAAAlQ,kBAEI,MAAIZ,EAAA8Q,EAAAlQ,gBAEN,IAAEZ,EAAA8Q,EAAAlQ,GAAA,eAAA,GAMRgI,EAAAA,QC3BF,SAAoBgX,GACzB,OAAA9C,EAAA,CACEsC,WAAY1O,GACZiO,MAAO,EACPC,WAAY,EACZ9I,QAAS,EACTjF,QAAS,KACToF,eAAWxY,EACXuY,gBAAYvY,EACZohB,kBAAcphB,EACdoiB,sBAAkBpiB,EAClB0Y,uBAAmB1Y,EACnBqhB,oBAAgBrhB,EAChBsY,aAAcpF,GACd0B,WAAO5U,EACP8D,IAAK,GACLgQ,YAAQ9T,EACR4Y,OAAQ,MACRC,QAAS,GACTC,UAAM9Y,EACN+Y,UAAM/Y,EACNgZ,iBAAahZ,EACbiZ,WAAOjZ,EACPkZ,cAAUlZ,EACVmZ,cAAUnZ,EACVoZ,oBAAgBpZ,EAChBqiB,eAAWriB,EACXqZ,gBAAiB,GACd8I,GDDYG,CAAUH,GAEvBhf,EAAKgI,QAAQwW,aAAe1O,IAC3B+E,GAAYuK,gBAEbpf,EAAKL,KAAOmQ,IAEd9P,EAAK8C,IAAMkc,EAAIxJ,OAAMxV,EAStB+e,OARAhd,EAAAgd,EAAA,CAAA,CAAAxjB,IAAA,UAAAC,MAED,WACS,OAAAgG,KAAK7B,OAASmQ,KACtB,CAAAvU,IAAA,OAAAC,MAMD,SAAMmF,GAAkB,IAAAoG,EAAAvF,KAAbD,EAAM3E,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACC,iBAAR+D,GAAqBA,EAGrBA,EAAAA,EAFTY,EAAOZ,IAAMA,GAAOY,EAAOZ,KAAOa,KAAKwG,QAAQrH,KAKjDY,EAASuD,OAAOmD,OAAO,GAAIzG,KAAKwG,QAASzG,IAE9BoP,SAAQpP,EAAOoP,OAAS7L,OAAOmD,OAAO,GAAI1G,EAAOoP,SACxDpP,EAAOmU,SAAWvF,GAAc5O,EAAOmU,WAAUnU,EAAOmU,QAAU5Q,OAAOmD,OAAO,GAAI1G,EAAOmU,UAC3FnU,EAAOoU,MAAQxF,GAAc5O,EAAOoU,QAAOpU,EAAOoU,KAAO7Q,OAAOmD,OAAO,GAAI1G,EAAOoU,OAElFpU,EAAO0d,mBACA1d,EAAAA,EAAO0d,iBAAiB1d,IAAWA,GAE9CA,EAAOiU,OAAShU,KAAKsB,IAErB,IAAMuc,EAAO,IAAIhC,GAAK7b,KAAK7B,KAAM4B,GASjC,OARA8d,EAAKC,OAAOhL,GAAGlC,IAAuB,SAAChB,GAChCyC,EAAAA,KAAKzB,GAAuBhB,MAE9BjK,KAAAA,OAAO5K,KAAK8iB,GACU,IAAvB7d,KAAK2F,OAAOzL,QAAkB8F,KAAK+d,cAAiB/d,KAAK+d,aAAahB,SACxE/c,KAAKge,eAGAH,EAAK1Z,UACb,CAAApK,IAAA,SAAAC,OAAAuZ,EAAAvK,EAAAC,IAAAC,MAED,SAAAC,IAAA8U,IAAAA,EAAA,OAAAhV,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAOQrF,OANA6Z,EAAUje,KAAK2F,OAAOxD,KAAI,SAAAuI,GAAC,OAAIA,EAAEoL,YAAU5V,OAAOF,KAAKke,OAAO/b,KAAI,SAAAuI,GAAC,OAAIA,EAAEoL,aAC3E9V,KAAK+d,cACPE,EAAQljB,KAAKiF,KAAK+d,aAAajI,UAEjC9V,KAAK2F,OAAS,GACd3F,KAAKke,OAAS,GAAE3U,EAAAE,KAAA,EACVrF,QAAQsJ,IAAIuQ,GAAQ,KAAA,EAAA,OAAA1U,EAAAE,KAAA,EACpB6T,KAAO,KAAA,EAAA,IAAA,MAAA,OAAA/T,EAAAY,UAAAhB,EAAAnJ,UACd,WAAAuT,OAAAA,EAAAzS,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,eAAAC,MAED,WAAgB,IAAAoN,EAAApH,KAEd,GADK+d,KAAAA,aAAe/d,KAAK2F,OAAOlD,QAC3BzC,KAAK+d,aAAV,CAEI/d,KAAK+d,aAAajC,OACfoC,KAAAA,OAAOnjB,KAAKiF,KAAK+d,cAExB,IAAM/F,EAAMhY,KAAK+d,aAAa/Q,OAAO0J,OAAM,SAAAnU,OAErCyV,GAA8B,mBAAhBA,EAAImG,SAExBnG,EAAImG,SAAQ,WAAM,IAAAC,EAAAC,EACK,QAAjBD,EAAAhX,EAAK2W,oBAAY,IAAAK,GAAjBA,EAAmBtC,QAAoBuC,QAAXA,EAAAjX,EAAK8W,cAALG,IAAWA,OAAXA,EAAAA,EAAankB,QAAS,IACpDkN,EAAK8W,OAAS9W,EAAK8W,OAAO1O,QAAO,SAAAqO,GAAQA,OAAAA,GAAQA,IAASzW,EAAK2W,iBAEjE3W,EAAK4W,sBAGR,CAAA,CAAAjkB,IAAA,iBAAAC,MA/DD,WACE,OAAOqZ,GAAYuK,kBACpBL,GA/B4B5L,IEZlB2M,GAAU,WAAA,SAAAA,IAAAxkB,OAAAwkB,6BACF,GA0BlBA,OA1BmB/d,EAAA+d,EAAA,CAAA,CAAAvkB,IAAA,KAAAC,MAEpB,SAAIsL,GAAOiZ,IAAAA,EAAenjB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGojB,EAAMpjB,UAAAlB,OAAAkB,EAAAA,kBAAAC,EAAEojB,EAAarjB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACtD,GAAKkK,EAAL,CAEA,IAAM1J,EAAc0J,EAAM1J,YACtB8iB,EAAS,EAET,GAAA1e,KAAK2e,mBAAqB/iB,EAAa,CACzC,IAAMgjB,EAAO/kB,EAAO+kB,KAAK/kB,EAAOoN,IAAI3B,GAAQ1J,GACxC,IAACgjB,EAAKnkB,QAAQP,OAAQ,OAEvBskB,GAAUI,EAAKrjB,WACfqjB,EAAKrjB,WAAaqjB,EAAKrjB,UAAYK,EAAc2iB,EAElDG,EAASE,EAAKrjB,UAAY,GACjBqjB,EAAKzkB,KAAOykB,EAAKzkB,IAAMyB,EAAc6iB,IAAkBnZ,EAAMuZ,UACtEH,EAAS9iB,EAAc,IAI3BoE,KAAK2e,iBAAmB/iB,EAEpB8iB,GAAU9iB,IAAgB8iB,IAC5BpZ,EAAM1J,YAAc8iB,QAEvBJ,EA3BoB,GCAVQ,GAAU,WAGrB,SAAAA,EAAa1N,GAAS,IAAA5S,EAAAwB,KAAAlG,OAAAglB,GAAAlhB,EAFZoC,KAAA,UAAI+e,IAAAA,KAGZ/e,KAAKoR,QAAUA,EAEfA,EAAQ0B,GAAGlC,IAAW,SAAAoO,GAChBA,GAAUC,EAAAA,QAAQC,IAAIF,MA+B7BF,OA7BAve,EAAAue,EAAA,CAAA,CAAA/kB,IAAA,QAAAC,MAED,SAAO4B,EAAa4iB,GAAQ,IAAAjZ,EAAAvF,KAC1B,GAAIpE,MAAAA,GAAsDoE,KAAKif,QAAQE,KAAvE,CACA,IAAMC,EAAMxjB,EAAc,GACpBwM,EAAMxM,EAAc,GACpByjB,EAAU,GACXJ,KAAAA,QAAQ1X,SAAQ,SAAAyX,GACfA,EAAIvI,MAAQ2I,GAAOJ,EAAIvI,MAAQrO,GACjCiX,EAAQtkB,KAAKikB,MAITzX,EAAAA,SAAQ,SAAAyX,GACTC,EAAAA,QAAQK,OAAON,GACpBzZ,EAAK6L,QAAQiB,KAAKzB,GAAmBoO,MAGlCR,GAEAS,KAAAA,QAAQ1X,SAAQ,SAAAiU,GACfA,EAAE/E,KAAO7a,EAAc,GACpBqjB,EAAAA,QAAQK,OAAO9D,SAGzB,CAAAzhB,IAAA,QAAAC,MAED,WACEgG,KAAKif,QAAQM,YACdT,EAtCoB,GCFVU,GAAgB,WAAA,SAAAA,IAAA1lB,OAAA0lB,yBACZ,qBACL,IAiCTA,OAjCWjf,EAAAif,EAAA,CAAA,CAAAzlB,IAAA,YAAAC,MAEZ,SAAWylB,EAAW/W,GACf+W,GAAc/W,IACnB1I,KAAK0f,QAAQ3kB,KAAK,IAAO0kB,EAAY/W,GACrC1I,KAAK0f,QAAU1f,KAAK0f,QAAQjc,OAAQ,MACrC,CAAA1J,IAAA,iBAAAC,MAED,SAAgBylB,EAAW/W,GACpB+W,GAAc/W,IACnB1I,KAAK2f,aAAa5kB,KAAK,IAAO0kB,EAAY/W,GAC1C1I,KAAK2f,aAAe3f,KAAK2f,aAAalc,OAAU,QACjD,CAAA1J,IAAA,cAAAC,MAED,WACE,OAAKgG,KAAK2f,aAAazlB,QAAW8F,KAAK0f,QAAQxlB,OAC3C8F,KAAK0f,QAAQxlB,OACR8F,KAAK0f,QAAQ1kB,QAAO,SAACC,EAAGC,GAAC,OAAMD,EAAKC,KAAM8E,KAAK0f,QAAQxlB,OAEzD8F,KAAK2f,aAAa3kB,QAAO,SAACC,EAAGC,GAAC,OAAMD,EAAKC,KAAM8E,KAAK2f,aAAazlB,OAJV,IAK/D,CAAAH,IAAA,iBAAAC,MAED,WACE,OAAKgG,KAAK2f,aAAazlB,QAAW8F,KAAK0f,QAAQxlB,OAC3C8F,KAAK0f,QAAQxlB,OACR8F,KAAK0f,QAAQ1f,KAAK0f,QAAQxlB,OAAS,GAErC8F,KAAK2f,aAAa3f,KAAK2f,aAAazlB,OAAS,GAJU,IAK/D,CAAAH,IAAA,QAAAC,MAED,WACEgG,KAAK2f,aAAe,GACpB3f,KAAK0f,QAAU,OAChBF,EAnC0B,GCEvBI,GAAK,WAiBT,SAAAA,EAAaC,GAAW/lB,OAAA8lB,uBAhBX,wBACA,wBACA,oBACJ,iBACH,oBACI,kBACF,mBACC,uBACI,yBACE,gBACT,gCAEgB,oCACI,GAAChiB,EAAAoC,KAAA,eACX,GAGdA,KAAK8f,WAAaD,EA2EnBD,OA1EArf,EAAAqf,EAAA,CAAA,CAAA7lB,IAAA,WAAAC,MAED,WACS,MAAA,CACL+lB,WAAY/f,KAAK+f,WACjBC,WAAYhgB,KAAKggB,WACjBC,WAAYjgB,KAAKigB,WACjBC,OAAQlgB,KAAKkgB,OACbC,IAAKngB,KAAKmgB,IACVC,QAASpgB,KAAKogB,QACdC,MAAOrgB,KAAKqgB,MACZC,OAAQtgB,KAAKsgB,OACbC,WAAYvgB,KAAKugB,WACjBC,aAAcxgB,KAAKwgB,aACnBC,IAAKzgB,KAAKygB,OAEb,CAAA1mB,IAAA,gBAAAC,MAED,SAAe+U,GACb/O,KAAK+f,WAAahR,IACnB,CAAAhV,IAAA,uBAAAC,MAED,SAAAwZ,GAA8BkN,IAAAA,EAAP9Q,EAAI4D,EAAJ5D,KACfuQ,EAAMvQ,MAAAA,GAAgB8Q,QAAZA,EAAJ9Q,EAAM+Q,kBAAND,IAAgBA,SAAhBA,EAAkBE,UAC1BT,GAAOA,EAAM,GAAKA,EAAM,MAC1BngB,KAAKmgB,IAAMA,KAEd,CAAApmB,IAAA,eAAAC,MAED,SAAc6mB,GAKRA,GAJJ7gB,KAAKqgB,MAAQQ,EAAMR,MACnBrgB,KAAKsgB,OAASO,EAAMP,OACpBtgB,KAAKigB,WAAaY,EAAMC,MACxB9gB,KAAK+f,WAAac,EAAME,UACpBF,EAAMG,QAAUH,EAAMI,OAAQ,CAC1Bd,IAAAA,EAAMU,EAAMG,OAASH,EAAMI,OAC7Bd,EAAM,GAAKA,EAAM,MACnBngB,KAAKmgB,IAAMA,MAGhB,CAAApmB,IAAA,eAAAC,MAED,SAAc6mB,GACZ7gB,KAAKggB,WAAaa,EAAMC,MACxB9gB,KAAKugB,WAAaM,EAAMK,WACxBlhB,KAAKwgB,aAAeK,EAAML,eAC3B,CAAAzmB,IAAA,YAAAC,MAED,SAAWmnB,GACJjB,KAAAA,OAASiB,EAAY5F,MAAM,KAAK9X,MAAM,EAAG,GAAG,KAClD,CAAA1J,IAAA,gBAAAC,MAED,SAAeonB,GAAS,IAAA5iB,EAAAwB,KACtB,KAAKA,KAAKmgB,KAAOngB,KAAKmgB,KAAO,MACvBiB,EAAQlnB,OAAQ,CAClB,IAAM0N,EAAWwZ,EAAQpmB,QAAO,SAACC,EAAEZ,GAAC,OAAKY,EAAKZ,EAAEuN,WAAU,GAAKwZ,EAAQlnB,OACvE8F,KAAKmgB,IAAMhY,KAAKwI,MAAM3Q,KAAK8f,WAAalY,GAGpCL,EAAAA,SAAQ,SAAA8Z,IACe,IAAzB7iB,EAAK8iB,cACP9iB,EAAK8iB,YAAcD,EAAOE,OAExBF,EAAOE,QAAU/iB,EAAK8iB,aACnBb,EAAAA,MAEPjiB,EAAKgjB,yBAA2BH,EAAOzZ,UAAYpJ,EAAKshB,WAAa,KACrEthB,EAAKijB,qBAAuBJ,EAAOK,MAAM1mB,QAAO,SAACC,EAAGC,GAAC,OAAMD,EAAKC,EAAEhB,SAAS,GACvEsE,EAAKgjB,yBAA2B,MAC7BpB,EAAAA,QAAqC,EAA3B5hB,EAAKijB,oBACpBjjB,EAAKgjB,wBAA0B,EAC/BhjB,EAAKijB,oBAAsB,UAGhC7B,EA7FQ,GAoHL+B,GAAiB,WAMrB,SAAAA,EAAaC,GAAM/B,IAAAA,EAASzkB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAItB,OAAA6nB,kBAJ3B,wBAEG,IAGT3hB,KAAK6hB,MAAQD,EACb5hB,KAAK8f,WAAaD,EACbiC,KAAAA,OAAS,IAAIlC,GAAMC,GACxB7f,KAAK+hB,cAyCNJ,OArCDphB,EAAAohB,EAAA,CAAA,CAAA5nB,IAAA,WAAAC,MACA,WAAY,IAAAgoB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACVtM,GAAqDgM,QAAVA,OAAKH,iBAAKG,SAAVA,EAAY1c,QAAS,GAAEid,EAAAvM,EAA1Dpa,YAAAA,OAAc,IAAH2mB,EAAG,EAACA,EAAAC,EAAAxM,EAAEyM,UAAAA,OAAY,IAAHD,EAAG,EAACA,EACtC9H,OAAAA,EAAAA,EACK,GAAA1a,KAAK8hB,OAAOY,YAAU,GAAA,CACzBC,eAAyB,QAAVV,EAAIjiB,KAAC6hB,aAAK,IAAAI,GAAWC,QAAXA,EAAVD,EAAYW,iBAAZV,IAAqBA,OAAX,EAAVA,EAAAzjB,KAAAwjB,GAA0BhM,QAAS,EAClD4M,UAAoB,QAAVV,EAAIniB,KAAC6hB,aAAK,IAAAM,GAAWC,QAAXA,EAAVD,EAAYS,iBAAZR,IAAqBA,OAAX,EAAVA,EAAA3jB,KAAA0jB,GAA0BU,WAAY,EAChDjnB,YAAAA,EACAsM,WAAqB,QAAVma,EAAAriB,KAAK6hB,aAAK,IAAAQ,GAAcC,QAAdA,EAAVD,EAAYS,wBAAYR,OAAd,EAAVA,EAA0BxmB,YAAa,EAClD2mB,UAAAA,MAEH,CAAA1oB,IAAA,cAAAC,MAED,WAAe,IAAAuL,EAAAvF,KACbA,KAAK6hB,MAAM/O,GAAGlC,IAAqB,SAAAyG,GAAA,IAAE0L,EAAU1L,EAAV0L,WAAU,OAAMxd,EAAKuc,OAAOkB,cAAcD,EAAW3B,YAE1FphB,KAAK6hB,MAAM/O,GAAGlC,IAAuB,SAAAhB,GAC9BkS,EAAAA,OAAOmB,qBAAqBrT,MAGnC5P,KAAK6hB,MAAM/O,GAAGlC,IAAuB,SAAArO,GACpB,UAAXA,EAAEpE,KACC2jB,EAAAA,OAAOoB,aAAa3gB,EAAEse,OAEtBiB,EAAAA,OAAOqB,aAAa5gB,EAAEse,UAI/B7gB,KAAK6hB,MAAM/O,GAAGlC,IAAY,SAAArO,GACnBuf,EAAAA,OAAOsB,UAAU7gB,EAAE4e,kBAG3B,CAAApnB,IAAA,QAAAC,MAED,WACEgG,KAAKqjB,SAAW,GAChBrjB,KAAK8hB,OAAS,IAAIlC,GAAM5f,KAAK8f,gBAC9B6B,EAnDoB,GCrHV2B,GACJ,QADIA,GAEJ,QAFIA,GAGD,WAICC,GACN,MADMA,GAEL,OAIKC,GACN,MADMA,GAED,SAFCA,GAGD,SAICC,GACK,iBADLA,GAEM,kBAFNA,GAGoB,gCAHpBA,GAIM,kBAJNA,GAKG,eALHA,GAMI,gBCzBJC,GAAU,WAAA,SAAAA,IAAA5pB,OAAA4pB,eAChB,GAEL9lB,EAAAoC,KAAA,OACOsjB,IAAe1lB,EAAAoC,KAAA,YAEVujB,IAAkB3lB,EAAAoC,KAAA,OAEtB,sBAGD3E,kBAEC,uBAEI,4BAEM,2BAED,gCAEK,oBAEZ,qBAEC,qBAEA,qBAGD,iBAGJ,iBAGA,iBAGA,oBAEG,mBAEA,qBAGE,mBAEH,mBAEC,wBAEK,qBAEJ,+BAEU,+BAEA,qBAEV,gBAEJ,oBAEC,MAEPuC,EAAAoC,KAAA,WAAA,GAyDC0jB,OAzDDnjB,EAAAmjB,EAAA,CAAA,CAAA3pB,IAAA,QAAAC,MAGA,WACEgG,KAAK2jB,eACL3jB,KAAKqgB,MACLrgB,KAAKsgB,OACLtgB,KAAKihB,OACLjhB,KAAKghB,OACLhhB,KAAK4H,SACL5H,KAAK4jB,oBACL5jB,KAAK6f,UAAY,EACjB7f,KAAK8gB,MAAQ,GACb9gB,KAAK6jB,SAAU,EACf7jB,KAAK8jB,KAAM,EACX9jB,KAAK+jB,IAAM,GACX/jB,KAAKgkB,IAAM,GACXhkB,KAAKikB,IAAM,GACXjkB,KAAKkkB,SAAW,GAChBlkB,KAAKohB,QAAU,GACfphB,KAAKmkB,SAAW,GAChBnkB,KAAKokB,KAAO,OACb,CAAArqB,IAAA,WAAAkN,IAED,WACE,OAAOjH,KAAKohB,QAAQlnB,OAAS8F,KAAKohB,QAAQ,GAAGiD,IAAM,OACpD,CAAAtqB,IAAA,WAAAkN,IAED,WACE,OAAOjH,KAAKohB,QAAQlnB,OAAS8F,KAAKohB,QAAQ,GAAGkD,IAAM,OACpD,CAAAvqB,IAAA,kBAAAkN,IAED,WACM,GAAAjH,KAAKohB,QAAQlnB,OAAS,EAAG,CACrBqqB,IAAAA,EAAQvkB,KAAKohB,QAAQ,GACrBvmB,EAAOmF,KAAKohB,QAAQphB,KAAKohB,QAAQlnB,OAAS,GAChD,OAAOW,EAAKwpB,IAAME,EAAMF,IAAMxpB,EAAK+M,SAE9B,OAAA,IAGT,CAAA7N,IAAA,QAAAC,MAGA,WACS,SAAGgG,KAAK+jB,IAAI7pB,QAAU8F,KAAKgkB,IAAI9pB,QAAU8F,KAAK8gB,SAGvD,CAAA/mB,IAAA,YAAAC,MAGA,WACS,QAAEgG,KAAKohB,QAAQlnB,SACvB,CAAAH,IAAA,eAAAkN,IAED,WACE,OAAOjH,KAAKwkB,sBACbd,EA3HoB,GCAVe,GAAU,WAAA,SAAAA,IAAA3qB,OAAA2qB,eAChB,GAEL7mB,EAAAoC,KAAA,OACOsjB,IAAe1lB,EAAAoC,KAAA,YAEVwjB,IAAkB5lB,EAAAoC,KAAA,OAEtB,kBAEA,4BAES,2BAEA,sBAEL,4BAEM,gCAEI,qBAEX,qBAEA,qBAGD,qBAEA,uBAEG,wBAEA,yBAEE,uBAEF,4BAEK,mBAGT,sBAEC,+BAEU,+BAEA,gBAEd,MAENpC,EAAAoC,KAAA,WAAA,GAmDCykB,OAnDDlkB,EAAAkkB,EAAA,CAAA,CAAA1qB,IAAA,QAAAC,MAGA,WACEgG,KAAK2jB,eAAiB,EACtB3jB,KAAK6f,UAAY,EACjB7f,KAAK0kB,eAAiB,EACtB1kB,KAAKkhB,WAAa,EAClBlhB,KAAKwgB,aAAe,EACpBxgB,KAAK4jB,oBAAsB,EAC3B5jB,KAAK6jB,SAAU,EACf7jB,KAAK8jB,KAAM,EACX9jB,KAAK8gB,MAAQ,GACb9gB,KAAKohB,QAAU,GACfphB,KAAKD,OAAS,GACdC,KAAKmkB,SAAW,KAGlB,CAAApqB,IAAA,QAAAC,MAGA,WACS,SAAGgG,KAAKkhB,YAAclhB,KAAKwgB,cAAgBxgB,KAAK8gB,OAAS9gB,KAAK+gB,YAAcyC,MAGrF,CAAAzpB,IAAA,YAAAC,MAGA,WACS,QAAEgG,KAAKohB,QAAQlnB,SACvB,CAAAH,IAAA,eAAAkN,IAED,WACE,OAAOjH,KAAK2kB,oBACb,CAAA5qB,IAAA,WAAAkN,IAED,WACE,OAAOjH,KAAKohB,QAAQlnB,OAAS8F,KAAKohB,QAAQ,GAAGiD,IAAM,OACpD,CAAAtqB,IAAA,WAAAkN,IAED,WACE,OAAOjH,KAAKohB,QAAQlnB,OAAS8F,KAAKohB,QAAQ,GAAGkD,IAAM,OACpD,CAAAvqB,IAAA,kBAAAkN,IAED,WACM,GAAAjH,KAAKohB,QAAQlnB,OAAS,EAAG,CACrBqqB,IAAAA,EAAQvkB,KAAKohB,QAAQ,GACrBvmB,EAAOmF,KAAKohB,QAAQphB,KAAKohB,QAAQlnB,OAAS,GAChD,OAAOW,EAAKwpB,IAAME,EAAMF,IAAMxpB,EAAK+M,SAE9B,OAAA,MACR6c,EAvGoB,GCSVG,GAAW,WAuBtBA,SAAAA,EAAaN,EAAKD,EAAK3C,GAAO5nB,OAAA8qB,GAtB9BhnB,EAAAoC,KAAA,OACO,uBAEI,kBAEH,qBAEG,iBAEJ,kBAEC,0BAEO,KAUR6kB,KAAAA,UAAY7kB,KAAKskB,IAAMA,EACvBQ,KAAAA,UAAY9kB,KAAKqkB,IAAMA,EACxB3C,IAAO1hB,KAAK0hB,MAAQA,GAczBkD,OAXDrkB,EAAAqkB,EAAA,CAAA,CAAA7qB,IAAA,MAAAkN,IAGA,WACS,OAAAjH,KAAKskB,IAAMtkB,KAAKqkB,MACxB,CAAAtqB,IAAA,gBAAAC,MAED,WACEgG,KAAK+kB,UAAW,EAChB/kB,KAAKqH,KAAK2d,UAAY,EACtBhlB,KAAKqH,KAAK4d,gBAAkB,MAC7BL,EAxCqB,GCXXM,GAAW3kB,GAWtB,SAAA2kB,EAAaZ,EAAK1U,EAAMhI,EAAUud,GAAcrrB,OAAAorB,qBAVrC,MAAItnB,EAERoC,KAAA,OAAA,CAAEglB,UAAW,EAAGC,gBAAiB,uBAC7B,GAQTjlB,KAAK6kB,UAAY7kB,KAAKskB,IAAMtkB,KAAKqkB,IAAMC,EACvCtkB,KAAK4P,KAAOA,EACZ5P,KAAKmf,KAAOvP,EAAK9D,WACjB9L,KAAKmlB,aAAeA,EAChBvd,IAAU5H,KAAK4H,SAAWA,MCd5Bwd,GAAM7kB,GAOV,SAAA6kB,EAAaxV,EAAM0U,GAAKxqB,OAAAsrB,iBANjB,GAOLplB,KAAK4P,KAAOA,EACPiV,KAAAA,UAAY7kB,KAAKskB,IAAMA,KAInBe,YAAeC,GAAAtnB,EAAAqnB,EAAAC,GAAArnB,IAAAA,EAAAC,EAAAmnB,GAAA,SAAAA,IAAApnB,OAAAnE,OAAAurB,GAAApnB,EAAA6C,MAAAd,KAAA5E,WAAA,OAAAmF,EAAA8kB,IAASD,IAExBG,YAASC,GAAAxnB,EAAAunB,EAAAC,GAAAC,IAAAA,EAAAvnB,EAAAqnB,GAAA,SAAAA,IAAAE,OAAA3rB,OAAAyrB,GAAAE,EAAA3kB,MAAAd,KAAA5E,WAAA,OAAAmF,EAAAglB,IAASH,IAElBM,GAAa,WAAA,SAAAA,IAAA5rB,OAAA4rB,eAEnB,GAEL9nB,EAAAoC,KAAA,OACOsjB,uBAEK,6BAGO,wBAGN,IAoBZoC,OApBcnlB,EAAAmlB,EAAA,CAAA,CAAA3rB,IAAA,QAAAC,MAKf,WACS,SAAIgG,KAAK2lB,iBAAiBzrB,SAAU8F,KAAK4lB,WAAW1rB,SAAW8F,KAAK6f,aAC5E,CAAA9lB,IAAA,QAAAC,MAED,WACEgG,KAAK6f,UAAY,EACjB7f,KAAK2lB,iBAAmB,GACxB3lB,KAAK4lB,WAAa,KAGpB,CAAA7rB,IAAA,YAAAC,MAGA,WACE,SAAUgG,KAAK2lB,iBAAiBzrB,SAAU8F,KAAK4lB,WAAW1rB,YAC3DwrB,EAjCuB,GCnBbG,GAAS,WAOpB,SAAAA,EAAajW,GACX,GADiB9V,OAAA+rB,GAAAjoB,EAAAoC,KAAA,uBAAA,2BAJF,kBAET,IAGD4P,EAAY,MAAA,IAAI5Q,MAAM,qCAC3BgB,KAAK8lB,MAAQlW,EACb5P,KAAK+lB,gBAAkBnW,EAAK9D,WACxB9L,KAAK+lB,iBAAiB/lB,KAAKgmB,YA8GhCH,OA7GAtlB,EAAAslB,EAAA,CAAA,CAAA9rB,IAAA,gBAAAkN,IAED,WACE,OAAOjH,KAAKimB,iBACb,CAAAlsB,IAAA,YAAAC,MAED,WACE,IAAMksB,EAAWlmB,KAAK8lB,MAAMha,WAAa9L,KAAK+lB,gBACxCI,EAAiBhe,KAAKiX,IAAI,EAAGpf,KAAK+lB,iBACxC,GAAuB,IAAnBI,EAA4B,MAAA,IAAInnB,MAAM,sBAEpConB,IAAAA,EAAe,IAAI5P,WAAW,GACpC4P,EAAatO,IAAI9X,KAAK8lB,MAAMO,SAASH,EAAUA,EAAWC,IAE1DnmB,KAAKsmB,MAAQ,IAAIC,SAASH,EAAaxa,QAAQ4a,UAAU,GACzDxmB,KAAKimB,eAAkC,EAAjBE,EACtBnmB,KAAK+lB,iBAAmBI,IACzB,CAAApsB,IAAA,WAAAC,MAED,SAAUysB,GACJ,GAAAzmB,KAAKimB,eAAiBQ,EACxBzmB,KAAKsmB,QAAUG,EACfzmB,KAAKimB,gBAAkBQ,MAClB,CACLA,GAASzmB,KAAKimB,eACd,IAAMS,EAAYve,KAAKwe,MAAMF,EAAQ,GACrCA,GAAsB,EAAZC,EACV1mB,KAAK+lB,iBAAmBW,EACxB1mB,KAAKgmB,YACLhmB,KAAKsmB,QAAUG,EACfzmB,KAAKimB,gBAAkBQ,KAE1B,CAAA1sB,IAAA,WAAAC,MAED,SAAUmlB,GACR,GAAIA,EAAO,GACH,MAAA,IAAIngB,MAAM,iCAGlB,IAAI4nB,EAAOze,KAAKiX,IAAIpf,KAAKimB,eAAgB9G,GACnCnc,EAAMhD,KAAKsmB,QAAW,GAAKM,EAU7BA,OARJ5mB,KAAKimB,gBAAkBW,EACnB5mB,KAAKimB,eAAiB,EACxBjmB,KAAKsmB,QAAUM,EACN5mB,KAAK+lB,gBAAkB,GAChC/lB,KAAKgmB,aAGPY,EAAOzH,EAAOyH,GACH,GAAK5mB,KAAKimB,eACXjjB,GAAO4jB,EAAQ5mB,KAAK6mB,SAASD,GAEhC5jB,IACR,CAAAjJ,IAAA,SAAAC,MAED,WACM8sB,IAAAA,EACJ,IACEA,EAAmB,EACnBA,EAAmB9mB,KAAKimB,iBACtBa,EAEF,GAAyD,IAApD9mB,KAAKsmB,MAAS,aAAeQ,GAGzBA,OAFP9mB,KAAKsmB,QAAUQ,EACf9mB,KAAKimB,gBAAkBa,EAChBA,EAIJA,OADP9mB,KAAKgmB,YACEc,EAAmB9mB,KAAK+mB,WAChC,CAAAhtB,IAAA,UAAAC,MAED,WACEgG,KAAKgnB,SAAS,EAAIhnB,KAAK+mB,YACxB,CAAAhtB,IAAA,UAAAC,MAED,WACQitB,IAAAA,EAAMjnB,KAAK+mB,SACjB,OAAO/mB,KAAK6mB,SAASI,EAAM,GAAK,IACjC,CAAAltB,IAAA,SAAAC,MAED,WACQgJ,IAAAA,EAAMhD,KAAKknB,UACjB,OAAI,EAAIlkB,EACE,EAAIA,IAAS,MAEVA,IAAQ,KACtB,CAAAjJ,IAAA,WAAAC,MAED,WACS,OAAqB,IAArBgG,KAAK6mB,SAAS,KACtB,CAAA9sB,IAAA,YAAAC,MAED,WACS,OAAAgG,KAAK6mB,SAAS,KACtB,CAAA9sB,IAAA,kBAAAC,MAED,SAAiBysB,GAIf,IAHA,IAAIU,EAAY,EACZC,EAAY,EAEPvU,EAAI,EAAGA,EAAI4T,EAAO5T,IACP,IAAduU,IAEWD,GAAAA,EADAnnB,KAAKqnB,SACoB,KAAO,KAEnCD,EAAc,IAAdA,EAAkBD,EAAYC,MAE7CvB,EAzHmB,GCAThmB,GAAM,WACjB,SAAAA,EAAaC,GAAMhG,OAAA+F,GACjBG,KAAKF,KAAOA,GAAQ,GACpBE,KAAKC,QAAOC,IAAAA,OAAOF,KAAKF,KAAO,KAgBhCD,OAfAU,EAAAV,EAAA,CAAA,CAAA9F,IAAA,OAAAC,MAED,WAAewG,IAAAA,EACb,IAAIX,EAAOkB,SAAX,CAA2B,IAAA,IAAAN,EAAArF,UAAAlB,OADpBwG,EAAIC,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAxF,UAAAwF,IAEXJ,EAAAQ,SAAQU,KAAIZ,MAAAN,EAAA,CAACR,KAAKC,SAAOC,OAAKQ,QAC/B,CAAA,CAAA3G,IAAA,SAAAC,MAID,WACE6F,EAAOkB,UAAW,IACnB,CAAAhH,IAAA,UAAAC,MAED,WACE6F,EAAOkB,UAAW,MACnBlB,EAnBgB,GAANA,EAAAA,GAAM,YAWC,GCXpB,IAAaynB,GAAI,WAAA,SAAAA,IAAAxtB,OAAAwtB,GAqEdA,OArEcA,EAAAA,EAAA,KAAA,CAAA,CAAAvtB,IAAA,SAAAC,MAMf,SAAeutB,GAMb,IALA,IAAMC,EAAM,GACNC,EAAQF,EACV7sB,EAAI,EACFR,EAASqtB,EAAWrtB,OAEnBQ,EAAIR,GACLutB,GAAAA,EAAM/sB,GAAK,IACb8sB,EAAIzsB,KAAK2sB,OAAOC,aAAaF,EAAM/sB,OACjCA,MAFA+sB,IAIOA,EAAM/sB,GAAK,UAEX+sB,GAAAA,EAAM/sB,GAAK,KACpB,GAAI4sB,EAAKM,mBAAmBH,EAAO/sB,EAAG,GAAI,CACxC,IAAMmtB,GAAmB,GAAXJ,EAAM/sB,KAAc,EAAoB,GAAf+sB,EAAM/sB,EAAI,GACjD,GAAImtB,GAAQ,IAAM,CAChBL,EAAIzsB,KAAK2sB,OAAOC,aAAoB,MAAPE,IAC7BntB,GAAK,EACL,gBAGL,GAAU+sB,EAAM/sB,GAAK,KACpB,GAAI4sB,EAAKM,mBAAmBH,EAAO/sB,EAAG,GAAI,CACxC,IAAMmtB,GAAmB,GAAXJ,EAAM/sB,KAAa,IAAqB,GAAf+sB,EAAM/sB,EAAI,KAAc,EAAmB,GAAf+sB,EAAM/sB,EAAI,GAC7E,GAAImtB,GAAQ,MAA6B,QAAZ,MAAPA,GAA2B,CAC/CL,EAAIzsB,KAAK2sB,OAAOC,aAAoB,MAAPE,IAC7BntB,GAAK,EACL,gBAGL,GAAU+sB,EAAM/sB,GAAK,KAChB4sB,EAAKM,mBAAmBH,EAAO/sB,EAAG,GAAI,CACxC,IAAImtB,GAAmB,EAAXJ,EAAM/sB,KAAa,IAAqB,GAAf+sB,EAAM/sB,EAAI,KAAc,IACnC,GAAf+sB,EAAM/sB,EAAI,KAAc,EAAoB,GAAf+sB,EAAM/sB,EAAI,GAC9CmtB,GAAAA,EAAO,OAAWA,EAAO,QAAU,CAC7BC,GAAA,MACRN,EAAIzsB,KAAK2sB,OAAOC,aAAcE,IAAS,GAAM,QAC7CL,EAAIzsB,KAAK2sB,OAAOC,aAAqB,KAAPE,EAAgB,QAC9CntB,GAAK,EACL,UAIN8sB,EAAIzsB,KAAK2sB,OAAOC,aAAa,UAC3BjtB,EAGG8sB,OAAAA,EAAI9kB,KAAK,MACjB,CAAA3I,IAAA,qBAAAC,MAED,SAA2ButB,EAAYntB,EAAO2tB,GAC5C,IAAMC,EAAQT,EACVntB,GAAAA,EAAQ2tB,EAAcC,EAAM9tB,OAAQ,CACtC,KAAO6tB,KACL,GAAgC,MAAV,IAAjBC,IAAQ5tB,IACJ,OAAA,EAGJ,OAAA,EAEA,OAAA,MAEVktB,EArEc,GCAJtrB,GAA8B,oBAAXC,OAE1BgsB,GAAKjsB,IAAaksB,UAAUC,UAAUC,oBAG/BC,GAAWrsB,IAAa,gCAAgCmJ,KAAK8iB,IAC7DK,GAAYtsB,IAAaisB,GAAGnkB,SAAS,WACrCykB,GAAYvsB,IAAaisB,GAAGnkB,SAAS,WCD3C,SAASoZ,KAA0B,IAAA,IAAAzc,EAAArF,UAAAlB,OAALijB,EAAGxc,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAHuc,EAAGvc,GAAAxF,UAAAwF,GAChCuc,EAAAA,EAAI3N,OAAOC,SACjB,IAAMG,EAAO,IAAI4G,WAAW2G,EAAIniB,QAAO,SAACsR,EAAGpR,GAAC,OAAKoR,EAAIpR,EAAE4Q,aAAY,IAC/DsR,EAAU,EAKPxN,OAJHrI,EAAAA,SAAQ,SAAC8V,GACNvF,EAAAA,IAAIuF,EAAGD,GACZA,GAAWC,EAAEvR,cAER8D,EAaF,SAAS4Y,GAAW5Y,GAAMlV,IAAAA,EAACU,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAQwU,EAAKlV,IAAM,KAAO,IAAMkV,EAAKlV,EAAI,IAAM,KAAOkV,EAAKlV,EAAI,IAAM,IAAMkV,EAAKlV,EAAI,IAAM,GAOrF,SAAS+tB,GAAaC,GAG3B,IAFA,IACIC,EADA7H,EAAQ,QAEHpmB,EAAI,EAAGA,EAAI,EAAGA,KACjBguB,EAAAA,EAAOhuB,GAAG8I,SAAS,KACjBtJ,OAAS,IAAIgG,EAAAA,IAAAA,OAAOyoB,IACjBA,GAAAA,EAEJ7H,OAAAA,EAiBF,SAAS8H,GAAO3tB,GACrB,IAAK0F,MAAM8G,QAAQxM,GAAI,CAGrB,IAFA,IAAMkiB,EAAM,GACRnjB,EAAQ,GACHU,EAAI,EAAGA,EAAIO,EAAEf,OAAQQ,IACxBA,EAAI,IACEO,EAAAA,EAAEP,EAAI,GAAKO,EAAEP,GACrByiB,EAAIpiB,KAAKyJ,SAASxK,EAAO,KACjBA,EAAA,IAGLmjB,OAAAA,EAEFliB,OAAAA,EAAEkH,KAAI,SAAAxG,GAAiB6I,OAAAA,SAAS7I,EAAM,OCvE/C,IAAaktB,GAAI,WAAA,SAAAA,IAAA/uB,OAAA+uB,GA2IdA,OA3IcA,EAAAA,EAAA,KAAA,CAAA,CAAA9uB,IAAA,cAAAC,MACf,SAAoB4V,GAIXA,IAHP,IAAM+C,EAAM/C,EAAK1V,OACbE,EAAQ,EACRD,EAAM,EACa,OAAhByV,EAAKxV,SAAmCiB,IAAhBuU,EAAKxV,IAAwC,IAAhBwV,EAAKxV,IAC/DA,IAKF,IAFAD,IADAC,EACc,IAEHuY,EAAK,MAAO,GAIvB,IAFA,IAAM+O,EAAQ,GAEPvnB,EAAMwY,GACX,OAAQ/C,EAAKzV,IACN,KAAA,EACCyV,GAAkB,IAAlBA,EAAKzV,EAAM,GAAU,CAChBA,GAAA,EACP,MACSyV,GAAkB,IAAlBA,EAAKzV,EAAM,GAAU,CAC9BA,IACA,MAGEC,IAAUD,EAAM,GAAGunB,EAAM3mB,KAAK6U,EAAKyW,SAASjsB,EAAOD,EAAM,IAE1D,GACDA,UACqB,IAAdyV,EAAKzV,IAAcA,EAAMwY,GAElCxY,GADAC,EAAQD,EAAM,GACA,EACd,MACG,KAAA,EACH,GAAsB,IAAlByV,EAAKzV,EAAM,IAA8B,IAAlByV,EAAKzV,EAAM,GAAU,CACvCA,GAAA,EACP,MAEEC,IAAUD,EAAM,GAAGunB,EAAM3mB,KAAK6U,EAAKyW,SAASjsB,EAAOD,EAAM,IAE7DA,GADAC,EAAQD,EAAM,GACA,EACd,MAAA,QAEOA,GAAA,EAONunB,OAFHtnB,EAAQuY,GAAK+O,EAAM3mB,KAAK6U,EAAKyW,SAASjsB,IAEnCsnB,IACR,CAAA3nB,IAAA,YAAAC,MAED,SAAkB4V,GAAMuP,IAAAA,EAAI/jB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,KAAIwU,EAAK1V,OAAS,GAAlB,CAMQ4uB,IALR,IAII5uB,EAJE6uB,EAAUnZ,EAAK1V,OACfwnB,EAAQ,GAEVoH,EAAS,EAELA,EAAS3J,EAAQ4J,GAKvB,GAJSP,EAAAA,GAAU5Y,EAAMkZ,GACZ,IAAT3J,IAAwBjlB,KAAA,GAClBilB,GAAAA,EAELjlB,EAAL,CACI4uB,GAAAA,EAAS5uB,EAAS6uB,EACpB,MAGFrH,EAAM3mB,KAAK6U,EAAKyW,SAASyC,EAAQA,EAAS5uB,IAChCA,GAAAA,EAGLwnB,OAAAA,KACR,CAAA3nB,IAAA,WAAAC,MAED,SAAiBgvB,EAAMC,GAOdD,IANP,IAAMrW,EAAMqW,EAAK9uB,OACbQ,EAAIuuB,EAAS,EAAI,EACjB9qB,EAAO,EACPghB,EAAO,EACP+J,EAAO,GAEQ,MAAZF,EAAKtuB,IACFyD,GAAA,IACRzD,IAKKsuB,IAFP7qB,GAAQ6qB,EAAKtuB,KAEM,MAAZsuB,EAAKtuB,IACFykB,GAAA,IACRzkB,IAIF,GAFAykB,GAAQ6J,EAAKtuB,KAEA,IAATyD,GAAcwU,EAAMjY,EAAI,GAC1B,IAAA,IAASmY,EAAI,EAAGA,EAAI,GAAIA,IACdmW,GAAAA,EAAKtuB,GAAG8I,SAAS,IACzB9I,IAIG,MAAA,CACL4D,QAAS0qB,EAAK3C,SAAS3rB,EAAGA,EAAIykB,GAAOhhB,KAAAA,EAAMghB,KAAAA,EAAM+J,KAAAA,KAEpD,CAAAnvB,IAAA,YAAAC,MAED,SAAkBmvB,GAKTzuB,IAJP,IAAMR,EAASivB,EAAKrd,WACdsd,EAAoC,GACtC1uB,EAAI,EAEDA,EAAIR,EAAS,GACF,IAAZivB,EAAKzuB,IAA4B,IAAhByuB,EAAKzuB,EAAI,IAA4B,IAAhByuB,EAAKzuB,EAAI,IACfK,EAAAA,KAAKL,EAAI,GAC3CA,GAAK,GAELA,IAIJ,IAAK0uB,EAAkClvB,OAAeivB,OAAAA,EAEhDE,IAAAA,EAAYnvB,EAASkvB,EAAkClvB,OACvDovB,EAAU,IAAI9S,WAAW6S,GAE3BE,EAAc,EAClB,IAAK7uB,EAAI,EAAGA,EAAI2uB,EAAWE,IAAe7uB,IACpC6uB,IAAgBH,EAAkC,KACpDG,IACAH,EAAkC3mB,SAEpC6mB,EAAQ5uB,GAAKyuB,EAAKI,GAGbD,OAAAA,MACRT,EA3Ic,GCCJW,GAAG,WAAA,SAAAA,IAAA1vB,OAAA0vB,GAyMbA,OAzMaA,EAAAA,EAAA,KAAA,CAAA,CAAAzvB,IAAA,qCAAAC,MACd,SAA2C4V,GACzC,KAAIA,EAAK1V,OAAS,GAAlB,CAUA,IATMuvB,IAEFC,EAMAC,EAREF,EAA8B,GAAL,EAAV7Z,EAAK,IAGpBga,EAAS,GACTC,EAAS,GAEXf,EAAS,EACPgB,EAAqB,GAAVla,EAAK,GAEblV,EAAI,EAAGA,EAAIovB,EAAUpvB,IAG5B,GAFAivB,EAAW/Z,EAAKkZ,IAAW,EAAKlZ,EAAKkZ,EAAS,GACpCA,GAAA,EACLa,EAAL,CAEA,IAAM3F,EAAMpU,EAAKyW,SAASyC,EAAQA,EAASa,GACjCA,GAAAA,EACVC,EAAO7uB,KAAKipB,GAEP0F,IACHA,EAAYF,EAAIO,SAASlB,GAAKmB,UAAUhG,KAI5C,IAEIiG,EAFEC,EAAWta,EAAKkZ,GACtBA,IAEA,IAAA,IAASpuB,EAAI,EAAGA,EAAIwvB,EAAUxvB,IAC5BuvB,EAAWra,EAAKkZ,IAAW,EAAKlZ,EAAKkZ,EAAS,GACpCA,GAAA,EACLmB,IACLJ,EAAO9uB,KAAK6U,EAAKyW,SAASyC,EAAQA,EAASmB,IACjCA,GAAAA,GAGL,MAAA,CACLjG,IAAK0F,EACLE,OAAAA,EACAC,OAAAA,EACAJ,YAAAA,MAEH,CAAA1vB,IAAA,WAAAC,MAED,SAAiBgvB,GACTmB,IAAAA,EAAK,IAAItE,GAAUmD,GACzBmB,EAAGC,YAEGC,IAAAA,EAAaF,EAAGC,YAChBE,EAAuBH,EAAGC,YAC1BG,EAAWJ,EAAGC,YACpBD,EAAGK,UAEH,IAAIC,EAAe,IAEjBJ,GAAe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,KAAfA,GACe,KAAfA,GACe,KAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,EACA,CACMK,IAAAA,EAAkBP,EAAGjD,UAMvBiD,GALAO,GAAmB,IAAGD,EAAe,CAAC,EAAG,IAAK,IAAK,KAAKC,IACpC,IAApBA,GAAuBP,EAAGnD,SAAS,GACvCmD,EAAGK,UACHL,EAAGK,UACHL,EAAGnD,SAAS,GACRmD,EAAGQ,WAEL,IADMC,IAAAA,EAAuC,IAApBF,EAAwB,EAAI,GAC5ChwB,EAAI,EAAGA,EAAIkwB,EAAkBlwB,IAChCyvB,EAAGQ,aACDjwB,EAAI,EACNyvB,EAAGU,gBAAgB,IAEnBV,EAAGU,gBAAgB,KAO7BV,EAAGK,UACGM,IAAAA,EAAkBX,EAAGjD,UAC3B,GAAwB,IAApB4D,EACFX,EAAGjD,eACL,GAA+B,IAApB4D,EAAuB,CAChCX,EAAGnD,SAAS,GACZmD,EAAGK,UACHL,EAAGK,UAEH,IADMO,IAAAA,EAAiCZ,EAAGjD,UACjCxsB,EAAI,EAAGA,EAAIqwB,EAAgCrwB,IAClDyvB,EAAGK,UAIPL,EAAGK,UACHL,EAAGnD,SAAS,GACNgE,IAAAA,EAAsBb,EAAGjD,UACzB+D,EAA4Bd,EAAGjD,UAC/BgE,EAAmBf,EAAGtD,SAAS,GACZ,IAArBqE,GAAwBf,EAAGnD,SAAS,GACxCmD,EAAGnD,SAAS,GAEZ,IAYI9C,EACAiH,EACAnK,EACAC,EACAd,EAhBAiL,EAAsB,EACtBC,EAAuB,EACvBC,EAAqB,EACrBC,EAAwB,EAcxBpB,GAZAA,EAAGQ,aACLS,EAAsBjB,EAAGjD,UACzBmE,EAAuBlB,EAAGjD,UAC1BoE,EAAqBnB,EAAGjD,UACxBqE,EAAwBpB,EAAGjD,WAQzBiD,EAAGQ,WAAY,CACbR,GAAAA,EAAGQ,WAEGa,OADerB,EAAGC,aAEnB,KAAA,EAAclG,EAAA,CAAC,EAAG,GAAI,MACtB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,IAAK,IAAK,MAC1B,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MACvB,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MACvB,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MAAA,KACvB,IACHA,EAAW,CACRiG,EAAGC,aAAe,EAAKD,EAAGC,YAC1BD,EAAGC,aAAe,EAAKD,EAAGC,aAoB/BD,GAZAA,EAAGQ,YAAYR,EAAGQ,WAElBR,EAAGQ,aACLR,EAAGtD,SAAS,GACRsD,EAAGQ,YAAYR,EAAGtD,SAAS,KAG7BsD,EAAGQ,aACLR,EAAGjD,UACHiD,EAAGjD,WAGDiD,EAAGQ,WAAY,CACXc,IAAAA,EAAiBtB,EAAGtD,SAAS,IAC7B6E,EAAYvB,EAAGtD,SAAS,IAC9BsE,EAAahB,EAAGQ,WAIhBxK,GAFSuL,EAAAA,IACTzK,EAA0B,EAAjBwK,IAKN,MAAA,CACL3K,MAAO2H,GAAYO,EAAK3C,SAAS,EAAG,IACpCgE,WAAAA,EACAC,qBAAAA,EACAC,SAAAA,EACAE,aAAAA,EACApK,MAAOlY,KAAKwjB,KACkB,IAA3BX,EAAsB,GACrB,GAAKI,EAAsBC,IAE/B/K,QACG,EAAI4K,IAAqBD,EAA4B,GAAK,IAC1DC,EAAmB,EAAI,IACrBI,EAAqBC,GAC1BrH,SAAAA,EACAlD,OAAAA,EACAC,OAAAA,EACAd,IAAAA,EACAgL,WAAAA,OAEH3B,EAzMa,GCDHoC,GAAG,WAAA,SAAAA,IAAA9xB,OAAA8xB,GAsNbA,OAtNaA,EAAAA,EAAA,KAAA,CAAA,CAAA7xB,IAAA,qBAAAC,MAiBd,SAA2B6xB,GAClBD,OAAAA,EAAIE,KAAK/d,QAAQ8d,KACzB,CAAA9xB,IAAA,YAAAC,MAED,SAAkB4V,EAAM0U,GAId5pB,IAHR,IAAMiY,EAAM/C,EAAK1V,OACbQ,EAAI,EAEAA,EAAI,EAAKiY,IACC,MAAZ/C,EAAKlV,IAAwC,MAAV,IAAdkV,EAAKlV,EAAI,MAGlCA,IAGF,KAAIA,GAAKiY,GAAT,CAEA,IAAMoZ,EAAOrxB,EACPsxB,EAAS,GACTC,GAAwC,GAAdrc,EAAKlV,EAAI,MAAe,EAClDwmB,EAAa0K,EAAIE,KAAKG,GAC5B,IAAK/K,EAAY,MAAM,IAAIliB,MAAK,2BAAAkB,OAA4B+rB,IAUpDvxB,IATR,IAIIwxB,EACAC,EALEC,EAA4C,IAAf,IAAdxc,EAAKlV,EAAI,MAAe,GACvC8lB,GAA+B,EAAd5Q,EAAKlV,EAAI,KAAW,GAAqB,IAAdkV,EAAKlV,EAAI,MAAe,EAC1E2xB,EAA0BT,EAAIU,WAAWL,EAAwBzL,EAAc4L,GAAvErsB,EAAMssB,EAANtsB,OAAQ+gB,EAAKuL,EAALvL,MAIZyL,EAAa,EACX3kB,EAAWgkB,EAAIY,iBAAiBtL,GAE9BxmB,EAAI,EAAKiY,GACf,GAAiB,MAAZ/C,EAAKlV,IAAyC,MAAV,IAAdkV,EAAKlV,EAAI,IAApC,CAMA,GAAKiY,EAAMjY,GADXyxB,GAA8B,EAAdvc,EAAKlV,EAAI,KAAc,GAAOkV,EAAKlV,EAAI,IAAM,GAAqB,IAAdkV,EAAKlV,EAAI,KAAc,GAC9D,MAE7BwxB,EAA8C,GAAR,GAAdtc,EAAKlV,EAAI,IACjCsxB,EAAOjxB,KAAK,CACVupB,IAAKA,EAAMiI,EAAa3kB,EACxBgI,KAAMA,EAAKyW,SAAS3rB,EAAI,EAAIwxB,EAAqBxxB,EAAIyxB,KAGvDI,IACA7xB,GAAKyxB,OAdHzxB,IAiBG,MAAA,CACLqxB,KAAAA,EACAjwB,UAAWpB,GAAKiY,OAAMtX,EAAYuU,EAAKyW,SAAS3rB,GAChDsxB,OAAAA,EACAC,uBAAAA,EACA/K,WAAAA,EACAkL,WAAAA,EACA5L,aAAAA,EACAM,MAAAA,EACA/gB,OAAAA,EACA0sB,YAAW,WAAAvsB,OAAaksB,OAE3B,CAAAryB,IAAA,2BAAAC,MAED,SAAiC4V,GAC/B,GAAKA,EAAK1V,OAAV,CACMkyB,IAAAA,EAAaxc,EAAK,KAAO,EACzBqc,GAAqC,EAAVrc,EAAK,KAAc,EAAMA,EAAK,KAAO,EAChE4Q,GAA0B,IAAV5Q,EAAK,MAAe,EACpCsR,EAAa0K,EAAIE,KAAKG,GAE5B,GAAK/K,EAAL,CACAwL,IAAAA,EAA0Bd,EAAIU,WAAWL,EAAwBzL,EAAc4L,GAExE,MAAA,CACLH,uBAAAA,EACA/K,WAAAA,EACAkL,WAAAA,EACA5L,aAAAA,EACAzgB,OAPY2sB,EAAN3sB,OAQN+gB,MARmB4L,EAAL5L,MASd2L,YAAW,WAAAvsB,OAAaksB,QAE3B,CAAAryB,IAAA,mBAAAC,MAED,SAAyB6xB,GAAMhM,IAAAA,EAASzkB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACzC,OAAO,KAAOykB,EAAYgM,IAC3B,CAAA9xB,IAAA,aAAAC,MAED,SAAmB2yB,EAAenM,EAAcoM,GAC9C,IACIR,EACAS,EAFE9sB,EAAS,GAqCR,OAlCHuoB,GACEqE,GAAiB,GACNP,EAAA,EACbS,EAAyBF,EAAgB,IAE5BP,EAAA,EACYO,EAAAA,GAElBpE,IACI6D,EAAA,EACYO,EAAAA,IAEzBP,EAAmC,IAArBQ,GAA+C,IAArBA,EAA0BA,EAAmB,EAC5DD,EAAAA,EAErBA,GAAiB,EACnBE,EAAyBF,EAAgB,EACf,IAAjBnM,IACI4L,EAAA,EACYO,EAAAA,IAI7B5sB,EAAO,GAAKqsB,GAAc,EACnBrsB,EAAA,KAAuB,GAAhB4sB,IAAyB,EAChC5sB,EAAA,IAAsB,EAAhB4sB,IAAyB,EACtC5sB,EAAO,IAAMygB,GAAgB,EACV,IAAf4L,IACKrsB,EAAA,KAAiC,GAAzB8sB,IAAkC,EAC1C9sB,EAAA,IAA+B,EAAzB8sB,IAAkC,EAC/C9sB,EAAO,IAAO,EACdA,EAAO,GAAK,GAGP,CACLA,OAAAA,EACA+gB,MAAK,WAAA5gB,OAAaksB,MAItB,CAAAryB,IAAA,iBAAAC,MACA,SAAuB8mB,EAAON,GACpBM,GACD,cADCA,EACD,CACH,GAAqB,IAAjBN,EACK,OAAA,IAAIhK,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,MACrD,GAAqB,IAAjBgK,EACJ,OAAO,IAAIhK,WAAW,CACpB,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,MAElD,GAAqB,IAAjBgK,EACJ,OAAO,IAAIhK,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,MAER,GAAqB,IAAjBgK,EACG,OAAA,IAAIhK,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,KAEtC,GAAqB,IAAjBgK,EACG,OAAA,IAAIhK,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,KAExD,GAAqB,IAAjBgK,EACJ,OAAO,IAAIhK,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAC5D,EAAM,GAAM,EAAM,UAGtB,CAEA,GAAqB,IAAjBgK,EACF,OAAO,IAAIhK,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,GAAM,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAC/D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,KAER,GAAqB,IAAjBgK,EACJ,OAAO,IAAIhK,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAC7D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,KAER,GAAqB,IAAjBgK,EACJ,OAAO,IAAIhK,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAC7D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,UAKfoV,EAtNa,GAuNfhuB,EAvNYguB,GACG,OAAA,CACZ,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,OCbJ,IAAakB,GAAI,WAAA,SAAAA,IAAAhzB,OAAAgzB,GAuLdA,OAvLcA,EAAAA,EAAA,KAAA,CAAA,CAAA/yB,IAAA,sCAAAC,MACf,SAA4C4V,GAAMwU,IAAAA,EAAIhpB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACvD,KAAIwU,EAAK1V,OAAS,IAAlB,CACAkqB,EAAOA,GAAQ,GAef,IAdMqF,IAEFsD,EACArD,EAQAsD,EACAC,EACAC,EAbEzD,EAA+B,GAAL,EAAX7Z,EAAK,KAIpBga,EAAS,GACTC,EAAS,GACTsD,EAAS,GAEXrE,EAAS,GACPsE,EAAcxd,EAAK,IAKhBlV,EAAI,EAAGA,EAAI0yB,EAAa1yB,IAAK,CACpCsyB,EAA6B,GAAfpd,EAAKkZ,GACnBmE,EAAYrd,EAAKkZ,EAAS,IAAM,EAAKlZ,EAAKkZ,EAAS,GAEzCA,GAAA,EAEV,IAAA,IAASjW,EAAI,EAAGA,EAAIoa,EAAUpa,IAG5B,GAFAqa,EAAWtd,EAAKkZ,IAAW,EAAKlZ,EAAKkZ,EAAS,GACpCA,GAAA,EACLoE,EAAL,CACQF,OAAAA,GACD,KAAA,GACH,IAAM/I,EAAMrU,EAAKyW,SAASyC,EAAQA,EAASoE,GACtCH,IAAWA,EAAYD,EAAKO,SAASxE,GAAKmB,UAAU/F,GAAMG,IAC/D+I,EAAOpyB,KAAKkpB,GAEZ,MACG,KAAA,GACH,IAAMD,EAAMpU,EAAKyW,SAASyC,EAAQA,EAASoE,GACtCxD,IAAWA,EAAYoD,EAAK/C,SAASlB,GAAKmB,UAAUhG,GAAMI,IAC/DwF,EAAO7uB,KAAKipB,GAEZ,MACG,KAAA,GACH6F,EAAO9uB,KAAK6U,EAAKyW,SAASyC,EAAQA,EAASoE,IAKrCA,GAAAA,GAIP,MAAA,CACL9I,KAAAA,EACAJ,IAAK0F,EACLE,OAAAA,EACAC,OAAAA,EACAsD,OAAAA,EACA1D,YAAAA,MAEH,CAAA1vB,IAAA,WAAAC,MAED,SAAiBgvB,EAAM5E,GACrBA,EAAOA,GAAQ,GACT+F,IAAAA,EAAK,IAAItE,GAAUmD,GACzBmB,EAAGC,YACHD,EAAGC,YAEHD,EAAGtD,SAAS,IACNyG,IAAAA,EAAwBnD,EAAGtD,SAAS,GAKnCzC,OAJPA,EAAKmJ,kBAAoBplB,KAAKC,IAAIgc,EAAKmJ,mBAAqB,EAAGD,EAAwB,GACvFnD,EAAGtD,SAAS,IACZiG,EAAKU,uBAAuBrD,EAAImD,EAAuBlJ,GAEhDA,IACR,CAAArqB,IAAA,WAAAC,MAED,SAAiBgvB,GAAM5E,IAAAA,EAAIhpB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC5BgpB,EAAOA,GAAQ,GACT+F,IAAAA,EAAK,IAAItE,GAAUmD,GACzBmB,EAAGC,YACHD,EAAGC,YAEHD,EAAGtD,SAAS,GACN4G,IAAAA,EAAwBtD,EAAGtD,SAAS,GAC1CzC,EAAKmJ,kBAAoBplB,KAAKC,IAAIqlB,EAAwB,EAAGrJ,EAAKmJ,mBAAqB,GAClFG,EAAAA,iBAAmBvD,EAAGtD,SAAS,GACpCiG,EAAKU,uBAAuBrD,EAAIsD,EAAuBrJ,GAEvD+F,EAAGjD,UAEH,IAAMwD,EAAkBtG,EAAKsG,gBAAkBP,EAAGjD,UAC9CuD,EAAe,IACfC,GAAmB,IAAGD,EAAe,CAAC,EAAG,IAAK,IAAK,KAAKC,IAE5D,IAAIiD,EAA0B,EACN,IAApBjD,IACwBP,EAAAA,EAAGtD,SAAS,IAGpCxG,IAKAuN,EACAC,EACAC,EACAC,EARA1N,EAAQ8J,EAAGjD,UACX5G,EAAS6J,EAAGjD,UAEV8G,EAAwB7D,EAAGtD,SAAS,GAgB1C,GAV8B,IAA1BmH,IACFJ,EAAoBzD,EAAGjD,UACvB2G,EAAqB1D,EAAGjD,UACxB4G,EAAmB3D,EAAGjD,UACtB6G,EAAsB5D,EAAGjD,WAGtB+G,EAAAA,mBAAqB9D,EAAGjD,UACxBgH,EAAAA,qBAAuB/D,EAAGjD,UAED,IAA1B8G,EAA6B,CAC/B,IAAMG,EAAmC,IAApBzD,GAA+C,IAApBA,GAAwD,IAA5BiD,EAAsC,EAAJ,EACxGS,EAAmC,IAApB1D,GAAuD,IAA5BiD,EAAkC,EAAI,EACtFtN,GAAU8N,GAAaN,EAAqBD,GAC5CtN,GAAW8N,GAAcL,EAAsBD,GAG1C,MAAA,CACLhN,MAAO,kBACPT,MAAAA,EACAC,OAAAA,EACAmK,aAAAA,EACArG,KAAAA,KAEH,CAAArqB,IAAA,yBAAAC,MAED,SAA+BmwB,EAAIkE,EAAoBjK,GAC/CkK,IAAAA,EAAkBlK,EAAKkK,iBAAmB,EAC3CC,EAAAA,oBAAsBpE,EAAGtD,SAAS,GACvCzC,EAAKkK,gBAAkBnmB,KAAKC,IAAI+hB,EAAGtD,SAAS,GAAIyH,GAC3CE,EAAAA,kBAAoBrmB,KAAKC,IAAI+hB,EAAGtD,SAAS,GAAIzC,EAAKoK,mBAAqB,GACvEC,EAAAA,iCAAmCtE,EAAGtD,SAAS,IAC/C6H,EAAAA,gCAAkC,CAACvE,EAAGtD,SAAS,GAAIsD,EAAGtD,SAAS,GAAIsD,EAAGtD,SAAS,GAAIsD,EAAGtD,SAAS,GAAIsD,EAAGtD,SAAS,GAAIsD,EAAGtD,SAAS,IAC9H8H,IAAAA,EAAkBxE,EAAGtD,SAAS,GAChCyH,EAAkBlK,EAAKkK,gBACzBlK,EAAKuK,gBAAkBA,EAEvBvK,EAAKuK,gBAAkBxmB,KAAKC,IAAIumB,EAAiBvK,EAAKuK,iBAAmB,GAG3E,IAAMC,EAA6B,GAC7BC,EAA2B,GAE7BR,GAAAA,EAAqBlE,EAAG2E,cAC1B,MAAM,IAAI9vB,MAAK,kCAAAkB,OAAmCmuB,IAGpD,IAAA,IAASxb,EAAI,EAAGA,EAAIwb,EAAoBxb,IACXA,EAAAA,GAAKsX,EAAGtD,SAAS,GACnBhU,EAAAA,GAAKsX,EAAGtD,SAAS,GAGxCwH,EAAqB,GACpBxH,EAAAA,SAAoC,GAA1B,EAAIwH,IAGnB,IAAA,IAAS3zB,EAAI,EAAGA,EAAI2zB,EAAoB3zB,IACA,IAAlCk0B,EAA2Bl0B,KAC7ByvB,EAAGtD,SAAS,GACZsD,EAAGtD,SAAS,GACZsD,EAAGtD,SAAS,GAEZsD,EAAGtD,SAAS,IACZsD,EAAGtD,SAAS,IAEZsD,EAAGtD,SAAS,GAEZsD,EAAGtD,SAAS,IACZsD,EAAGtD,SAAS,IACZsD,EAAGtD,SAAS,KAEsB,IAAhCgI,EAAyBn0B,IAC3ByvB,EAAGtD,SAAS,OAGjBiG,EAvLc,GCGXiC,GAA4B,IAC5BC,GAAmC,IAM5BC,GAAQ,WACnBA,SAAAA,EAAalM,EAAYmM,EAAYC,GAAer1B,OAAAm1B,GAClDjvB,KAAK+iB,WAAaA,EAClB/iB,KAAKkvB,WAAaA,EAClBlvB,KAAKmvB,cAAgBA,EAErBnvB,KAAKovB,UAAW,EAChBpvB,KAAKqvB,gBAAiB,EAEtBrvB,KAAKsvB,mBAAgBj0B,EACrB2E,KAAKuvB,mBAAgBl0B,EAErB2E,KAAKwvB,qBAAuB,EAC5BxvB,KAAKyvB,qBAAuB,EAC5BzvB,KAAK0vB,mBAAqB,EAI1B1vB,KAAK2vB,sBAAuB,EAE5B3vB,KAAK4vB,2BAA4BC,EAAAA,EACjC7vB,KAAK8vB,+BAAgCD,EAAAA,EACrC7vB,KAAK+vB,gCAAiCF,EAAAA,EAEtC7vB,KAAKgwB,gCAAiCH,EAAAA,EACtC7vB,KAAKiwB,qCAAsCJ,EAAAA,EA8W5CZ,OA3WD1uB,EAAA0uB,EAAA,CAAA,CAAAl1B,IAAA,MAAAC,MAKA,WAA8D,IAAAwE,EAAAwB,KAAzDiM,EAAS7Q,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAG80B,EAAa90B,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,IAAAA,UAAA,GAAU+0B,IAAU/0B,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,KAAAA,UAAA,GACvC+M,EAAAA,KAAKwI,MAAkB,IAAZ1E,GACvB,IAAM8W,EAAa/iB,KAAK+iB,WAClBmM,EAAalvB,KAAKkvB,YAEpBgB,GAAkBC,IACpBnwB,KAAKowB,iBAAmB,KACxBpwB,KAAKsvB,mBAAgBj0B,EACrB2E,KAAKuvB,mBAAgBl0B,EACrB2E,KAAKwvB,qBAAuB,EAC5BxvB,KAAKyvB,qBAAuB,EAC5BzvB,KAAK4vB,2BAA4BC,EAAAA,EACjC7vB,KAAK8vB,+BAAgCD,EAAAA,EACrC7vB,KAAK+vB,gCAAiCF,EAAAA,EACtC7vB,KAAKgwB,gCAAiCH,EAAAA,EACtC7vB,KAAKiwB,qCAAsCJ,EAAAA,GAGzCK,IAAkBC,IACpBnwB,KAAKqvB,gBAAiB,GAGnBrvB,KAAKqvB,gBACHgB,KAAAA,kBAAkBnB,EAAYnM,IAGhCoN,GAAclkB,IACZqjB,KAAAA,cAAgBtvB,KAAKuvB,cAAgBtjB,GAG5C,IAAMqkB,EAAetwB,KAAKqvB,iBACvBrvB,KAAKyvB,uBAAyBzvB,KAAK+iB,WAAWwN,WAC9CvwB,KAAKwvB,uBAAyBxvB,KAAKkvB,WAAWqB,SAY7C,GAVAD,GACFtwB,KAAKwwB,iCAGPxwB,KAAKywB,UAAUvB,GAEflvB,KAAK2vB,sBAAuB,EAE5B3vB,KAAK0wB,UAAU3N,GAEX/iB,KAAKmvB,cAAcoB,QAAS,CACxB1Q,IAAAA,EAAY7f,KAAKmvB,cAActP,UACrC7f,KAAKmvB,cAAcvJ,WAAWre,SAAQ,SAAAiU,GAClC8I,EAAAA,IAAM9I,EAAEqJ,UAAYrmB,EAAK4wB,SAC3B5T,EAAE/E,KAAOtO,KAAKC,IAAI,EAAGoT,EAAE8I,KAAOzE,KAEhC7f,KAAKmvB,cAAcxJ,iBAAiBpe,SAAQ,SAAAiU,GACxC8I,EAAAA,IAAM9I,EAAEqJ,UAAYrmB,EAAK4wB,SAC3B5T,EAAE/E,KAAOtO,KAAKC,IAAI,EAAGoT,EAAE8I,KAAOzE,KAI9BkD,EAAW3B,QAAQlnB,SACV0pB,EAAAA,oBAAsBb,EAAW3B,QAAQ,GAAGiD,KAErD6K,EAAW9N,QAAQlnB,SACrBg1B,EAAWtL,oBAAsBsL,EAAW9N,QAAQ,GAAGkD,IAAM4K,EAAWrP,UAAY,OAEvF,CAAA9lB,IAAA,YAAAC,MAED,SAAW+oB,GAAY,IAAAxd,EAAAvF,KACfohB,EAAU2B,EAAW3B,QAE3B,GAAKA,EAAQlnB,OAAb,CAQIy2B,IAAAA,EACA5N,GAPIxb,EAAAA,SAAQ,SAAAoD,GACdA,EAAE0Z,KAAO9e,EAAK6pB,SACdzkB,EAAE2Z,KAAO/e,EAAK6pB,SACVzkB,EAAEoa,WAAUxf,EAAKoqB,sBAAuB,MAI1C5M,EAAW/B,QAAU+B,EAAW9B,OAClC0P,EAAuB5N,EAAWlD,WAAakD,EAAW9B,OAAS8B,EAAW/B,aAChF,GAAW+B,EAAW7oB,OAAS,EAAG,CAC1BqqB,IAAAA,EAAQxB,EAAW3B,QAAQ,GAC3BvmB,EAAOkoB,EAAW3B,QAAQA,EAAQlnB,OAAS,GAC1BiO,EAAAA,KAAKwe,OAAO9rB,EAAKwpB,IAAME,EAAMF,MAAQjD,EAAQlnB,OAAS,SAE7Ey2B,EAAuB3wB,KAAK0vB,oBAAsB,GAG9CkB,IAAAA,EAAaxP,EAAQyP,MAQ3B,GANI7wB,KAAKowB,kBACCU,EAAAA,QAAQ9wB,KAAKowB,kBAGvBpwB,KAAKowB,iBAAmBQ,EAEnBxP,EAAQlnB,OAAb,CAEI,QAAuBmB,IAAvB2E,KAAKuvB,cAA6B,CACpC,IAAMwB,EAAQ3P,EAAQ,GACtBphB,KAAKuvB,cAAgBwB,EAAM1M,IAG7B,IAAM1R,EAAMyO,EAAQlnB,OAChBwqB,EAAiB,EACfsM,EAAc5P,EAAQ,GACtB6P,EAASjxB,KAAKuvB,cAAgByB,EAAY3M,IAEhD,GAAIlc,KAAK+oB,IAAID,GA/IqB,IA+IoB,CAEyDE,IAAAA,EAA7G,GAAIhpB,KAAK+oB,IAAIF,EAAY3M,IAAMrkB,KAAKiwB,qCAhJD,IAiJjCjwB,KAAKiwB,oCAAsCe,EAAY3M,IAEvDtB,EAAWoB,SAASppB,KAAK,CACvBoD,KAAMslB,GACN2N,QAASpxB,KAAKuvB,cACd8B,eAAgBL,EAAY3M,IAC5BiN,cAAyB,QAAZH,EAAE/P,EAAQ,UAAE,IAAA+P,OAAA,EAAVA,EAAY9M,IAC3BK,eAAgBuM,IAKhBjxB,KAAKyvB,sBA5JmB,GA6J1BzvB,KAAKuvB,cAAgByB,EAAY3M,IACjCrkB,KAAKyvB,qBAAuB,IAG5BuB,EAAY3M,KAAO4M,EACnBD,EAAY1M,KAAO2M,EACdjxB,KAAKkvB,WAAWqB,UACnBvwB,KAAKyvB,qBAAuB,IAKlC,IAAA,IAAS/0B,EAAI,EAAGA,EAAIiY,EAAKjY,IAAK,CACtB2pB,IAAAA,EAAMjD,EAAQ1mB,GAAG2pB,IACjBkN,EAAanQ,EAAQ1mB,EAAI,KAG7BgqB,EADEhqB,EAAIiY,EAAM,EACK4e,EAAWlN,IAAMA,EACzBuM,EACQA,EAAWvM,IAAMA,EAEjBsM,GArLQ,KAwLsBjM,EAAiB,KAC3D+K,KAAAA,uBAEDtnB,KAAK+oB,IAAI7M,EAAMrkB,KAAKgwB,gCAzLS,MA0L/BhwB,KAAKgwB,+BAAiC3L,EACtCtB,EAAWoB,SAASppB,KAAK,CACvBoD,KAAMslB,GACNhN,KAAM4N,EAAMtB,EAAWlD,UACvBwE,IAAAA,EACAS,UAAW1D,EAAQ1mB,GAAGoqB,UACtBsM,QAASpxB,KAAKuvB,cACd7K,eAAAA,EACA8M,kBAAmBb,KAINA,EAAAA,GAGnBvP,EAAQ1mB,GAAGkN,SAAW8c,EACtB1kB,KAAKuvB,eAAiB7K,EACtB1kB,KAAK0vB,mBAAqBhL,OAE7B,CAAA3qB,IAAA,YAAAC,MAED,SAAWk1B,GAAY,IAAA9nB,EAAApH,KACfohB,EAAU8N,EAAW9N,QACtBA,EAAQlnB,SAGLqN,EAAAA,SAAQ,SAAAoD,GACdA,EAAE0Z,IAAM1Z,EAAE2Z,KAAOld,EAAKgoB,YAGnBqC,KAAAA,oBAAoBvC,EAAY9N,EAAS,QAC/C,CAAArnB,IAAA,oBAAAC,MAED,SAAmBk1B,EAAYnM,GAC7B,IAAM2O,EAAaxC,EAAW9N,QACxBuQ,EAAa5O,EAAW3B,QAE9B,IAAKsQ,EAAWx3B,SAAWy3B,EAAWz3B,OAC7B,OAAA,EAGT,IAAI03B,EAAe/B,EAAAA,EACfgC,EAAehC,EAAAA,EAEf6B,EAAWx3B,SACF43B,EAAAA,QAAUF,EAAeF,EAAW,GAAGpN,KAGhDqN,EAAWz3B,SACF43B,EAAAA,QAAUD,EAAeF,EAAW,GAAGtN,KAGpDrkB,KAAKovB,SAAWjnB,KAAKiX,IAAIwS,EAAcC,GAEvC,IAAME,EAAQF,EAAeD,EAatB,OAXHvhB,OAAO2hB,SAASD,IAAU5pB,KAAK+oB,IAAIa,GAxPV,KAyP3BhP,EAAWoB,SAASppB,KAAK,CACvBoD,KAAMslB,GACNoO,aAAAA,EACAD,aAAAA,EACAE,QAAS9xB,KAAKovB,SACd2C,MAAAA,IAIJ/xB,KAAKqvB,gBAAiB,GACf,IACR,CAAAt1B,IAAA,iCAAAC,MAED,WAeegG,KAAKqwB,kBAAkBrwB,KAAKkvB,WAAYlvB,KAAK+iB,cAKrD/iB,KAAKkvB,WAAWqB,QAETvwB,KAAK+iB,WAAWwN,QAG1BvwB,KAAKovB,UAAYjnB,KAAKiX,IAAIpf,KAAKsvB,cAAetvB,KAAKuvB,eAFnDvvB,KAAKovB,UAAYpvB,KAAKsvB,cAFtBtvB,KAAKovB,UAAYpvB,KAAKuvB,cAMxBvvB,KAAKyvB,qBAAuB,EAC5BzvB,KAAKwvB,qBAAuB,KAC7B,CAAAz1B,IAAA,sBAAAC,MAED,SAAqBk1B,EAAY9N,EAASvB,GACnCqP,EAAWxK,iBACdwK,EAAWxK,eAAiBwK,EAAWnO,YAAcyC,GACjDoI,GAAIY,iBAAiB0C,EAAWrP,UAAWA,GAC3C7f,KAAKiyB,iBAAiB/C,IAE5B,IAAMsC,EAAoBtC,EAAWxK,eAE/BwN,EAA6BhD,EAAWnO,YAAcyC,GAAqB,KAAOgO,EAAoBtC,EAAWrP,UAAY,IAE/H,QAAuBxkB,IAAvB2E,KAAKsvB,cAA6B,CACpC,IAAMyB,EAAQ3P,EAAQ,GACtBphB,KAAKsvB,cAAgByB,EAAMzM,IAG7B,IAAA,IAAS5pB,EAAI,EAAGA,EAAI0mB,EAAQlnB,OAAQQ,IAAK,CACvC,IAAIy3B,EAAUnyB,KAAKsvB,cACbjO,EAASD,EAAQ1mB,GACnBq3B,EAAQ1Q,EAAOiD,IAAM6N,EAYrB,GATM,IAANz3B,GAAWsF,KAAKwvB,sBAnTQ,GAmT6CxvB,KAAK2vB,uBAClEwC,EAAAnyB,KAAKsvB,cAAgBjO,EAAOgD,IAC9B0N,EAAA,EACR/xB,KAAKwvB,qBAAuB,IAMzBxvB,KAAKwvB,sBAAwBuC,GAlUE,EAkU2CP,GAAqBO,GAAShD,KAA8B1G,GAAU,CAC7I+J,IAAAA,EAAcpyB,KAAKqyB,gBAAgBnD,IAAe9N,EAAQ,GAAGxR,KAAKyW,WAClEI,EAAQte,KAAKwe,MAAMoL,EAAQP,GAE7BrpB,KAAK+oB,IAAI7P,EAAOiD,IAAMtkB,KAAK4vB,2BAA6BZ,KAC1DhvB,KAAK4vB,0BAA4BvO,EAAOiD,IACxC4K,EAAW/K,SAASppB,KAAK,CACvBoD,KAAMslB,GACNa,IAAKjD,EAAOiD,IACZO,UAAWxD,EAAOwD,UAClB4B,MAAAA,EACA0L,QAAAA,EACAX,kBAAAA,KAIJ,IAAA,IAAS3e,EAAI,EAAGA,EAAI4T,EAAO5T,IAAK,CAC9B,IAAMyf,EAAe,IAAIpN,GAAY/c,KAAKwe,MAAM3mB,KAAKsvB,cAAgBkC,GAAqBrpB,KAAKwe,MAAM3mB,KAAKsvB,eAAgB8C,EAAaF,GACvII,EAAazN,UAAY1c,KAAKwe,MAAM3mB,KAAKovB,SAAW+C,GAC5CjlB,EAAAA,OAAOxS,EAAG,EAAG43B,GACrBtyB,KAAKsvB,eAAiBkC,EACtB92B,IAGFA,SAGSq3B,IA7VyB,EA6VqBP,GAAqBO,IAAS,KAEjF5pB,KAAK+oB,IAAI7P,EAAOiD,IAAMtkB,KAAK8vB,+BAAiCd,KAC9DhvB,KAAK8vB,8BAAgCzO,EAAOiD,IAE5C4K,EAAW/K,SAASppB,KAAK,CACvBoD,KAAMslB,GACNa,IAAKjD,EAAOiD,IACZO,UAAWxD,EAAOwD,UAClBsN,QAAAA,EACAX,kBAAAA,KAGItkB,EAAAA,OAAOxS,EAAG,GAClBA,MAEIyN,KAAK+oB,IAAIa,GAAShD,KACfS,KAAAA,uBAEDrnB,KAAK+oB,IAAI7P,EAAOiD,IAAMtkB,KAAK+vB,gCAAkCf,KAC/DhvB,KAAK+vB,+BAAiC1O,EAAOiD,IAC7C4K,EAAW/K,SAASppB,KAAK,CACvBoD,KAAMslB,GACNhN,KAAM4K,EAAOiD,IAAM,IACnBA,IAAKjD,EAAOiD,IACZO,UAAWxD,EAAOwD,UAClBsN,QAAAA,EACAzN,eAAgBqN,EAChBP,kBAAAA,MAKCnN,EAAAA,IAAMhD,EAAOiD,IAAM6N,EAC1B9Q,EAAOzZ,SAAWsqB,EAClBlyB,KAAKsvB,eAAiBkC,MAG3B,CAAAz3B,IAAA,mBAAAC,MAED,SAAkB6mB,GAChB,IAAQ0R,EAAyC1R,EAAzC0R,WAAY/R,EAA6BK,EAA7BL,aAAcU,EAAeL,EAAfK,WAC5B6P,EAAQlQ,EAAMO,QAAQ,GAC5B,GAAK2P,EACL,OAA+B,EAAxBA,EAAMnhB,KAAK9D,WAAiB0U,GAAgB+R,EAAa,GAAKrR,EAAa,MACnF,CAAAnnB,IAAA,kBAAAC,MAED,SAAiB6mB,GACXA,OAAAA,EAAME,YAAcyC,GAA2BoI,GAAI4G,eAAe3R,EAAMC,MAAOD,EAAML,cAClF,IAAIhK,WAAW,EAAIqK,EAAM6D,eAAiB7D,EAAML,kBACxDyO,EAvYkB,GCXRwD,GAAG,WAAA,SAAAA,IAAA34B,OAAA24B,GAiJbA,OAjJaA,EAAAA,EAAA,KAAA,CAAA,CAAA14B,IAAA,QAAAC,MACd,SAAc4V,GACZ,KAAIA,EAAK1V,OAAS,GAAlB,CAEA,IAAM4U,EAAM,GACNhP,EAAO2yB,EAAIC,YAAY,IAAInM,SAAS3W,EAAKhE,OAAQgE,EAAK+iB,WAAY/iB,EAAK9D,aACvE9R,EAAQy4B,EAAIC,YAAY,IAAInM,SAAS3W,EAAKhE,OAAQgE,EAAK+iB,WAAa7yB,EAAKqf,KAAMvP,EAAK9D,WAAahM,EAAKqf,OAGrGrQ,OAFHhP,EAAAA,EAAK8P,MAAQ5V,EAAM4V,KAEhBd,KACR,CAAA/U,IAAA,cAAAC,MAED,SAAoB44B,GAClB,IAII54B,EAJE+uB,EAAU6J,EAAK9mB,WAEjBgd,EAAS,EACT+J,GAAQ,EAGJ10B,OALKy0B,EAAKE,SAAS,IAMpB,KAAA,EACKF,EAAAA,EAAKG,WAAW,GACdjK,GAAA,EACV,MAAA,KACG,EACH9uB,IAAU44B,EAAKE,SAAS,GACdhK,GAAA,EACV,MAEG,KAAA,EACH,IAAAkK,EAAuBP,EAAIQ,aAAa,IAAI1M,SAASqM,EAAKhnB,OAAQgnB,EAAKD,WAAa7J,EAAQ8J,EAAK9mB,WAAagd,IACtGlZ,EADIojB,EAAJpjB,KAEEuP,GAFQ6T,EAAJ7T,KAId,MACG,KAAA,EACHnlB,EAAQ,GACR,IAAIk5B,EAAW,EAIRpK,IAH4C,IAAhB,SAA9B8J,EAAKpM,UAAUuC,EAAU,MACjBmK,EAAA,GAENpK,EAASC,EAAU,GAAG,CAC3BoK,IAAAA,EAA8BV,EAAIW,aAAa,IAAI7M,SAASqM,EAAKhnB,OAAQgnB,EAAKD,WAAa7J,EAAQ8J,EAAK9mB,WAAagd,EAASoK,IAAtH/T,EAAIgU,EAAJhU,KAAMvP,EAAIujB,EAAJvjB,KACVijB,GADqBM,EAALN,MACT,MACLjjB,EAAAA,EAAK9P,MAAQ8P,EAAK5V,MACdmlB,GAAAA,EAER2J,GAAAA,GAAUC,EAAU,EAEP,KAD6B,SAA7B6J,EAAKpM,UAAUsC,EAAS,MACXA,GAAA,GAG9B,MACG,KAAA,EACH9uB,EAAQ,GACE8uB,GAAA,EACV,IAAIoK,EAAW,EAIRpK,IAH4C,IAAhB,SAA9B8J,EAAKpM,UAAUuC,EAAU,MACjBsK,EAAA,GAENvK,EAASC,EAAU,GAAG,CAC3BuK,IAAAA,EAA8Bb,EAAIW,aAAa,IAAI7M,SAASqM,EAAKhnB,OAAQgnB,EAAKD,WAAa7J,EAAQ8J,EAAK9mB,WAAagd,EAASoK,IAAtH/T,EAAImU,EAAJnU,KAAMvP,EAAI0jB,EAAJ1jB,KACVijB,GADqBS,EAALT,MACT,MACLjjB,EAAAA,EAAK9P,MAAQ8P,EAAK5V,MACdmlB,GAAAA,EAER2J,GAAAA,GAAUC,EAAU,EAEP,KAD6B,SAA7B6J,EAAKpM,UAAUsC,EAAS,MAE3BA,GAAA,GAId,MACG,KAAA,EACKztB,OAAAA,EACCytB,EAAA,EACD+J,GAAA,EACR,MACG,KAAA,GACH74B,EAAQ,GACFu5B,IAAAA,EAAoBX,EAAKpM,UAAU,GAC/BsC,GAAA,EACV,IAAA,IAASpuB,EAAI,EAAGA,EAAI64B,EAAmB74B,IAAK,CAC1C,IAAA84B,EAAuBf,EAAIC,YAAY,IAAInM,SAASqM,EAAKhnB,OAAQgnB,EAAKD,WAAa7J,EAAQ8J,EAAK9mB,WAAagd,IAArGlZ,EAAI4jB,EAAJ5jB,KAAMuP,EAAIqU,EAAJrU,KACdnlB,EAAMe,KAAK6U,GACDuP,GAAAA,EAGZ,MACG,KAAA,GACGsU,IAAAA,EAAYb,EAAKG,WAAWjK,GAAsC,IAA5B8J,EAAKc,SAAS5K,EAAS,GAC3D9uB,EAAA,IAAIiJ,KAAKwwB,GACP3K,GAAA,GAEV,MACG,KAAA,GACG5uB,IAAAA,EAAS04B,EAAKpM,UAAU,GACpBsC,GAAA,EACF9uB,EAAA,GACJE,EAAS,IACHotB,EAAAA,GAAKqM,OAAO,IAAInd,WAAWoc,EAAKhnB,OAAQgnB,EAAKD,WAAa7J,EAAQ5uB,KAElEA,GAAAA,EAEV,MAAA,QAES6uB,EAAAA,EAIN,MAAA,CACLnZ,KAAM5V,EACNmlB,KAAM2J,EACN+J,MAAAA,KAEH,CAAA94B,IAAA,eAAAC,MAED,SAAqB44B,GACb14B,IAAAA,EAAS04B,EAAKgB,UAAU,GAC1BhkB,EAAO,GAKJ,OAJH1V,EAAS,IACJotB,EAAAA,GAAKqM,OAAO,IAAInd,WAAWoc,EAAKhnB,OAAQgnB,EAAKD,WAAa,EAAGz4B,KAG/D,CACL0V,KAAAA,EACAuP,KAAM,EAAIjlB,KAEb,CAAAH,IAAA,eAAAC,MAED,SAAqB44B,GACnB,KAAIA,EAAK9mB,WAAa,GAAtB,CAEMhM,IAAAA,EAAO2yB,EAAIQ,aAAaL,GACxB54B,EAAQy4B,EAAIC,YAAY,IAAInM,SAASqM,EAAKhnB,OAAQgnB,EAAKD,WAAa7yB,EAAKqf,KAAMyT,EAAK9mB,WAAahM,EAAKqf,OAErG,MAAA,CACLvP,KAAM,CACJ9P,KAAMA,EAAK8P,KACX5V,MAAOA,EAAM4V,MAEfuP,KAAMrf,EAAKqf,KAAOnlB,EAAMmlB,KACxB0T,MAAO74B,EAAM64B,YAEhBJ,EAjJa,GCIVze,GAAS,IAAInU,GAAO,cASbg0B,GAAU,WAarBA,SAAAA,EAAa9Q,EAAYmM,EAAYC,GAAer1B,OAAA+5B,2BAZpC,2BACC,sBACR,2CACuB,GAUzB9Q,KAAAA,WAAaA,GAAc,IAAIW,GAC/BwL,KAAAA,WAAaA,GAAc,IAAIzK,GAC/B0K,KAAAA,cAAgBA,GAAiB,IAAIzJ,GACrCoO,KAAAA,OAAS,IAAI7E,GAASjvB,KAAK+iB,WAAY/iB,KAAKkvB,WAAYlvB,KAAKmvB,eAyJnE0E,OAtJDtzB,EAAAszB,EAAA,CAAA,CAAA95B,IAAA,QAAAC,MAMA,SAAO4V,GAAMsgB,IAAAA,EAAa90B,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,IAAAA,UAAA,GAAU+0B,IAAU/0B,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,KAAAA,UAAA,GACpC8zB,EAA0ClvB,KAA1CkvB,WAAYnM,EAA8B/iB,KAA9B+iB,WAAYoM,EAAkBnvB,KAAlBmvB,cA4B5B,IA1BAe,GAAkBC,IACpBnwB,KAAK+zB,eAAiB,MAGpB7D,IACFlwB,KAAKg0B,eAAgB,GAGnB9D,GACFnN,EAAWpgB,QACXusB,EAAWvsB,QACXwsB,EAAcxsB,UAEdogB,EAAW3B,QAAU,GACrB8N,EAAW9N,QAAU,GACrB+N,EAAcvJ,WAAa,GAC3BuJ,EAAcxJ,iBAAmB,GACjC5C,EAAWoB,SAAW,GACtB+K,EAAW/K,SAAW,GAElBnkB,KAAK+zB,iBACA7W,EAAAA,GAAiBld,KAAK+zB,eAAgBnkB,GAC7C5P,KAAK+zB,eAAiB,QAIrBnkB,EAAK1V,OACD,MAAA,CACL6oB,WAAAA,EACAmM,WAAAA,EACAC,cAAAA,GAIJ,IAAIrG,EAAS,EACT,IAAC9oB,KAAKg0B,cAAe,CACvB,IAAKH,EAAWI,MAAMrkB,GACd,MAAA,IAAI5Q,MAAM,oBAElBkwB,EAAWrL,SAAsB,EAAVjU,EAAK,MAAY,GAAO,EACpCiU,EAAAA,QAA4B,IAAP,EAAVjU,EAAK,IAC3B5P,KAAKg0B,eAAgB,EACZxL,EAAAA,GAAU5Y,EAAM,GAAK,EAUxBkZ,IAPR,IAEIoL,EACAC,EACAV,EACAW,EACAC,EANEtL,EAAUnZ,EAAK1V,OAOb4uB,EAAS,GAAMC,IACrBmL,EAAUtkB,EAAKkZ,KAEXA,EAAS,IADDlZ,EAAAA,EAAKkZ,EAAS,IAAM,GAAOlZ,EAAKkZ,EAAS,IAAM,EAAKlZ,EAAKkZ,EAAS,IACjDC,KAC7B0K,GACG7jB,EAAKkZ,EAAS,IAAM,KAAO,IAC3BlZ,EAAKkZ,EAAS,IAAM,KACpBlZ,EAAKkZ,EAAS,IAAM,GACrBlZ,EAAKkZ,EAAS,GAGNA,GAAA,GACVsL,EAAWxkB,EAAKyW,SAASyC,EAAQA,EAASqL,GAC1B,IAAZD,EACGI,KAAAA,YAAYF,EAAUX,GACN,IAAZS,EACJK,KAAAA,YAAYH,EAAUX,GACN,KAAZS,EACJM,KAAAA,aAAaJ,EAAUX,GAE5Bzf,GAAOtS,KAAI,qBAAAxB,OAAsBg0B,KAIrB1L,EAAAA,GAAU5Y,EADdukB,GAAAA,MAEU,GAAKA,GAChBzyB,GAAAA,KAAIxB,uBAAAA,OAAwBm0B,EAAWn0B,MAAAA,OAAK,GAAKi0B,QAGhDrL,GAAA,EAiBL,OAdHA,EAASC,IACNgL,KAAAA,eAAiBnkB,EAAKyW,SAASyC,IAGtCoG,EAAWuF,gBAAkB1R,EAAW0R,gBAAkB1R,EAAWlD,UAAYsP,EAActP,UAAY,IAChGA,EAAAA,UAAYqP,EAAWhO,YAAc,GAE3CgO,EAAWqB,SAAWrB,EAAWwF,aACpCxF,EAAWvsB,SAERogB,EAAWwN,SAAWxN,EAAW2R,aACpC3R,EAAWpgB,QAGN,CACLogB,WAAAA,EACAmM,WAAAA,EACAC,cAAAA,KAIJ,CAAAp1B,IAAA,MAAAC,MAMA,SAAKiS,EAAWikB,EAAeC,GAEtB,OADPnwB,KAAK8zB,OAAOa,IAAI1oB,EAAWikB,EAAeC,GACnC,CACLpN,WAAY/iB,KAAK+iB,WACjBmM,WAAYlvB,KAAKkvB,WACjBC,cAAenvB,KAAKmvB,iBAIxB,CAAAp1B,IAAA,cAAAC,MAOA,SAAa4V,EAAMsgB,EAAeC,EAAYlkB,GAE5C,OADK2oB,KAAAA,MAAMhlB,EAAMsgB,EAAeC,GACzBnwB,KAAK20B,IAAI1oB,EAAWikB,EAAeC,KAG5C,CAAAp2B,IAAA,cAAAC,MAWA,SAAa4V,EAAM0U,GACjB,GAAK1U,EAAK1V,OAAV,CAEM26B,IAAAA,GAAoB,IAAVjlB,EAAK,MAAe,EAC9BiR,EAAQ7gB,KAAKkvB,WAEnB,GACa,KAAX2F,GACW,IAAXA,GACW,IAAXA,EAIA,OAFA7gB,GAAOtS,KAAI,6BAAAxB,OAA8B20B,SACzChU,EAAMle,QAIR,GAAe,KAAXkyB,EAAe,CACXC,IAAAA,GAAuB,GAAVllB,EAAK,KAAc,EAChCmlB,GAAuB,EAAVnlB,EAAK,KAAc,EAChColB,EAAuB,EAAVplB,EAAK,GAClBsR,EAAAA,WAAa2S,EAAWoB,WAAWH,GACnCvC,EAAAA,WAAawC,EAAY,GAAK,EACpClU,EAAML,aAAewU,EAAY,EAGpB,KAAXH,EACGK,KAAAA,UAAUtlB,EAAM0U,GAEhB6Q,KAAAA,WAAWvlB,EAAM0U,EAAKuQ,MAE9B,CAAA96B,IAAA,aAAAC,MAED,SAAY4V,EAAM0U,EAAKuQ,GACrB,IAAMhU,EAAQ7gB,KAAKkvB,WACnBrO,EAAME,UAAuB,IAAX8T,EAAerR,GAA0BA,GAC3D3C,EAAMK,WAAa,IACnBL,EAAMC,MAAQD,EAAME,UACdK,EAAAA,QAAQrmB,KAAK,IAAImqB,GAAYZ,EAAK1U,EAAKyW,SAAS,OACvD,CAAAtsB,IAAA,YAAAC,MAED,SAAW4V,EAAM0U,GACf,IAAMzD,EAAQ7gB,KAAKkvB,WAGftf,GAFJiR,EAAME,UAAYyC,GAEF,IAAZ5T,EAAK,GAAU,CACjB,IAAMd,EAAM8c,GAAIwJ,yBAAyBxlB,EAAKyW,SAAS,IACnDvX,GACF+R,EAAMC,MAAQhS,EAAIgS,MAClBD,EAAML,aAAe1R,EAAI0R,aACzBK,EAAMK,WAAapS,EAAIoS,WACvBL,EAAM9gB,OAAS+O,EAAI/O,OACnB8gB,EAAMuL,WAAatd,EAAIsd,WACvBvL,EAAMwU,gBAAkBvmB,EAAImd,yBAE5BpL,EAAMle,QACCjB,GAAAA,KAAK,mCAAoCkO,SAEnD,GAAsB,IAAZA,EAAK,GAAU,CACpB0U,GAAAA,MAAAA,EAAmC,OACjClD,EAAAA,QAAQrmB,KAAK,IAAImqB,GAAYZ,EAAK1U,EAAKyW,SAAS,UAEtDrS,GAAOtS,KAAI,0BAAAxB,OAA2B0P,EAAK,OAE9C,CAAA7V,IAAA,cAAAC,MAED,SAAa4V,EAAMyU,GAAK,IAAA7lB,EAAAwB,KACtB,KAAI4P,EAAK1V,OAAS,GAAlB,CAEMo7B,IAAAA,GAAuB,IAAV1lB,EAAK,MAAe,EACjC2lB,EAAoB,GAAV3lB,EAAK,GAEfiR,EAAQ7gB,KAAK+iB,WAGjBwS,GAAY,IAAZA,GACY,KAAZA,EAIA,OAFA1U,EAAMle,aACNqR,GAAOtS,KAAI,wBAAAxB,OAAyBq1B,IAItC,IAAMtM,EAAqB,KAAZsM,EACf1U,EAAME,UAAYkI,EAAS1F,GAAsBA,GAEjD,IAAMiS,EAAa5lB,EAAK,GAClB6lB,GAAS7lB,EAAK,IAAM,GAAOA,EAAK,IAAM,EAAMA,EAAK,KAAQ,GAAM,EAErE,GAAmB,IAAf4lB,EAAkB,CACdE,IAAAA,EAAa9lB,EAAKyW,SAAS,GAC3BvX,EAAMma,EACR6D,GAAK6I,oCAAoCD,GACzClM,GAAIoM,mCAAmCF,GAC3C,GAAI5mB,EAAK,CACP,IAAQsV,EAAmDtV,EAAnDsV,KAAMJ,EAA6ClV,EAA7CkV,IAAK6F,EAAwC/a,EAAxC+a,OAAQD,EAAgC9a,EAAhC8a,OAAQuD,EAAwBre,EAAxBqe,OAAQ1D,EAAgB3a,EAAhB2a,YACvCrF,IACIA,EAAAA,KAAOvD,EAAMuD,MAAQA,GAEzBJ,IACFnD,EAAMC,MAAQkD,EAAIlD,MAClBD,EAAMR,MAAQ2D,EAAI3D,MAClBQ,EAAMP,OAAS0D,EAAI1D,OACnBO,EAAMqD,SAAWF,EAAIE,SACrBrD,EAAMG,OAASgD,EAAIhD,OACnBH,EAAMI,OAAS+C,EAAI/C,QAEjB2I,EAAO1vB,SAAQ2mB,EAAMmD,IAAM4F,GAC3BC,EAAO3vB,SAAQ2mB,EAAMkD,IAAM8F,GAC3BsD,GAAUA,EAAOjzB,SAAQ2mB,EAAMoD,IAAMkJ,GACrC1D,IAAa5I,EAAM4I,YAAcA,QAE9B/nB,GAAAA,KAAIxB,gBAAAA,OAAiB+oB,EAAS,OAAS,MAAmCrZ,8BAAAA,QAErF,GAA0B,IAAf4lB,EAAkB,CACvB9T,IAAAA,EAAQmH,GAAKgN,UAAUjmB,EAAKyW,SAAS,GAAIxF,EAAM4I,aAI/C/H,IAFJA,EAAQ1hB,KAAK81B,wBAAwB7M,EAAQvH,EAAOb,KAEvCa,EAAMxnB,OAAQ,CACzB,IAAMmnB,EAAS,IAAIuD,GAAYP,EAAMoR,EAAKpR,EAAK3C,GAC7B,IAAd4T,GACFjU,EAAO0U,gBAEH3U,EAAAA,QAAQrmB,KAAKsmB,GAEb9Z,EAAAA,SAAQ,SAAAyhB,GACZ,IAAM7qB,EAAO8qB,EAAUD,EAAK,KAAO,EAAK,GAAiB,GAAVA,EAAK,GAC5C7qB,OAAAA,GACD,KAAA,EACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACH,IAAM8qB,GAAmB,IAAT9qB,GAAgB8qB,GAAmB,IAAT9qB,EAAa,MACvDkjB,EAAO0U,gBACP,MACG,KAAA,EACA,KAAA,GACA,KAAA,GACH,IAAM9M,GAAmB,IAAT9qB,GAAgB8qB,GAAmB,IAAT9qB,EAAa,MACvDK,EAAK2wB,cAAcvJ,WAAW7qB,KAAK,IAAIwqB,GACrCsD,GAAKmN,SAASnN,GAAKmB,UAAUhB,GAAOC,GACpC5E,EAAMoR,QAOVpU,EAAO0D,UACJkR,KAAAA,SAEP5U,EAAOE,MAAQvhB,KAAKi2B,YAEbv0B,GAAAA,KAAK,qBAAsBkO,QAEZ,IAAf4lB,GAGTxhB,GAAOtS,KAAI,0BAAAxB,OAA2Bs1B,OAEzC,CAAAz7B,IAAA,0BAAAC,MAED,SAAyBk8B,EAAMxU,EAAOb,GACpC,OAAKqV,GAASl2B,KAAKm2B,8BAKFzU,EAAMvf,KAAI,SAAAwI,GAAMA,OAAAA,EAAE,KAAO,EAAK,MAElC7G,SAAS,KACpB9D,KAAKm2B,+BAAgC,EAC9BzU,IAGHoP,EAAAA,QAAQjQ,EAAMkD,IAAI,IAClB+M,EAAAA,QAAQjQ,EAAMmD,IAAI,IAClB8M,EAAAA,QAAQjQ,EAAMoD,IAAI,IAEjBvC,EAAMlS,OAAOC,WAflBzP,KAAKm2B,+BAAgC,EAC9BzU,KAeV,CAAA3nB,IAAA,eAAAC,MAED,SAAc4V,EAAM0U,GACb6K,KAAAA,cAAcxJ,iBAAiB5qB,KAAK,IAAIsqB,GAAgBoN,GAAI7J,MAAMhZ,GAAO0U,OAC/E,CAAA,CAAAvqB,IAAA,QAAAC,MApMD,SAAc4V,GACRA,OAAY,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,IAAZA,EAAK,IAG9D4Y,GAAU5Y,EAAM,IAAM,MAC9BikB,EA1KoB,GCbvB,SAASuC,GAAQC,GACI,IAAnB,IAAIt6B,EAAc,EAAC0E,EAAArF,UAAAlB,OADkBo8B,MAAM31B,MAAAF,EAAAA,EAAAA,OAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAA,EAAAA,EAAAxF,GAAAA,UAAAwF,GAEpC2G,EAAAA,SAAQ,SAAU4V,GACvBphB,GAAeohB,EAAIjjB,UAEf2J,IAAAA,EAAS,IAAIwyB,EAAkBt6B,GACjC+sB,EAAS,EAKNjlB,OAJA0D,EAAAA,SAAQ,SAAU4V,GAChBrF,EAAAA,IAAIqF,EAAK2L,GAChBA,GAAU3L,EAAIjjB,UAET2J,EDM8BjG,EAJ1Bi2B,GAAU,aAMD,CAAC,KAAM,KAAO,KAAO,OEhB5B,IAAIh0B,GAAO,aDSzB,IAEKhG,GAAM,WACV,SAAAA,IAAeC,OAAAD,GACR+R,KAAAA,OAAS,IAAI4K,WAAW,GA4B9B3c,OA3BA0G,EAAA1G,EAAA,CAAA,CAAAE,IAAA,QAAAC,MAED,WACmB,IAAjB,IAAMu8B,EAAOv2B,KAAIoB,EAAAhG,UAAAlB,OADT0R,EAAMjL,IAAAA,MAAAS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANuK,EAAMvK,GAAAjG,UAAAiG,GAEPkG,EAAAA,SAAQ,SAAA5L,GACTA,EACF46B,EAAK3qB,OAASwqB,GAAO5f,WAAY+f,EAAK3qB,OAAQjQ,GAEvCqF,OAAAA,QAAQU,KAAK/F,SAGzB,CAAA,CAAA5B,IAAA,cAAAC,MAED,SAAoBA,GACX,OAAA,IAAIwc,WAAW,CACnBxc,GAAS,EAAK,IACP,IAARA,MAEH,CAAAD,IAAA,cAAAC,MAED,SAAoBA,GAClB,OAAO,IAAIwc,WAAW,CACpBxc,GAAS,GACRA,GAAS,GAAM,IACfA,GAAS,EAAK,IACP,IAARA,QAEHH,EA9BS,GEZN28B,GAAaruB,KAAAsuB,IAAC,EAAI,IAAK,EAEhBp6B,GAAG,WAAA,SAAAA,IAAAvC,OAAAuC,GAowCbA,OApwCaA,EAAAA,EAAA,KAAA,CAAA,CAAAtC,IAAA,MAAAC,MAgJd,SAAYmE,GAAkB,IAAA,IAAAsC,EAAArF,UAAAlB,OAAToE,MAAOqC,MAAAF,EAAAA,EAAAA,OAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAA,EAAAA,EAAAxF,GAAAA,UAAAwF,GAE1B,IAAMue,EAAO,GADH7gB,EAAAA,EAAQkR,OAAOC,UACAzU,QAAO,SAACsR,EAAGpR,GAAC,OAAMoR,EAAIpR,EAAE4Q,aAAa,GACxDgD,EAAM,IAAI0H,WAAW2I,GACvBrQ,EAAA,GAAMqQ,GAAQ,GAAM,IACpBrQ,EAAA,GAAMqQ,GAAQ,GAAM,IACpBrQ,EAAA,GAAMqQ,GAAQ,EAAK,IACvBrQ,EAAI,GAAY,IAAPqQ,EACLrH,EAAAA,IAAI3Z,EAAM,GACd,IAAI2qB,EAAS,EAKNha,OAJCvH,EAAAA,SAAQ,SAACqI,GACXkI,EAAAA,IAAIlI,EAAMkZ,GACdA,GAAUlZ,EAAK9D,cAEVgD,IACR,CAAA/U,IAAA,OAAAC,MAED,SAAa08B,GAEJzN,OADQyN,EAAOC,MAAK,SAAAjsB,GAAC,OAAIA,EAAEvM,OAASmlB,IAAmB5Y,EAAEqW,YAAcwC,MAC9DlnB,EAAIu6B,SAAWv6B,EAAIw6B,WACpC,CAAA98B,IAAA,cAAAC,MAED,SAAoB08B,GAKXrhB,OAFM6H,GAFA7gB,EAAIy6B,KAAKJ,GAEcr6B,EAAI06B,KAAKL,MAG9C,CAAA38B,IAAA,OAAAC,MAED,SAAa4V,GAELonB,IAAAA,EAAU,IAAIxgB,WAClB,CACE,EAAM,EAAM,EAAM,GAClBtW,OACA,CACE,GAAM,IAAM,IAAM,IAClB,IAAM,IAAM,GAAM,EAClB,IAAM,IAAM,GAAM,GAClB,GAAM,IAAM,IAAM,IAEpB,CAAC,EAAM,EAAM,EAAM,GACnB0oB,GAAMhZ,EAAKqnB,KACX,CAAC,EAAM,EAAM,EAAM,KAGvB,OAAO56B,EAAI66B,IAAI76B,EAAIgR,MAAM8pB,KAAMH,KAChC,CAAAj9B,IAAA,OAAAC,MAED,SAAa08B,GACPA,GAAAA,EAAO,GAAGU,SAAWV,EAAO,GAAGW,MAAQX,EAAO,GAAGY,MAAO,CACrDZ,EAAO,GAAGS,OACbT,EAAO,GAAGS,KAAO,CACfF,IAAKP,EAAO,GAAGO,MAGnB,IAAME,EAAOn3B,KAAKm3B,KAAKT,EAAO,GAAGS,MAEjC,OAAO96B,EAAI66B,IAAGp2B,MAAPzE,EAAG,CAAKA,EAAIgR,MAAM0pB,KACvB16B,EAAIk7B,KAAKb,EAAO,GAAGc,aAAed,EAAO,GAAG9uB,SAAU8uB,EAAO,GAAGe,cAAgBf,EAAO,GAAG7W,WAC1FxjB,EAAIq7B,KAAKhB,IAAOx2B,OAAAy3B,EACbjB,EAAOv0B,KAAI,SAACuI,GAAMrO,OAAAA,EAAIu7B,KAAKltB,OAAG,CACjCysB,KAEF,OAAO96B,EAAI66B,IAAGp2B,MAAPzE,EAAQA,CAAAA,EAAIgR,MAAM0pB,KACvB16B,EAAIk7B,KAAKb,EAAO,GAAGc,aAAed,EAAO,GAAG9uB,SAAU8uB,EAAO,GAAGe,cAAgBf,EAAO,GAAG7W,YAAU3f,OAAAy3B,EACjGjB,EAAOv0B,KAAI,SAACuI,GAAMrO,OAAAA,EAAIu7B,KAAKltB,OAAG,CACjCrO,EAAIq7B,KAAKhB,QAGd,CAAA38B,IAAA,OAAAC,MAED,SAAa4N,GAAUiY,IAAAA,EAASzkB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC3Bm8B,EAAOl7B,EAAI66B,IAAI76B,EAAIgR,MAAMkqB,KAAM,IAAI/gB,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBqJ,GAAa,GAAM,IAAOA,GAAa,GAAM,IAAOA,GAAa,EAAK,IAAkB,IAAZA,EAC5EjY,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,OAGb2vB,OAAAA,IACR,CAAAx9B,IAAA,OAAAC,MAED,SAAa6mB,GAOJ+W,OANMv7B,EAAI66B,IACf76B,EAAIgR,MAAMuqB,KACVv7B,EAAIw7B,KAAKhX,EAAMiX,GAAIjX,EAAMkX,cAAgB,EAAGlX,EAAMR,MAAOQ,EAAMP,QAC/DjkB,EAAI27B,KAAKnX,MAIZ,CAAA9mB,IAAA,OAAAC,MAED,SAAa89B,EAAIlwB,GAAUyY,IAAAA,EAAKjlB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGklB,EAAMllB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACvCy8B,EAAOx7B,EAAI66B,IAAI76B,EAAIgR,MAAMwqB,KAAM,IAAIrhB,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBshB,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,EACxD,EAAM,EAAM,EAAM,EACjBlwB,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EACjByY,GAAS,EAAK,IAAc,IAARA,EAAc,EAAM,EACxCC,GAAU,EAAK,IAAe,IAATA,EAAe,EAAM,KAGtCuX,OAAAA,IACR,CAAA99B,IAAA,OAAAC,MAED,SAAa6mB,GAGJmX,OAFM37B,EAAI66B,IAAI76B,EAAIgR,MAAM2qB,KAAM37B,EAAI47B,KAAKpX,EAAMjZ,SAAUiZ,EAAMhB,WAAYxjB,EAAI67B,KAAKrX,EAAM1iB,MAAO9B,EAAI87B,KAAKtX,MAGhH,CAAA9mB,IAAA,OAAAC,MAED,SAAa4N,GAAUiY,IAAAA,EAASzkB,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC3B68B,EAAO57B,EAAI66B,IAAI76B,EAAIgR,MAAM4qB,KAAM,IAAIzhB,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBqJ,GAAa,GAAM,IAAOA,GAAa,GAAM,IAAOA,GAAa,EAAK,IAAkB,IAAZA,EAC5EjY,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,GAAM,IACN,EAAM,KAGDqwB,OAAAA,IACR,CAAAl+B,IAAA,OAAAC,MAED,SAAamE,GAGJ+5B,OAFM77B,EAAI66B,IAAI76B,EAAIgR,MAAM6qB,KAAM77B,EAAI+7B,WAAWj6B,MAGrD,CAAApE,IAAA,OAAAC,MAED,SAAa6mB,GAGJsX,OAFM97B,EAAI66B,IAAI76B,EAAIgR,MAAM8qB,KAAMtX,EAAM1iB,OAASmlB,GAAkBjnB,EAAIg8B,KAAOh8B,EAAIi8B,KAAMj8B,EAAIk8B,KAAMl8B,EAAIm8B,KAAK3X,MAG/G,CAAA9mB,IAAA,OAAAC,MAED,SAAa6mB,GACX,IAAM4X,EAAS,GAORD,OANH3X,GAASA,EAAMhiB,KACXA,EAAAA,IAAI65B,MAAQD,EAAO19B,KAAKsB,EAAIq8B,KAAK7X,EAAMhiB,IAAI65B,KAAKC,UAG3Ct8B,EAAI66B,IAAI76B,EAAIgR,MAAMmrB,KAAMn8B,EAAIu8B,KAAK/X,GAAQxkB,EAAIw8B,KAAMJ,EAAO,GAAIp8B,EAAIy8B,KAAMz8B,EAAI08B,KAAM18B,EAAI28B,QAGpG,CAAAj/B,IAAA,OAAAC,MAED,SAAa6mB,GACPmW,IAAAA,EAsBG4B,OAnBOv8B,EAFK,UAAfwkB,EAAM1iB,KACJ0iB,EAAMuW,QAAUvW,EAAMyW,KACdj7B,EAAIi7B,KAAKzW,GAGTxkB,EAAI48B,KAAKpY,GAGZA,EAAMuW,QAAUvW,EAAMwW,KACrBh7B,EAAIg7B,KAAKxW,GAGTxkB,EAAI68B,SAASrY,GAGZxkB,EAAI66B,IAAI76B,EAAIgR,MAAMurB,KAAM,IAAIpiB,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,IAChBwgB,KAGL,CAAAj9B,IAAA,OAAAC,MAED,SAAa4V,GACL4Q,IAAAA,EAAe5Q,EAAK0nB,KAAK9W,aACzBU,EAAatR,EAAK0nB,KAAKpW,WACvB8V,EAAU,IAAIxgB,WAAW,CAC7B,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAMgK,EACN,EAAM,GACN,EAAM,EAAM,EAAM,EACjBU,GAAc,EAAK,IACP,IAAbA,EACA,EAAM,IAEFiY,EAAO98B,EAAI88B,KAAKvpB,EAAK7P,QAErBq5B,EAAO/8B,EAAI+8B,KAAKxpB,EAAK0nB,MAE3B,OAAOj7B,EAAI66B,IAAI76B,EAAIgR,MAAMiqB,KAAMN,EAASmC,EAAMC,KAC/C,CAAAr/B,IAAA,OAAAC,MAED,SAAa6mB,GAAO,IAAAwY,EAAA7lB,EACZwQ,EAAMnD,EAAMmD,IAAI9pB,OAAS,EAAI2mB,EAAMmD,IAAI,GAAK,GAC5CD,EAAMlD,EAAMkD,IAAI7pB,OAAS,EAAI2mB,EAAMkD,IAAI,GAAK,GAC5C1D,EAAQQ,EAAMR,MACdC,EAASO,EAAMP,OACfgZ,EAAWzY,EAAMqD,SAAS,GAC1BqV,EAAW1Y,EAAMqD,SAAS,GAE1B8S,EAAU,IAAIxgB,WAAW,CAC7B,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EAEN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjB6J,GAAS,EAAK,IACP,IAARA,EACCC,GAAU,EAAK,IACP,IAATA,EACA,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAEN,GACA,IAAM,GAAM,IAAM,IAClB,IAAM,IAAM,IAAM,IAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EACZ,EAAM,GACN,GAAM,KACFkZ,EAAO,IAAIhjB,YAAW6iB,GAAA7lB,EAAA,CAC1B,EACAwQ,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,IACA,IACAA,EAAI9pB,SAAW,EAAI,IACN,IAAb8pB,EAAI9pB,SACJgG,OAAMY,MAAA0S,EAAAmkB,EAAI3T,IAAK9jB,OAAO,CACtB,EACA6jB,EAAI7pB,SAAW,EAAI,IACN,IAAb6pB,EAAI7pB,UACHgG,OAAMY,MAAAu4B,EAAA1B,EAAI5T,KACP0V,EAAO,IAAIjjB,WAAW,CAC1B,EAAM,EAAM,GAAM,GAClB,EAAM,GAAM,IAAM,IAClB,EAAM,EAAM,GAAM,KAEd4iB,EAAO/8B,EAAI+8B,KAAKvY,EAAMwW,MACtBqC,EAAO,IAAIljB,WAAW,CACzB8iB,GAAY,GACZA,GAAY,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,EACCC,GAAY,GACZA,GAAY,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,IAEKl9B,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAMgqB,KAAML,EAAS36B,EAAI66B,IAAI76B,EAAIgR,MAAMssB,KAAMH,GAAOn9B,EAAI66B,IAAI76B,EAAIgR,MAAMosB,KAAMA,GAAOL,EAAM/8B,EAAI66B,IAAI76B,EAAIgR,MAAMqsB,KAAMA,MACrI,CAAA3/B,IAAA,OAAAC,MAED,SAAa4V,GACX,IAAMonB,EAAU,IAAIxgB,WAAW,IACzBojB,EAAOv9B,EAAIu9B,KAAKhqB,GACtB,OAAOvT,EAAI66B,IAAI76B,EAAIgR,MAAMwsB,KAAM7C,EAAS4C,KACzC,CAAA7/B,IAAA,OAAAC,MAED,SAAa4V,GAELonB,IAAAA,EAAU,IAAIxgB,WAClB,CACE,EAAM,EAAM,EAAM,EAAM,EAAM,EACH,IAA3B5G,EAAKkqB,oBACkB,IAAvBlqB,EAAKmqB,iBACL75B,OAAO0oB,GAAMhZ,EAAKoqB,eACtB,OAAO39B,EAAI66B,IAAI76B,EAAIgR,MAAMusB,KAAM5C,KAChC,CAAAj9B,IAAA,OAAAC,MAED,SAAa4V,GACX,IAAMonB,EAAU,IAAIxgB,WAAW,IACzByjB,EAAO,IAAIzjB,WAAW,CAC1B5G,EAAKsqB,YAAYC,WAAW,GAC5BvqB,EAAKsqB,YAAYC,WAAW,GAC5BvqB,EAAKsqB,YAAYC,WAAW,GAC5BvqB,EAAKsqB,YAAYC,WAAW,KAExBC,EAAO,IAAI5jB,WAAW,CAC1B,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,GAClB,EAAM,EAAM,EAAM,IAEdqjB,EAAOx9B,EAAIw9B,KAAKjqB,GACfvT,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAM+rB,KAAMpC,EAAS36B,EAAI66B,IAAI76B,EAAIgR,MAAM4sB,KAAMA,GAAO59B,EAAI66B,IAAI76B,EAAIgR,MAAM+sB,KAAMA,GAAOP,KACvG,CAAA9/B,IAAA,WAAAC,MAED,SAAiB6mB,GACToI,IAAAA,EAASpI,EAAME,YAAcwC,GAC7B8W,EAAMpR,EAAS5sB,EAAIgR,MAAMitB,KAAOj+B,EAAIgR,MAAMktB,KAC1Cx6B,EAASkpB,EAAS5sB,EAAI+nB,KAAKvD,GAASxkB,EAAIs9B,KAAK9Y,GAC7C2Z,EAAQ,CACZ,IAAIhkB,WAAW,CACb,EAAM,EAAM,EAAM,EAAM,EAAM,EAC9B,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACjEqK,EAAMR,OAAS,EAAK,IAAoB,IAAdQ,EAAMR,MAChCQ,EAAMP,QAAU,EAAK,IAAqB,IAAfO,EAAMP,OAClC,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,GACN,GAAM,KACJvgB,GAWC1D,OAPH4sB,EACFuR,EAAMz/B,KAAKsB,EAAI66B,IAAI76B,EAAIgR,MAAMotB,KAAM,IAAIjkB,WAAW,CAAC,EAAM,MAEhDqK,EAAMqD,UAAYrD,EAAMqD,SAAShqB,OAAS,GACnDsgC,EAAMz/B,KAAKsB,EAAIq9B,KAAK7Y,EAAMqD,WAGrB7nB,EAAI66B,IAAGp2B,MAAPzE,EAAG,CAAKg+B,GAAGn6B,OAAKs6B,MACxB,CAAAzgC,IAAA,OAAAC,MAED,SAAa6mB,GAAO,IAAA6Z,EAAA1kB,EAIdrD,EAHEqR,EAAM,GACND,EAAM,GAiBL1nB,OAdD2nB,EAAAA,IAAIzc,SAAQ,SAACiU,GACjB7I,EAAM6I,EAAE1P,WACJ/Q,EAAAA,KAAM4X,IAAQ,EAAK,KACnB5X,EAAAA,KAAW,IAAN4X,GACTqR,EAAIjpB,KAAI+F,MAARkjB,EAAG2T,EAASnc,OAGRuI,EAAAA,IAAIxc,SAAQ,SAAC+E,GACjBqG,EAAMrG,EAAER,WACJ/Q,EAAAA,KAAM4X,IAAQ,EAAK,KACnB5X,EAAAA,KAAW,IAAN4X,GACToR,EAAIhpB,KAAI+F,MAARijB,EAAG4T,EAASrrB,OAGPjQ,EAAI66B,IAAI76B,EAAIgR,MAAMssB,KAAM,IAAInjB,YAAWkkB,GAAA1kB,GAC5C,EACAgO,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,IACA,IAAOnD,EAAMmD,IAAI9pB,SACjBgG,OAAMY,MAAAkV,EAAIgO,GACT9jB,OAAO,CAAC2gB,EAAMkD,IAAI7pB,UAClBgG,OAAMY,MAAA45B,EAAI3W,OACd,CAAAhqB,IAAA,OAAAC,MAED,SAAa6mB,GACX,IAAMuD,EAAOvD,EAAMuD,KACfA,GAAAA,aAAgBuW,aAAevW,aAAgB5N,WAAmB4N,OAAAA,EACtE,IACIxU,EADIqU,EAAkBpD,EAAlBoD,IAAKD,EAAanD,EAAbmD,IAAKD,EAAQlD,EAARkD,IAElB,GAAIK,EAAM,CACR,IAAMwW,EAAMxW,EAAKqK,iCACXoM,EAAMzW,EAAKsK,gCACXtB,GAAenJ,EAAI/pB,QAAU,IAAM8pB,EAAI9pB,QAAU,IAAM6pB,EAAI7pB,QAAU,GACpE0V,EAAA,CACL,EACAwU,EAAKmK,qBAAuB,EAAInK,EAAKkK,iBAAmB,EAAIlK,EAAKoK,kBACjEoM,IAAQ,GAAIA,IAAQ,GAAIA,IAAQ,EAAGA,EACnCC,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAC5CzW,EAAKuK,gBACL,IAAM,EACN,IACuB,IAAvBvK,EAAKsG,gBACqB,IAA1BtG,EAAK6J,mBACuB,IAA5B7J,EAAK8J,qBACL,EAAM,EACN9J,EAAKmJ,mBAAqB,EAAInJ,EAAKsJ,kBAAoB,EAAI,EAC3DN,GAEI0N,IAAAA,EAAQ,SAACnwB,GAAMmb,IAAAA,EACnBlW,EAAK7U,KAAK4P,EAAEzQ,QAAU,EAAGyQ,EAAEzQ,SAC3B4rB,EAAAlW,GAAK7U,KAAI+F,MAAAglB,EAAA6R,EAAIhtB,KAEXsZ,EAAI/pB,SACN0V,EAAK7U,KAAK,IAAM,EAAMkpB,EAAI/pB,QAC1B+pB,EAAI1c,QAAQuzB,IAEV9W,EAAI9pB,SACN0V,EAAK7U,KAAK,IAAM,EAAMipB,EAAI9pB,QAC1B8pB,EAAIzc,QAAQuzB,IAEV/W,EAAI7pB,SACN0V,EAAK7U,KAAK,IAAM,EAAMgpB,EAAI7pB,QAC1B6pB,EAAIxc,QAAQuzB,SAGPlrB,EAAA,CACL,EACA,EACA,GAAM,EAAM,EAAM,EAClB,IAAM,EAAM,EAAM,EAAM,EAAM,EAC9B,GACA,IAAM,EAAM,IAAM,IAClB,IACA,IACA,EAAM,EACN,GACA,EAGA,IAAM,EAAM,EACZ,EAAM,GACN,GAAM,EAAM,GAAM,EAAM,IAAM,IAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAAM,IAAM,EAG1I,IAAM,EAAM,EACZ,EAAM,GACN,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAAM,EAClH,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAClH,EAAM,EAAM,EAAM,GAAM,GAGxB,IAAM,EAAM,EACZ,EAAM,EACN,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAGjCvT,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAM+W,KAAM,IAAI5N,WAAW5G,MAC/C,CAAA7V,IAAA,OAAAC,MAED,SAAAqd,GAAmC0jB,IAAAA,EAAAC,EAAA3jB,EAAA,GAArBiiB,EAAQyB,EAAA,GAAExB,EAAQwB,EAAA,GAC9B,OAAO1+B,EAAI66B,IAAI76B,EAAIgR,MAAMqsB,KAAM,IAAIljB,WAAW,CAC5C8iB,GAAY,GAAKA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EACjEC,GAAY,GAAKA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,OAEpE,CAAAx/B,IAAA,OAAAC,MAED,SAAa6mB,GACX,OAAOxkB,EAAI66B,IAAI76B,EAAIgR,MAAM4rB,KAAM,IAAIziB,WAAW,CAC5C,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAMqK,EAAML,aACZ,EAAM,GACN,EAAM,EACN,EAAM,EACLK,EAAMK,YAAc,EAAK,IAAyB,IAAnBL,EAAMK,WACtC,EAAM,IACJL,EAAM9gB,OAAO7F,OAASmC,EAAI88B,KAAKtY,EAAM9gB,aAAU1E,KACpD,CAAAtB,IAAA,OAAAC,MAED,SAAa+F,GACX,IAAM4S,EAAM5S,EAAO7F,OAuBZi/B,OAtBM98B,EAAI66B,IAAI76B,EAAIgR,MAAM8rB,KAAM,IAAI3iB,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EACA,GAAO7D,EACP,EAAM,EACN,EACA,EACA,GAAOA,EACP,GACA,GACA,EAAM,EAAM,EACZ,EAAM,EAAM,IAAM,IAClB,EAAM,EAAM,IAAM,IAClB,GACAzS,OAAO,CAACyS,IACPzS,OAAOH,GACPG,OACC,CAAC,EAAM,EAAM,QAKlB,CAAAnG,IAAA,OAAAC,MAED,SAAa08B,GAOJgB,OAFMr7B,EAAI66B,IAAGp2B,MAAPzE,EAAG,CAAKA,EAAIgR,MAAMqqB,MAAIx3B,OAAAy3B,EAAKjB,EAAOv0B,KAAI,SAACuI,GAAMrO,OAAAA,EAAI4+B,KAAKvwB,EAAEotB,YAGtE,CAAA/9B,IAAA,OAAAC,MAED,SAAa89B,GAWJmD,OAVM5+B,EAAI66B,IAAI76B,EAAIgR,MAAM4tB,KAAM,IAAIzkB,WAAW,CAClD,EACA,EAAM,EAAM,EACZshB,GAAM,GAAKA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,EAC/C,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA/9B,IAAA,QAAAC,MAED,SAAc89B,GAcLmD,OAbM5+B,EAAI66B,IAAI76B,EAAIgR,MAAM4tB,KAAM,IAAIzkB,WAAW,CAClD,EACA,EAAM,EAAM,EACXshB,GAAM,GACNA,GAAM,GAAM,IACZA,GAAM,EAAK,IACN,IAALA,EACD,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA/9B,IAAA,QAAAC,MAED,SAAc89B,GAcLmD,OAbM5+B,EAAI66B,IAAI76B,EAAIgR,MAAM4tB,KAAM,IAAIzkB,WAAW,CAClD,EACA,EAAM,EAAM,EACXshB,GAAM,GACNA,GAAM,GAAM,IACZA,GAAM,EAAK,IACN,IAALA,EACD,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA/9B,IAAA,OAAAC,MAED,SAAa08B,GAGJwE,OAFM7+B,EAAI66B,IAAGp2B,MAAPzE,EAAQA,CAAAA,EAAIgR,MAAM6tB,KAAM7+B,EAAI8+B,KAAKzE,EAAO,GAAGtV,QAAUsV,EAAO,GAAGtV,QAAQ,GAAGG,MAAQ,IAAErhB,OAAAy3B,EAAKjB,EAAOv0B,KAAI,SAACuI,GAAMrO,OAAAA,EAAI++B,KAAK1wB,WAIlI,CAAA3Q,IAAA,OAAAC,MAED,SAAa2pB,GAQJwX,OANM9+B,EAAI66B,IAAI76B,EAAIgR,MAAM8tB,KAAM,IAAI3kB,WAAW,CAClD,EACA,EAAM,EAAM,EACZmN,GAAkB,GAAKA,GAAkB,GAAM,IAAOA,GAAkB,EAAK,IAAuB,IAAjBA,OAItF,CAAA5pB,IAAA,OAAAC,MAED,SAAa6mB,GACX,IAAMwa,EAAOh/B,EAAIg/B,KAAKxa,EAAMiX,IAGtBwD,EAAOj/B,EAAIi/B,KAAKza,EAAOA,EAAM+C,qBAC/B2X,EAAa,EAeb,GAbA1a,EAAM2a,SAAW3a,EAAM4a,WACf5a,EAAM4a,UACRl0B,SAAQ,SAAU5L,GACxB4/B,GAA0B,EACtB5/B,EAAK+/B,YAAc//B,EAAK+/B,WAAWxhC,SACrCqhC,GAA0B,EACbA,GAAsC,EAAzB5/B,EAAK+/B,WAAWxhC,WAIhD2mB,EAAM8a,gBAAkBJ,EAGnB1a,EAAMuW,SAAYvW,EAAM2D,mBAAsB3D,EAAM8D,mBAUzD,CAAA,GAAW9D,EAAM2D,kBAAmB,CAClC,GAAI3D,EAAM2a,QAAS,CAEXI,IAAAA,EAAOv/B,EAAIu/B,KAAK/a,GAChBgb,EAAOx/B,EAAIw/B,KAAKhb,GAChBib,EAAOz/B,EAAI0/B,MAAMlb,GACjBmb,EAAO3/B,EAAI2/B,KAAKnb,GAGfua,OAFM/+B,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMM,EAAMC,EAAMC,EAAME,GAK/D,GAACnb,EAAM8D,kBAKJ,CAECsX,IAAAA,EAAO5/B,EAAI4/B,OACXL,EAAOv/B,EAAIu/B,KAAK/a,GAChBgb,EAAOx/B,EAAIw/B,KAAKhb,GAChBmb,EAAO3/B,EAAI2/B,KAAKnb,GAChBib,EAAOz/B,EAAI0/B,MAAMlb,GAGhBua,OAFM/+B,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMW,EAAML,EAAMC,EAAMG,EAAMF,GAVnEG,IAAAA,EAAO5/B,EAAI4/B,OACXH,EAAOz/B,EAAI0/B,MAAMlb,GAChBxkB,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMW,EAAMH,GAerD,GAAIjb,EAAM2a,QAAS,CACXM,IAAAA,EAAOz/B,EAAI0/B,MAAMlb,GACvB,OAAOxkB,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMQ,GAErCG,IAAAA,EAAO5/B,EAAI4/B,OACXL,EAAOv/B,EAAIu/B,KAAK/a,GAChBgb,EAAOx/B,EAAIw/B,KAAKhb,GAChBmb,EAAO3/B,EAAI2/B,KAAKnb,GAChBib,EAAOz/B,EAAI0/B,MAAMlb,GAGhBua,OAFM/+B,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMW,EAAML,EAAMC,EAAMG,EAAMF,GAjDrEI,IAAAA,EAAO7/B,EAAI6/B,KAAKrb,GAQtB,OAAOxkB,EAAI66B,IAAI76B,EAAIgR,MAAM+tB,KAAMC,EAAMC,EAAMY,EAAM7/B,EAAIy/B,KAAKjb,EAAMO,QAAS8a,EAAKpwB,WAN/D,OAoDlB,CAAA/R,IAAA,OAAAC,MAED,SAAa4V,GACLhE,IAAAA,EAAS,IAAI/R,GAIZwC,OAHF+kB,EAAAA,QAAQ7Z,SAAQ,SAAA5L,GACnBiQ,EAAOkvB,MAAM,IAAItkB,WAAW5G,EAAK4rB,QAAU,CAAC7/B,EAAKopB,SAAW,GAAK,IAAM,CAAC,SAEnE1oB,EAAI66B,IAAI76B,EAAIgR,MAAM6uB,KAAMl8B,KAAKm8B,UAAU,EAAG,GAAIvwB,EAAOA,UAC7D,CAAA7R,IAAA,QAAAC,MAED,SAAc4V,GAGNhE,IAAAA,EAAS,IAAI/R,GACbuiC,EAAcviC,GAAOwiC,YAAYzsB,EAAKwR,QAAQlnB,QAChD4uB,EAAS,KACb,GAAIlZ,EAAK4rB,QAAS,CAChB,IAAMD,EAAa3rB,EAAK+rB,gBAexB7S,EAASjvB,GAAOwiC,YAAkC,GAAtBzsB,EAAKwR,QAAQlnB,OAAcqhC,EAAa,MAC/D3rB,EAAK4U,mBAAqB5U,EAAK+U,oBAClCmE,EAASjvB,GAAOwiC,YAAkC,GAAtBzsB,EAAKwR,QAAQlnB,OAAc,SAEpD,CAWL,IAAIyY,EAA4B,GAAtB/C,EAAKwR,QAAQlnB,OAAc,IACjC0V,EAAK+U,oBACPhS,EAA4B,GAAtB/C,EAAKwR,QAAQlnB,OAAc,EAAI0V,EAAK0sB,UAAUpiC,OAAS,KAEtDL,EAAAA,GAAOwiC,YAAY1pB,GAY9B,OATKyO,EAAAA,QAAQ7Z,SAAQ,SAAA5L,GACnBiQ,EAAOkvB,MAAMjhC,GAAOwiC,YAAY1gC,EAAKiM,WACrCgE,EAAOkvB,MAAMjhC,GAAOwiC,YAAY1gC,EAAKwjB,OACrCvT,EAAOkvB,MAAMjhC,GAAOwiC,YAAY1gC,EAAKopB,SAAW,SAAa,QACzDnV,EAAK4rB,SACAV,EAAAA,MAAMjhC,GAAOwiC,YAAY1gC,EAAK85B,IAAM95B,EAAK85B,IAAM,OAInDp5B,EAAI66B,IAAI76B,EAAIgR,MAAMyuB,KAAM97B,KAAKm8B,UAAU,EAAGvsB,EAAK2sB,OAAQH,EAAatT,EAAQld,EAAOA,UAC3F,CAAA7R,IAAA,OAAAC,MAED,SAAa4V,GACLhE,IAAAA,EAAS,IAAI/R,GACb8Y,EAAM/C,EAAKwR,QAAQlnB,OACnByxB,EAAO/b,EAAK4rB,QAAU,GAAK,EAC3Bn0B,EAAOuI,EAAK4rB,QAAU,EAAI,EAC5Bpa,EAAU,GACVob,EAAgB,EAwBpB,OAvBI5sB,EAAK4rB,SACPpa,EAAUxR,EAAK6rB,UACfe,EAAgB5sB,EAAK+rB,iBAErBva,EAAUxR,EAAK0sB,UAEjBE,EAAgBA,GAAiB7Q,EAAOhZ,EACxC/G,EAAOkvB,MACLjhC,GAAOwiC,YAAY,GAAKG,GAAgBngC,EAAIgR,MAAM2uB,KAAMh8B,KAAKm8B,UAAU,EAAG90B,IAE5EuE,EAAOkvB,MAAMjhC,GAAOwiC,YAAY1pB,IACxBpL,EAAAA,SAAQ,SAAA5L,GACd,IAAA,IAASjB,EAAI,EAAGA,EAAIiB,EAAK8gC,qBAAqBviC,OAAQQ,IAC7CogC,EAAAA,MAAM,IAAItkB,WAAW,CAAC7a,EAAK8gC,qBAAqB/hC,MAErDiB,EAAK+/B,YAAc//B,EAAK+/B,WAAWxhC,SACrC0R,EAAOkvB,MAAMjhC,GAAO6iC,YAAY/gC,EAAK+/B,WAAWxhC,SAC3CwhC,EAAAA,WAAWn0B,SAAQ,SAAAvN,GACtB4R,EAAOkvB,MAAMjhC,GAAO6iC,YAAY1iC,EAAM2iC,mBACtC/wB,EAAOkvB,MAAMjhC,GAAOwiC,YAAYriC,EAAM4iC,8BAIrChxB,EAAOA,SAEf,CAAA7R,IAAA,OAAAC,MAED,SAAa4V,GACX,IAAI1V,EAA+B,GAAtB0V,EAAKwR,QAAQlnB,OAAc,KACnC0V,EAAK4rB,SAAW5rB,EAAK+U,oBACfzqB,EAAA,KAEL88B,IAAAA,EAAU,IAAIxgB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBtc,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,IAEF,OAAOmC,EAAI66B,IAAI76B,EAAIgR,MAAMwuB,KAAM7E,KAChC,CAAAj9B,IAAA,OAAAC,MAED,SAAa4V,GACL4sB,IAAAA,EAAgB5sB,EAAKwR,QAAQlnB,OAC7B88B,EAAU,IAAIxgB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,GACCgmB,GAAiB,GAAM,IACvBA,GAAiB,GAAM,IACvBA,GAAiB,EAAK,IACP,IAAhBA,IAEF,OAAOngC,EAAI66B,IAAI76B,EAAIgR,MAAMuuB,KAAM5E,KAChC,CAAAj9B,IAAA,OAAAC,MAED,WACQg9B,IAAAA,EAAU,IAAIxgB,WAAW,CAC7B,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,GAClB,EAAM,EAAM,EAAM,IAEbna,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAM4uB,KAAMj8B,KAAKm8B,UAAU,EAAG,GAAInF,KACtD,CAAAj9B,IAAA,YAAAC,MAED,SAAkB6iC,EAASx1B,GACzB,OAAO,IAAImP,WAAW,CACpBqmB,EACCx1B,GAAQ,GAAM,IACdA,GAAQ,EAAK,IACP,IAAPA,MAEH,CAAAtN,IAAA,OAAAC,MAED,SAAa89B,GACX,OAAOz7B,EAAI66B,IAAI76B,EAAIgR,MAAMguB,KAAM,IAAI7kB,WAAW,CAC5C,EACA,EAAM,EAAM,EACZshB,GAAM,GAAKA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,OAElD,CAAA/9B,IAAA,OAAAC,MAED,SAAa4V,EAAMgU,GACjB,IAAMkZ,EAA+B30B,KAAKwe,MAAM/C,GAAuB4S,GAAa,IAC9EuG,EAA+B50B,KAAKwe,MAAM/C,GAAuB4S,GAAa,IACpF,OAAI5mB,EAAKwnB,SAAWxnB,EAAK4U,mBAAqB5U,EAAK+U,mBAC1CtoB,EAAI66B,IAAI76B,EAAIgR,MAAMiuB,KAAM,IAAI9kB,WAAW,CAC5C,EACA,EAAM,EAAM,EACZumB,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,KAGK1gC,EAAI66B,IAAI76B,EAAIgR,MAAMiuB,KAAM,IAAI9kB,WAAW,CAC5C,EACA,EAAM,EAAM,EACZsmB,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,EACAC,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,OAGL,CAAAhjC,IAAA,OAAAC,MAED,SAAaonB,EAAS0H,GACpB,IAAMkU,EAAY5b,EAAQlnB,OACpB6uB,EAAU,GAAM,GAAKiU,EAC3BlU,GAAU,EAAIC,EACRnZ,IAAAA,EAAO,IAAI4G,WAAWuS,GAC5BnZ,EAAKkI,IAAI,CACP,EACA,EAAM,GAAM,EACXklB,IAAc,GAAM,IAAOA,IAAc,GAAM,IAAOA,IAAc,EAAK,IAAkB,IAAZA,EAC/ElU,IAAW,GAAM,IAAOA,IAAW,GAAM,IAAOA,IAAW,EAAK,IAAe,IAATA,GACtE,GACH,IAAA,IAASpuB,EAAI,EAAGA,EAAIsiC,EAAWtiC,IAAK,CAClCuiC,IAAAA,EAEI7b,EAAQ1mB,GADVkN,EAAQq1B,EAARr1B,SAAUuX,EAAI8d,EAAJ9d,KAAI+d,EAAAD,EAAE51B,KAAAA,OAAI,IAAA61B,EAAG,GAAEA,EAAAC,EAAAF,EAAExH,IAAAA,OAAM,IAAH0H,EAAG,EAACA,EAEpCvtB,EAAKkI,IAAI,CACNlQ,IAAa,GAAM,IAAOA,IAAa,GAAM,IAAOA,IAAa,EAAK,IAAiB,IAAXA,EAC5EuX,IAAS,GAAM,IAAOA,IAAS,GAAM,IAAOA,IAAS,EAAK,IAAa,IAAPA,EAChE9X,EAAK+1B,WAAa,GAAyB,OAAnB/1B,EAAK2d,gBAAyC3pB,IAAnBgM,EAAK2d,UAA0B,EAAI3d,EAAK2d,WAC3F3d,EAAKg2B,cAAgB,EAAMh2B,EAAKi2B,eAAiB,EAAMj2B,EAAKk2B,cAAgB,GAA+B,OAAzBl2B,EAAK4d,sBAAqD5pB,IAAzBgM,EAAK4d,gBAAgC,EAAI5d,EAAK4d,iBACtI,MAA5B5d,EAAKm2B,oBAA8D,GAA3Bn2B,EAAKm2B,oBAC5C/H,IAAQ,GAAM,IAAOA,IAAQ,GAAM,IAAOA,IAAQ,EAAK,IAAY,IAANA,GAC7D,GAAK,GAAK/6B,GAGf,OAAO2B,EAAI66B,IAAI76B,EAAIgR,MAAMyuB,KAAMlsB,KAChC,CAAA7V,IAAA,UAAAC,MAED,SAAgB08B,GACPr6B,OAAAA,EAAI66B,IAAGp2B,MAAPzE,EAAQA,CAAAA,EAAIgR,MAAM0pB,KACvB16B,EAAIk7B,KAAKb,EAAO,GAAG9uB,SAAU8uB,EAAO,GAAG7W,YAAU3f,OAAAy3B,EAC9CjB,EAAOv0B,KAAI,SAACuI,GAAMrO,OAAAA,EAAIohC,SAAS/yB,WACrC,CAAA3Q,IAAA,WAAAC,MAED,SAAiB6mB,GACf,OAAOxkB,EAAI66B,IACT76B,EAAIgR,MAAMuqB,KACVv7B,EAAIw7B,KAAKhX,EAAMiX,GAAIjX,EAAMjZ,SAAUiZ,EAAMR,MAAOQ,EAAMP,QACtDjkB,EAAIqhC,QAAQ7c,MAEf,CAAA9mB,IAAA,UAAAC,MAED,SAAgB6mB,GACPxkB,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAM2qB,KAAM37B,EAAI47B,KAAKpX,EAAMjZ,SAAUiZ,EAAMhB,WAAYxjB,EAAI67B,KAAKrX,EAAM1iB,MAAO9B,EAAIshC,QAAQ9c,MAC7G,CAAA9mB,IAAA,UAAAC,MAED,SAAgB6mB,GACd,OAAOxkB,EAAI66B,IAAI76B,EAAIgR,MAAM8qB,KAAMtX,EAAM1iB,OAASmlB,GAAkBjnB,EAAIg8B,KAAOh8B,EAAIi8B,KAAMj8B,EAAIk8B,KAAMl8B,EAAIuhC,QAAQ/c,MAC5G,CAAA9mB,IAAA,UAAAC,MAED,SAAgB6mB,GACd,IAAQhiB,EAAQgiB,EAARhiB,IACF27B,EAAQ,CACZn+B,EAAIu8B,KAAK/X,GACTxkB,EAAIwhC,KAAKh/B,EAAIg/B,MACbxhC,EAAIyhC,KAAKj/B,EAAIi/B,MACbzhC,EAAI0hC,KAAKl/B,EAAIk/B,MACb1hC,EAAI2hC,KAAKn/B,EAAIm/B,OAWR3hC,OARHwC,EAAI65B,KAAKx+B,QACXsgC,EAAMz/B,KAAKsB,EAAIq8B,KAAK75B,EAAI65B,OAGtB75B,EAAIo/B,KAAK/jC,QACXsgC,EAAMz/B,KAAKsB,EAAI4hC,KAAKp/B,EAAIo/B,OAGnB5hC,EAAI66B,IAAGp2B,MAAPzE,EAAG,CAAKA,EAAIgR,MAAMmrB,MAAIt4B,OAAKs6B,MACnC,CAAAzgC,IAAA,OAAAC,MAED,SAAaonB,GACX,IAAMzO,EAAMyO,EAAQlnB,OACd0V,EAAO,IAAI4G,WAAW,EAAI7D,GAC5BmW,EAAS,EASNzsB,OARCkL,EAAAA,SAAQ,SAAA22B,GAAsB,IAAnBlkC,EAAKkkC,EAALlkC,MAAOysB,EAAKyX,EAALzX,MACnB3O,EAAAA,IAAI,CACP2O,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EACxDzsB,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,GACvD8uB,GACOA,GAAA,KAGLzsB,EAAI66B,IAAI76B,EAAIgR,MAAMwwB,KAAM3gB,GAAiB,IAAI1G,WAAW,CAC7D,EAAG,EAAG,EAAG,EACR7D,GAAO,GAAMA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAClD/C,MACL,CAAA7V,IAAA,OAAAC,MAED,SAAa2+B,GACX,IAAMhmB,EAAMgmB,EAAQz+B,OACd0V,EAAO,IAAI4G,WAAW,GAAK7D,GAC7BmW,EAAS,EASNzsB,OARCkL,EAAAA,SAAQ,SAAA42B,GAAsD,IAAnDC,EAAUD,EAAVC,WAAYC,EAAeF,EAAfE,gBAAiBC,EAAeH,EAAfG,gBAC9C1uB,EAAKkI,IAAI,CACPsmB,GAAc,GAAKA,GAAc,GAAM,IAAOA,GAAc,EAAK,IAAmB,IAAbA,EACvEC,GAAmB,GAAKA,GAAmB,GAAM,IAAOA,GAAmB,EAAK,IAAwB,IAAlBA,EACtFC,GAAmB,GAAKA,GAAmB,GAAM,IAAOA,GAAmB,EAAK,IAAwB,IAAlBA,GACrFxV,GACOA,GAAA,MAELzsB,EAAI66B,IAAI76B,EAAIgR,MAAMywB,KAAM5gB,GAAiB,IAAI1G,WAAW,CAC7D,EAAG,EAAG,EAAG,EACR7D,GAAO,GAAMA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAClD/C,MACL,CAAA7V,IAAA,OAAAC,MAED,SAAaukC,GACX,IAAM5rB,EAAM4rB,EAAarkC,OACnB0V,EAAO,IAAI4G,WAAW,EAAI7D,GAC5BmW,EAAS,EAOb,OANavhB,EAAAA,SAAQ,SAACoD,GACpBiF,EAAKkI,IAAI,CACPnN,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3Cme,GACOA,GAAA,KAELzsB,EAAI66B,IAAI76B,EAAIgR,MAAM0wB,KAAM7gB,GAC7B,IAAI1G,WAAW,CACb,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT7D,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD/C,MAEH,CAAA7V,IAAA,OAAAC,MAED,SAAawkC,GACX,IAAM7rB,EAAM6rB,EAAQtkC,OACd0V,EAAO,IAAI4G,WAAW,EAAI7D,GAC5BmW,EAAS,EAONzsB,OANCkL,EAAAA,SAAQ,SAACoD,GACfiF,EAAKkI,IAAI,CACPnN,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3Cme,GACOA,GAAA,KAELzsB,EAAI66B,IAAI76B,EAAIgR,MAAM2wB,KAAM9gB,GAC7B,IAAI1G,WAAW,CACb,EAAG,EAAG,EAAG,EACT7D,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD/C,MAEH,CAAA7V,IAAA,OAAAC,MAED,SAAaykC,GACX,IAAM9rB,EAAM8rB,EAAgBvkC,OACtB0V,EAAO,IAAI4G,WAAW,EAAI7D,GAC5BmW,EAAS,EAONzsB,OANSkL,EAAAA,SAAQ,SAACoD,GACvBiF,EAAKkI,IAAI,CACPnN,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3Cme,GACOA,GAAA,KAELzsB,EAAI66B,IAAI76B,EAAIgR,MAAMqrB,KAAMxb,GAC7B,IAAI1G,WAAW,CACb,EAAG,EAAG,EAAG,EACT7D,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD/C,MAEH,CAAA7V,IAAA,OAAAC,MAED,SAAaonB,GACX,IAAMzO,EAAMyO,EAAQlnB,OACd0V,EAAO,IAAI4G,WAAW,EAAI7D,GAC5BmW,EAAS,EAQNzsB,OAPCkL,EAAAA,SAAQ,SAAAm3B,GAAsB,IAAnB1kC,EAAK0kC,EAAL1kC,MAAOysB,EAAKiY,EAALjY,MACnB3O,EAAAA,IAAI,CACP2O,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EACxDzsB,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,GACvD8uB,GACOA,GAAA,KAELzsB,EAAI66B,IAAI76B,EAAIgR,MAAM4wB,KAAM/gB,GAAiB,IAAI1G,WAAW,CAC7D,EAAG,EAAG,EAAG,EACT7D,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAChD/C,MACL,CAAA7V,IAAA,OAAAC,MAED,WACSqC,OAAAA,EAAI66B,IAAI76B,EAAIgR,MAAMsxB,KAAM,IAAInoB,WAAW,CAC5C,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,IAAM,IAAM,IAAM,SAItB,CAAAzc,IAAA,OAAAC,MACA,SAAa4V,GAEX,IAAMiQ,EAAYjQ,EAAKiQ,UACjBjY,EAAWgI,EAAKwR,QAAQ,GAAGxZ,SAC3Bg3B,EAAgBh3B,EAAWgI,EAAKwR,QAAQlnB,OACxC2kC,EAAejvB,EAAKwR,QAAQ,GAAG+D,aAAevd,EAChDk3B,EAAW,EACV1d,EAAAA,QAAQ7Z,SAAQ,SAAA5L,GACnBmjC,GAAYnjC,EAAKwjB,QAEnB,IAAIjlB,EAAS,EACb,GAAI0V,EAAK4rB,QAAS,CAChB,IACIpa,EADAma,EAAa,EAEb3rB,EAAK6rB,YACPra,EAAUxR,EAAK6rB,WAEb7rB,EAAK4rB,SACCj0B,EAAAA,SAAQ,SAAA5L,GACd4/B,GAA0B,EACtB5/B,EAAK+/B,YAAc//B,EAAK+/B,WAAWxhC,SACrCqhC,GAA0B,EACbA,GAAsC,EAAzB5/B,EAAK+/B,WAAWxhC,WAIhD0V,EAAK+rB,gBAAkBJ,EACvBrhC,EAAS4kC,EAAW,IAA4B,GAAtBlvB,EAAKwR,QAAQlnB,OAAcqhC,EACjD3rB,EAAKwnB,QAAUxnB,EAAK+U,oBAAsB/U,EAAK4U,oBACjDtqB,EAAS4kC,EAAkC,GAAtBlvB,EAAKwR,QAAQlnB,OAAe,SAGnDA,EAAS4kC,EAAW,IAA4B,GAAtBlvB,EAAKwR,QAAQlnB,OACnC0V,EAAKwnB,QAAUxnB,EAAK+U,oBACbma,EAAAA,EAAW,IAA4B,GAAtBlvB,EAAKwR,QAAQlnB,OAAc,EAAI0V,EAAK0sB,UAAUpiC,QAItE88B,IAAAA,EAAU,IAAIxgB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAgB,IAAV5G,EAAKkoB,GACtBjY,GAAa,GAAM,IACnBA,GAAa,GAAM,IACnBA,GAAa,EAAK,IACP,IAAZA,EACCgf,GAAgB,GAAM,IACtBA,GAAgB,GAAM,IACtBA,GAAgB,EAAK,IACP,IAAfA,EACA,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EAGN,EACC3kC,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,EACC0kC,GAAiB,GAAM,IACvBA,GAAiB,GAAM,IACvBA,GAAiB,EAAK,IACP,IAAhBA,EACA,IAAM,EAAM,EAAM,IAEpB,OAAOviC,EAAI66B,IAAI76B,EAAIgR,MAAM0xB,KAAM/H,KAChC,CAAAj9B,IAAA,OAAAC,MAED,SAAa4V,GAGJovB,OAFM3iC,EAAI66B,IAAI76B,EAAIgR,MAAM2xB,KAAMpvB,OAGtCvT,EApwCa,GAqwCfuB,EArwCYvB,GAAG,QACC,CACb,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACArB,QAAO,SAACsR,EAAGpR,GAEJoR,OADPA,EAAEpR,GAAK,CAACA,EAAEi/B,WAAW,GAAIj/B,EAAEi/B,WAAW,GAAIj/B,EAAEi/B,WAAW,GAAIj/B,EAAEi/B,WAAW,IACjE7tB,IACNhJ,OAAOkC,OAAO,QAAM5H,EA5DZvB,GA8DS,aAAA,CAClB4iC,MAAO,IAAIzoB,WAAW,CACpB,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GACpC,IAAM,IAAM,IAAM,IAAM,IAAM,IAEhC0oB,MAAO,IAAI1oB,WAAW,CACpB,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GACpC,IAAM,IAAM,IAAM,IAAM,IAAM,MAnFvBna,EAAAA,GAuFOA,WAAAA,GAAI66B,IAAI76B,GAAIgR,MAAMypB,KAAM,IAAItgB,WAAW,CACvD,IAAK,IAAK,IAAK,IACf,EAAG,EAAG,EAAG,EACT,IAAK,IAAK,IAAK,IACf,GAAI,IAAK,GAAI,OA3FJna,EAAAA,GA8FOA,WAAAA,GAAI66B,IAAI76B,GAAIgR,MAAMypB,KAAM,IAAItgB,WAAW,CACvD,IAAK,IAAK,IAAK,IACf,EAAG,EAAG,EAAG,EACT,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,OACd5Y,EAnGQvB,GAAG,OAqGAA,GAAI66B,IAAI76B,GAAIgR,MAAM8xB,KAAM9iC,GAAI66B,IAAI76B,GAAIgR,MAAM+xB,KAAM,IAAI5oB,WAAW,CAC3E,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,GAClB,IAAM,IAAM,IAAM,GAClB,EACA,EAAM,EAAM,OA5GHna,EAAAA,GAAG,OA+GAA,GAAI66B,IAAI76B,GAAIgR,MAAMgyB,KAAM,IAAI7oB,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,MAnHrBna,EAAAA,GAAG,OAsHAA,GAAI66B,IAAI76B,GAAIgR,MAAMiyB,KAAM,IAAI9oB,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,MA1HGna,EAAAA,GAAG,YA6HK,IAAIma,WAAW,CAChC,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,KAhITna,EAAAA,GAAG,OAmIAA,GAAI66B,IAAI76B,GAAIgR,MAAMwwB,KAAMxhC,GAAIkjC,YAnI/BljC,EAAAA,GAAG,OAqIAA,GAAI66B,IAAI76B,GAAIgR,MAAMywB,KAAMzhC,GAAIkjC,YArI/BljC,EAAAA,GAAG,OAuIAA,GAAI66B,IAAI76B,GAAIgR,MAAM0wB,KAAM,IAAIvnB,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,MA3ITna,EAAAA,GAAG,OA8IAA,GAAI66B,IAAI76B,GAAIgR,MAAM2wB,KAAM3hC,GAAIkjC,YCnJ5C,IAAa1/B,GAAM,WACjBA,SAAAA,EAAaC,EAAM+G,GAAQ/M,OAAA+F,GACzBG,KAAKF,KAAOA,GAAQ,GACpBE,KAAKC,QAAOC,IAAAA,OAAOF,KAAKF,KAAO,KAC/BD,EAAOkB,SAAW8F,EAsCnBhH,OArCAU,EAAAV,EAAA,CAAA,CAAA9F,IAAA,QAAAC,MAED,WAAgBwG,IAAAA,EACd,IAAIX,EAAOkB,SAAX,CAA2B,IAAA,IAAAN,EAAArF,UAAAlB,OADnBwG,EAAIC,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAxF,UAAAwF,IAEZJ,EAAAQ,SAAQC,MAAKH,MAAAN,EAAA,CAACR,KAAKC,SAAOC,OAAKQ,OAChC,CAAA3G,IAAA,MAAAC,MAED,WAAcmH,IAAAA,EACZ,IAAItB,EAAOkB,SAAX,CAA2B,IAAA,IAAAK,EAAAhG,UAAAlB,OADrBwG,EAAIC,IAAAA,MAAAS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJX,EAAIW,GAAAjG,UAAAiG,IAEVF,EAAAH,SAAQM,IAAGR,MAAAK,EAAA,CAACnB,KAAKC,SAAOC,OAAKQ,OAC9B,CAAA3G,IAAA,OAAAC,MAED,WAAeuH,IAAAA,EACb,IAAI1B,EAAOkB,SAAX,CAA2B,IAAA,IAAAS,EAAApG,UAAAlB,OADpBwG,EAAIC,IAAAA,MAAAa,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJf,EAAIe,GAAArG,UAAAqG,IAEXF,EAAAP,SAAQU,KAAIZ,MAAAS,EAAA,CAACvB,KAAKC,SAAOC,OAAKQ,OAC/B,CAAA3G,IAAA,QAAAC,MAED,WAAgB2H,IAAAA,EACd,IAAI9B,EAAOkB,SAAX,CAA2B,IAAA,IAAAa,EAAAxG,UAAAlB,OADnBwG,EAAIC,IAAAA,MAAAiB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnB,EAAImB,GAAAzG,UAAAyG,IAEZF,EAAAX,SAAQzG,MAAKuG,MAAAa,EAAA,CAAC3B,KAAKC,SAAOC,OAAKQ,OAChC,CAAA3G,IAAA,QAAAC,MAED,WAAgB4I,IAAAA,EACV/C,EAAOkB,WACH8B,QAAAA,MAAM7C,KAAKC,UACnB2C,EAAA5B,SAAQ8B,MAAKhC,MAAA8B,EAAAxH,WACb4F,QAAQ+B,eACT,CAAA,CAAAhJ,IAAA,SAAAC,MAID,WACE6F,EAAOkB,UAAW,IACnB,CAAAhH,IAAA,UAAAC,MAED,WACE6F,EAAOkB,UAAW,MACnBlB,EA1CgB,GAANA,EAAAA,GAAM,YAkCC,GC1BpB,ICGA,IAAa2/B,GAAW,WAKtBA,SAAAA,EAAazc,EAAYmM,EAAY3e,GAASzW,OAAA0lC,GAC5Cx/B,KAAK+iB,WAAaA,EAClB/iB,KAAKkvB,WAAaA,EAClB,IAAMuQ,EAAkB,kBAAkBzyB,KAAKkb,UAAUC,WACzDnoB,KAAK0/B,cAAgBD,GAAmBpvB,OAAOovB,EAAgB,IAAM,GAChEn+B,KAAAA,IAAM,IAAIzB,GAAO,eAAe0Q,IAAWA,EAAQ3J,UAAW2J,EAAQ3J,SA4G5E44B,OAzGDj/B,EAAAi/B,EAAA,CAAA,CAAAzlC,IAAA,QAAAC,MAIA,WAAO2lC,IAMDC,EACAC,EAEAC,EAkBAC,EACAC,EA5BCL,EAAUvkC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,IAAAA,UAAA,GAAUmV,EAAOnV,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC7B2nB,EAAa/iB,KAAK+iB,WAClBmM,EAAalvB,KAAKkvB,WAClB+Q,EAAWld,EAAWwN,QACtB2P,EAAWhR,EAAWqB,QAMtBmG,EAAS,GA8BR,OA5BHiJ,IACEpvB,GAAWA,EAAQ4vB,WACjBF,GACKllC,EAAAA,KAAKiF,KAAK+iB,YAEfmd,GACKnlC,EAAAA,KAAKiF,KAAKkvB,YAEL7yB,EAAAA,GAAIyjC,YAAYpJ,KAE1BuJ,IAAUL,EAAmBvjC,GAAIyjC,YAAY,CAAC9/B,KAAK+iB,cACnDmd,IAAUL,EAAmBxjC,GAAIyjC,YAAY,CAAC9/B,KAAKkvB,gBAMvD+Q,GAAYld,EAAW2R,cACzBqL,EAAe//B,KAAKogC,eAGlBF,GAAYhR,EAAWwF,cACzBsL,EAAehgC,KAAKqgC,eAGtBtd,EAAW3B,QAAU,GACrB8N,EAAW9N,QAAU,GAEd,CACL0e,YAAAA,EACAF,iBAAAA,EACAC,iBAAAA,EACAE,aAAAA,EACAC,aAAAA,KAEH,CAAAjmC,IAAA,cAAAC,MAED,WACE,IAAM6mB,EAAQ7gB,KAAK+iB,WACf/iB,KAAK0/B,gBACDte,EAAAA,QAAQ,GAAG/Z,KAAO,CAAE2d,UAAW,EAAGC,gBAAiB,IAE3D,IAAM7D,EAAUP,EAAMO,QAElB0d,EAAW,EAEPv3B,EAAAA,SAAQ,SAACiU,GACfsjB,GAAYtjB,EAAEkG,MAAM1mB,QAAO,SAAC0P,EAAGxP,GAAC,OAAMwP,EAAIxP,EAAE4Q,aAAa,GAC5C0P,GAAiB,EAAjBA,EAAEkG,MAAMxnB,UAMdQ,IAHH4lC,IAG0Cjf,EAH1Cif,EAAQ,IAAI9pB,WAAWsoB,GACvByB,EAAW,IAAIha,SAAS+Z,EAAM10B,QAAO40B,EAAAA,SAAAC,EAAAC,GAGzCA,EAAStf,EAAQ1mB,GAEjB,IAAI63B,EAAa,EACV7Q,EAAAA,MAAMna,SAAQ,SAACo5B,GACXC,EAAAA,UAASH,EAASE,EAAE70B,YACnB20B,GAAA,EACJ3oB,EAAAA,IAAI6oB,EAACF,GACXA,GAAUE,EAAE70B,WACZymB,GAAe,EAAIoO,EAAE70B,cAEvB40B,EAAOvhB,KAAOoT,EAAUzJ,EAAA2X,EAAApf,EAAAqf,GAXjBhmC,EAAI,EAAGC,EAAIymB,EAAQlnB,OAAQ4uB,EAAS,EAAWpuB,EAAIC,EAAGD,IAAG8lC,EAAA1X,EAAAzH,GAa5D2d,IAAAA,EAAO3iC,GAAI2iC,KAAKsB,GAGfpjB,OAAAA,GADM7gB,GAAI6+B,KAAK,CAACra,IACOme,KAE/B,CAAAjlC,IAAA,cAAAC,MAED,WACE,IAAM6mB,EAAQ7gB,KAAKkvB,WACboR,EAAQ,IAAI9pB,WAAWqK,EAAMO,QAAQpmB,QAAO,SAAC0P,EAAGxP,GAAC,OAAMwP,EAAIxP,EAAEikB,OAAO,IAC1E0B,EAAMO,QAAQpmB,QAAO,SAAC8tB,EAAQtN,GAE5B,OADM1D,EAAAA,IAAI0D,EAAE5L,KAAMkZ,GACXA,EAAStN,EAAE2D,OACjB,GACG6f,IAAAA,EAAO3iC,GAAI2iC,KAAKsB,GAEfpjB,OAAAA,GADM7gB,GAAI6+B,KAAK,CAACra,IACOme,KAC/B,CAAAjlC,IAAA,QAAAC,MAED,WACEgG,KAAK+iB,WAAWpgB,QAChB3C,KAAKkvB,WAAWvsB,YACjB68B,EAtHqB,GCPXqB,GAAI,WAAA,SAAAA,IAAA/mC,OAAA+mC,GAedA,OAfctgC,EAAAsgC,EAAA,CAAA,CAAA9mC,IAAA,QAAAC,MA4Bf,SAAM8mC,GACGx9B,OAAAA,OAAOmD,OAAOzG,KAAM8gC,KAG7B,CAAA/mC,IAAA,QAAAC,MASA,WACQ+mC,IAAAA,EAAQ,IAAI/gC,KAAKghC,YAEhBD,OADAt6B,OAAAA,OAAOs6B,EAAO/gC,MACd+gC,KACR,CAAA,CAAAhnC,IAAA,SAAAC,MAhCD,WAAuB,IAAA,IAAAyG,EAAArF,UAAAlB,OAANwG,EAAIC,IAAAA,MAAAF,GAAAY,EAAA,EAAAA,EAAAZ,EAAAY,IAAJX,EAAIW,GAAAjG,UAAAiG,GACnB4/B,OAAAA,EAAWjhC,KAAQU,OACpBmgC,EAfc,GAsDJK,YAASC,GAAAnjC,EAAAkjC,EAAAC,GAAAljC,IAAAA,EAAAC,EAAAgjC,GAapB,SAAAA,IAAqD1iC,IAAAA,EAAzC4iC,EAAKhmC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAIimC,EAAQjmC,UAAAlB,eAAAmB,IAAAD,UAAA,GAAAA,UAAGgmC,GAAe,EAAfA,EAAMlnC,OAAUJ,OAAAonC,GACjDjjC,EAAAA,EAAAQ,KAAAuB,MAEA,IAAIshC,EAAaF,EAqBjB,GAnBIE,aAAsB3G,cACX2G,EAAA,IAAI9qB,WAAW8qB,KAK5BA,aAAsBC,WACnBD,aAAsBE,mBACtBF,aAAsBG,YACtBH,aAAsBI,aACtBJ,aAAsBK,YACtBL,aAAsBM,aACtBN,aAAsBO,cACtBP,aAAsBQ,gBAEzBR,EAAa,IAAI9qB,WAAW8qB,EAAW11B,OAAQ01B,EAAW3O,WAAY2O,EAAWx1B,aAI/Ew1B,aAAsB9qB,WAAY,CAMpC,IAJA,IAAMurB,EAAuBT,EAAWx1B,WAGlCk2B,EAAS,GACNtnC,EAAI,EAAGA,EAAIqnC,EAAsBrnC,GAAK,EAC7CsnC,EAAOtnC,IAAM,IAAM4mC,EAAW5mC,IAAO,GAAMA,EAAI,EAAK,EAItD8D,EAAK4iC,MAAQY,EACbxjC,EAAK6iC,SAAWU,OAGhBvjC,EAAK4iC,MAAQA,EACb5iC,EAAK6iC,SAAWA,EACjB7iC,OAAAA,EA0CF0iC,OAvCD3gC,EAAA2gC,EAAA,CAAA,CAAAnnC,IAAA,WAAAC,MAsDA,WAASioC,IAAAA,EAAO7mC,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG8mC,GACVD,OAAAA,EAAQ3/B,UAAUtC,QAG3B,CAAAjG,IAAA,SAAAC,MAWA,SAAOmoC,GAEL,IAAMC,EAAYpiC,KAAKohC,MACjBiB,EAAYF,EAAUf,MACtBkB,EAAetiC,KAAKqhC,SACpBkB,EAAeJ,EAAUd,SAM/B,GAHArhC,KAAKwiC,QAGDF,EAAe,EAEjB,IAAA,IAAS5nC,EAAI,EAAGA,EAAI6nC,EAAc7nC,GAAK,EAAG,CACxC,IAAM+nC,EAAYJ,EAAU3nC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,IAC/D0nC,EAAWE,EAAe5nC,IAAO,IAAM+nC,GAAa,IAAOH,EAAe5nC,GAAK,EAAK,OAItF,IAAA,IAASA,EAAI,EAAGA,EAAI6nC,EAAc7nC,GAAK,EACrC0nC,EAAWE,EAAe5nC,IAAO,GAAK2nC,EAAU3nC,IAAM,GAMnD,OAHPsF,KAAKqhC,UAAYkB,EAGVviC,OAGT,CAAAjG,IAAA,QAAAC,MAOA,WAEE,IAAQonC,EAAoBphC,KAApBohC,MAAOC,EAAarhC,KAAbqhC,SAGfD,EAAMC,IAAa,IAAM,YAAe,GAAMA,EAAW,EAAK,EAC9DD,EAAMlnC,OAASiO,KAAKwjB,KAAK0V,EAAW,KAGtC,CAAAtnC,IAAA,QAAAC,MASA,WACQ+mC,IAAAA,EAAQ2B,EAAAznB,EAAAimB,EAAA39B,WAAA,QAAAvD,MAAYvB,KAAKuB,MAGxB+gC,OAFPA,EAAMK,MAAQphC,KAAKohC,MAAM39B,MAAM,GAExBs9B,KACR,CAAA,CAAAhnC,IAAA,SAAAC,MAnHD,SAAc2oC,GAkBZ,IAjBA,IAiBgBC,EAjBVxB,EAAQ,GAERyB,EAAI,SAACC,GACT,IAAIC,EAAOD,EACPE,EAAO,UACLC,EAAO,WAEb,OAAO,WAGDp/B,IAAAA,IAFJm/B,EAAQ,OAAiB,MAAPA,IAAkBA,GAAQ,IAASC,IAE9B,KADvBF,EAAQ,MAAiB,MAAPA,IAAkBA,GAAQ,IAASE,GACdA,EAGvC,OAFUp/B,GAAA,YACAA,GAAA,KACOsE,KAAK+6B,SAAW,GAAM,GAAI,KAItCxoC,EAAI,EAAWA,EAAIioC,EAAQjoC,GAAK,EAAG,CAC1C,IAAMyoC,EAAKN,EAA8B,YAA3BD,GAAUz6B,KAAK+6B,WAE7BN,EAAgB,UAAPO,IACT/B,EAAMrmC,KAAa,WAAPooC,IAAsB,GAG7B,OAAA,IAAIjC,EAAUE,EAAOuB,OAC7BzB,GAhG4BL,IA+LlBqB,GAAM,CAcjB5/B,UAAS,SAAC6/B,GAMR,IAJA,IAAQf,EAAoBe,EAApBf,MAAOC,EAAac,EAAbd,SAGT+B,EAAW,GACR1oC,EAAI,EAAGA,EAAI2mC,EAAU3mC,GAAK,EAAG,CACpC,IAAM2oC,EAAQjC,EAAM1mC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,IACvD0oC,EAASroC,MAAMsoC,IAAS,GAAG7/B,SAAS,KACpC4/B,EAASroC,MAAa,GAAPsoC,GAAa7/B,SAAS,KAGhC4/B,OAAAA,EAAS1gC,KAAK,KAgBvBkmB,MAAK,SAAC0a,GAMJ,IAJA,IAAMC,EAAeD,EAAOppC,OAGtBknC,EAAQ,GACL1mC,EAAI,EAAGA,EAAI6oC,EAAc7oC,GAAK,EACrC0mC,EAAM1mC,IAAM,IAAM8J,SAAS8+B,EAAOE,OAAO9oC,EAAG,GAAI,KAAQ,GAAMA,EAAI,EAAK,EAGzE,OAAO,IAAIwmC,GAAUE,EAAOmC,EAAe,KAOlCE,GAyCN,SAACC,GAMJ,IAJA,IAAMC,EAAkBD,EAAUxpC,OAG5BknC,EAAQ,GACL1mC,EAAI,EAAGA,EAAIipC,EAAiBjpC,GAAK,EAClCA,EAAAA,IAAM,KAAiC,IAA1BgpC,EAAUvJ,WAAWz/B,KAAe,GAAMA,EAAI,EAAK,EAGjE,OAAA,IAAIwmC,GAAUE,EAAOuC,IAOnBC,GAmCN,SAACC,GACJ,OAAOJ,GAAaK,SAAS90B,mBAAmB60B,MAavCE,YAAsBC,GAAAhmC,EAAA+lC,EAAAC,GAAAve,IAAAA,EAAAvnB,EAAA6lC,GACjC,SAAAA,IAAcx+B,IAAAA,EAEYA,OAFZzL,OAAAiqC,IACZte,EAAAA,EAAAhnB,KAAAuB,OACKikC,eAAiB,EAAE1+B,EA+GzBw+B,OA5GDxjC,EAAAwjC,EAAA,CAAA,CAAAhqC,IAAA,QAAAC,MAOA,WAEO8rB,KAAAA,MAAQ,IAAIob,GACjBlhC,KAAKkkC,YAAc,IAGrB,CAAAnqC,IAAA,UAAAC,MAYA,SAAQ4V,GACN,IAAIu0B,EAASv0B,EAGS,iBAAXu0B,IACAP,EAAAA,GAAWO,IAIjBre,KAAAA,MAAM5lB,OAAOikC,GAClBnkC,KAAKkkC,aAAeC,EAAO9C,WAG7B,CAAAtnC,IAAA,WAAAC,MAcA,SAASoqC,GACHC,IAAAA,EAGWz0B,EAAoB5P,KAA3B8lB,MAAawe,EAActkC,KAAdskC,UACfC,EAAY30B,EAAKwxB,MACjBoD,EAAe50B,EAAKyxB,SAItBoD,EAAeD,GAHgB,EAAZF,GAcjBI,GARWv8B,EAFbi8B,EAEaj8B,KAAKwjB,KAAK8Y,GAIVt8B,KAAKC,KAAoB,EAAfq8B,GAAoBzkC,KAAKikC,eAAgB,IAIjCK,EAG7BK,EAAcx8B,KAAKiX,IAAkB,EAAdslB,EAAiBF,GAG9C,GAAIE,EAAa,CACf,IAAA,IAAS5b,EAAS,EAAGA,EAAS4b,EAAa5b,GAAUwb,EAE9CM,KAAAA,gBAAgBL,EAAWzb,GAIjByb,EAAAA,EAAUr3B,OAAO,EAAGw3B,GACrC90B,EAAKyxB,UAAYsD,EAIZ,OAAA,IAAIzD,GAAUmD,EAAgBM,KAGvC,CAAA5qC,IAAA,QAAAC,MASA,WACQ+mC,IAAAA,EAAQ2B,EAAAznB,EAAA8oB,EAAAxgC,WAAA,QAAAvD,MAAYvB,KAAKuB,MAGxB+gC,OAFPA,EAAMjb,MAAQ9lB,KAAK8lB,MAAMib,QAElBA,MACRgD,GAlHyClD,IA4H/BgE,YAAMC,GAAA9mC,EAAA6mC,EAAAC,GAAAC,IAAAA,EAAA7mC,EAAA2mC,GACjB,SAAAA,EAAYrnB,GAAKpW,IAAAA,EAWFA,OAXEtN,OAAA+qC,IACfE,EAAAA,EAAAtmC,KAAAuB,OAEKskC,UAAY,GAKjBl9B,EAAKoW,IAAMla,OAAOmD,OAAO,IAAIo6B,GAAQrjB,GAGrCpW,EAAKzE,QAAQyE,EAmCdy9B,OAhCDtkC,EAAAskC,EAAA,CAAA,CAAA9qC,IAAA,QAAAC,MAyCA,WAEEihB,EAAAA,EAAA4pB,EAAAthC,WAAY9E,QAAAA,MAAAA,KAAKuB,MAGjBA,KAAKglC,aAGP,CAAAjrC,IAAA,SAAAC,MAYA,SAAOirC,GAQE,OANPjlC,KAAKklC,QAAQD,GAGbjlC,KAAKmlC,WAGEnlC,OAGT,CAAAjG,IAAA,WAAAC,MAcA,SAASirC,GASAG,OAPHH,GACFjlC,KAAKklC,QAAQD,GAIFjlC,KAAKqlC,iBAGnB,CAAA,CAAAtrC,IAAA,gBAAAC,MAnFD,SAAqBsrC,GACZ,OAAA,SAAC5mC,EAAS8e,GAAG,OAAK,IAAI8nB,EAAU9nB,GAAK+nB,SAAS7mC,MAGvD,CAAA3E,IAAA,oBAAAC,MAaA,SAAyBsrC,GAChB,OAAA,SAAC5mC,EAAS3E,GAAG,OAAK,IAAIyrC,GAAKF,EAAWvrC,GAAKwrC,SAAS7mC,QAC5DmmC,GA/CyBd,IAqHfyB,YAAIC,GAAAznC,EAAAwnC,EAAAC,GAAAC,IAAAA,EAAAxnC,EAAAsnC,GAWfA,SAAAA,EAAYF,EAAWvrC,GAAKiO,IAAAA,EAAAlO,OAAA0rC,GAC1BE,EAAAA,EAAAjnC,KAAAuB,MAEM2lC,IAAAA,EAAS,IAAIL,EACnBt9B,EAAK49B,QAAUD,EAGf,IAAI/kC,EAAO7G,EACS,iBAAT6G,IACFgjC,EAAAA,GAAWhjC,IAIpB,IAAMilC,EAAkBF,EAAOrB,UACzBwB,EAAyC,EAAlBD,EAGzBjlC,EAAKygC,SAAWyE,IACXH,EAAAA,EAAOJ,SAASxrC,IAIzB6G,EAAK4hC,QAGCuD,IAAAA,EAAOnlC,EAAKmgC,QAClB/4B,EAAKg+B,MAAQD,EACPE,IAAAA,EAAOrlC,EAAKmgC,QAClB/4B,EAAKk+B,MAAQD,EAOb,IAJA,IAAME,EAAYJ,EAAK3E,MACjBgF,EAAYH,EAAK7E,MAGd1mC,EAAI,EAAGA,EAAImrC,EAAiBnrC,GAAK,EACxCyrC,EAAUzrC,IAAM,WAChB0rC,EAAU1rC,IAAM,UAMLsN,OAJb+9B,EAAK1E,SAAWyE,EAChBG,EAAK5E,SAAWyE,EAGhB99B,EAAKrF,QAAQqF,EA8Ddw9B,OA3DDjlC,EAAAilC,EAAA,CAAA,CAAAzrC,IAAA,QAAAC,MAOA,WAEE,IAAM2rC,EAAS3lC,KAAK4lC,QAGpBD,EAAOhjC,QACA0jC,EAAAA,OAAOrmC,KAAKkmC,SAGrB,CAAAnsC,IAAA,SAAAC,MAYA,SAAOirC,GAIE,OAHFW,KAAAA,QAAQS,OAAOpB,GAGbjlC,OAGT,CAAAjG,IAAA,WAAAC,MAcA,SAASirC,GAEP,IAAMU,EAAS3lC,KAAK4lC,QAGdU,EAAYX,EAAOJ,SAASN,GAI3BsB,OAHPZ,EAAOhjC,QACMgjC,EAAOJ,SAASvlC,KAAKgmC,MAAMjF,QAAQ7gC,OAAOomC,QAGxDd,GApHuB3E,IC3nBb2F,GAAS,CAcpBlkC,UAAS,SAAC6/B,GAER,IAAQf,EAAoBe,EAApBf,MAAOC,EAAac,EAAbd,SACTl/B,EAAMnC,KAAKymC,KAGjBtE,EAAUK,QAIV,IADA,IAAMkE,EAAc,GACXhsC,EAAI,EAAGA,EAAI2mC,EAAU3mC,GAAK,EAOxBmY,IANT,IAIM8zB,GAJSvF,EAAM1mC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,MAI9B,IAHX0mC,EAAO1mC,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,MAG1B,EAF3B0mC,EAAO1mC,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAI3DmY,EAAI,EAAIA,EAAI,GAAOnY,EAAQ,IAAJmY,EAAWwuB,EAAWxuB,GAAK,EAC7C9X,EAAAA,KAAKoH,EAAIykC,OAAQD,IAAa,GAAK,EAAI9zB,GAAO,KAKxDg0B,IAAAA,EAAc1kC,EAAIykC,OAAO,IAC/B,GAAIC,EACKH,KAAAA,EAAYxsC,OAAS,GAC1BwsC,EAAY3rC,KAAK8rC,GAIdH,OAAAA,EAAYhkC,KAAK,KAgB1BkmB,MAAK,SAACke,GAEJ,IAAIC,EAAkBD,EAAU5sC,OAC1BiI,EAAMnC,KAAKymC,KACbO,EAAahnC,KAAKinC,YAEtB,IAAKD,EAAY,CACfhnC,KAAKinC,YAAc,GACnBD,EAAahnC,KAAKinC,YAClB,IAAA,IAASp0B,EAAI,EAAGA,EAAI1Q,EAAIjI,OAAQ2Y,GAAK,EACxB1Q,EAAAA,EAAIg4B,WAAWtnB,IAAMA,EAK9Bg0B,IAAAA,EAAc1kC,EAAIykC,OAAO,IAC/B,GAAIC,EAAa,CACTK,IAAAA,EAAeJ,EAAU/4B,QAAQ84B,IACd,IAArBK,IACgBA,EAAAA,GAKfC,OAtGO,SAACL,EAAWC,EAAiBC,GAG7C,IAFA,IAAM5F,EAAQ,GACVuB,EAAS,EACJjoC,EAAI,EAAGA,EAAIqsC,EAAiBrsC,GAAK,EACxC,GAAIA,EAAI,EAAG,CACH0sC,IAEAC,EAFQL,EAAWF,EAAU3M,WAAWz/B,EAAI,KAASA,EAAI,EAAK,EACtDssC,EAAWF,EAAU3M,WAAWz/B,MAAS,EAAKA,EAAI,EAAK,EAErE0mC,EAAMuB,IAAW,IAAM0E,GAAiB,GAAM1E,EAAS,EAAK,EAClDA,GAAA,EAGPzB,OAAAA,GAAU17B,OAAO47B,EAAOuB,GA0FtBwE,CAAUL,EAAWC,EAAiBC,IAG/CP,KAAM,qEHvGFa,GAAI,GAGD5sC,GAAI,EAAGA,GAAI,GAAIA,IAAK,EACzBA,GAAAA,IAAkC,WAA5ByN,KAAK+oB,IAAI/oB,KAAKo/B,IAAI7sC,GAAI,IAAqB,EAG/C8sC,IAAAA,GAAK,SAACvsC,EAAGZ,EAAGa,EAAGmiB,EAAG1S,EAAG6Q,EAAG9Q,GAC5B,IAAM+Q,EAAIxgB,GAAMZ,EAAIa,GAAOb,EAAIgjB,GAAM1S,EAAID,EACzC,OAAS+Q,GAAKD,EAAMC,IAAO,GAAKD,GAAOnhB,GAGnCotC,GAAK,SAACxsC,EAAGZ,EAAGa,EAAGmiB,EAAG1S,EAAG6Q,EAAG9Q,GAC5B,IAAM+Q,EAAIxgB,GAAMZ,EAAIgjB,EAAMniB,GAAKmiB,GAAM1S,EAAID,EACzC,OAAS+Q,GAAKD,EAAMC,IAAO,GAAKD,GAAOnhB,GAGnCqtC,GAAK,SAACzsC,EAAGZ,EAAGa,EAAGmiB,EAAG1S,EAAG6Q,EAAG9Q,GAC5B,IAAM+Q,EAAIxgB,GAAKZ,EAAIa,EAAImiB,GAAK1S,EAAID,EAChC,OAAS+Q,GAAKD,EAAMC,IAAO,GAAKD,GAAOnhB,GAGnCstC,GAAK,SAAC1sC,EAAGZ,EAAGa,EAAGmiB,EAAG1S,EAAG6Q,EAAG9Q,GAC5B,IAAM+Q,EAAIxgB,GAAKC,GAAKb,GAAKgjB,IAAM1S,EAAID,EACnC,OAAS+Q,GAAKD,EAAMC,IAAO,GAAKD,GAAOnhB,GAM5ButC,YAAOC,GAAA7pC,EAAA4pC,EAAAC,GAAA5pC,IAAAA,EAAAC,EAAA0pC,GAAA,SAAAA,IAAA3pC,OAAAnE,OAAA8tC,GAAA3pC,EAAA6C,MAAAd,KAAA5E,WAiLjBwsC,OAjLiBrnC,EAAAqnC,EAAA,CAAA,CAAA7tC,IAAA,WAAAC,MAClB,WACO8tC,KAAAA,MAAQ,IAAI5G,GAAU,CACzB,WACA,WACA,WACA,cAEH,CAAAnnC,IAAA,kBAAAC,MAED,SAAgB+tC,EAAGjf,GAIjB,IAHA,IAAMkf,EAAKD,EAGFrtC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAE9B,IAAMutC,EAAWnf,EAASpuB,EACpBwtC,EAAaH,EAAEE,GAElBA,EAAAA,GAC4C,UAA1CC,GAAc,EAAMA,IAAe,IACW,YAA1CA,GAAc,GAAOA,IAAe,GAKzCC,IAAAA,EAAInoC,KAAK8nC,MAAM1G,MAEfgH,EAAaJ,EAAGlf,EAAS,GACzBuf,EAAaL,EAAGlf,EAAS,GACzBwf,EAAaN,EAAGlf,EAAS,GACzByf,EAAaP,EAAGlf,EAAS,GACzB0f,EAAaR,EAAGlf,EAAS,GACzB2f,EAAaT,EAAGlf,EAAS,GACzB4f,EAAaV,EAAGlf,EAAS,GACzB6f,EAAaX,EAAGlf,EAAS,GACzB8f,EAAaZ,EAAGlf,EAAS,GACzB+f,EAAab,EAAGlf,EAAS,GACzBggB,EAAcd,EAAGlf,EAAS,IAC1BigB,EAAcf,EAAGlf,EAAS,IAC1BkgB,EAAchB,EAAGlf,EAAS,IAC1BmgB,EAAcjB,EAAGlf,EAAS,IAC1BogB,EAAclB,EAAGlf,EAAS,IAC1BqgB,EAAcnB,EAAGlf,EAAS,IAG5B7tB,EAAIktC,EAAE,GACN9tC,EAAI8tC,EAAE,GACNjtC,EAAIitC,EAAE,GACN9qB,EAAI8qB,EAAE,GAGNX,EAAAA,GAAGvsC,EAAGZ,EAAGa,EAAGmiB,EAAG+qB,EAAY,EAAGd,GAAE,IACpCjqB,EAAImqB,GAAGnqB,EAAGpiB,EAAGZ,EAAGa,EAAGmtC,EAAY,GAAIf,GAAE,IACjCE,EAAAA,GAAGtsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGiuC,EAAY,GAAIhB,GAAE,IACjCE,EAAAA,GAAGntC,EAAGa,EAAGmiB,EAAGpiB,EAAGstC,EAAY,GAAIjB,GAAE,IACjCE,EAAAA,GAAGvsC,EAAGZ,EAAGa,EAAGmiB,EAAGmrB,EAAY,EAAGlB,GAAE,IACpCjqB,EAAImqB,GAAGnqB,EAAGpiB,EAAGZ,EAAGa,EAAGutC,EAAY,GAAInB,GAAE,IACjCE,EAAAA,GAAGtsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGquC,EAAY,GAAIpB,GAAE,IACjCE,EAAAA,GAAGntC,EAAGa,EAAGmiB,EAAGpiB,EAAG0tC,EAAY,GAAIrB,GAAE,IACjCE,EAAAA,GAAGvsC,EAAGZ,EAAGa,EAAGmiB,EAAGurB,EAAY,EAAGtB,GAAE,IACpCjqB,EAAImqB,GAAGnqB,EAAGpiB,EAAGZ,EAAGa,EAAG2tC,EAAY,GAAIvB,GAAE,IACjCE,EAAAA,GAAGtsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGyuC,EAAa,GAAIxB,GAAE,KAClCE,EAAAA,GAAGntC,EAAGa,EAAGmiB,EAAGpiB,EAAG8tC,EAAa,GAAIzB,GAAE,KAClCE,EAAAA,GAAGvsC,EAAGZ,EAAGa,EAAGmiB,EAAG2rB,EAAa,EAAG1B,GAAE,KACrCjqB,EAAImqB,GAAGnqB,EAAGpiB,EAAGZ,EAAGa,EAAG+tC,EAAa,GAAI3B,GAAE,KAClCE,EAAAA,GAAGtsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG6uC,EAAa,GAAI5B,GAAE,KAClCE,EAAAA,GAAGntC,EAAGa,EAAGmiB,EAAGpiB,EAAGkuC,EAAa,GAAI7B,GAAE,KAElCG,EAAAA,GAAGxsC,EAAGZ,EAAGa,EAAGmiB,EAAGgrB,EAAY,EAAGf,GAAE,KACpCjqB,EAAIoqB,GAAGpqB,EAAGpiB,EAAGZ,EAAGa,EAAGwtC,EAAY,EAAGpB,GAAE,KAChCG,EAAAA,GAAGvsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG0uC,EAAa,GAAIzB,GAAE,KAClCG,EAAAA,GAAGptC,EAAGa,EAAGmiB,EAAGpiB,EAAGmtC,EAAY,GAAId,GAAE,KACjCG,EAAAA,GAAGxsC,EAAGZ,EAAGa,EAAGmiB,EAAGorB,EAAY,EAAGnB,GAAE,KACpCjqB,EAAIoqB,GAAGpqB,EAAGpiB,EAAGZ,EAAGa,EAAG4tC,EAAa,EAAGxB,GAAE,KACjCG,EAAAA,GAAGvsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG8uC,EAAa,GAAI7B,GAAE,KAClCG,EAAAA,GAAGptC,EAAGa,EAAGmiB,EAAGpiB,EAAGutC,EAAY,GAAIlB,GAAE,KACjCG,EAAAA,GAAGxsC,EAAGZ,EAAGa,EAAGmiB,EAAGwrB,EAAY,EAAGvB,GAAE,KACpCjqB,EAAIoqB,GAAGpqB,EAAGpiB,EAAGZ,EAAGa,EAAGguC,EAAa,EAAG5B,GAAE,KACjCG,EAAAA,GAAGvsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGkuC,EAAY,GAAIjB,GAAE,KACjCG,EAAAA,GAAGptC,EAAGa,EAAGmiB,EAAGpiB,EAAG2tC,EAAY,GAAItB,GAAE,KACjCG,EAAAA,GAAGxsC,EAAGZ,EAAGa,EAAGmiB,EAAG4rB,EAAa,EAAG3B,GAAE,KACrCjqB,EAAIoqB,GAAGpqB,EAAGpiB,EAAGZ,EAAGa,EAAGotC,EAAY,EAAGhB,GAAE,KAChCG,EAAAA,GAAGvsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGsuC,EAAY,GAAIrB,GAAE,KACjCG,EAAAA,GAAGptC,EAAGa,EAAGmiB,EAAGpiB,EAAG+tC,EAAa,GAAI1B,GAAE,KAElCI,EAAAA,GAAGzsC,EAAGZ,EAAGa,EAAGmiB,EAAGorB,EAAY,EAAGnB,GAAE,KACpCjqB,EAAIqqB,GAAGrqB,EAAGpiB,EAAGZ,EAAGa,EAAG0tC,EAAY,GAAItB,GAAE,KACjCI,EAAAA,GAAGxsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG0uC,EAAa,GAAIzB,GAAE,KAClCI,EAAAA,GAAGrtC,EAAGa,EAAGmiB,EAAGpiB,EAAGiuC,EAAa,GAAI5B,GAAE,KAClCI,EAAAA,GAAGzsC,EAAGZ,EAAGa,EAAGmiB,EAAGgrB,EAAY,EAAGf,GAAE,KACpCjqB,EAAIqqB,GAAGrqB,EAAGpiB,EAAGZ,EAAGa,EAAGstC,EAAY,GAAIlB,GAAE,KACjCI,EAAAA,GAAGxsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGsuC,EAAY,GAAIrB,GAAE,KACjCI,EAAAA,GAAGrtC,EAAGa,EAAGmiB,EAAGpiB,EAAG6tC,EAAa,GAAIxB,GAAE,KAClCI,EAAAA,GAAGzsC,EAAGZ,EAAGa,EAAGmiB,EAAG4rB,EAAa,EAAG3B,GAAE,KACrCjqB,EAAIqqB,GAAGrqB,EAAGpiB,EAAGZ,EAAGa,EAAGktC,EAAY,GAAId,GAAE,KACjCI,EAAAA,GAAGxsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGkuC,EAAY,GAAIjB,GAAE,KACjCI,EAAAA,GAAGrtC,EAAGa,EAAGmiB,EAAGpiB,EAAGytC,EAAY,GAAIpB,GAAE,KACjCI,EAAAA,GAAGzsC,EAAGZ,EAAGa,EAAGmiB,EAAGwrB,EAAY,EAAGvB,GAAE,KACpCjqB,EAAIqqB,GAAGrqB,EAAGpiB,EAAGZ,EAAGa,EAAG8tC,EAAa,GAAI1B,GAAE,KAClCI,EAAAA,GAAGxsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG8uC,EAAa,GAAI7B,GAAE,KAClCI,EAAAA,GAAGrtC,EAAGa,EAAGmiB,EAAGpiB,EAAGqtC,EAAY,GAAIhB,GAAE,KAEjCK,EAAAA,GAAG1sC,EAAGZ,EAAGa,EAAGmiB,EAAG+qB,EAAY,EAAGd,GAAE,KACpCjqB,EAAIsqB,GAAGtqB,EAAGpiB,EAAGZ,EAAGa,EAAGytC,EAAY,GAAIrB,GAAE,KACjCK,EAAAA,GAAGzsC,EAAGmiB,EAAGpiB,EAAGZ,EAAG6uC,EAAa,GAAI5B,GAAE,KAClCK,EAAAA,GAAGttC,EAAGa,EAAGmiB,EAAGpiB,EAAGwtC,EAAY,GAAInB,GAAE,KACjCK,EAAAA,GAAG1sC,EAAGZ,EAAGa,EAAGmiB,EAAG2rB,EAAa,EAAG1B,GAAE,KACrCjqB,EAAIsqB,GAAGtqB,EAAGpiB,EAAGZ,EAAGa,EAAGqtC,EAAY,GAAIjB,GAAE,KACjCK,EAAAA,GAAGzsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGyuC,EAAa,GAAIxB,GAAE,KAClCK,EAAAA,GAAGttC,EAAGa,EAAGmiB,EAAGpiB,EAAGotC,EAAY,GAAIf,GAAE,KACjCK,EAAAA,GAAG1sC,EAAGZ,EAAGa,EAAGmiB,EAAGurB,EAAY,EAAGtB,GAAE,KACpCjqB,EAAIsqB,GAAGtqB,EAAGpiB,EAAGZ,EAAGa,EAAGiuC,EAAa,GAAI7B,GAAE,KAClCK,EAAAA,GAAGzsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGquC,EAAY,GAAIpB,GAAE,KACjCK,EAAAA,GAAGttC,EAAGa,EAAGmiB,EAAGpiB,EAAGguC,EAAa,GAAI3B,GAAE,KAClCK,EAAAA,GAAG1sC,EAAGZ,EAAGa,EAAGmiB,EAAGmrB,EAAY,EAAGlB,GAAE,KACpCjqB,EAAIsqB,GAAGtqB,EAAGpiB,EAAGZ,EAAGa,EAAG6tC,EAAa,GAAIzB,GAAE,KAClCK,EAAAA,GAAGzsC,EAAGmiB,EAAGpiB,EAAGZ,EAAGiuC,EAAY,GAAIhB,GAAE,KACjCK,EAAAA,GAAGttC,EAAGa,EAAGmiB,EAAGpiB,EAAG4tC,EAAY,GAAIvB,GAAE,KAGnCa,EAAA,GAAMA,EAAE,GAAKltC,EAAK,EAClBktC,EAAA,GAAMA,EAAE,GAAK9tC,EAAK,EAClB8tC,EAAA,GAAMA,EAAE,GAAKjtC,EAAK,EAClBitC,EAAA,GAAMA,EAAE,GAAK9qB,EAAK,IAEtB,CAAAtjB,IAAA,cAAAC,MAEA,WAEE,IAAM4V,EAAO5P,KAAK8lB,MACZye,EAAY30B,EAAKwxB,MAEjBgI,EAAgC,EAAnBppC,KAAKkkC,YAClBmF,EAA4B,EAAhBz5B,EAAKyxB,SAGvBkD,EAAU8E,IAAc,IAAM,KAAS,GAAMA,EAAY,GAEzD,IAAMC,EAAcnhC,KAAKwe,MAAMyiB,EAAa,YACtCG,EAAcH,EACpB7E,EAA4C,IAA/B8E,EAAY,KAAQ,GAAM,IACU,UAA5CC,GAAe,EAAMA,IAAgB,IACW,YAA5CA,GAAe,GAAOA,IAAgB,GAE/C/E,EAA4C,IAA/B8E,EAAY,KAAQ,GAAM,IACU,UAA5CE,GAAe,EAAMA,IAAgB,IACW,YAA5CA,GAAe,GAAOA,IAAgB,GAG1ClI,EAAAA,SAAoC,GAAxBkD,EAAUrqC,OAAS,GAGpC8F,KAAKmlC,WAOL,IAJA,IAAMC,EAAOplC,KAAK8nC,MACZK,EAAI/C,EAAKhE,MAGN1mC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7B,IAAM8uC,EAAMrB,EAAEztC,GAEZA,EAAAA,GAAoC,UAA5B8uC,GAAO,EAAMA,IAAQ,IACI,YAA5BA,GAAO,GAAOA,IAAQ,GAIxBpE,OAAAA,IACR,CAAArrC,IAAA,QAAAC,MAED,WACQ+mC,IAAAA,EAAQ2B,EAAAznB,EAAA2sB,EAAArkC,WAAA,QAAAvD,MAAYvB,KAAKuB,MAGxB+gC,OAFPA,EAAM+G,MAAQ9nC,KAAK8nC,MAAM/G,QAElBA,MACR6G,GAjL0B/C,IAkMVA,GAAO4E,cAAc7B,IAgBjB/C,GAAO6E,kBAAkB9B,II5OnC+B,IAAAA,YAAUxI,GAAAnjC,EAAA2rC,EAAAxI,GAAAljC,IAAAA,EAAAC,EAAAyrC,GAYrB,SAAAA,EAAYnsB,GAAKhf,IAAAA,EAkBbA,OAlBa1E,OAAA6vC,IACf1rC,EAAAA,EAAAQ,KAAAuB,OASKwd,IAAMla,OAAOmD,OAChB,IAAIo6B,GACJ,CACE+I,QAAS,EACTjE,OAAQiC,GACRiC,WAAY,GAEdrsB,GACAhf,EAkDHmrC,OA/CDppC,EAAAopC,EAAA,CAAA,CAAA5vC,IAAA,UAAAC,MAYA,SAAQ8vC,EAAUC,GAiBTC,IAhBHC,IAAAA,EAGIzsB,EAAQxd,KAARwd,IAGFmoB,EAASnoB,EAAImoB,OAAOngC,SAGpB0kC,EAAahJ,GAAU17B,SAGvBwkC,EAAkBE,EAAW9I,MAC3BwI,EAAwBpsB,EAAxBosB,QAASC,EAAersB,EAAfqsB,WAGVG,EAAgB9vC,OAAS0vC,GAAS,CACnCK,GACFtE,EAAOU,OAAO4D,GAEhBA,EAAQtE,EAAOU,OAAOyD,GAAUvE,SAASwE,GACzCpE,EAAOhjC,QAGP,IAAA,IAASjI,EAAI,EAAGA,EAAImvC,EAAYnvC,GAAK,EAC3BirC,EAAAA,EAAOJ,SAAS0E,GACxBtE,EAAOhjC,QAGTunC,EAAWhqC,OAAO+pC,GAIbC,OAFPA,EAAW7I,SAAqB,EAAVuI,EAEfM,MACRP,GAhF6B9I,ICQnBsJ,YAAMrF,GAAA9mC,EAAAmsC,EAAArF,GAAA7mC,IAAAA,EAAAC,EAAAisC,GAcjBA,SAAAA,EAAYC,EAAWrwC,EAAKyjB,GAAKhf,IAAAA,EAelBA,OAfkB1E,OAAAqwC,IAC/BlsC,EAAAA,EAAAQ,KAAAuB,OAOKwd,IAAMla,OAAOmD,OAAO,IAAIo6B,GAAQrjB,GAGrChf,EAAK6rC,WAAaD,EAClB5rC,EAAKoC,KAAO7G,EAGZyE,EAAKmE,QAAQnE,EAqEd2rC,OAlED5pC,EAAA4pC,EAAA,CAAA,CAAApwC,IAAA,QAAAC,MA2EA,WAEEihB,EAAAA,EAAAkvB,EAAA5mC,WAAY9E,QAAAA,MAAAA,KAAKuB,MAGjBA,KAAKglC,aAGP,CAAAjrC,IAAA,UAAAC,MAYA,SAAQswC,GAKN,OAHAtqC,KAAKklC,QAAQoF,GAGNtqC,KAAKmlC,aAGd,CAAAprC,IAAA,WAAAC,MAcA,SAASswC,GASAC,OAPHD,GACFtqC,KAAKklC,QAAQoF,GAIYtqC,KAAKqlC,iBAGjC,CAAA,CAAAtrC,IAAA,kBAAAC,MAjHD,SAAuBD,EAAKyjB,GAC1B,OAAOxd,KAAKwF,OAAOxF,KAAKwqC,gBAAiBzwC,EAAKyjB,KAGhD,CAAAzjB,IAAA,kBAAAC,MAcA,SAAuBD,EAAKyjB,GAC1B,OAAOxd,KAAKwF,OAAOxF,KAAKyqC,gBAAiB1wC,EAAKyjB,KAGhD,CAAAzjB,IAAA,gBAAAC,MAaA,SAAqB0wC,GACbC,IAAAA,EAAuB,SAAC5wC,GACxB,MAAe,iBAARA,EACF6wC,GAEFC,IAGF,MAAA,CACLC,iBAAQpsC,EAAS3E,EAAKyjB,GACpB,OAAOmtB,EAAqB5wC,GAAK+wC,QAAQJ,EAAWhsC,EAAS3E,EAAKyjB,IAGpEutB,iBAAQC,EAAYjxC,EAAKyjB,GACvB,OAAOmtB,EAAqB5wC,GAAKgxC,QAAQL,EAAWM,EAAYjxC,EAAKyjB,SAG1E2sB,GAlGyBpG,IAiK5BoG,GAAOK,gBAAkB,EACzBL,GAAOM,gBAAkB,EACzBN,GAAOP,QAAU,EACjBO,GAAOc,OAAS,EA2BHC,IAAAA,YAAe/J,GAAAnjC,EAAAktC,EAAA/J,GAAA4D,IAAAA,EAAA7mC,EAAAgtC,GAW1BA,SAAAA,EAAYC,EAAQC,GAAIhkC,IAAAA,EAIRA,OAJQtN,OAAAoxC,IACtBnG,EAAAA,EAAAtmC,KAAAuB,OAEKqrC,QAAUF,EACf/jC,EAAKkkC,IAAMF,EAAGhkC,EAiCf8jC,OA9BDA,EAAAA,EAAA,KAAA,CAAA,CAAAnxC,IAAA,kBAAAC,MAYA,SAAuBmxC,EAAQC,GAC7B,OAAOprC,KAAKurC,UAAU/lC,OAAO2lC,EAAQC,KAGvC,CAAArxC,IAAA,kBAAAC,MAYA,SAAuBmxC,EAAQC,GAC7B,OAAOprC,KAAKwrC,UAAUhmC,OAAO2lC,EAAQC,OACtCF,GAhDkCrK,IAmD5B4K,SAAAA,GAASrK,EAAOtY,EAAQwb,GAC/B,IACI2F,EADEjI,EAASZ,EAITgK,EAAKprC,KAAKsrC,IAGZF,GACMA,EAAAA,EAGRprC,KAAKsrC,SAAMjwC,GAEX4uC,EAAQjqC,KAAK0rC,WAIf,IAAA,IAAShxC,EAAI,EAAGA,EAAI4pC,EAAW5pC,GAAK,EAC3BouB,EAAAA,EAASpuB,IAAMuvC,EAAMvvC,GAWnBixC,IAAAA,YAAGC,GAAA5tC,EAAA2tC,EAAAC,GAAAlG,IAAAA,EAAAxnC,EAAAytC,GAAA,SAAAA,IAAAjG,OAAA5rC,OAAA6xC,GAAAjG,EAAA5kC,MAAAd,KAAA5E,WAAA,OAAAmF,EAAAorC,IAAST,IAKrBK,GAAAA,mBAASM,GAAA7tC,EAAA8tC,EAAAD,GAAAE,IAAAA,EAAA7tC,EAAA4tC,GAAA,SAAAA,IAAAC,OAAAjyC,OAAAgyC,GAAAC,EAAAjrC,MAAAd,KAAA5E,WAsBV0wC,OAtBUvrC,EAAAurC,EAAA,CAAA,CAAA/xC,IAAA,eAAAC,MAWX,SAAaonC,EAAOtY,GAElB,IAAMqiB,EAASnrC,KAAKqrC,QACZ/G,EAAc6G,EAAd7G,UAGRmH,GAAShtC,KAAKuB,KAAMohC,EAAOtY,EAAQwb,GAC5B0H,EAAAA,aAAa5K,EAAOtY,GAG3B9oB,KAAK0rC,WAAatK,EAAM39B,MAAMqlB,EAAQA,EAASwb,OAChDwH,GAtB2BH,IA2B1BH,GAAAA,mBAASS,GAAAjuC,EAAAkuC,EAAAD,GAAAE,IAAAA,EAAAjuC,EAAAguC,GAAA,SAAAA,IAAAC,OAAAryC,OAAAoyC,GAAAC,EAAArrC,MAAAd,KAAA5E,WAyBV8wC,OAzBU3rC,EAAA2rC,EAAA,CAAA,CAAAnyC,IAAA,eAAAC,MAWX,SAAaonC,EAAOtY,GAElB,IAAMqiB,EAASnrC,KAAKqrC,QACZ/G,EAAc6G,EAAd7G,UAGF8H,EAAYhL,EAAM39B,MAAMqlB,EAAQA,EAASwb,GAGxC+H,EAAAA,aAAajL,EAAOtY,GAC3B2iB,GAAShtC,KAAKuB,KAAMohC,EAAOtY,EAAQwb,GAGnCtkC,KAAK0rC,WAAaU,MACnBF,GAzB2BP,IA+BvB,IAAMW,GAAQ,CAanBC,IAAGA,SAAC38B,EAAM00B,GAeR,IAbA,IAAMkI,EAA6B,EAAZlI,EAGjBmI,EAAgBD,EAAkB58B,EAAKyxB,SAAWmL,EAGlDE,EAAeD,GAAiB,GACjCA,GAAiB,GACjBA,GAAiB,EAClBA,EAGEE,EAAe,GACZjyC,EAAI,EAAGA,EAAI+xC,EAAe/xC,GAAK,EACtCiyC,EAAa5xC,KAAK2xC,GAEpB,IAAME,EAAU1L,GAAU17B,OAAOmnC,EAAcF,GAG/C78B,EAAK1P,OAAO0sC,IAcdC,MAAK,SAACj9B,GACJ,IAAMkW,EAAQlW,EAGR68B,EAA0D,IAA1C3mB,EAAMsb,MAAOtb,EAAMub,SAAW,IAAO,GAG3Dvb,EAAMub,UAAYoL,IAWTK,YAAWC,GAAA/uC,EAAA8uC,EAAAC,GAAAC,IAAAA,EAAA9uC,EAAA4uC,GACtBA,SAAAA,EAAY1C,EAAWrwC,EAAKyjB,GAAKxV,IAAAA,EAeLA,OAfKlO,OAAAgzC,IAO/B9kC,EAAAglC,EAAAvuC,KAAM2rC,KAAAA,EAAWrwC,EAAKuJ,OAAOmD,OAC3B,CACE2N,KAAMu3B,GACNiB,QAASN,IAEX9uB,KAGG8mB,UAAY,EAASt8B,EAoD3B8kC,OAnDAvsC,EAAAusC,EAAA,CAAA,CAAA/yC,IAAA,QAAAC,MAED,WACMizC,IAAAA,EAGJhyB,EAAAA,EAAA6xB,EAAAvpC,WAAY9E,QAAAA,MAAAA,KAAKuB,MAGjB,IAAQwd,EAAQxd,KAARwd,IACA4tB,EAAa5tB,EAAb4tB,GAAIh3B,EAASoJ,EAATpJ,KAGRpU,KAAKqqC,aAAerqC,KAAKghC,YAAYwJ,gBACvCyC,EAAc74B,EAAK84B,iBAEnBD,EAAc74B,EAAK+4B,gBAEnBntC,KAAKikC,eAAiB,GAGxBjkC,KAAKotC,MAAQH,EAAYxuC,KAAK2V,EAAMpU,KAAMorC,GAAMA,EAAGhK,OACnDphC,KAAKotC,MAAMC,UAAYJ,IACxB,CAAAlzC,IAAA,kBAAAC,MAED,SAAgBonC,EAAOtY,GAChBskB,KAAAA,MAAME,aAAalM,EAAOtY,KAChC,CAAA/uB,IAAA,cAAAC,MAED,WACMuzC,IAAAA,EAGIX,EAAY5sC,KAAKwd,IAAjBovB,QAiBDW,OAdHvtC,KAAKqqC,aAAerqC,KAAKghC,YAAYwJ,iBAEvCoC,EAAQL,IAAIvsC,KAAK8lB,MAAO9lB,KAAKskC,WAGNiJ,EAAAvtC,KAAKmlC,UAAS,KAGdoI,EAAAvtC,KAAKmlC,UAAS,GAGrCyH,EAAQC,MAAMU,IAGTA,MACRT,GApE8B3C,IAqFpBqD,YAAYxJ,GAAAhmC,EAAAwvC,EAAAxJ,GAAAyJ,IAAAA,EAAAvvC,EAAAsvC,GAoBvB,SAAAA,EAAYE,GAAcnlC,IAAAA,EAGCA,OAHDzO,OAAA0zC,IACxBC,EAAAA,EAAAhvC,KAAAuB,OAEK2tC,MAAMD,GAAcnlC,EAoB1BilC,OAjBDjtC,EAAAitC,EAAA,CAAA,CAAAzzC,IAAA,WAAAC,MAeA,SAAS4zC,GACP,OAAQA,GAAa5tC,KAAK4tC,WAAWtrC,UAAUtC,UAChDwtC,GA3C+B3M,IAiDrBgN,GAAmB,CAc9BvrC,UAAS,SAACorC,GACJvL,IAGI6I,EAAqB0C,EAArB1C,WAAYjB,EAAS2D,EAAT3D,KASb5H,OANH4H,EACU7I,GAAU17B,OAAO,CAAC,WAAY,aAAatF,OAAO6pC,GAAM7pC,OAAO8qC,GAE/DA,GAGGxnC,SAASgjC,KAgB5B5d,MAAK,SAACklB,GACA/D,IAAAA,EAGEiB,EAAaxE,GAAO5d,MAAMklB,GAG1BC,EAAkB/C,EAAW5J,MAYnC,OAT2B,aAAvB2M,EAAgB,IAA4C,aAAvBA,EAAgB,KAEvDhE,EAAO7I,GAAU17B,OAAOuoC,EAAgBtqC,MAAM,EAAG,IAGjCyJ,EAAAA,OAAO,EAAG,GAC1B89B,EAAW3J,UAAY,IAGlBmM,GAAahoC,OAAO,CAAEwlC,WAAAA,EAAYjB,KAAAA,MAOhCc,YAAkBpF,GAAAznC,EAAA6sC,EAAApF,GAAAuI,IAAAA,EAAA9vC,EAAA2sC,GAAA,SAAAA,IAAAmD,OAAAl0C,OAAA+wC,GAAAmD,EAAAltC,MAAAd,KAAA5E,WAuG5ByvC,OAvG4BA,EAAAA,EAAA,KAAA,CAAA,CAAA9wC,IAAA,UAAAC,MAsB7B,SAAemxC,EAAQzsC,EAAS3E,EAAKyjB,GAE7BywB,IAAAA,EAAO3qC,OAAOmD,OAAO,IAAIo6B,GAAQ7gC,KAAKwd,IAAKA,GAG3C0wB,EAAY/C,EAAO+B,gBAAgBnzC,EAAKk0C,GACxCjD,EAAakD,EAAU3I,SAAS7mC,GAGhCyvC,EAAYD,EAAU1wB,IAG5B,OAAOgwB,GAAahoC,OAAO,CACzBwlC,WAAAA,EACAjxC,IAAAA,EACAqxC,GAAI+C,EAAU/C,GACdgD,UAAWjD,EACX/2B,KAAM+5B,EAAU/5B,KAChBw4B,QAASuB,EAAUvB,QACnBtI,UAAW4J,EAAU5J,UACrBsJ,UAAWK,EAAKpZ,WAIpB,CAAA96B,IAAA,UAAAC,MAqBA,SAAemxC,EAAQH,EAAYjxC,EAAKyjB,GACtC,IAAI6wB,EAAcrD,EAGZiD,EAAO3qC,OAAOmD,OAAO,IAAIo6B,GAAQ7gC,KAAKwd,IAAKA,GAQ1C8wB,OALPD,EAAcruC,KAAKuuC,OAAOF,EAAaJ,EAAKpZ,QAG1BsW,EAAOgC,gBAAgBpzC,EAAKk0C,GAAM1I,SAAS8I,EAAYrD,cAK3E,CAAAjxC,IAAA,SAAAC,MAgBA,SAAcgxC,EAAYnW,GACpB,MAAsB,iBAAfmW,EACFnW,EAAOjM,MAAMoiB,EAAYhrC,MAE3BgrC,MACRH,GAvGqChK,IAiHxCgK,GAAmBrtB,IAAMla,OAAOmD,OAC9B,IAAIo6B,GACJ,CAAEhM,OAAQgZ,KAML,IAAMW,GAAa,CAmBxBC,QAAO,SAAC3E,EAAUF,EAASqB,EAAQlB,GACjC,IAAI2E,EAAQ3E,EAGP2E,IACKxN,EAAAA,GAAUgC,OAAO,IAIrBnpC,IAAAA,EAAM4vC,GAAWnkC,OAAO,CAAEokC,QAASA,EAAUqB,IAAU0D,QAAQ7E,EAAU4E,GAGzEtD,EAAKlK,GAAU17B,OAAOzL,EAAIqnC,MAAM39B,MAAMmmC,GAAmB,EAATqB,GAItD,OAHAlxC,EAAIsnC,SAAqB,EAAVuI,EAGR4D,GAAahoC,OAAO,CAAEzL,IAAAA,EAAKqxC,GAAAA,EAAIrB,KAAM2E,MAQnC9D,YAAmBgE,GAAA5wC,EAAA4sC,EAAAgE,GAAAC,IAAAA,EAAA3wC,EAAA0sC,GAAA,SAAAA,IAAAiE,OAAA/0C,OAAA8wC,GAAAiE,EAAA/tC,MAAAd,KAAA5E,WAkF7BwvC,OAlF6BA,EAAAA,EAAA,KAAA,CAAA,CAAA7wC,IAAA,UAAAC,MAoB9B,SAAemxC,EAAQzsC,EAASorC,EAAUtsB,GAElCywB,IAAAA,EAAO3qC,OAAOmD,OAAO,IAAIo6B,GAAQ7gC,KAAKwd,IAAKA,GAG3CsxB,EAAgBb,EAAKc,IAAIN,QAAQ3E,EAAUqB,EAAOvB,QAASuB,EAAOF,QAGxEgD,EAAK7C,GAAK0D,EAAc1D,GAGlBJ,IAAAA,EAAaH,GAAmBC,QACnCrsC,KAAKuB,KAAMmrC,EAAQzsC,EAASowC,EAAc/0C,IAAKk0C,GAK3CjD,OAFPA,EAAW2C,MAAMmB,GAEV9D,IAGT,CAAAjxC,IAAA,UAAAC,MAqBA,SAAemxC,EAAQH,EAAYlB,EAAUtsB,GAC3C,IAAI6wB,EAAcrD,EAGZiD,EAAO3qC,OAAOmD,OAAO,IAAIo6B,GAAQ7gC,KAAKwd,IAAKA,GAGjD6wB,EAAcruC,KAAKuuC,OAAOF,EAAaJ,EAAKpZ,QAGtCia,IAAAA,EAAgBb,EAAKc,IACxBN,QAAQ3E,EAAUqB,EAAOvB,QAASuB,EAAOF,OAAQoD,EAAYtE,MASzDuE,OANPL,EAAK7C,GAAK0D,EAAc1D,GAGNP,GAAmBE,QAClCtsC,KAAKuB,KAAMmrC,EAAQkD,EAAaS,EAAc/0C,IAAKk0C,OAGvDrD,GAlFsCC,IA2FzCD,GAAoBptB,IAAMla,OAAOmD,OAAOokC,GAAmBrtB,IAAK,CAAEuxB,IAAKP,KCz1BvE,IAfA,IAAMQ,GAAQ,GACRC,GAAW,GACXC,GAAa,GACbC,GAAa,GACbC,GAAa,GACbC,GAAa,GACbC,GAAgB,GAChBC,GAAgB,GAChBC,GAAgB,GAChBC,GAAgB,GAKhBpyB,GAAI,GACD3iB,GAAI,EAAGA,GAAI,IAAKA,IAAK,EAE1B2iB,GAAE3iB,IADAA,GAAI,IACCA,IAAK,EAEJA,IAAK,EAAK,IAOtB,IAFA,IAAIiQ,GAAI,EACJ+kC,GAAK,EACAh1C,GAAI,EAAGA,GAAI,IAAKA,IAAK,EAAG,CAE3Bi1C,IAAAA,GAAKD,GAAMA,IAAM,EAAMA,IAAM,EAAMA,IAAM,EAAMA,IAAM,EACnDC,GAAAA,KAAO,EAAW,IAALA,GAAa,GAChCX,GAAMrkC,IAAKglC,GACXV,GAASU,IAAMhlC,GAGf,IAAMilC,GAAKvyB,GAAE1S,IACPklC,GAAKxyB,GAAEuyB,IACPE,GAAKzyB,GAAEwyB,IAGTnlC,GAAa,IAAR2S,GAAEsyB,IAAqB,SAALA,GAChBhlC,GAAAA,IAAMD,IAAK,GAAOA,KAAM,EACxBC,GAAAA,IAAMD,IAAK,GAAOA,KAAM,GACxBC,GAAAA,IAAMD,IAAK,EAAMA,KAAM,GAClC2kC,GAAW1kC,IAAKD,GAGhBA,GAAU,SAALolC,GAAwB,MAALD,GAAsB,IAALD,GAAmB,SAAJjlC,GAC1CglC,GAAAA,IAAOjlC,IAAK,GAAOA,KAAM,EACzBilC,GAAAA,IAAOjlC,IAAK,GAAOA,KAAM,GACzBilC,GAAAA,IAAOjlC,IAAK,EAAMA,KAAM,GACtC+kC,GAAcE,IAAMjlC,GAGfC,IAIHA,GAAIilC,GAAKvyB,GAAEA,GAAEA,GAAEyyB,GAAKF,MACpBF,IAAMryB,GAAEA,GAAEqyB,MAHNA,GADCA,GAAA,EAST,IAAMK,GAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAK7DC,YAAOC,GAAAjyC,EAAAgyC,EAAAC,GAAAhyC,IAAAA,EAAAC,EAAA8xC,GAAA,SAAAA,IAAA/xC,OAAAnE,OAAAk2C,GAAA/xC,EAAA6C,MAAAd,KAAA5E,WAgMjB40C,OAhMiBzvC,EAAAyvC,EAAA,CAAA,CAAAj2C,IAAA,WAAAC,MAClB,WACM0Q,IAAAA,EAGJ,IAAI1K,KAAKkwC,UAAYlwC,KAAKmwC,iBAAmBnwC,KAAKY,KAAlD,CAKAZ,KAAKmwC,eAAiBnwC,KAAKY,KAC3B,IAAM7G,EAAMiG,KAAKmwC,eACXC,EAAWr2C,EAAIqnC,MACfwI,EAAU7vC,EAAIsnC,SAAW,EAG/BrhC,KAAKkwC,SAAWtG,EAAU,EAC1B,IAGMyG,EAAyB,GAHfrwC,KAAKkwC,SAGK,GAG1BlwC,KAAKswC,aAAe,GAEpB,IADA,IAAMC,EAAcvwC,KAAKswC,aAChBE,EAAQ,EAAGA,EAAQH,EAAQG,GAAS,EACvCA,EAAQ5G,EACV2G,EAAYC,GAASJ,EAASI,IAE9B9lC,EAAI6lC,EAAYC,EAAQ,GAElBA,EAAQ5G,EAYHA,EAAU,GAAK4G,EAAQ5G,GAAY,IAE5Cl/B,EAAKskC,GAAMtkC,IAAM,KAAO,GACnBskC,GAAOtkC,IAAM,GAAM,MAAS,GAC5BskC,GAAOtkC,IAAM,EAAK,MAAS,EAC5BskC,GAAU,IAAJtkC,KAZVA,EAAKskC,IAHLtkC,EAAKA,GAAK,EAAMA,IAAM,MAGL,KAAO,GACnBskC,GAAOtkC,IAAM,GAAM,MAAS,GAC5BskC,GAAOtkC,IAAM,EAAK,MAAS,EAC5BskC,GAAU,IAAJtkC,GAGVA,GAAKqlC,GAAMS,EAAQ5G,EAAW,IAAM,IAS1B4G,EAAAA,GAASD,EAAYC,EAAQ5G,GAAWl/B,GAKxD1K,KAAKywC,gBAAkB,GAEvB,IADA,IAAMC,EAAiB1wC,KAAKywC,gBACnBE,EAAW,EAAGA,EAAWN,EAAQM,GAAY,EAAG,CACvD,IAAMH,EAAQH,EAASM,EAGrBjmC,EADEimC,EAAW,EACTJ,EAAYC,GAEZD,EAAYC,EAAQ,GAIxBE,EAAeC,GADbA,EAAW,GAAKH,GAAS,EACA9lC,EAEA4kC,GAAcN,GAAMtkC,IAAM,KACjD6kC,GAAcP,GAAOtkC,IAAM,GAAM,MACjC8kC,GAAcR,GAAOtkC,IAAM,EAAK,MAChC+kC,GAAcT,GAAU,IAAJtkC,QAG7B,CAAA3Q,IAAA,eAAAC,MAED,SAAa+tC,EAAGjf,GACT8nB,KAAAA,cACH7I,EAAGjf,EAAQ9oB,KAAKswC,aAAcpB,GAAYC,GAAYC,GAAYC,GAAYL,MAEjF,CAAAj1C,IAAA,eAAAC,MAED,SAAa+tC,EAAGjf,GACd,IAAMkf,EAAKD,EAGPr9B,EAAIs9B,EAAGlf,EAAS,GACjBA,EAAAA,EAAS,GAAKkf,EAAGlf,EAAS,GAC7Bkf,EAAGlf,EAAS,GAAKpe,EAEZkmC,KAAAA,cACH5I,EACAlf,EACA9oB,KAAKywC,gBACLnB,GACAC,GACAC,GACAC,GACAR,IAIFvkC,EAAIs9B,EAAGlf,EAAS,GACbA,EAAAA,EAAS,GAAKkf,EAAGlf,EAAS,GAC7Bkf,EAAGlf,EAAS,GAAKpe,IAClB,CAAA3Q,IAAA,gBAAAC,MAED,SAAc+tC,EAAGjf,EAAQynB,EAAaM,EAAWC,EAAWC,EAAWC,EAAWC,GAgBhF,IAfA,IAAMjJ,EAAKD,EAGLmJ,EAAUlxC,KAAKkwC,SAGjBiB,EAAKnJ,EAAGlf,GAAUynB,EAAY,GAC9Ba,EAAKpJ,EAAGlf,EAAS,GAAKynB,EAAY,GAClCc,EAAKrJ,EAAGlf,EAAS,GAAKynB,EAAY,GAClCe,EAAKtJ,EAAGlf,EAAS,GAAKynB,EAAY,GAGlCC,EAAQ,EAGH7/B,EAAQ,EAAGA,EAAQugC,EAASvgC,GAAS,EAAG,CAE/C,IAAMkG,EAAKg6B,EAAUM,IAAO,IACxBL,EAAWM,IAAO,GAAM,KACxBL,EAAWM,IAAO,EAAK,KACvBL,EAAe,IAALM,GACVf,EAAYC,GACPA,GAAA,EACT,IAAMe,EAAKV,EAAUO,IAAO,IACxBN,EAAWO,IAAO,GAAM,KACxBN,EAAWO,IAAO,EAAK,KACvBN,EAAe,IAALG,GACVZ,EAAYC,GACPA,GAAA,EACT,IAAMgB,EAAKX,EAAUQ,IAAO,IACxBP,EAAWQ,IAAO,GAAM,KACxBP,EAAWI,IAAO,EAAK,KACvBH,EAAe,IAALI,GACVb,EAAYC,GACPA,GAAA,EACT,IAAMiB,EAAKZ,EAAUS,IAAO,IACxBR,EAAWK,IAAO,GAAM,KACxBJ,EAAWK,IAAO,EAAK,KACvBJ,EAAe,IAALK,GACVd,EAAYC,GACPA,GAAA,EAGJ35B,EAAAA,EACA06B,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EAIP,IAAM56B,GACHo6B,EAAKE,IAAO,KAAO,GACfF,EAAMG,IAAO,GAAM,MAAS,GAC5BH,EAAMI,IAAO,EAAK,MAAS,EAC5BJ,EAAU,IAALK,IACPf,EAAYC,GACPA,GAAA,EACT,IAAMe,GACHN,EAAKG,IAAO,KAAO,GACfH,EAAMI,IAAO,GAAM,MAAS,GAC5BJ,EAAMK,IAAO,EAAK,MAAS,EAC5BL,EAAU,IAALE,IACPZ,EAAYC,GACPA,GAAA,EACT,IAAMgB,GACHP,EAAKI,IAAO,KAAO,GACfJ,EAAMK,IAAO,GAAM,MAAS,GAC5BL,EAAME,IAAO,EAAK,MAAS,EAC5BF,EAAU,IAALG,IACPb,EAAYC,GACPA,GAAA,EACT,IAAMiB,GACHR,EAAKK,IAAO,KAAO,GACfL,EAAME,IAAO,GAAM,MAAS,GAAOF,EAAMG,IAAO,EAAK,MAAS,EAAKH,EAAU,IAALI,IAC3Ed,EAAYC,GACPA,GAAA,EAGTxI,EAAGlf,GAAUjS,EACbmxB,EAAGlf,EAAS,GAAKyoB,EACjBvJ,EAAGlf,EAAS,GAAK0oB,EACjBxJ,EAAGlf,EAAS,GAAK2oB,MAClBzB,GAhM0BlD,IAkM7BkD,GAAQpG,QAAU,EAUCkD,GAAYrD,cAAcuG,IC9QhC0B,IAAAA,YAAG9F,GAAA5tC,EAAA0zC,EAAA9F,GAAA3tC,IAAAA,EAAAC,EAAAwzC,GAAA,SAAAA,IAAAzzC,OAAAnE,OAAA43C,GAAAzzC,EAAA6C,MAAAd,KAAA5E,WAAA,OAAAmF,EAAAmxC,IAASxG,IAErBK,GAAAA,mBAASoG,GAAA3zC,EAAA8tC,EAAA6F,GAAAlsB,IAAAA,EAAAvnB,EAAA4tC,GAAA,SAAAA,IAAArmB,OAAA3rB,OAAAgyC,GAAArmB,EAAA3kB,MAAAd,KAAA5E,WA4BV0wC,OA5BUvrC,EAAAurC,EAAA,CAAA,CAAA/xC,IAAA,eAAAC,MACX,SAAaonC,EAAOtY,GAClB,IAAMkZ,EAASZ,EAGT+J,EAASnrC,KAAKqrC,QACZ/G,EAAc6G,EAAd7G,UACF8G,EAAKprC,KAAKsrC,IACZsG,EAAU5xC,KAAK6xC,SAGfzG,IACGyG,KAAAA,SAAWzG,EAAG3nC,MAAM,GACzBmuC,EAAU5xC,KAAK6xC,SAGf7xC,KAAKsrC,SAAMjwC,GAEPy2C,IAAAA,EAAYF,EAAQnuC,MAAM,GACzBuoC,EAAAA,aAAa8F,EAAW,GAG/BF,EAAQtN,EAAY,GAAMsN,EAAQtN,EAAY,GAAK,EAAK,EAGxD,IAAA,IAAS5pC,EAAI,EAAGA,EAAI4pC,EAAW5pC,GAAK,EAC3BouB,EAAAA,EAASpuB,IAAMo3C,EAAUp3C,OAEnCoxC,GA5B2B4F,IA8B9BA,GAAIlG,UAAYkG,GAAInG,UCrCdv3B,IAAAA,GAAS,IAAInU,EAAO,iBAEbkyC,GAAa,WAmCxBA,SAAAA,EAAaC,EAAKC,GAAWC,IAAAA,EAAI92C,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAAEtB,OAAAi4C,gBAjChC,MAAIn0C,EAECoC,KAAA,WAAA,IAAI6zB,sBACJ,oBACJ,0BACM,+BAEI,8BAEE,4BACF,yBACH,2BAEG,2BAED,+BAEE,kBAEV,MAeN7zB,KAAKgyC,IAAMA,EACXhyC,KAAKmyC,MAAQD,EAETD,EACFjyC,KAAKoyC,WAAaH,GAEbI,KAAAA,SAAW,IAAI7S,GAAYx/B,KAAKsyC,SAASvvB,WAAY/iB,KAAKsyC,SAASpjB,YACnEqjB,KAAAA,KAAO,IAAIltC,GAAI,KAAM,CACxBP,UAC4B,kBAAnBotC,EAAKptC,UAA0BotC,EAAKptC,YAAcotC,EAAKM,YAE7DD,KAAAA,KAAK5rC,UAAUqrC,EAAI1sC,QAgL3B,IAAAmtC,EAlHAC,EAXAC,EAVAC,EAXAC,EAZAC,EAwQAf,OAxRAxxC,EAAAwxC,EAAA,CAAA,CAAAh4C,IAAA,UAAAkN,IA1BD,WAAe,IAAA8rC,EAAAC,EACb,OAAoB,QAApBD,EAAO/yC,KAAKsyC,gBAAQU,IAAAD,GAAQ,QAARC,EAAbD,EAAejf,cAAfkf,IAAqBA,OAARA,EAAbA,EAAuB5jB,WAC/B,CAAAr1B,IAAA,UAAAkN,IAED,WAAegsC,IAAAA,EACb,eAAAA,EAAOjzC,KAAKuyC,YAAI,IAAAU,OAAA,EAATA,EAAW9zC,MACnB,CAAApF,IAAA,SAAAC,MAsBD,WAAQk5C,IAAAA,EAAS93C,UAAAlB,OAAAkB,QAAAC,IAAAD,UAAAC,GAAAD,UAAGiK,GAAAA,GAAI0C,MACf,OAAA/H,KAAKuyC,KAAKY,OAAOD,KACzB,CAAAn5C,IAAA,iBAAAC,MAED,WACEgG,KAAKozC,kBAAmB,EACxBpzC,KAAKqzC,gBAAiB,EACtBrzC,KAAKszC,aAAc,EACnBtzC,KAAKuzC,eAAiB,KACvB,CAAAx5C,IAAA,eAAAC,MAED,SAAciS,GACZjM,KAAKszC,aAAc,EACnBtzC,KAAKwzC,gBAAkBvnC,IACxB,CAAAlS,IAAA,QAAAC,OAAA84C,EAAA9pC,EAAAC,IAAAC,MAED,SAAAC,IAAA,IAAAsqC,EAAAC,EAAAt4C,UAAA,OAAA6N,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAA6B,GAAhBgqC,EAAQC,EAAAx5C,OAAA,QAAAmB,IAAAq4C,EAAA,IAAAA,EAAA,IACf1zC,KAAKuyC,MAASkB,EAAQ,CAAAlqC,EAAAE,KAAA,EAAA,MAClB,OADkBF,EAAAE,KAAA,EAClBzJ,KAAKuyC,KAAK7oC,cAAa,KAAA,EAAA,OAAAH,EAAAE,KAAA,EACvBzJ,KAAKuyC,KAAK5rC,UAAU3G,KAAKgyC,IAAI1sC,OAAM,KAAA,EAE3CtF,KAAKozC,kBAAmB,EACxBpzC,KAAKqzC,gBAAiB,EACtBrzC,KAAKszC,aAAc,EACnBtzC,KAAK2zC,gBAAiB,EACtB3zC,KAAKuzC,eAAiB,GAAE,KAAA,GAAA,IAAA,MAAA,OAAAhqC,EAAAY,UAAAhB,EAAAnJ,UACzB,WAAA8yC,OAAAA,EAAAhyC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,cAAAC,OAAA64C,EAAA7pC,EAAAC,IAAAC,MAED,SAAAmB,IAAA,OAAApB,IAAAK,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,EACM,IAAAzJ,KAAKuyC,KAAI,CAAA9nC,EAAAhB,KAAA,EAAA,MACP,IAAAzJ,KAAK2zC,eAAc,CAAAlpC,EAAAhB,KAAA,EAAA,MACf,OADegB,EAAAhB,KAAA,EACfzJ,KAAKuyC,KAAKznC,cAAa,KAAA,EACxBknC,KAAAA,IAAI3/B,KAAKzB,IAAgB,KAAA,EAAAnG,EAAAhB,KAAA,EAAA,MAAA,KAAA,EAEvBzJ,KAAKoyC,YACdpyC,KAAKoyC,WAAWtnC,cACjB,KAAA,EAAA,IAAA,MAAA,OAAAL,EAAAN,UAAAE,EAAArK,UACF,WAAA6yC,OAAAA,EAAA/xC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,iBAAAC,OAAA44C,EAAA5pC,EAAAC,IAAAC,MAED,SAAAkE,EAAsBxF,GAAQ,OAAAqB,IAAAK,MAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,KAAA,EACxB,IAAAzJ,KAAKuyC,KAAI,CAAA/kC,EAAA/D,KAAA,EAAA,MACN,GAAAzJ,KAAKuyC,KAAK9pC,SAAQ,CAAA+E,EAAA/D,KAAA,EAAA,MACf,OADe+D,EAAA/D,KAAA,EACfzJ,KAAKuyC,KAAK/4B,OAAM,KAAA,EAGlB,OADCvY,GAAAA,MAAM,kBAAmB2G,GAAS4F,EAAA/D,KAAA,EACnCzJ,KAAKuyC,KAAKqB,eAAehsC,GAAS,KAAA,EAAA,IAAA,MAAA,OAAA4F,EAAArD,UAAAiD,EAAApN,UAE3C,SAAAoK,GAAAwoC,OAAAA,EAAA9xC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,UAAAC,OAAA24C,EAAA3pC,EAAAC,IAAAC,MAED,SAAA2qC,IAAA,OAAA5qC,IAAAK,MAAA,SAAAwqC,GAAA,cAAAA,EAAAtqC,KAAAsqC,EAAArqC,MAAA,KAAA,EACM,IAAAzJ,KAAKuyC,KAAI,CAAAuB,EAAArqC,KAAA,EAAA,MACL,OADKqqC,EAAArqC,KAAA,EACLzJ,KAAKuyC,KAAK7oC,cAAa,KAAA,EAG/B1J,KAAKuyC,KAAO,KACZvyC,KAAKoyC,WAAa,KAClBpyC,KAAKsyC,SAAW,KAChBtyC,KAAKqyC,SAAW,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAyB,EAAA3pC,UAAA0pC,EAAA7zC,UACrB,WAAA2yC,OAAAA,EAAA7xC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,eAAAC,OAAA04C,EAAA1pC,EAAAC,IAAAC,MAED,SAAA6qC,EAAoBl5B,GAAK,IAAAm5B,EAAAjxB,EAAAmM,EAAAC,EAAA8kB,EAAAC,EAAAtsC,EAAAiZ,EAAAszB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjoC,EAAA,OAAArD,IAAAK,MAAA,SAAAkrC,GAAA,cAAAA,EAAAhrC,KAAAgrC,EAAA/qC,MAAA,KAAA,EAMM,GALzBzJ,KAAKy0C,gBACCv3B,EAAAA,GAAiBld,KAAKy0C,cAAe55B,GAC7C7a,KAAKy0C,cAAgB,MAGjBT,EAAUh0C,KAAKsyC,SAChBz3B,GAAUA,EAAM3gB,QAAW85C,EAAO,CAAAQ,EAAA/qC,KAAA,EAAA,MAAA+qC,OAAAA,EAAAtqC,OAAA,UAAA,KAAA,EAAAsqC,EAAAhrC,KAAA,EAGrCwqC,EAAQU,YAAY75B,EAAO7a,KAAKqzC,eAAgBrzC,KAAKszC,YAAatzC,KAAKwzC,iBAAgBgB,EAAA/qC,KAAA,GAAA,MAAA,KAAA,EAEjF,MAFiF+qC,EAAAhrC,KAAA,EAAAqN,EAAAA,GAAA29B,EAAA,MAAA,GAEjF,IAAI12C,EAAe5B,EAAWA,EAAcC,IAAGq4C,EAAA39B,IAAQ,KAAA,GAe9D,GAbOkM,EAA0CixB,EAA1CjxB,WAAYmM,EAA8B8kB,EAA9B9kB,WAAYC,EAAkB6kB,EAAlB7kB,cAE5B8kB,EAAalxB,EAAWwN,QACxB2jB,EAAahlB,EAAWqB,QAExBvwB,KAAKmyC,MAAMwC,YACAV,GAAA,EACblxB,EAAWc,SAAU,GAGnB7jB,KAAKmyC,MAAMyC,YACAV,GAAA,EACbhlB,EAAWrL,SAAU,MAInBowB,GAAclxB,EAAWc,UACzBqwB,GAAchlB,EAAWrL,SAAQ,CAAA2wB,EAAA/qC,KAAA,GAAA,MAMlC,GAJc7B,EAAA,GACDqsC,EAAAA,EAAalxB,EAAamxB,EAAahlB,OAAa7zB,IACrDwlB,EAAMO,QAAQlnB,SACzB0N,GAAaiZ,EAAMO,QAAQP,EAAMO,QAAQlnB,OAAS,GAAG2qB,UAAYhE,EAAMO,QAAQ,GAAGyD,WAAahE,EAAMhB,UAAa,OAEhHjY,EAAW5H,KAAKmyC,MAAM0C,iBAAe,CAAAL,EAAA/qC,KAAA,GAAA,MACvCuK,GAAOtS,KAAIxB,8BAAAA,OAA+B0H,EAAQ,MAAMiZ,GACxDkC,EAAWc,QAAUowB,EACrB/kB,EAAWrL,QAAUqwB,EAChBlC,KAAAA,IAAI3/B,KAAKzB,GAAiC,CAAEhJ,SAAAA,IAAW4sC,EAAA/qC,KAAA,GAAA,MAAA,KAAA,GAElC+qC,OAA1Bx0C,KAAKy0C,cAAgB55B,EAAK25B,EAAAtqC,OAAA,UAAA,KAAA,GAsB7B,GAjBKiqC,EAAYpxB,EAAW5kB,KACvBi2C,EAAYllB,EAAW/wB,KACxB22C,KAAAA,YAAY/xB,EAAYmM,EAAYC,GACzCnvB,KAAKqzC,gBAAiB,EACtBrzC,KAAKszC,aAAc,EACnBtzC,KAAKwzC,gBAAkB,EAEjBa,EAAMr0C,KAAKuyC,KAGZP,KAAAA,IAAI3/B,KAAKzB,GAAqB,CAACmS,WAAAA,KAEzB7iB,EAAAA,GAAAA,OAAM6iB,EAAWjC,MAAK5gB,KAAAA,OAAI6iB,EAAW1C,MAAKngB,KAAAA,OAAI6iB,EAAWzC,OAAMpgB,KAAAA,OAAIgvB,EAAWpO,MAAK5gB,KAAAA,OAAIgvB,EAAWnvB,WAC/FC,KAAKuzC,iBACjBvzC,KAAKozC,kBAAmB,EACxBpzC,KAAKuzC,eAAiBe,EACjBS,KAAAA,qBAAqBhyB,EAAYmM,KAGpCmlB,EAAG,CAAAG,EAAA/qC,KAAA,GAAA,MAAA,GACAzJ,KAAK2zC,eAAc,CAAAa,EAAA/qC,KAAA,GAAA,MAAA,OAAA+qC,EAAA/qC,KAAA,GAChB4qC,EAAI76B,OAAM,KAAA,GACZy6B,IACFjgC,GAAO1S,IAAGpB,2BAAAA,OAA4B6iB,EAAWjC,QACjDuzB,EAAI1oC,aAAawoC,EAAS,oBAAAj0C,OAAsB6iB,EAAWjC,SAEzDozB,IACFlgC,GAAO1S,IAAGpB,2BAAAA,OAA4BgvB,EAAWpO,QACjDuzB,EAAI1oC,aAAayoC,EAAS,oBAAAl0C,OAAsBgvB,EAAWpO,SAE7D9gB,KAAK2zC,gBAAiB,EACjB3B,KAAAA,IAAI3/B,KAAKzB,IAA2B,KAAA,GAAA4jC,EAAAhrC,KAAA,GAOrCxJ,KAAKozC,mBAAqBpzC,KAAKmyC,MAAM6C,gBACvCjyB,EAAWnb,SAAW5H,KAAKmyC,MAAM8C,4BAA8BlyB,EAAWlD,UAC1EqP,EAAWtnB,SAAW5H,KAAKmyC,MAAM8C,4BAA8Bf,EAAWr0B,WAE5E00B,EAAcv0C,KAAKqyC,SAAS6C,MAAMl1C,KAAKozC,kBAAiBoB,EAAA/qC,KAAA,GAAA,MAAA,KAAA,GAElD,MAFkD+qC,EAAAhrC,KAAA,GAAA+nC,EAAAA,GAAAiD,EAAA,MAAA,IAElD,IAAI12C,EAAe5B,EAAWA,EAAcI,KAAIk4C,EAAAjD,IAAQ,KAAA,GAAA,IAG5DvxC,KAAKozC,kBAAqBmB,EAAY3U,kBAAqB2U,EAAY1U,iBAAgB,CAAA2U,EAAA/qC,KAAA,GAAA,MAAA+qC,OAAAA,EAAAtqC,OAAA,UAAA,KAAA,GAUN,OANrFlK,KAAKozC,kBAAmB,EAElB9mC,EAAI,GACNioC,EAAY3U,kBAAkBtzB,EAAEvR,KAAKs5C,EAAI1+B,OAAOw+B,EAAWI,EAAY3U,mBACvE2U,EAAY1U,kBAAkBvzB,EAAEvR,KAAKs5C,EAAI1+B,OAAOy+B,EAAWG,EAAY1U,mBACvE0U,EAAYxU,cAAczzB,EAAEvR,KAAKs5C,EAAI1+B,OAAOw+B,EAAWI,EAAYxU,eACnEwU,EAAYvU,cAAc1zB,EAAEvR,KAAKs5C,EAAI1+B,OAAOy+B,EAAWG,EAAYvU,eAAcwU,EAAAtqC,OAAA,SAE9E9F,QAAQsJ,IAAIpB,IAAE,KAAA,GACZtM,KAAKoyC,YACTA,KAAAA,WAAWpmC,aAAa+W,EAAYmM,GAC1C,KAAA,GAAA,IAAA,MAAA,OAAAslB,EAAArqC,UAAA4pC,EAAA/zC,KAAA,CAAA,CAAA,EAAA,GAAA,CAAA,GAAA,UACF,SAAA4N,GAAA8kC,OAAAA,EAAA5xC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,cAAAC,OAAAy4C,EAAAzpC,EAAAC,IAAAC,MAED,SAAAisC,EAAmBC,GAAY,IAAA9vC,EAAA1J,EAAAy5C,EAAA72C,EAAAwB,KAAA,OAAAiJ,IAAAK,MAAA,SAAAgsC,GAAA,cAAAA,EAAA9rC,KAAA8rC,EAAA7rC,MAAA,KAAA,EACD,GAAtBnE,EAAQtF,KAAKgyC,IAAI1sC,MAClBtF,KAAKuyC,MAASvyC,KAAKsyC,UAAahtC,GAAU8vC,KAAgBA,EAAe,GAAC,CAAAE,EAAA7rC,KAAA,EAAA,MAAA6rC,OAAAA,EAAAprC,OAAA,UAAA,KAAA,EAG3EmrC,GAFEz5C,EAAc0J,EAAM1J,eACpBy5C,EAAYz5C,EAAcw5C,IACf,GAAC,CAAAE,EAAA7rC,KAAA,EAAA,MAAA6rC,OAAAA,EAAAprC,OAAA,UAAA,KAAA,EAC2B,KAA/BrQ,EAAOO,MAAMP,EAAOoN,IAAI3B,IAC1B,GAAK+vC,GAAS,CAAAC,EAAA7rC,KAAA,GAAA,MAAA6rC,OAAAA,EAAAprC,OAAA,UAAA,KAAA,GAAAorC,OAAAA,EAAAprC,OACnB,SAAAlK,KAAKuyC,KAAKgD,YAAY,EAAGF,GAAWloC,MAAK,WAAA,OAAM3O,EAAKwzC,IAAI3/B,KAAKzB,GAAqB,CAAEykC,UAAAA,QAAa,KAAA,GAAA,IAAA,MAAA,OAAAC,EAAAnrC,UAAAgrC,EAAAn1C,UACzG,SAAA6N,GAAA4kC,OAAAA,EAAA3xC,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,uBAAAC,MAED,SAAsB+oB,EAAYmM,GAC5BnM,EAAWwN,SACRyhB,KAAAA,IAAI3/B,KAAKzB,GAAuB,CACnCzS,KAAM,QACN0iB,MAAOkC,EACPyyB,KAAM,CACJ10B,MAAOiC,EAAWjC,MAClBjB,UAAWkD,EAAWlD,UACtBQ,MAAO0C,EAAW1C,MAClBC,OAAQyC,EAAWzC,OACnB4D,SAAUnB,EAAWmB,SACrB4N,QAAS/O,EAAW+O,WAItB5C,EAAWqB,SACRyhB,KAAAA,IAAI3/B,KAAKzB,GAAuB,CACnCzS,KAAM,QACN0iB,MAAOqO,EACPsmB,KAAM,CACJ10B,MAAOoO,EAAWpO,MAClBN,aAAc0O,EAAW1O,aACzBU,WAAYgO,EAAWhO,WACvBrB,UAAWqP,EAAWrP,UACtBiS,QAAS5C,EAAW4C,WAKnB7wB,GAAAA,MAAM,eAAgB8hB,EAAYmM,KAC1C,CAAAn1B,IAAA,cAAAC,MAED,SAAa+oB,EAAYmM,EAAYC,GAAe,IAAA5pB,EAAAvF,KAClDgU,GAAO/S,MAAM8hB,EAAW3B,QAAS8N,EAAW9N,SAE9BuE,EAAAA,iBAAiBpe,SAAQ,SAAA8Z,GACrC9b,EAAKysC,IAAI3/B,KAAKzB,GAAuByQ,GAC9BpgB,GAAAA,MAAM,gBAAiBogB,MAGrBD,EAAAA,QAAQ7Z,SAAQ,SAAC8Z,GACtBA,EAAO0D,UACJitB,EAAAA,IAAI3/B,KAAKzB,GAAgB,CAAE0T,IAAKjD,EAAOiD,SAIrCH,EAAAA,SAAS5c,SAAQ,SAAA7F,GACtBvD,IAAAA,EACJ,OAAQuD,EAAKvD,MAAAA,KACNslB,GACHtlB,EAAOyS,GACP,MAAA,KACG6S,GACHtlB,EAAOyS,GACP,MAAA,KACG6S,GACHtlB,EAAOyS,GAKPzS,GAAW6zC,EAAAA,IAAI3/B,KAAKzB,GAAsB8J,EAAAA,KAAOhZ,GAAI,GAAA,CAAEvD,KAAAA,KACpDuD,GAAAA,KAAK,kBAAmBA,MAEtByiB,EAAAA,SAAS5c,SAAQ,SAAA7F,GACtBvD,IAAAA,EACJ,OAAQuD,EAAKvD,MAAAA,KACNslB,GACHtlB,EAAOyS,GACP,MAAA,KACG6S,GACHtlB,EAAOyS,GACP,MAAA,KACG6S,GACHtlB,EAAOyS,GAKPzS,GAAW6zC,EAAAA,IAAI3/B,KAAKzB,GAAsB8J,EAAAA,KAAOhZ,GAAI,GAAA,CAAEvD,KAAAA,KACpDuD,GAAAA,KAAK,kBAAmBA,MAGnBkkB,EAAAA,WAAWre,SAAQ,SAAAyX,GAC1BgzB,EAAAA,IAAI3/B,KAAKzB,GAAS8J,EAAAA,KAClBsE,GAAG,GAAA,CACNA,IAAK,CACHy2B,KAAMz2B,EAAIpP,KAAKzR,KACf64B,QAAShY,EAAIpP,KAAKtR,QAClB+lB,IAAKrF,EAAIsF,eAIhBytB,EAzUuB,GCJV2D,SAAAA,GAAqBC,EAAM37C,GACzC,IAAI47C,EAAM,EAEJ/6C,EAAO86C,EAAKz7C,OAAS,EACvB27C,EAAM,EACNC,EAAS,EACTC,EAASl7C,EAOb,IALIb,EAAQ27C,EAAK,KACTC,EAAA,EACNE,EAASC,EAAS,GAGbD,GAAUC,GAAQ,CAEnBF,IADJA,EAAMC,EAAS3tC,KAAKwe,OAAOovB,EAASD,GAAU,MAClCj7C,GAASb,GAAS27C,EAAKE,IAAQ77C,EAAQ27C,EAAKE,EAAM,GAAK,CAC3DA,EAAAA,EACN,MACSF,EAAKE,GAAO77C,EACrB87C,EAASD,EAAM,EAEfE,EAASF,EAAM,EAIZD,OAAAA,ECLI5hC,IAAAA,GAAS,IAAInU,EAAO,OAE3Bm2C,GAAW,GAMJC,YAAG3iC,GAAAtV,EAAAi4C,EAAA3iC,GAAArV,IAqRbi4C,EA5BAC,EARAC,EApDDzD,EAzBA0D,EAzBAC,EAfAC,EA5Hct4C,EAAAC,EAAA+3C,GAqCd,SAAAA,EAAa/D,GAAM1zC,IAAAA,EC7BbsQ,EDmEiDtQ,OAtCpC1E,OAAAm8C,GApCnBr4C,EAAA8Q,EAqCEzQ,EAAAA,EAAAQ,KAAAuB,eApCM,MAAIpC,EAAA8Q,EAAAlQ,eAED,GAEXZ,EAAA8Q,EAAAlQ,WACQ,MAERZ,EAAA8Q,EAAAlQ,oBACiB,MAEjBZ,EAAA8Q,EAAAlQ,iBACc,MAEdZ,EAAA8Q,EAAAlQ,YACS,MAETZ,EAAA8Q,EAAAlQ,kBACe,MAAIZ,EAAA8Q,EAAAlQ,wBAEE,MAAIZ,EAAA8Q,EAAAlQ,gBAEZ,MAAIZ,EAAA8Q,EAAAlQ,mBACD,KAAGZ,EAAA8Q,EAAAlQ,oBAEH,GAAKZ,EAAA8Q,EAAAlQ,yBACA,GAAKZ,EAAA8Q,EAAAlQ,2BACF,GAACZ,EAAA8Q,EAAAlQ,sBACN,GAACZ,EAAA8Q,EAAAlQ,gBAEP,MAAIZ,EAAA8Q,EAAAlQ,oBACD,GAuPhBZ,EAAA8Q,EAAAlQ,GAAA,cAAA,WAAAwX,IAAAA,EAAAhN,EAAAC,IAAAC,MAWc,SAAAC,EACZ0R,EACAhL,EAAI2D,EAEJpU,GAAQ,IAAA6M,EAAAC,EAAA4K,EAAA9G,EAAAwmC,EAAAtiC,EAAAuiC,EAAA36C,EAAA46C,EAAA,OAAAztC,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAEa,GAHV+J,EAAAA,EAATvH,UAAWC,EAAOsH,EAAPtH,QAAS4K,EAAEtD,EAAFsD,GAAI9G,EAAawD,EAAbxD,cAG1BxR,EAAKm4C,UAAY9mC,EACZrR,EAAKo4C,mBAAkB,CAAArtC,EAAAE,KAAA,GAAA,MAAA,GACrBjL,EAAK8G,MAAK,CAAAiE,EAAAE,KAAA,EAAA,MACcF,OAAV,QAAjBitC,EAAAh4C,EAAKq4C,oBAAY,IAAAL,GAAjBA,EAAmB1gC,SAAQvM,EAAAW,OAAA,UAAA,KAAA,EAGvBgK,EAAU9U,EAAS8U,QACpB7B,EAAAA,KAAKzB,GAAY,CACpBzR,IAAKX,EAAK2zC,MAAMhzC,IAChBgiB,YAAa/hB,EAASD,IACtB23C,QAAShgC,EAAK9G,EAAgB8G,EAAK5K,EAAUD,IAE1CoG,EAAAA,KAAKzB,GAA6B,CAAEsD,QAAAA,IACzC1V,EAAKu4C,gBACD7iC,MAAAA,IAAAA,EAASjN,IAAI,qBAAsBiN,MAAAA,IAAAA,EAASjN,IAAI,kBACpDzI,EAAKo4C,oBAAqB,EAAI,KAAA,GAAA,GAG3Bp4C,EAAKw4C,eAAc,CAAAztC,EAAAE,KAAA,GAAA,MAAAF,OAAAA,EAAAW,OAAA,UAAA,KAAA,GAMhB1L,OALR+W,aAAa/W,EAAKy4C,oBAEbC,EAAAA,kBAAkBC,eAAet8B,MAAAA,OAAAA,EAAAA,EAAO/O,WAAYI,EAAUD,GAAU1C,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAGrEjL,EAAKw4C,eAAehrC,aAAa6O,GAAM,KAAA,WAC7C47B,EAAAj4C,EAAKw4C,sBAAc,IAAAP,GAAnBA,EAAqBW,YAAY54C,EAAK2zC,MAAMiD,cAAa7rC,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,GAAAF,EAAAC,KAAA,GAAAqN,EAAAA,GAAAtN,EAAA,MAAA,IAEpD/K,EAAKggB,SAAUhgB,EAAKw4C,eAAe7D,SAAQ,CAAA5pC,EAAAE,KAAA,GAAA,MACxCjL,OADwC+K,EAAAE,KAAA,GACxCjL,EAAKq4C,aAAa/gC,SAAQ,KAAA,GAIgBvM,OAHhD/K,EAAKm4C,UAAW,EAEEn4C,EAAAA,EAAKskB,aAAahnB,UACpC0C,EAAK2zC,MAAMkF,YAAc7yC,SAAS1I,GAAa,EAACyN,EAAAW,OAAA,UAAA,KAAA,GAAAX,OAAAA,EAAAW,OAG3C1L,SAAAA,EAAK84C,WAAWx5C,EAAe0H,OAAM+D,EAAAsN,MAAQ,KAAA,GAYrD,GATGrY,EAAK+4C,gBACP/4C,EAAK+4C,eAAgB,EAChBllC,EAAAA,KAAKzB,GAA0B,CAAEzR,IAAKX,EAAK2zC,MAAMhzC,OAIpDX,EAAKg5C,qBACPh5C,EAAKg5C,oBAAqB,EAC1Bh5C,EAAKi5C,UAGH5nC,GAASrR,EAAK8G,MAAMuZ,QAAO,CAAAtV,EAAAE,KAAA,GAAA,MAM5BF,OALI8I,EAAAA,KAAKzB,IACVoD,GAAO/S,MAAM,aAETzC,EAAKggB,QAAUhgB,EAAKk5C,uBAAyB,GAC/Cl5C,EAAKm5C,OACNpuC,EAAAW,OAAA,UAAA,KAAA,GAAA,GAIE1L,EAAKggB,OAAM,CAAAjV,EAAAE,KAAA,GAAA,MAAAF,OAAAA,EAAAW,OAAA,UAAA,KAAA,IAERwsC,EAAsBl4C,EAAK2zC,MAA3BuE,qBAENnhC,aAAa/W,EAAKy4C,oBACbA,EAAAA,mBAAqBphC,YAAW,WACnC,GAAIrX,EAAKk5C,sBAGP,OAFKA,EAAAA,6BACLl5C,EAAKyM,OAGAhK,GAAAA,MAAM,iBAAkBy1C,GAC/Bl4C,EAAKm5C,SACJjB,IACJ,KAAA,GAAA,IAAA,MAAA,OAAAntC,EAAAY,UAAAhB,EAAA,KAAA,CAAA,CAAA,GAAA,UACF,OAAA,SAAAiB,EAAAwD,EAAAC,EAAAC,GAAAkI,OAAAA,EAAAlV,MAAAd,KAAA5E,YA3FD,IA2FCwC,EAAA8Q,EAAAlQ,oBAEe,SAACjE,EAAOq9C,GACf32C,GAAAA,MAAM,aAAc1G,EAAOq9C,GAE7BvlC,EAAAA,KAAKzB,GAAkB,CAC1BrW,MAAOuD,EAAe+5C,QAAQt9C,GAC9Bq9C,UAAAA,OAEHh6C,EAAA8Q,EAAAlQ,WAUM,WACLA,EAAKs5C,SACDt5C,EAAKw4C,gBACPx4C,EAAKw4C,eAAelsC,cAGtBkJ,GAAO/S,MAAM,iBACdrD,EAAA8Q,EAAAlQ,4BAEuB,WACjBk5C,EAAAA,sBAAwBl5C,EAAK2zC,MAAM4F,wBACzCn6C,EAAA8Q,EAAAlQ,YAEO,WACN+W,aAAa/W,EAAKw5C,YAClB,IAAQ1yC,EAARoJ,EAAAlQ,GAAQ8G,MACR,GAAKA,EAAL,CACA9G,EAAKw5C,WAAaniC,WAAWrX,EAAKi5C,MAAOj5C,EAAKy5C,eAE9C,IAAM/vC,EAAYrO,EAAOM,IAAIN,EAAOoN,IAAI3B,IAEpC4C,KAAAA,EAAY8tC,KAAa1wC,EAAM6B,WAA/Be,CAEJ,IAAMgqC,EAAO1zC,EAAK2zC,MACd+F,GvCzbD,SAAyB5yC,GACvBA,OAAAA,IAAUA,EAAM6yC,SAAW7yC,EAAM8yC,OAAgC,IAAvB9yC,EAAM+yC,cAA2C,IAArB/yC,EAAM6B,WuCwb7E+wC,CAAe5yC,GACb9G,EAAK85C,aACP95C,EAAK85C,YAAYC,GAAGjzC,EAAO4sC,EAAK3zB,gBAAiB/f,EAAKggB,OAAQ,OAE3D,CACL,IAAKlZ,EAAM1J,aAAe4C,EAAK85C,YAM7B,aAJgB95C,EAAK2zC,MAAM6C,gBAA+C,IAA7Bx2C,EAAK2zC,MAAM6C,eAA2Bx2C,EAAKskB,WAza1E,IAyaoGvnB,YAEhHiD,EAAK85C,YAAYC,GAAGjzC,EAAO4sC,EAAK3zB,gBAAiB/f,EAAKggB,OAAQ,IAI9D0zB,EAAK1zB,QAA+B,IAArBlZ,EAAM6B,YAAoBe,EAAYgqC,EAAKsG,gBAC5Dh6C,EAAKi6C,mBAGV76C,EAAA8Q,EAAAlQ,cAES,WAAM,IAAAk6C,EAAAC,EACRC,EAAYp6C,EAAK2zC,MAAM0G,qBAAUH,EAAIl6C,EAAK8G,aAAK,IAAAozC,GAAU,QAAVC,EAAVD,EAAYp+C,gBAAQ,IAAAq+C,OAAV,EAAVA,EAAsBz+C,QACjE,GAAIsE,EAAKggB,QACFhgB,EAAKm4C,UAAYiC,GACfE,EAAAA,YAAOz9C,GAAW,OAF3B,CAOMujB,IAAAA,EAAOpgB,EAAKskB,cACblE,EAAKxkB,OAASwkB,EAAKrjB,WAAay6C,IACnCx3C,EAAKi5C,YAER75C,EAAA8Q,EAAAlQ,oBAEe,WACVA,EAAKggB,SAAWhgB,EAAK2zC,MAAM6C,eAEzBx2C,EAAK8G,MAAMsC,WAAaioB,EAAAA,GAC1BrxB,EAAKw4C,eAAepD,eAAe/jB,EAAAA,GAAUnZ,OAAM,SAAAnU,UAGxDmM,EAAAA,EAAAlQ,GAAAwK,eAAAE,IAAAA,MAEY,SAAAmB,IAAA,OAAApB,IAAAK,MAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,KAAA,GACNjL,EAAKggB,QAAUhgB,EAAKu6C,WACvBv6C,EAAKw6C,kBAAmB,EACxBx6C,EAAKy6C,iBACN,KAAA,EAAA,IAAA,MAAA,OAAAxuC,EAAAN,UAAAE,QACFzM,EAAA8Q,EAAAlQ,oBAEe,WACd,GAAKA,EAAK8G,MAAV,CAEA,IAAM4sC,EAAO1zC,EAAK2zC,MACZv2C,EAAc4C,EAAK8G,MAAM1J,YAE/B,GAAIs2C,EAAK1zB,QAAU0zB,EAAKgH,YAAchH,EAAKiH,cAAe,CACxD,IAAMjxC,EAAYrO,EAAOM,IAAIN,EAAOoN,IAAIzI,EAAK8G,QAC7B4C,EAAYtM,GACbs2C,EAAKgH,aACb5zC,EAAAA,MAAM1J,YAAcsM,EAAYgqC,EAAKiH,cACrC9mC,EAAAA,KAAKzB,GAAkB,CAAChV,YAAa4C,EAAK8G,MAAM1J,YAAaw9C,QAASlH,EAAKiH,iBAG/EE,EAAAA,YAAYC,MAAM19C,GAAa,GAEhCs2C,EAAK1zB,SAAWhgB,EAAKu6C,UAAYv6C,EAAKm4C,UAE1Cn4C,EAAKy6C,oBACNr7C,EAAA8Q,EAAAlQ,iBAEY,WAEPA,EAAKggB,SAAWhgB,EAAKm4C,UAAYn4C,EAAKk5C,wBACnCA,EAAAA,wBACLl5C,EAAKyM,WAERrN,EAAA8Q,EAAAlQ,sBAEiB,WAChB,IAAIA,EAAK2zC,MAAM3zB,OAAf,CACA+6B,IAAAA,EAAyB/6C,EAAKskB,aAAtB3oB,EAAGo/C,EAAHp/C,IAAKqB,EAAO+9C,EAAP/9C,QACT2M,KAAK+oB,KAAK/2B,GAAOqB,GAAWgD,EAAK8G,MAAMsC,UAAY,IACrDpJ,EAAKm5C,OAEDn5C,EAAK8G,MAAM6B,YAAc,GAC3B3I,EAAKi5C,aAGV/oC,EAAAA,EAAAlQ,GAAAwK,kBAAAE,IAAAA,MAEe,SAAAkE,IAAAosC,IAAAA,EAAAC,EAAAC,EAAAxH,EAAAyH,EAAAC,EAAAh+C,EAAAlB,EAAAP,EAAAqd,EAAA,OAAAvO,IAAAK,MAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,KAAA,EAK4B,GAJCjL,EAAAA,EAAKskB,aAAY22B,EAAAD,EAApD19C,UAAW49C,OAAkB,IAAHD,EAAG,EAACA,EAChCvH,EAAO1zC,EAAK2zC,MACZwH,EAAgBn7C,EAAKq7C,WAAWF,cAChCC,EAAQp7C,EAAKq7C,WAAWD,MACxBh+C,EAAc4C,EAAK8G,MAAM1J,cAE3B89C,EAAkBxH,EAAKmF,aAAW,CAAA7pC,EAAA/D,KAAA,GAAA,MAWnC,GAVK/O,EAAIg7C,GACRl3C,EAAKq7C,WAAWD,MAChBh+C,EAAc89C,EAAkB1D,KAExBN,EAAAA,GACRl3C,EAAKq7C,WAAWD,MAChBh+C,EAAc89C,EAAkBl7C,EAAK2zC,MAAMkF,gBAEjC38C,IACVP,EAAMO,EAAI,GAGR8D,EAAKw6C,mBAAqB7+C,EAAG,CAAAqT,EAAA/D,KAAA,GAAA,MAAA+D,OAAAA,EAAAtD,OAAA,UAAA,KAAA,GAEC,GAC9BsN,OADEA,EAAYmiC,EAAcj/C,IACiB,CAAA8S,EAAA/D,KAAA,GAAA,MAAA+D,OAAAA,EAAAtD,OAAA,UAAA,KAAA,GAC3C1L,OAD2CgP,EAAA/D,KAAA,GAC3CjL,EAAKq4C,aAAa/gC,SAAQ,KAAA,GAChCtX,EAAKs7C,UAAU,KAAM,CAACtiC,EAAWmiC,EAAcx/C,KAC/CqE,EAAKw6C,iBAAmB7+C,EACnB68C,EAAAA,eAAe+C,aAAaH,EAAMl/C,IAAG,KAAA,GAAA,IAAA,MAAA,OAAA8S,EAAArD,UAAAiD,QAE7CxP,EAAA8Q,EAAAlQ,GAEkB,oBAAA,SAAA6iB,GAAU24B,IAAAA,EAAAC,EAAAC,EAAAC,EACrBC,UAASJ,EAAG34B,EAAOzR,YAAI,IAAAoqC,GAAY,QAAZC,EAAXD,EAAar5B,kBAAbs5B,IAAuBA,OAAZ,EAAXA,EAAyBG,UACrCxyC,UAAQsyC,EAAG74B,EAAOzR,YAAI,IAAAsqC,GAAY,QAAZC,EAAXD,EAAav5B,kBAAbw5B,IAAuBA,OAAZ,EAAXA,EAAyBvyC,SACtCwyC,IACF57C,EAAKq7C,WAAaO,IAGf57C,EAAK2zC,MAAM3zB,QAAU5W,GACnBovC,EAAAA,eAAepD,eAAehsC,MAxfhCuqC,EAAAA,QC/BDrjC,EAAG4L,EAAA,CACPuC,WAAY,EACZT,WAAY,IACZu7B,qBAAsB,EACtBsC,YAAa,IACb3D,kBAAmB,IACnBW,YAAa,EACbiD,mBAAoB,IACpB97B,QAAQ,EACRq6B,YAAY,EACZzD,aAAc,GACd72B,gBAAiB,EACjBs2B,gBAAiB,IACjB0F,kBAAkB,EAClBC,uBAAuB,EACvB5F,WAAW,EACXD,WAAW,EACX7vC,WAAW,EACXkwC,eAAe,EACfC,4BAA6B,GDYN/C,ICRjB1zB,QACF1P,EAAIuoC,cAGDvoC,EAAIoqC,aACHA,EAAAA,WAA+B,EAAlBpqC,EAAIuoC,aAElBvoC,EAAIqqC,gBACPrqC,EAAIqqC,cAAgBrqC,EAAIuoC,aAGC,OAAvBvoC,EAAI0pC,qBAAkDn9C,IAAvByT,EAAI0pC,iBACrC1pC,EAAI0pC,eAAiB1pC,EAAIoqC,aAKxBpqC,GDRLtQ,EAAK8G,MAAQ9G,EAAK2zC,MAAM7sC,OAASm1C,SAASC,cAAc,SACxDl8C,EAAK2zC,MAAM7sC,MAAQ,KACnB9G,EAAKo4C,oBAAqB,EAC1Bp4C,EAAKq4C,aAAe,IAAIt5B,GAAS7C,EAAAA,EAC5Blc,GAAAA,EAAK2zC,MAAMwI,cAAY,GAAA,CAC1Bp+B,MAAO/d,EAAK2zC,MAAMl1B,WAClBT,WAAYhe,EAAK2zC,MAAM31B,WACvB9I,QAASlV,EAAK2zC,MAAMkI,YACpB59B,aAAcje,EAAKo8C,cACnBhnC,WAAYpV,EAAKyZ,YACjBtE,aAAc,iBAGX+jC,EAAAA,sBAAwBl5C,EAAK2zC,MAAM4F,qBAExCv5C,EAAKw4C,eAAiB,IAAIjF,GAAarjC,EAAAlQ,GAErCA,EAAK2zC,MAAM0G,WAAar6C,EAAK8G,WAAQjK,EACrCmD,EAAK2zC,OAEP3zC,EAAK66C,YAAc,IAAIv6B,GAAUpQ,EAAAlQ,IAC5B04C,EAAAA,kBAAoB,IAAI13B,GAC7BhhB,EAAKsjB,OAAS,IAAIH,GAAiBjT,EAAAlQ,IAE9BA,EAAK2zC,MAAM0G,aACTP,EAAAA,YAAc,IAAIh6B,IAGzB9f,EAAK8G,MAAMqD,iBAAiB,OAAQnK,EAAKq8C,SACzCr8C,EAAK8G,MAAMqD,iBAAiB,aAAcnK,EAAKs8C,eAC/Ct8C,EAAK8G,MAAMqD,iBAAiB,UAAWnK,EAAKu8C,YAC5Cv8C,EAAK8G,MAAMqD,iBAAiB,aAAcnK,EAAKw8C,eAC/Cx8C,EAAK8G,MAAMqD,iBAAiB,WAAYnK,EAAKy8C,iBAC7Cz8C,EAAK8G,MAAMqD,iBAAiB,UAAWnK,EAAK08C,YAE5C18C,EAAKsU,GAAGlC,GAAuBpS,EAAK28C,kBAAiB38C,EAsJtDy3C,OArJA11C,EAAA01C,EAAA,CAAA,CAAAl8C,IAAA,UAAAkN,IAED,WACS,MAAA,WACR,CAAAlN,IAAA,SAAAkN,IAED,WACE,OAAOjH,KAAKmyC,MAAM3zB,SACnB,CAAAzkB,IAAA,UAAAkN,IAED,WAAem0C,IAAAA,EACb,eAAAA,EAAOp7C,KAAKg3C,sBAAc,IAAAoE,OAAA,EAAnBA,EAAqBtpB,UAC7B,CAAA/3B,IAAA,WAAAkN,IAED,WACE,QAASjH,KAAK65C,YAAc75C,KAAK+2C,gBAClC,CAAAh9C,IAAA,SAAAkN,IAED,WACE,OAAOjH,KAAK62C,eACb,CAAA98C,IAAA,UAAAkN,IAED,WAAeo0C,IAAAA,EACb,eAAAA,EAAOr7C,KAAKg3C,sBAAc,IAAAqE,OAAA,EAAnBA,EAAqBC,UAC7B,CAAAvhD,IAAA,YAAAC,MAED,WACS,MAAA,CACLic,MAAOjW,KAAKk3C,kBAAkBqE,iBAC9B14B,SAAU7iB,KAAKk3C,kBAAkBsE,iBAIrC,CAAAzhD,IAAA,WAAAC,MAGA,WACS,OAAAgG,KAAK8hB,OAAOY,aACpB,CAAA3oB,IAAA,aAAAC,MAED,WAAgCyhD,IAAAA,EAApBjhD,EAAOY,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,GAAAA,UAAA,GAAG46C,GACpB,OAAOn8C,EAAO+kB,KAAK/kB,EAAOoN,IAAIjH,KAAKsF,OAAkBm2C,QAAZA,EAAEz7C,KAAKsF,aAALm2C,IAAUA,OAAVA,EAAAA,EAAY7/C,YAAapB,KACrE,CAAAT,IAAA,kBAAAC,MAED,WACS0hD,OvCjJJ,SAAkCzc,GACvC,IAAKA,EAAO,MAAO,GACf,GAAyC,mBAAlCA,EAAMyc,wBAAwC,CACjD98B,IAAAA,EAAOqgB,EAAMyc,0BACZ,MAAA,CACLC,mBAAoB/8B,EAAK+8B,oBAAsB/8B,EAAKg9B,qBACpDC,iBAAkBj9B,EAAKi9B,iBACvBC,aAAcl9B,EAAKk9B,cAIhB,MAAA,CACLH,mBAAoB1c,EAAM8c,wBAC1BF,iBAAkB5c,EAAM+c,wBACxBF,aAAcr3C,YAAYC,OuCmInBg3C,CAAwB17C,KAAKsF,SAGtC,CAAAvL,IAAA,OAAAC,OAAAu8C,EAAAvtC,EAAAC,IAAAC,MAKA,SAAA2qC,EAAY10C,GAAG,IAAAs0C,EAAAwI,EAAA7gD,UAAA,OAAA6N,IAAAK,MAAA,SAAAwqC,GAAA,cAAAA,EAAAtqC,KAAAsqC,EAAArqC,MAAA,KAAA,EAAkB,GAAhBgqC,EAAQwI,EAAA/hD,OAAA,QAAAmB,IAAA4gD,EAAA,IAAAA,EAAA,GAClBj8C,KAAKg3C,eAAc,CAAAlD,EAAArqC,KAAA,EAAA,MAAAqqC,OAAAA,EAAA5pC,OAAA,UAAA,KAAA,EAClB,OADkB4pC,EAAArqC,KAAA,EAClBzJ,KAAK8yC,OAAOW,GAAS,KAAA,EAE3BzzC,KAAK85C,UAAU36C,EAAKa,KAAKmyC,MAAM3zB,OAAS,GAAK,CAAC,EAAGxe,KAAKmyC,MAAMmI,qBAE5D/kC,aAAavV,KAAKg4C,YAClBh4C,KAAKg4C,WAAaniC,WAAW7V,KAAKy3C,MAAOz3C,KAAKi4C,eAAc,KAAA,EAAA,IAAA,MAAA,OAAAnE,EAAA3pC,UAAA0pC,EAAA7zC,UAC7D,SAAAk8C,GAAA3F,OAAAA,EAAAz1C,MAAAd,KAAA5E,cAED,CAAArB,IAAA,SAAAC,OAAAs8C,EAAAttC,EAAAC,IAAAC,MACA,SAAA6qC,IAAA,IAAAwG,EAAA4B,EAAA52C,EAAAvF,KAAAo8C,EAAAhhD,UAAA,OAAA6N,IAAAK,MAAA,SAAAkrC,GAAA,cAAAA,EAAAhrC,KAAAgrC,EAAA/qC,MAAA,KAAA,EAAwE,GAA1C2yC,EAAAA,EAAAliD,eAAAmB,IAAA+gD,EAAA,GAAAA,EAAG,GAAAp8C,KAAKmyC,MAAMoI,iBAAkB4B,EAAUC,EAAAliD,OAAAkiD,EAAAA,UAAA/gD,EACjE2E,KAAKsF,MAAK,CAAAkvC,EAAA/qC,KAAA,EAAA,MAAA+qC,OAAAA,EAAAtqC,OAAA,UAAA,KAAA,EAEa,GAA5BlK,KAAKq8C,yBAED9B,EAAgB,CAAA/F,EAAA/qC,KAAA,GAAA,MAAA,OAAA+qC,EAAA/qC,KAAA,EACZzJ,KAAK83C,SAAQ,KAAA,EAEnBjiC,YAAW,WACJikC,EAAAA,UAAUv0C,EAAK4sC,MAAMhzC,KAC1BoG,EAAKyxC,eAAesF,iBACpB/2C,EAAKiyC,oBAAqB,KAC1BhD,EAAA/qC,KAAA,GAAA,MAAA,KAAA,GAAA,OAAA+qC,EAAA/qC,KAAA,GAEIzJ,KAAKiL,OAAM,KAAA,GAAAupC,OAAAA,EAAAtqC,gBAEZlK,KAAKsF,MAAMi3C,MAAMJ,GAAYzlC,OAAM,gBAAS,KAAA,GAAA,IAAA,MAAA,OAAA89B,EAAArqC,UAAA4pC,EAAA/zC,UACpD,WAAAs2C,OAAAA,EAAAx1C,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,aAAAC,MAED,WAEE,OADAga,GAAO/S,MAAM,eACNjB,KAAK83C,WAGd,CAAA/9C,IAAA,YAAAC,OAAAq8C,EAAArtC,EAAAC,IAAAC,MAIA,SAAAisC,EAAiBh2C,EAAKq9C,GAAQ,IAAAp1C,EAAApH,KAAA,OAAAiJ,IAAAK,MAAA,SAAAgsC,GAAA,cAAAA,EAAA9rC,KAAA8rC,EAAA7rC,MAAA,KAAA,EAAA,GACvBzJ,KAAKg3C,eAAc,CAAA1B,EAAA7rC,KAAA,EAAA,MAAA6rC,OAAAA,EAAAprC,OAAA,UAAA,KAAA,EAEI,GAA5BlK,KAAKq8C,wBAEAG,GAAax8C,KAAKmyC,MAAM3zB,OAAM,CAAA82B,EAAA7rC,KAAA,EAAA,MAC3B,OAD2B6rC,EAAA7rC,KAAA,EAC3BzJ,KAAKiL,KAAK9L,GAAI,KAAA,EACKm2C,OAAzBt1C,KAAKu3C,eAAgB,EAAIjC,EAAAprC,gBAClBlK,KAAKsF,MAAMi3C,MAAK,GAAM7lC,OAAM,gBAAS,KAAA,EAAA,OAAA4+B,EAAA7rC,KAAA,GAGxCzJ,KAAK83C,SAAQ,KAAA,GAEnBjiC,YAAW,WACTzO,EAAKmwC,eAAgB,EACrBnwC,EAAKowC,oBAAqB,EAC1BpwC,EAAK0yC,UAAU36C,GACfiI,EAAK4vC,eAAesF,oBACpB,KAAA,GAAA,IAAA,MAAA,OAAAhH,EAAAnrC,UAAAgrC,EAAAn1C,UACHy8C,SAAAC,EAAAC,GAAAtG,OAAAA,EAAAv1C,MAAAd,KAAA5E,cAED,CAAArB,IAAA,UAAAC,OAAA24C,EAAA3pC,EAAAC,IAAAC,MACA,SAAA0zC,IAAA,OAAA3zC,IAAAK,MAAA,SAAAuzC,GAAA,cAAAA,EAAArzC,KAAAqzC,EAAApzC,MAAA,KAAA,EAAA,GACOzJ,KAAKsF,MAAK,CAAAu3C,EAAApzC,KAAA,EAAA,MAAAozC,OAAAA,EAAA3yC,OAAA,UAAA,KAAA,EAST9F,OARNpE,KAAK+S,qBACL/S,KAAKq5C,YAAY12C,QACjB3C,KAAKsF,MAAMyD,oBAAoB,OAAQ/I,KAAK66C,SAC5C76C,KAAKsF,MAAMyD,oBAAoB,aAAc/I,KAAK86C,eAClD96C,KAAKsF,MAAMyD,oBAAoB,UAAW/I,KAAK+6C,YAC/C/6C,KAAKsF,MAAMyD,oBAAoB,aAAc/I,KAAKg7C,eAClDh7C,KAAKsF,MAAMyD,oBAAoB,UAAW/I,KAAKk7C,YAC/Cl7C,KAAKsF,MAAMyD,oBAAoB,WAAY/I,KAAKi7C,iBAAgB4B,EAAApzC,KAAA,GAC1DrF,QAAQsJ,IAAI,CAAC1N,KAAK83C,SAAU93C,KAAKg3C,eAAe8F,YAAW,KAAA,GACjE98C,KAAKsF,MAAQ,KACbtF,KAAKg3C,eAAiB,KAAI,KAAA,GAAA,IAAA,MAAA,OAAA6F,EAAA1yC,UAAAyyC,EAAA58C,UAC3B,WAAA2yC,OAAAA,EAAA7xC,MAAAd,KAAA5E,cAED,CAAArB,IAAA,aAAAC,MAsBA,SAAYO,GAA2BwiD,IAAAA,EAApBjyC,IAAW1P,UAAAlB,OAAA,QAAAmB,IAAAD,UAAA,KAAAA,UAAA,GAC5B4Y,GAAOlR,MAAMvI,GACbyZ,GAAOzZ,MAAMA,GACNA,GAAAA,MAAgB,QAAXwiD,EAAC/8C,KAAKsF,aAAK,IAAAy3C,OAAA,EAAVA,EAAYxiD,OACrByF,KAAKu3C,gBACPv3C,KAAKu3C,eAAgB,EACrBv3C,KAAKw3C,oBAAqB,EACrBnlC,KAAAA,KAAKzB,GAAyBrW,IAEhC8X,KAAAA,KAAKzB,GAAarW,GACnBuQ,IACF9K,KAAKq5C,YAAY12C,QACjB3C,KAAK23C,UAER,CAAA59C,IAAA,SAAAC,OAAAo8C,EAAAptC,EAAAC,IAAAC,MAED,SAAA8zC,IAAA,IAAAvJ,EAAAwJ,EAAA7hD,UAAA,OAAA6N,IAAAK,MAAA,SAAA4zC,GAAA,cAAAA,EAAA1zC,KAAA0zC,EAAAzzC,MAAA,KAAA,EAGqB,OAHPgqC,EAAQwJ,EAAA/iD,OAAA,QAAAmB,IAAA4hD,EAAA,IAAAA,EAAA,GACpBj9C,KAAKq5C,YAAY12C,QACjB3C,KAAKk3C,kBAAkBv0C,QACvB3C,KAAK8hB,OAAOnf,QAAOu6C,EAAAzzC,KAAA,EACbzJ,KAAK83C,SAAQ,KAAA,EACb,OADaoF,EAAAzzC,KAAA,EACbzJ,KAAKg3C,eAAer0C,MAAM8wC,GAAS,KAAA,EAAA,IAAA,MAAA,OAAAyJ,EAAA/yC,UAAA6yC,EAAAh9C,UAC1C,WAAAo2C,OAAAA,EAAAt1C,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,YAAAC,OAAAm8C,EAAAntC,EAAAC,IAAAC,MAED,SAAAi0C,EAAiBh+C,EAAK8Q,GAAKmtC,IAAAA,EAAA,OAAAn0C,IAAAK,MAAA,SAAA+zC,GAAA,cAAAA,EAAA7zC,KAAA6zC,EAAA5zC,MAAA,KAAA,EAEY,GADjCtK,IAAKa,KAAKmyC,MAAMhzC,IAAMA,GACTA,EAAAA,EAAMa,KAAKmyC,MAAMhzC,IAC7BA,EAAG,CAAAk+C,EAAA5zC,KAAA,EAAA,MAAQ,MAAA,IAAIzK,MAAM,yBAAwB,KAAA,EAY9C,GAVAgB,KAAKmyC,MAAMmL,gBACbF,EAAYp9C,KAAKmyC,MAAMmL,cAAcn+C,GAAKA,KAG5Ca,KAAK62C,aAAauG,UAAYA,EAEzB/qC,KAAAA,KAAKzB,GAAkB,CAAEzR,IAAKi+C,EAAWG,kBAAmBv9C,KAAKw3C,qBAEtExjC,GAAO/S,MAAM,sBAAuBjB,KAAK22C,SAAUyG,IAE/Cp9C,KAAK22C,SAAQ,CAAA0G,EAAA5zC,KAAA,GAAA,MACT,OADS4zC,EAAA5zC,KAAA,GACTzJ,KAAK62C,aAAa/gC,SAAQ,KAAA,GAK1B,OAFR9V,KAAK22C,UAAW,EAAI0G,EAAA7zC,KAAA,GAAA6zC,EAAA5zC,KAAA,GAEZzJ,KAAK62C,aAAa5rC,KAAK,CAAE9L,IAAKi+C,EAAWntC,MAAAA,IAAQ,KAAA,GAAAotC,EAAA5zC,KAAA,GAAA,MAAA,KAAA,GAElC4zC,OAFkCA,EAAA7zC,KAAA,GAAAqN,EAAAA,GAAAwmC,EAAA,MAAA,IAEvDr9C,KAAK22C,UAAW,EAAK0G,EAAAnzC,OACd,SAAAlK,KAAKs3C,WAAWx5C,EAAe+5C,QAAOwF,EAAAxmC,MAAQ,KAAA,GAAA,IAAA,MAAA,OAAAwmC,EAAAlzC,UAAAgzC,EAAAn9C,KAAA,CAAA,CAAA,GAAA,UAExD85C,SAAA0D,EAAAC,GAAAtH,OAAAA,EAAAr1C,MAAAd,KAAA5E,cAAA,CAAArB,IAAA,SAAAC,OAAAk8C,EAAAltC,EAAAC,IAAAC,MAwGD,SAAAw0C,IAAA,OAAAz0C,IAAAK,MAAA,SAAAq0C,GAAA,cAAAA,EAAAn0C,KAAAm0C,EAAAl0C,MAAA,KAAA,EACM,IAAAzJ,KAAK62C,aAAY,CAAA8G,EAAAl0C,KAAA,EAAA,MAAQ,OAARk0C,EAAAl0C,KAAA,EAAQzJ,KAAK62C,aAAa/gC,SAAQ,KAAA,EACvDP,aAAavV,KAAKi3C,oBAClB1hC,aAAavV,KAAKg4C,YAClBh4C,KAAK22C,UAAW,EAChB32C,KAAK42C,oBAAqB,EAAK,KAAA,EAAA,IAAA,MAAA,OAAA+G,EAAAxzC,UAAAuzC,EAAA19C,UAChC,WAAAk2C,OAAAA,EAAAp1C,MAAAd,KAAA5E,eAAA,CAAA,CAAArB,IAAA,cAAAC,MAlLD,SAAoBk5C,GAClB,OAAKA,GAA2B,UAAdA,GAAuC,UAAdA,EAIb,oBAAhB0K,YAHLv4C,GAAIuY,gBAId,CAAA7jB,IAAA,eAAAC,MAED,WACE6F,EAAOgH,SACPg3C,GAAiBh3C,WAClB,CAAA9M,IAAA,gBAAAC,MAED,WACE6F,EAAOi+C,UACPD,GAAiBC,cAClB7H,GAjOsBtkC,IAoiBrB,IACEosC,aAAaC,QAAQ,OACvB/H,GAAIgI,eAEJhI,GAAIiI,sBAEC3jD,KEtkBwC,IAE5B4jD,GAAe,WAClCA,SAAAA,EAAajM,EAAMkM,GAAQ,IAAA5/C,EAAAwB,KAAAlG,OAAAqkD,0BA+BV,WAAME,IAAAA,EAAAC,EAAAC,EAAAC,EACnBC,EAA2CjgD,EAAK2zC,MAAxC7sC,EAAKm5C,EAALn5C,MAAOo5C,EAAYD,EAAZC,aAAcC,EAASF,EAATE,kBAE7BN,EAAA7/C,EAAKogD,eAAO,IAAAP,GAAQC,QAARA,EAAZD,EAAcQ,cAAdP,IAAoBA,GAApBA,EAAsBjsC,KAAK,YAAa/M,EAAMw5C,aAClC,QAAZP,EAAA//C,EAAKogD,eAAO,IAAAL,GAAQ,QAARC,EAAZD,EAAcM,cAAM,IAAAL,GAApBA,EAAsBnsC,KAAK,aAAYqI,EAAAA,EAAA,GAClCpV,EAAMw5C,aAAW,GAAA,CACpBC,UAAWnuC,MAGS,IAAjB8tC,GAAuC,IAAjBA,IAAuBC,GAChDngD,EAAKwgD,SAASL,MAIlB/gD,EAAAoC,KAAA,YAGS,SAACb,GACF0/C,IAAAA,EAAWrgD,EAAKogD,QAAhBC,OACFI,EAAcJ,EAAO5f,MAE3B,GAAyB,YAArBggB,MAAAA,OAAW,EAAXA,EAAaC,KAAjB,CAEMC,IAAAA,EAAWN,EAAO5f,MAAMmgB,aAE9BP,EAAO5f,MAAQkgB,EAEfF,EAAYI,QAAQlgD,GAEhBA,IACF0/C,EAAO9+C,OAAOZ,IAAMA,GAIhBmgD,IAAAA,EAAaT,EAAOU,KAAKD,WAER,WAAnBA,EAAWJ,KACNK,EAAAA,KAAKC,aAAaL,EAAUG,GAErC,IAAMG,EAAYjhD,EAAKogD,QAAQ5d,YAAY0e,WAAW/jC,cACtDkjC,EAAOc,iBAAiBF,GAGjBvuC,EAAAA,KAAK,WAAW,WACrB2tC,EAAOtC,cAEV3+C,EAAAoC,KAAA,uBAEqB,SAACb,GACbu/C,IAAAA,EAAiBlgD,EAAK2zC,MAAtBuM,aAGa,IAAjBA,GAAuC,IAAjBA,GACxBlgD,EAAKwgD,SAAS7/C,MAnFhBa,KAAKmyC,MAAQD,EACblyC,KAAK4+C,QAAUR,EACfp+C,KAAK4/C,QAwFNzB,OAvFA59C,EAAA49C,EAAA,CAAA,CAAApkD,IAAA,QAAAC,MAED,WACE,IAAA6lD,EAAyD7/C,KAAKmyC,MAAtD7sC,EAAKu6C,EAALv6C,MAAO+xC,EAAWwI,EAAXxI,YAAaqH,EAAYmB,EAAZnB,aAAcoB,EAAUD,EAAVC,WAErCx6C,IAEDo5C,GACIqB,EAAAA,aAAa,eAAgBrB,GAEjCrH,GACI0I,EAAAA,aAAa,cAAe1I,GAGhC/xC,EAAM06C,eACR16C,EAAM06C,cAAcF,GAGtB9/C,KAAK+hB,iBACN,CAAAhoB,IAAA,cAAAC,MAED,WACoBgG,KAAKmyC,MAAf7sC,MAEFqD,iBAAiB,YAAa3I,KAAKigD,gBAC1C,CAAAlmD,IAAA,UAAAC,MA2DD,WAAW,IAAAkmD,EAAAC,EACC,QAAVD,EAAIlgD,KAACmyC,aAAKgO,IAAAD,WAAAC,EAAVD,EAAY56C,aAAK,IAAA66C,GAAjBA,EAAmBp3C,oBAAoB,YAAa/I,KAAKigD,cACzDjgD,KAAK4+C,QAAU,SAChBT,EA5FiC,GCGvBiC,YAASC,GAAAriD,EAAAoiD,EAAAC,GAAApiD,IAAAA,EAAAC,EAAAkiD,GAAA,SAAAA,IAAA5hD,IAAAA,EAAA1E,OAAAsmD,GAAA,IAAA,IAAA3/C,EAAArF,UAAAlB,OAAAwG,EAAAC,IAAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAxF,UAAAwF,GAsKnBpC,OA/JDZ,EAAA8Q,EAPoBzQ,EAAAA,EAAAQ,KAAAqC,MAAA7C,EAAA,CAAA+B,MAAAE,OAAAQ,WAQd,MAEN9C,EAAA8Q,EAAAlQ,qBACkB,MA6FlBZ,EAAA8Q,EAAAlQ,eAGW,WAAM8hD,IAAAA,EACfA,OAAe,QAAfA,EAAO9hD,EAAKwzC,WAAG,IAAAsO,OAAA,EAARA,EAAU59B,cAClB9kB,EAAA8Q,EAAAlQ,cAES,WAAM+hD,IAAAA,EACV/hD,EAAKwzC,MACPxzC,EAAKwzC,IAAI8K,UACTt+C,EAAKwzC,IAAM,MAEO,QAApBuO,EAAA/hD,EAAKgiD,uBAAe,IAAAD,GAApBA,EAAsBzD,UACtBt+C,EAAKgiD,gBAAkB,QAkBzB5iD,EAAA8Q,EAAAlQ,mBAKe,SAACW,EAAKq9C,GACL,IAAAiE,EAAAC,EAAVliD,EAAKwzC,MACF6M,EAAAA,OAAO9+C,OAAOZ,IAAMA,EAED,WAApBiE,EAAOo5C,KACTA,EAAWA,EAASA,UAGjBxK,EAAAA,IAAIyK,UAAUt9C,EAAKq9C,IAEnBA,GAA8BiE,QAAtBA,EAAIjiD,EAAKqgD,OAAO9+C,kBAAM0gD,GAAK,QAALC,EAAlBD,EAAoBzO,WAApB0O,IAAuBA,GAAvBA,EAAyBlG,uBACxCh8C,EAAKmiD,uBAGV/iD,EAAA8Q,EAAAlQ,uBAEkB,WACFA,EAAKqgD,OAAO1G,QAEtB0G,EAAAA,OAAO3tC,KAAK,WAAW,WAC1B1S,EAAKqgD,OAAO+B,cAEfhjD,EAAA8Q,EAAAlQ,GAEqB,uBAAA,SAAAgV,GAAY,IAAT0F,EAAE1F,EAAF0F,GACnB1a,EAAKwzC,KAAUA,EAAAA,IAAIyK,UAAUvjC,MAClC1a,EAjCA4hD,OAiCA7/C,EAAA6/C,EAAA,CAAA,CAAArmD,IAAA,OAAAkN,IAxJD,WACE,OAAOjH,KAAKgyC,MAGd,CAAAj4C,IAAA,UAAAkN,IACA,WAAe45C,IAAAA,EACb,eAAAA,EAAO7gD,KAAKgyC,WAAG,IAAA6O,OAAA,EAARA,EAAUhkB,UAGnB,CAAA9iC,IAAA,aAAAkN,IACA,WAAkB,IAAA65C,EAAAC,EACV7N,UAAS4N,EAAG9gD,KAAK6+C,cAAM,IAAAiC,GAAQ,QAARC,EAAXD,EAAa/gD,cAAbghD,IAAmBA,OAAR,EAAXA,EAAqB7N,UACvC,QAASA,GAA2B,UAAdA,GAAuC,UAAdA,IAChD,CAAAn5C,IAAA,SAAAkN,IAED,WAAc+5C,IAAAA,EACZ,eAAAA,EAAOhhD,KAAKgyC,WAAG,IAAAgP,OAAA,EAARA,EAAUljC,SAClB,CAAA/jB,IAAA,mBAAAC,MAED,WAAoB,IAAAuL,EAAAvF,KACZD,EAASC,KAAK6+C,OAAO9+C,OAE3B,GAAKA,EAAOZ,IAAZ,CAEIa,KAAKgyC,KAAKhyC,KAAKgyC,IAAI8K,UAElB+B,KAAAA,OAAOpC,UAAYz8C,KAAKihD,aAEvBC,IAgCaC,EAhCbD,EAAUnhD,EAAOiyC,KAAO,GAgC9B,GA/B+B,OAA3BkP,EAAQ1I,qBAAsDn9C,IAA3B6lD,EAAQ1I,iBAC7C0I,EAAQ1I,eAAiB,GAGtBxG,KAAAA,IAAM,IAAIiE,GAAGv7B,EAAA,CAChBm+B,WAAY74C,KAAK64C,WACjBr6B,OAAQze,EAAOye,OACflZ,MAAOtF,KAAK6+C,OAAO5f,MACnBqe,cAAe,SAACn+C,EAAKN,GAAG,IAAAuiD,EAAAC,EAAA,OAA8B,QAAzBD,GAAAC,EAAA97C,EAAKs5C,QAAOvB,qBAAZ8D,IAAyBA,OAAzBA,EAAAA,EAAA3iD,KAAA4iD,EAA4BliD,EAAKN,KAAQ,CAACM,IAAAA,EAAKN,IAAAA,KACzEqiD,IAGAlhD,KAAK64C,yBACGyI,qBAAqBthD,KAAK6+C,OAAQ,CAC3C1/C,IAAK,CACH8H,IAAK,WAAMs6C,IAAAA,EACT,eAAAA,EAAOh8C,EAAKysC,WAAG,IAAAuP,OAAA,EAARA,EAAUjG,SAEnBkG,cAAc,KAKhBxhD,KAAK64C,aACF2H,KAAAA,gBAAkB,IAAIrC,GAAezjC,EAAA,CACxCpV,MAAOtF,KAAK6+C,OAAO5f,OAChBl/B,EAAOiyC,KACThyC,MACE6+C,KAAAA,OAAO4C,oBAAsB,WAAA,IAAAC,IAAAA,EAAAtgD,EAAAhG,UAAAlB,OAAIwG,EAAIC,IAAAA,MAAAS,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJX,EAAIW,GAAAjG,UAAAiG,GAAAqgD,eAAAA,EAAKn8C,EAAKi7C,uBAAe,IAAAkB,OAAA,EAApBA,EAAsBD,oBAAmB3gD,MAAA4gD,EAAIhhD,KAG1FX,EAAOye,OACE2iC,QAAXA,EAAAnhD,KAAK6+C,cAALsC,IAAWA,GAAXA,EAAaQ,SAAS,UAAU,WAAAC,IAAAA,EAAAA,OAAc,QAAdA,EAAMr8C,EAAKysC,WAAG,IAAA4P,OAAA,EAARA,EAAU9I,YAGlD94C,KAAK8S,GAAG/B,EAAMA,OAAC8wC,WAAY7hD,KAAKihD,cAChCjhD,KAAK8S,GAAG/B,EAAMA,OAAC+wC,QAAS9hD,KAAK88C,SAE7B98C,KAAK+hD,cACAC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAChBoxC,KAAAA,gBAAgBpxC,IAErB5Q,KAAKgyC,IAAI/mC,KAAKlL,EAAOZ,KAAK,MAC3B,CAAApF,IAAA,cAAAC,MAkED,WAAe,IAAAoN,EAAApH,KACbA,KAAKgyC,IAAIl/B,GAAGlC,IAAa,SAACoG,GACpB5P,EAAKy3C,QACFA,EAAAA,OAAOxsC,KAAKtB,EAAAA,OAAOpR,MAAO,IAAIsiD,EAAMA,OAAC76C,EAAKy3C,OAAQ7nC,SAG5D,CAAAjd,IAAA,kBAAAC,MAED,SAAiB+kD,GAAW,IAAA/2C,EAAAhI,KAC1BA,KAAKgyC,IAAIl/B,GAAGisC,GAAW,SAACx8C,GAClByF,EAAK62C,QACFA,EAAAA,OAAOxsC,KAAK,aAAYqI,EAAAA,EAAA,GACxBnY,GAAC,GAAA,CACJw8C,UAAAA,WAIP,CAAA,CAAAhlD,IAAA,aAAAkN,IAtLD,WACS,MAAA,QACR,CAAAlN,IAAA,cAAAC,MA0HD,SAAoBk5C,EAAWpyB,GACtBm1B,OAAAA,GAAIr4B,YAAYs1B,EAAWpyB,KACnC,CAAA/mB,IAAA,iBAAAC,MAED,WACE,MAAqC,oBAAvB+K,uBACfq7C,GArI4B8B,qBAAlB9B,EAAAA,GAAS,MACPnK"}