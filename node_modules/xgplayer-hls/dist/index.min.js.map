{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mpeg-ts/fixer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4-parser.js","../../xgplayer-transmuxer/src/mp4/fmp4-demuxer.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/hls/buffer-service/decrypt/index.js","../src/hls/constants.js","../src/hls/buffer-service/transmuxer/index.js","../src/hls/buffer-service/index.js","../src/hls/manifest-loader/parser/model.js","../src/hls/manifest-loader/parser/utils.js","../src/hls/manifest-loader/parser/master.js","../src/hls/manifest-loader/parser/media.js","../src/hls/manifest-loader/parser/index.js","../src/hls/manifest-loader/index.js","../src/hls/utils.js","../src/hls/playlist/stream.js","../src/hls/playlist/index.js","../src/hls/segment-loader/index.js","../src/hls/index.js","../src/hls/config.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nexport const SafeJSON = {\n  stringify (obj) {\n    try {\n      return JSON.stringify(obj)\n    } catch (e) {\n      return ''\n    }\n  },\n  parse (obj) {\n    try {\n      return JSON.parse(obj)\n    } catch (e) {\n      return undefined\n    }\n  }\n}\n","/* eslint-disable no-undef */\nimport { Buffer } from './buffer'\nimport { isBrowser } from './env'\nimport { ERR, StreamingError } from './error'\nimport { Logger } from './logger'\nimport { createPublicPromise, nowTime, SafeJSON } from './utils'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\nfunction isMMS (mediaSource) {\n  return /ManagedMediaSource/gi.test(Object.prototype.toString.call(mediaSource))\n}\n\n/**\n * @param {TimeRanges} buffered\n */\nfunction getTimeRanges (buffered) {\n  const ranges = []\n\n  if (buffered instanceof TimeRanges) {\n    for (let i = 0; i < buffered.length; i++) {\n      ranges.push({\n        start: buffered.start(i),\n        end: buffered.end(i)\n      })\n    }\n  }\n  return ranges\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @param { boolean} preferMMS\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  static isMMSOnly () {\n    return typeof ManagedMediaSource !== 'undefined' && typeof MediaSource === 'undefined'\n  }\n\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      preferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get hasOpTasks () {\n    let flag = false\n    Object.keys(this._queue).forEach(k => {\n      const queue = this._queue[k]\n      if (Array.isArray(queue)) {\n        flag ||= queue.length > 0\n      }\n    })\n    return flag\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  get streaming () {\n    return isMMS(this.mediaSource) ? this.mediaSource.streaming : true\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('setDuration but ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('setDuration', duration)\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costTime = nowTime() - this._st\n        this._logger.debug('sourceopen', costTime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime: costTime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @private\n   */\n  _onStartStreaming = () => {\n    this._logger.debug('startstreaming')\n  }\n\n  /**\n   * @private\n   */\n  _onEndStreaming = () => {\n    this._logger.debug('endstreaming')\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.preferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    const useMMS = isMMS(ms)\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costTime = nowTime() - this._st\n      this._logger.debug('sourceopen')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime: costTime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    if (useMMS) {\n      ms.addEventListener('startstreaming', this._onStartStreaming)\n      ms.addEventListener('endstreaming', this._onEndStreaming)\n    }\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    media.disableRemotePlayback = useMMS\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n\n      if (isMMS(ms)) {\n        ms.removeEventListener('startstreaming', this._onStartStreaming)\n        ms.removeEventListener('endstreaming', this._onEndStreaming)\n      }\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initQueue = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initQueue.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initQueue.length > 0 && this._queue[type].push(...initQueue)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug(`UpdateEnd(${type}/${op.opName})`, SafeJSON.stringify(getTimeRanges(this._sourceBuffer[type]?.buffered)), costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  MEDIASOURCE_OPENED: 'core.mediasourceopened',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  CHASEFRAME: 'core.chaseframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, sei => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime, isLive) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach(sei => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n\n    if (!isLive) return\n\n    this._seiSet.forEach(s => {\n      if (s.time < currentTime - 5) {\n        this._seiSet.delete(s)\n      }\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","export class BandwidthService {\n  _chunkSpeeds = [] // bps\n  _speeds = [] // bps\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-3)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._chunkSpeeds.push(8000 * totalByte / ms)\n    this._chunkSpeeds = this._chunkSpeeds.slice(-100)\n  }\n\n  getAvgSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n    return this._chunkSpeeds.reduce((a, c) => (a += c)) / this._chunkSpeeds.length\n  }\n\n  getLatestSpeed () {\n    if (!this._chunkSpeeds.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeeds[this._chunkSpeeds.length - 1]\n  }\n\n  reset () {\n    this._chunkSpeeds = []\n    this._speeds = []\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n  _startGopId = -1\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (this._startGopId === -1) {\n        this._startGopId = sample.gopId\n      }\n      if (sample.gopId === this._startGopId) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption () {\n    return this.isAudioEncryption\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","import { AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 90000 / 2 // 500ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 90000 // 1s\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5 * 90000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 90000 // 1s\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 90000 / 2 // 500ms\n\nexport class TsFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = false\n    this._videoTimestampBreak = false\n\n    this._lastAudioExceptionGapDot = 0\n    this._lastAudioExceptionOverlapDot = 0\n    this._lastAudioExceptionLargeGapDot = 0\n  }\n\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 90000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    const vSamples = videoTrack.samples\n    const aSamples = audioTrack.samples\n\n    if (!vSamples.length && !aSamples.length) return\n\n    const firstVideoSample = vSamples[0]\n    const firstAudioSample = aSamples[0]\n\n    // consider av delta\n    let vaDelta = 0\n\n    if (vSamples.length && aSamples.length) {\n      vaDelta = firstVideoSample.dts - firstAudioSample.pts\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n    }\n\n    // recalc baseDts\n    if (discontinuity) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n      this._baseDts -= startTime\n    }\n\n    // id discontinue, recalc nextDts, consider av delta of firstframe\n    if (!contiguous) {\n      /**\n       *  segment.start = min(a, v)\n       *  segment.start\n       *      |\n       *      a\n       *       -- vaDelta --\n       *                   v\n       */\n      this._videoNextDts = vaDelta > 0 ? startTime + vaDelta : startTime\n      this._audioNextPts = vaDelta > 0 ? startTime : startTime - vaDelta\n\n      const vDeltaToNextDts = firstVideoSample ? firstVideoSample.dts - this._baseDts - this._videoNextDts : 0\n      const aDeltaToNextDts = firstAudioSample ? firstAudioSample.pts - this._baseDts - this._audioNextPts : 0\n\n      if (Math.abs(vDeltaToNextDts || aDeltaToNextDts) > MAX_VIDEO_FRAME_DURATION) {\n        this._calculateBaseDts(this.audioTrack, this.videoTrack)\n        this._baseDts -= startTime\n      }\n    }\n\n    this._resetBaseDtsWhenStreamBreaked()\n\n    // fix audio first\n    this._fixAudio(audioTrack)\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 90000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n    })\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const nextSample = samples[1]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n        nextDts: this._videoNextDts / 90,\n        firstSampleDts: firstSample.dts / 90,\n        nextSampleDts: (samples[1]?.dts || 0) / 90,\n        sampleDuration: vDelta / 90\n      })\n\n      // resolve first frame first\n      firstSample.dts += vDelta\n      firstSample.pts += vDelta\n\n\n      // check to ajust the whole segment\n      if (nextSample && Math.abs(nextSample.dts - firstSample.dts) > MAX_VIDEO_FRAME_DURATION) {\n        this._videoTimestampBreak = true\n        samples.forEach((x, i) => {\n          if (i === 0) return\n          x.dts += vDelta\n          x.pts += vDelta\n        })\n      } else {\n        for (let i = 1; i < len - 1; i++) {\n          const dts = samples[i]?.dts\n          const prevDts = samples[i - 1 ].dts\n          if (dts && dts - prevDts < 0) {\n            samples[i].dts += vDelta\n            samples[i].pts += vDelta\n          }\n        }\n      }\n    }\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    }\n\n    // fps inaccuracy\n    if (refSampleDurationInt < 90 * 10) { // < 10ms per frame\n      refSampleDurationInt = 0\n    }\n\n    if (!refSampleDurationInt) {\n      const first = videoTrack.samples[0]\n      const second = videoTrack.samples[1]\n      // 100ms default\n      refSampleDurationInt = len === 1 ? 9000 : Math.floor((second.dts - first.dts))\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (samples[i - 1]) {\n        sampleDuration = Math.min(dts - samples[i - 1].dts, refSampleDurationInt)\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        // dts exception of adjacent frame\n        this._videoTimestampBreak = true\n\n        // check if only video breaked!\n        sampleDuration = this._audioTimestampBreak ? refSampleDurationInt : Math.max(sampleDuration, 30 * 90) // 30ms\n\n        // check if sample breaked within current fragment\n        const expectFragEnd = (this._audioNextPts || 0)\n        if (nextSample && nextSample.dts > expectFragEnd) {\n          sampleDuration = refSampleDurationInt\n        }\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP,\n          time: dts / videoTrack.timescale,\n          dts,\n          originDts: samples[i].originDts,\n          nextDts: this._videoNextDts,\n          sampleDuration,\n          refSampleDuration: refSampleDurationInt\n        })\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n\n    if (!samples.length) return\n    samples.forEach(x => {\n      x.pts -= this._baseDts\n      x.dts = x.pts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 90000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    if (this._baseDtsInited && this._videoTimestampBreak && this._audioTimestampBreak) {\n      /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n      // calc baseDts base on new samples\n      const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n      if (!calc) return\n\n      // consider the expect dts for next frame\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n      this._audioLastSample = null\n      this._videoLastSample = null\n      this._videoTimestampBreak = false\n      this._audioTimestampBreak = false\n    }\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) audioTrack.sampleDuration = AAC.getFrameDuration(audioTrack.timescale, timescale)\n    const refSampleDuration = audioTrack.sampleDuration\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      const nextPts = this._audioNextPts\n      const sample = samples[i]\n      const delta = sample.pts - nextPts\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = AAC.getSilentFrame(audioTrack.codec, audioTrack.channelCount) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n        }\n\n        audioTrack.warnings.push({\n          type: WarningType.AUDIO_FILLED,\n          pts: sample.pts / 90,\n          originPts: sample.originPts,\n          count,\n          nextPts: nextPts / 90,\n          refSampleDuration\n        })\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(nextPts), silentFrame)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts / 90,\n            originPts: sample.originPts,\n            nextPts: nextPts / 90,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) >= MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak = true\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts / 90,\n              originPts: sample.originPts,\n              nextPts: nextPts / 90,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n}\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        case 38: // HEVC FD_NUT\n          if (isHevc) {\n            let ffByteFound = false\n            for (let i = 2; i < unit.byteLength; i++) {\n              if (unit[i] === 0xff) {\n                ffByteFound = true\n                break\n              }\n            }\n            if (!ffByteFound) {\n              return\n            }\n          }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { AudioCodecType, VideoCodecType } from '../model'\nimport { getAvcCodec, readBig16, readBig24, readBig32, readBig64 } from '../utils'\nimport { AAC } from '../codec'\nexport class MP4Parser {\n  static findBox (data, names, start = 0) {\n    const ret = []\n    if (!data) return ret\n\n    let size = 0\n    let type = ''\n    let headerSize = 0\n    while (data.length > 7) {\n      size = readBig32(data)\n      type = String.fromCharCode.apply(null, data.subarray(4, 8))\n      headerSize = 8\n      if (size === 1) {\n        size = readBig64(data, 8)\n        headerSize += 8\n      } else if (!size) {\n        size = data.length\n      }\n      if (!names[0] || type === names[0]) {\n        const subData = data.subarray(0, size)\n        if (names.length < 2) {\n          ret.push({\n            start,\n            size,\n            headerSize,\n            type,\n            data: subData\n          })\n        } else {\n          return MP4Parser.findBox(subData.subarray(headerSize), names.slice(1), start + headerSize)\n        }\n      }\n\n      start += size\n      data = data.subarray(size)\n    }\n\n    return ret\n  }\n\n  static tfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.trackId = readBig32(data)\n      let start = 4\n      const baseDataOffsetPresent = (ret.flags & 0xff) & 0x01\n      const sampleDescriptionIndexPresent = (ret.flags & 0xff) & 0x02\n      const defaultSampleDurationPresent = (ret.flags & 0xff) & 0x08\n      const defaultSampleSizePresent = (ret.flags & 0xff) & 0x10\n      const defaultSampleFlagsPresent = (ret.flags & 0xff) & 0x20\n\n      if (baseDataOffsetPresent) {\n        start += 4 // truncate top 4 bytes\n        ret.baseDataOffset = readBig32(data, start)\n        start += 4\n      }\n      if (sampleDescriptionIndexPresent) {\n        ret.sampleDescriptionIndex = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleDurationPresent) {\n        ret.defaultSampleDuration = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleSizePresent) {\n        ret.defaultSampleSize = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleFlagsPresent) {\n        ret.defaultSampleFlags = readBig32(data, start)\n      }\n    })\n  }\n\n  static sidx (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      ret.reference_ID = readBig32(data, start)// stream.readUint32();\n      start += 4\n      ret.timescale = readBig32(data, start)\n      start += 4\n      if (ret.version === 0) {\n        ret.earliest_presentation_time = readBig32(data, start)\n        start += 4\n        ret.first_offset = readBig32(data, start)\n        start += 4\n      } else {\n        ret.earliest_presentation_time = readBig64(data, start)\n        start += 8\n        ret.first_offset = readBig64(data, start)\n        start += 8\n      }\n      start += 2\n      ret.references = []\n      const count = readBig16(data, start)\n      start += 2\n      for (let i = 0; i < count; i++) {\n        const ref = {}\n        ret.references.push(ref)\n        let tmp32 = readBig32(data, start)\n        start += 4\n        ref.reference_type = (tmp32 >> 31) & 0x1\n        ref.referenced_size = tmp32 & 0x7FFFFFFF\n        ref.subsegment_duration = readBig32(data, start)\n        start += 4\n        tmp32 = readBig32(data, start)\n        start += 4\n        ref.starts_with_SAP = (tmp32 >> 31) & 0x1\n        ref.SAP_type = (tmp32 >> 28) & 0x7\n        ref.SAP_delta_time = tmp32 & 0xFFFFFFF\n      }\n    })\n  }\n\n  static moov (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mvhd = MP4Parser.mvhd(MP4Parser.findBox(data, ['mvhd'], start)[0])\n      ret.trak = MP4Parser.findBox(data, ['trak'], start).map(trak => MP4Parser.trak(trak))\n      ret.pssh = MP4Parser.pssh(MP4Parser.findBox(data, ['pssh'], start)[0])\n    })\n  }\n\n  static mvhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      ret.nextTrackId = readBig32(data, start + 76)\n    })\n  }\n\n  static trak (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tkhd = MP4Parser.tkhd(MP4Parser.findBox(data, ['tkhd'], start)[0])\n      ret.mdia = MP4Parser.mdia(MP4Parser.findBox(data, ['mdia'], start)[0])\n    })\n  }\n\n  static tkhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.trackId = readBig32(data, 16)\n        ret.duration = readBig64(data, 24)\n        start += 32\n      } else {\n        ret.trackId = readBig32(data, 8)\n        ret.duration = readBig32(data, 16)\n        start += 20\n      }\n      ret.width = readBig32(data, start + 52)\n      ret.height = readBig32(data, start + 56)\n    })\n  }\n\n  static mdia (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mdhd = MP4Parser.mdhd(MP4Parser.findBox(data, ['mdhd'], start)[0])\n      ret.hdlr = MP4Parser.hdlr(MP4Parser.findBox(data, ['hdlr'], start)[0])\n      ret.minf = MP4Parser.minf(MP4Parser.findBox(data, ['minf'], start)[0])\n    })\n  }\n\n  static mdhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      const lang = readBig16(data, start)\n      ret.language = String.fromCharCode(((lang >> 10) & 0x1F) + 0x60, ((lang >> 5) & 0x1F) + 0x60, (lang & 0x1F) + 0x60)\n    })\n  }\n\n  static hdlr (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 0) {\n        ret.handlerType = String.fromCharCode.apply(null, data.subarray(4, 8))\n      }\n    })\n  }\n\n  static minf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.vmhd = MP4Parser.vmhd(MP4Parser.findBox(data, ['vmhd'], start)[0])\n      ret.smhd = MP4Parser.smhd(MP4Parser.findBox(data, ['smhd'], start)[0])\n      ret.stbl = MP4Parser.stbl(MP4Parser.findBox(data, ['stbl'], start)[0])\n    })\n  }\n\n  static vmhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.graphicsmode = readBig16(data)\n      ret.opcolor = [readBig16(data, 2), readBig16(data, 4), readBig16(data, 6)]\n    })\n  }\n\n  static smhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.balance = readBig16(data)\n    })\n  }\n\n  static stbl (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.stsd = MP4Parser.stsd(MP4Parser.findBox(data, ['stsd'], start)[0])\n      ret.stts = MP4Parser.stts(MP4Parser.findBox(data, ['stts'], start)[0])\n      ret.ctts = MP4Parser.ctts(MP4Parser.findBox(data, ['ctts'], start)[0])\n      ret.stsc = MP4Parser.stsc(MP4Parser.findBox(data, ['stsc'], start)[0])\n      ret.stsz = MP4Parser.stsz(MP4Parser.findBox(data, ['stsz'], start)[0])\n      ret.stco = MP4Parser.stco(MP4Parser.findBox(data, ['stco'], start)[0])\n      if (!ret.stco) {\n        ret.co64 = MP4Parser.co64(MP4Parser.findBox(data, ['co64'], start)[0])\n        ret.stco = ret.co64\n      }\n      const default_IV_size = ret.stsd.entries[0]?.sinf?.schi?.tenc.default_IV_size\n      ret.stss = MP4Parser.stss(MP4Parser.findBox(data, ['stss'], start)[0])\n      ret.senc = MP4Parser.senc(MP4Parser.findBox(data, ['senc'], start)[0], default_IV_size)\n    })\n  }\n\n  static senc (box, iv = 8) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      const sampleCount = readBig32(data, start)\n      start += 4\n      ret.samples = []\n      for (let i = 0; i < sampleCount; i++) {\n        const sample = {}\n        sample.InitializationVector = []\n        for (let j = 0; j < iv; j++){\n          sample.InitializationVector[j] = data[start + j]\n        }\n        start += iv\n        if (ret.flags & 0x2) {\n          sample.subsamples = []\n          const subsampleCount = readBig16(data, start)\n          start += 2\n          for (let j = 0; j < subsampleCount; j++) {\n            const subsample = {}\n            subsample.BytesOfClearData = readBig16(data, start)\n            start += 2\n            subsample.BytesOfProtectedData = readBig32(data, start)\n            start += 4\n            sample.subsamples.push(subsample)\n          }\n        }\n        ret.samples.push(sample)\n      }\n    })\n  }\n\n  static pssh (box) {\n    return parseBox(box, true, (ret, data) => {\n      const keyIds = []\n      const systemId = []\n      let start = 0\n      for (let i = 0; i < 16; i++) {\n        systemId.push(toHex(data[start + i]))\n      }\n      start += 16\n      if (ret.version > 0) {\n        const numKeyIds = readBig32(data, start)\n        start += 4\n        for (let i = 0; i < ('' + numKeyIds).length; i++) {\n          for (let j = 0; j < 16; j++) {\n            const keyId = data[start]\n            start += 1\n            keyIds.push(toHex(keyId))\n          }\n        }\n      }\n      const dataSize = readBig32(data, start)\n      ret.data_size = dataSize\n      start += 4\n      ret.kid = keyIds\n      ret.system_id = systemId\n      ret.buffer = data\n    })\n  }\n\n  static stsd (box) {\n    return parseBox(box, true, (ret, data, start) => {\n      ret.entryCount = readBig32(data)\n      ret.entries = MP4Parser.findBox(data.subarray(4), [], start + 4).map(b => {\n        switch (b.type) {\n          case 'avc1':\n          case 'avc2':\n          case 'avc3':\n          case 'avc4':\n            return MP4Parser.avc1(b)\n          case 'hvc1':\n          case 'hev1':\n            return MP4Parser.hvc1(b)\n          case 'mp4a':\n            return MP4Parser.mp4a(b)\n          case 'alaw':\n          case 'ulaw':\n            return MP4Parser.alaw(b)\n          case 'enca':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.channelCount = readBig16(data, 16)\n              ret.samplesize = readBig16(data, 18)\n              ret.sampleRate = (readBig32(data, 24) / (1 << 16))\n              data = data.subarray(28)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.esds = MP4Parser.esds(MP4Parser.findBox(data, ['esds'], start)[0])\n            })\n          case 'encv':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.width = readBig16(data, 24)\n              ret.height = readBig16(data, 26)\n              ret.horizresolution = readBig32(data, 28)\n              ret.vertresolution = readBig32(data, 32)\n              data = data.subarray(78)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.avcC = MP4Parser.avcC(MP4Parser.findBox(data, ['avcC'], start)[0])\n              ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(data, ['hvcC'], start)[0])\n              ret.pasp = MP4Parser.pasp(MP4Parser.findBox(data, ['pasp'], start)[0])\n            })\n          default:\n        }\n      }).filter(Boolean)\n    })\n  }\n\n  static tenc (box) {\n    return parseBox(box, false, (ret, data) => {\n      let start = 6\n      ret.default_IsEncrypted = data[start]\n      start += 1\n      ret.default_IV_size = data[start]\n      start += 1\n      ret.default_KID = []\n      for (let i = 0; i < 16; i++) {\n        ret.default_KID.push(toHex(data[start]))\n        start += 1\n      }\n    })\n  }\n\n  static schi (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tenc = MP4Parser.tenc(MP4Parser.findBox(data, ['tenc'], start)[0])\n    })\n  }\n\n  static sinf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.schi = MP4Parser.schi(MP4Parser.findBox(data, ['schi'], start)[0])\n      ret.frma = MP4Parser.frma(MP4Parser.findBox(data, ['frma'], start)[0])\n    })\n  }\n\n  static frma (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data_format = ''\n      for (let i = 0; i < 4; i++) {\n        ret.data_format += String.fromCharCode(data[i])\n      }\n    })\n  }\n\n  static avc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.avcC = MP4Parser.avcC(MP4Parser.findBox(bodyData, ['avcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static avcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data;\n      ret.configurationVersion = data[0]\n      ret.AVCProfileIndication = data[1]\n      ret.profileCompatibility = data[2]\n      ret.AVCLevelIndication = data[3]\n      ret.codec = getAvcCodec([data[1], data[2], data[3]])\n      ret.lengthSizeMinusOne = data[4] & 0x3\n      ret.spsLength = data[5] & 0x1F\n      ret.sps = []\n      let start = 6\n      for (let i = 0; i < ret.spsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.sps.push(data.subarray(start, start + size))\n        // ret.spsInfo = SpsParser.parseSPS(ret.sps[i])\n        // ret.pixelRatio = ret.spsInfo.par_ratio\n        start += size\n      }\n      ret.ppsLength = data[start]\n      start += 1\n      ret.pps = []\n      for (let i = 0; i < ret.ppsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.pps.push(data.subarray(start, start += size))\n        start += size\n      }\n    })\n  }\n\n  static hvc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(bodyData, ['hvcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static hvcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.codec = 'hev1.1.6.L93.B0'\n      ret.configurationVersion = data[0]\n      const tmp = data[1]\n      ret.generalProfileSpace = tmp >> 6\n      ret.generalTierFlag = (tmp & 0x20) >> 5\n      ret.generalProfileIdc = tmp & 0x1F\n      ret.generalProfileCompatibility = readBig32(data, 2)\n      ret.generalConstraintIndicatorFlags = data.subarray(6, 12)\n      ret.generalLevelIdc = data[12]\n      ret.avgFrameRate = readBig16(data, 19)\n      ret.numOfArrays = data[22]\n      ret.vps = []\n      ret.sps = []\n      ret.pps = []\n      let start = 23\n      let type = 0\n      let numNalus = 0\n      let size = 0\n      for (let i = 0; i < ret.numOfArrays; i++) {\n        type = data[start] & 0x3F\n        numNalus = readBig16(data, start + 1)\n        start += 3\n        const nalus = []\n        for (let j = 0; j < numNalus; j++) {\n          size = readBig16(data, start)\n          start += 2\n          nalus.push(data.subarray(start, start + size))\n          start += size\n        }\n\n        if (type === 32) {\n          ret.vps.push(...nalus)\n        } else if (type === 33) {\n          ret.sps.push(...nalus)\n        } else if (type === 34) {\n          ret.pps.push(...nalus)\n        }\n      }\n    })\n  }\n\n  static pasp (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.hSpacing = readBig32(data)\n      ret.vSpacing = readBig32(data, 4)\n    })\n  }\n\n  static mp4a (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseAudioSampleEntry(ret, data)\n      ret.esds = MP4Parser.esds(MP4Parser.findBox(data.subarray(bodyStart), ['esds'], start + bodyStart)[0])\n    })\n  }\n\n  static esds (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.codec = 'mp4a.'\n      let start = 0\n      let byteRead = 0\n      let size = 0\n      let tag = 0\n      while (data.length) {\n        start = 0\n        tag = data[start]\n        byteRead = data[start + 1]\n        start += 2\n        while (byteRead & 0x80) {\n          size = (byteRead & 0x7F) << 7\n          byteRead = data[start]\n          start += 1\n        }\n        size += byteRead & 0x7F\n        if (tag === 3) {\n          data = data.subarray(start + 3)\n        } else if (tag === 4) {\n          ret.codec += (data[start].toString(16) + '.').padStart(3, '0')\n          data = data.subarray(start + 13)\n        } else if (tag === 5) {\n          const config = ret.config = data.subarray(start, start + size)\n          let objectType = (config[0] & 0xF8) >> 3\n          if (objectType === 31 && config.length >= 2) {\n            objectType = 32 + ((config[0] & 0x7) << 3) + ((config[1] & 0xE0) >> 5)\n          }\n          ret.objectType = objectType\n          ret.codec += objectType.toString(16)\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        } else {\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        }\n      }\n    })\n  }\n\n  static alaw (box) {\n    return parseBox(box, false, (ret, data) => {\n      parseAudioSampleEntry(ret, data)\n    })\n  }\n\n  static stts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          count: readBig32(data, start),\n          delta: readBig32(data, start + 4)\n        })\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static ctts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      if (ret.version === 1) {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: readBig32(data, start + 4)\n          })\n          start += 8\n        }\n      } else {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: -(~readBig32(data, start + 4) + 1)\n          })\n          start += 8\n        }\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsc (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          firstChunk: readBig32(data, start),\n          samplesPerChunk: readBig32(data, start + 4),\n          sampleDescriptionIndex: readBig32(data, start + 8)\n        })\n        start += 12\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsz (box) {\n    return parseBox(box, true, (ret, data) => {\n      const sampleSize = readBig32(data)\n      const sampleCount = readBig32(data, 4)\n      const entrySizes = []\n      if (!sampleSize) {\n        let start = 8\n        for (let i = 0; i < sampleCount; i++) {\n          entrySizes.push(readBig32(data, start))\n          start += 4\n        }\n      }\n      ret.sampleSize = sampleSize\n      ret.sampleCount = sampleCount\n      ret.entrySizes = entrySizes\n    })\n  }\n\n  static stco (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static co64 (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig64(data, start))\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stss (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static moof (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mfhd = MP4Parser.mfhd(MP4Parser.findBox(data, ['mfhd'], start)[0])\n      ret.traf = MP4Parser.findBox(data, ['traf'], start).map(t => MP4Parser.traf(t))\n    })\n  }\n\n  static mfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.sequenceNumber = readBig32(data)\n    })\n  }\n\n  static traf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tfhd = MP4Parser.tfhd(MP4Parser.findBox(data, ['tfhd'], start)[0])\n      ret.tfdt = MP4Parser.tfdt(MP4Parser.findBox(data, ['tfdt'], start)[0])\n      ret.trun = MP4Parser.trun(MP4Parser.findBox(data, ['trun'], start)[0])\n    })\n  }\n\n  static trun (box) {\n    return parseBox(box, true, (ret, data) => {\n      const { version, flags } = ret\n      const dataLen = data.length\n      const sampleCount = ret.sampleCount = readBig32(data)\n      let offset = 4\n      if (dataLen > offset && flags & 1) {\n        ret.dataOffset = -(~readBig32(data, offset) + 1)\n        offset += 4\n      }\n      if (dataLen > offset && flags & 4) {\n        ret.firstSampleFlags = readBig32(data, offset)\n        offset += 4\n      }\n      ret.samples = []\n      if (dataLen > offset) {\n        let sample\n        for (let i = 0; i < sampleCount; i++) {\n          sample = {}\n          if (flags & 0x100) {\n            sample.duration = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x200) {\n            sample.size = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x400) {\n            sample.flags = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x800) {\n            if (version) {\n              sample.cts = -(~readBig32(data, offset + 4) + 1)\n            } else {\n              sample.cts = readBig32(data, offset)\n            }\n            offset += 4\n          }\n          ret.samples.push(sample)\n        }\n      }\n    })\n  }\n\n  static tfdt (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 1) {\n        ret.baseMediaDecodeTime = readBig64(data)\n      } else {\n        ret.baseMediaDecodeTime = readBig32(data)\n      }\n    })\n  }\n\n  static probe (data) {\n    return !!MP4Parser.findBox(data, ['ftyp'])\n  }\n\n  static parseSampleFlags (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    }\n  }\n\n  static moovToTrack (moov, videoTrack, audioTrack) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (vTrack && videoTrack) {\n      const v = videoTrack\n      const _vTrackId = vTrack.tkhd?.trackId\n      if (_vTrackId !== null && _vTrackId !== undefined) v.id = vTrack.tkhd.trackId\n      v.tkhdDuration = vTrack.tkhd.duration\n      v.mvhdDurtion = moov.mvhd.duration\n      v.mvhdTimecale = moov.mvhd.timescale\n      v.timescale = v.formatTimescale = vTrack.mdia.mdhd.timescale\n      v.duration = vTrack.mdia.mdhd.duration || (v.mvhdDurtion / v.mvhdTimecale * v.timescale)\n      const e1 = vTrack.mdia.minf.stbl.stsd.entries[0]\n      v.width = e1.width\n      v.height = e1.height\n      if (e1.pasp) {\n        v.sarRatio = [e1.pasp.hSpacing, e1.pasp.vSpacing]\n      }\n      if (e1.hvcC) {\n        v.codecType = VideoCodecType.HEVC\n        v.codec = e1.hvcC.codec\n        v.vps = e1.hvcC.vps\n        v.sps = e1.hvcC.sps\n        v.pps = e1.hvcC.pps\n        v.hvcC = e1.hvcC.data\n      } else if (e1.avcC) {\n        v.codec = e1.avcC.codec\n        v.sps = e1.avcC.sps\n        v.pps = e1.avcC.pps\n      } else {\n        throw new Error('unknown video stsd entry')\n      }\n      v.present = true\n      v.ext = {}\n      v.ext.stss = vTrack.mdia?.minf?.stbl?.stss\n      v.ext.ctts = vTrack.mdia?.minf?.stbl?.ctts\n\n      if (e1 && e1.type === 'encv') {\n        v.isVideoEncryption = true\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        v.videoSenc = vTrack.mdia.minf.stbl.senc && vTrack.mdia.minf.stbl.senc.samples\n        e1.data_format = e1.sinf?.frma?.data_format\n        v.useEME = moov.useEME\n        v.kidValue = moov.kidValue\n        v.pssh = moov.pssh\n        v.encv = e1\n      }\n    }\n\n    if (aTrack && audioTrack) {\n      const a = audioTrack\n      const _aTrackId = aTrack.tkhd?.trackId\n      if (_aTrackId !== null && _aTrackId !== undefined) a.id = aTrack.tkhd.trackId\n      a.tkhdDuration = aTrack.tkhd.duration\n      a.mvhdDurtion = moov.mvhd.duration\n      a.mvhdTimecale = moov.mvhd.timescale\n      a.timescale = a.formatTimescale = aTrack.mdia.mdhd.timescale\n      a.duration = aTrack.mdia.mdhd.duration || (a.mvhdDurtion / a.mvhdTimecale * a.timescale)\n      const e1 = aTrack.mdia.minf.stbl.stsd.entries[0]\n      a.sampleSize = e1.sampleSize\n      a.sampleRate = e1.sampleRate\n      a.channelCount = e1.channelCount\n      a.present = true\n\n      switch (e1.type) {\n        case 'alaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMA\n          a.sampleRate = 8000\n          break\n        case 'ulaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMU\n          a.sampleRate = 8000\n          break\n        default:\n          a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n          a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n          a.objectType = e1.esds?.objectType || 2\n          if (e1.esds) a.config = Array.from(e1.esds.config)\n          a.codec = e1.esds?.codec || 'mp4a.40.2'\n          break\n      }\n      a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n      a.objectType = e1.esds?.objectType || 2\n      if (e1.esds) {\n        if (e1.esds.config) {\n          a.config = Array.from(e1.esds.config)\n        } else {\n          console.warn('esds config is null')\n        }\n      }\n      a.codec = e1.esds?.codec || 'mp4a.40.2'\n      a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n      a.ext = {}\n      a.ext.stss = aTrack.mdia?.minf?.stbl?.stss\n      a.ext.ctts = aTrack.mdia?.minf?.stbl?.ctts\n      a.present = true\n      if (e1 && e1.type === 'enca') {\n        a.isAudioEncryption = true\n        e1.data_format = e1.sinf?.frma?.data_format\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        a.audioSenc = aTrack.mdia.minf.stbl.senc && aTrack.mdia.minf.stbl.senc.samples\n        a.useEME = moov.useEME\n        a.kidValue = moov.kidValue\n        a.enca = e1\n      }\n    }\n\n    audioTrack && (audioTrack.isVideoEncryption = videoTrack ? videoTrack.isVideoEncryption : false)\n    videoTrack && (videoTrack.isAudioEncryption = audioTrack ? audioTrack.isAudioEncryption : false)\n\n    if (videoTrack?.encv || audioTrack?.enca) {\n      const vkid = videoTrack?.encv?.default_KID\n      const akid = audioTrack?.enca?.default_KID\n      const kid = (vkid || akid) ? (vkid || akid).join('') : null\n      videoTrack && (videoTrack.kid = kid)\n      audioTrack && (audioTrack.kid = kid)\n    }\n\n    videoTrack && (videoTrack.flags = 0xf01)\n    audioTrack && (audioTrack.flags = 0x701)\n\n    return {\n      videoTrack,\n      audioTrack\n    }\n  }\n\n  static evaluateDefaultDuration (videoTrack, audioTrack, videoSampleCount) {\n    const audioSampleCount = audioTrack?.samples?.length\n\n    // audio\n    if (!audioSampleCount) return 1024\n\n    const segmentDuration = 1024 * audioSampleCount / audioTrack.timescale\n\n    return segmentDuration * videoTrack.timescale / videoSampleCount\n  }\n\n  static moofToSamples (moof, videoTrack, audioTrack) {\n    const ret = {}\n\n    if (moof.mfhd) {\n      if (videoTrack) videoTrack.sequenceNumber = moof.mfhd.sequenceNumber\n      if (audioTrack) audioTrack.sequenceNumber = moof.mfhd.sequenceNumber\n    }\n\n    moof.traf.forEach(({ tfhd, tfdt, trun }) => {\n      if (!tfhd || !trun) return\n      if (tfdt) {\n        if (videoTrack && videoTrack.id === tfhd.trackId) videoTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n        if (audioTrack && audioTrack.id === tfhd.trackId) audioTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n      }\n      const defaultSize = tfhd.defaultSampleSize || 0\n      const defaultDuration = tfhd.defaultSampleDuration || MP4Parser.evaluateDefaultDuration(videoTrack, audioTrack, trun.samples.length || trun.sampleCount)\n      let offset = trun.dataOffset || 0\n      let dts = 0\n      let gopId = -1\n      if (!trun.samples.length && trun.sampleCount) {\n        ret[tfhd.trackId] = []\n        for (let i = 0; i < trun.sampleCount; i++) {\n          ret[tfhd.trackId].push({\n            offset,\n            dts,\n            duration: defaultDuration,\n            size: defaultSize\n          })\n          dts += defaultDuration\n          offset += defaultSize\n        }\n      } else {\n        ret[tfhd.trackId] = trun.samples.map((s, index) => {\n          s = {\n            offset,\n            dts,\n            pts: dts + (s.cts || 0),\n            duration: s.duration || defaultDuration,\n            size: s.size || defaultSize,\n            gopId,\n            keyframe: index === 0 || ((s.flags !== null && s.flags !== undefined) && ((s.flags & 65536) >>> 0) !== 65536)\n          }\n          if (s.keyframe) {\n            gopId++\n            s.gopId = gopId\n          }\n          dts += s.duration\n          offset += s.size\n          return s\n        })\n      }\n    })\n\n    return ret\n  }\n\n  static moovToSamples (moov) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (!vTrack && !aTrack) return\n    let videoSamples\n    let audioSamples\n    if (vTrack) {\n      const videoStbl = vTrack.mdia?.minf?.stbl\n      if (!videoStbl) return\n      const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n      if (!stts || !stsc || !stsz || !stco || !stss) return\n      videoSamples = getSamples(stts, stsc, stsz, stco, ctts, stss)\n    }\n    if (aTrack) {\n      const audioStbl = aTrack.mdia?.minf?.stbl\n      if (!audioStbl) return\n      const timescale = aTrack.mdia.mdhd?.timescale\n      const { stts, stsc, stsz, stco } = audioStbl\n      if (!timescale || !stts || !stsc || !stsz || !stco) return\n      audioSamples = getSamples(stts, stsc, stsz, stco)\n    }\n\n    return {\n      videoSamples,\n      audioSamples\n    }\n  }\n}\n\nfunction getSamples (stts, stsc, stsz, stco, ctts, stss) {\n  const samples = []\n  const cttsEntries = ctts?.entries\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n\n  let sample\n  let gopId = -1\n  let dts = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  stts.entries.forEach(({ count, delta }) => {\n    for (let i = 0; i < count; i++) {\n      sample = {\n        dts,\n        duration: delta,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        sample.keyframe = keyframeMap[pos]\n        if (sample.keyframe) {\n          gopId++\n        }\n        sample.gopId = gopId\n      }\n      // sample.timeOffset = 0\n      if (cttsArr && pos < cttsArr.length) {\n        sample.pts = sample.dts + cttsArr[pos]\n        // sample.timeOffset = cttsArr[pos]\n        // if (pos === 0) {\n        //   sample.pts = sample.dts\n        //   sample.timeOffset = 0\n        // }\n      }\n      samples.push(sample)\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += sample.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  return samples\n}\n\nfunction parseVisualSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.width = readBig16(data, 24)\n  ret.height = readBig16(data, 26)\n  ret.horizresolution = readBig32(data, 28)\n  ret.vertresolution = readBig32(data, 32)\n  ret.frameCount = readBig16(data, 40)\n  ret.depth = readBig16(data, 74)\n  return 78\n}\n\nfunction parseAudioSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.channelCount = readBig16(data, 16)\n  ret.sampleSize = readBig16(data, 18)\n  ret.sampleRate = readBig32(data, 24) / (1 << 16)\n  return 28\n}\n\nfunction parseBox (box, isFullBox, parse) {\n  if (!box) return\n  if (box.size !== box.data.length) throw new Error(`box ${box.type} size !== data.length`)\n  const ret = {\n    start: box.start,\n    size: box.size,\n    headerSize: box.headerSize,\n    type: box.type\n  }\n  if (isFullBox) {\n    ret.version = box.data[box.headerSize]\n    ret.flags = readBig24(box.data, box.headerSize + 1)\n    ret.headerSize += 4\n  }\n  parse(ret, box.data.subarray(ret.headerSize), ret.start + ret.headerSize)\n  return ret\n}\n\nconst padStart = function (str, length, pad) {\n  const charstr = String(pad)\n  const len = length >> 0\n  let maxlen = Math.ceil(len / charstr.length)\n  const chars = []\n  const r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\nconst toHex = function (...value) {\n  const hex = []\n  value.forEach(item => {\n    hex.push(padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex[0]\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, VideoSample, AudioSample } from '../model'\nimport { readBig32 } from '../utils'\nimport { MP4Parser } from './mp4-parser'\n\nexport class FMP4Demuxer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n  }\n\n  demux (videoData, audioData) {\n    const { videoTrack, audioTrack } = this\n    const videoExist = videoTrack.exist()\n    const audioExist = audioTrack.exist()\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    if (audioData) {\n      if (!audioExist) {\n        const moovBox = MP4Parser.findBox(audioData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), null, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(audioData, ['moof'])[0]\n      if (moofBox) {\n        const samples = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), null, audioTrack)[audioTrack.id]\n        const baseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        if (samples) {\n          const baseOffset = moofBox.start\n          samples.map(x => {\n            x.offset += baseOffset\n            const sampleData = audioData.subarray(x.offset, x.offset + x.size)\n            audioTrack.samples.push(new AudioSample(x.dts + baseMediaDecodeTime, sampleData, x.duration))\n          })\n        }\n      }\n    }\n\n    if (videoData) {\n      if (!videoExist && !audioExist) {\n        const moovBox = MP4Parser.findBox(videoData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), videoTrack, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(videoData, ['moof'])[0]\n      if (moofBox) {\n        const tracks = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), videoTrack, audioTrack)\n        const videoBaseMediaDecodeTime = videoTrack.baseMediaDecodeTime\n        const audioBaseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        const baseOffset = moofBox.start\n        let nalSize\n        Object.keys(tracks).forEach(k => {\n          // eslint-disable-next-line eqeqeq\n          if (videoTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sample = new VideoSample((x.pts || x.dts) + videoBaseMediaDecodeTime, x.dts + videoBaseMediaDecodeTime)\n              sample.duration = x.duration\n              sample.gopId = x.gopId\n              if (x.keyframe) sample.setToKeyframe()\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              sample.data = sampleData\n              let start = 0\n              const len = sampleData.length - 1\n              while (start < len) {\n                nalSize = readBig32(sampleData, start)\n                start += 4\n                sample.units.push(sampleData.subarray(start, start + nalSize))\n                start += nalSize\n              }\n              videoTrack.samples.push(sample)\n            })\n            // eslint-disable-next-line eqeqeq\n          } else if (audioTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              audioTrack.samples.push(new AudioSample(x.dts + audioBaseMediaDecodeTime, sampleData, x.duration))\n            })\n          }\n        })\n      }\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n    this.metadataTrack.reset()\n  }\n\n  static probe (data) {\n    return MP4Parser.probe(data)\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { concatUint8Array } from 'xgplayer-streaming-shared'\n\n/**\n * @interface\n */\nexport class IExternalDecryptor {\n  /**\n   * @param {Uint8Array} data\n   * @param {BufferSource} key\n   * @param {BufferSource} iv\n   * @returns {Promise.<Uint8Array>}\n   */\n  async decrypt (data, key, iv) {}\n}\n\nexport class Decryptor {\n  constructor () {\n    const crypto = window.crypto || window.msCrypto\n    this.subtle = crypto && (crypto.subtle || crypto.webkitSubtle)\n\n    /**\n     * @type {IExternalDecryptor}\n     */\n    this.externalDecryptor = null\n  }\n\n  destroy () {\n    if (this.externalDecryptor?.destroy) {\n      this.externalDecryptor.destroy()\n    }\n  }\n\n  decrypt (video, audio) {\n    if (!video && !audio) return\n    const ret = []\n    if (video) {\n      ret[0] = this._decryptSegment(video)\n    }\n    if (audio) {\n      ret[1] = this._decryptSegment(audio)\n    }\n    return Promise.all(ret)\n  }\n\n  async _decryptSegment (seg) {\n    let data = seg.data\n    if (seg.key) {\n      data = await this._decryptData(seg.data, seg.key, seg.keyIv)\n    }\n    if (!seg.map) return data\n    return concatUint8Array(seg.map, data)\n  }\n\n  async _decryptData (data, key, iv) {\n    if (this.externalDecryptor) {\n      return await this.externalDecryptor.decrypt(data, key, iv)\n    } else {\n      if (!this.subtle) throw new Error('crypto is not defined')\n      const aesKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt'])\n      return new Uint8Array(\n        await this.subtle.decrypt({ name: 'AES-CBC', iv }, aesKey, data)\n      )\n    }\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport const Event = {\n  ...EVENT,\n  STREAM_PARSED: 'core.streamparsed',\n  NO_AUDIO_TRACK: 'core.noaudiotrack',\n  SUBTITLE_SEGMENTS: 'core.subtitlesegments',\n  SUBTITLE_PLAYLIST: 'core.subtitleplaylist',\n  SEI_PAYLOAD_TIME: 'core.seipayloadtime',\n  APPEND_COST: 'core.appendcost'\n}\n","import { ERR, Logger, StreamingError, concatUint8Array } from 'xgplayer-streaming-shared'\nimport { FMP4Demuxer, FMP4Remuxer, TrackType, TsDemuxer, WarningType } from 'xgplayer-transmuxer'\nimport { Event } from '../../constants'\n\nconst logger = new Logger('Transmuxer')\n\nexport class Transmuxer {\n  _initSegmentId = ''\n\n  constructor (hls, isMP4, needRemux) {\n    this.hls = hls\n    this._demuxer = isMP4 ? new FMP4Demuxer() : new TsDemuxer()\n    this._isMP4 = isMP4\n    if (needRemux) this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n  }\n\n  transmux (videoChunk, audioChunk, discontinuity, contiguous, startTime, needInit) {\n    const demuxer = this._demuxer\n    try {\n      if (this._isMP4) {\n        demuxer.demux(videoChunk, audioChunk)\n      } else {\n        demuxer.demuxAndFix(concatUint8Array(videoChunk, audioChunk), discontinuity, contiguous, startTime)\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.HLS, error)\n    }\n\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n    const vParsed = {\n      codec: videoTrack.codec,\n      timescale: videoTrack.timescale,\n      firstDts: videoTrack.firstDts / videoTrack.timescale,\n      firstPts: videoTrack.firstPts / videoTrack.timescale,\n      duration: videoTrack.samplesDuration / videoTrack.timescale\n    }\n    const aParsed = {\n      codec: audioTrack.codec,\n      timescale: audioTrack.timescale,\n      firstDts: audioTrack.firstDts / videoTrack.timescale,\n      firstPts: audioTrack.firstPts / videoTrack.timescale,\n      duration: audioTrack.samplesDuration / videoTrack.timescale\n    }\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._initSegmentId = newId\n      needInit = true\n    }\n\n    this._fireEvents(videoTrack, audioTrack, metadataTrack, discontinuity || needInit)\n\n    this.hls.emit(Event.DEMUXED_TRACK, {videoTrack, audioTrack})\n\n    if (this._remuxer) {\n      // LG webos5.4系统上发现, 直播流开启low latency mode渲染的话，出首帧后需要等一段时间才触发loadeddata、canplay事件,影响首帧统计\n      // low latency mode通过解析封装的fmp4中对媒体播放时长的描述判断 https://issues.chromium.org/issues/41161663\n      if (needInit && this.hls.isLive && !this.hls.config.mseLowLatency) {\n        videoTrack.duration = this.hls.totalDuration * videoTrack.timescale\n        audioTrack.duration = this.hls.totalDuration * audioTrack.timescale\n      }\n\n      try {\n        const {\n          videoInitSegment,\n          videoSegment,\n          audioInitSegment,\n          audioSegment\n        } = this._remuxer.remux(needInit)\n        const v = concatUint8Array(videoInitSegment, videoSegment)\n        const a = concatUint8Array(audioInitSegment, audioSegment)\n        return [\n          v ? { ...vParsed, data: v } : undefined,\n          a ? { ...aParsed, data: a } : undefined\n        ]\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n    } else {\n      return [videoTrack, audioTrack]\n    }\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack, discontinuity) {\n    const tracks = [videoTrack, audioTrack]\n    let logCC = `discontinuity: ${discontinuity}`\n\n    tracks.forEach(track => {\n      if (track.samples?.length) {\n        logCC += `; ${track.samples.length} ${\n          track.type === TrackType.VIDEO ? 'video' : 'audio'\n        } samples, firstDts/firstPts/duration: ${(\n          track.firstDts / track.timescale\n        ).toFixed(3)}/${(track.firstPts / track.timescale).toFixed(3)}/${(\n          track.samplesDuration / track.timescale\n        ).toFixed(3)}`\n      }\n\n      if (discontinuity && track.exist()) {\n        this.hls.emit(Event.METADATA_PARSED, {\n          type: track.type,\n          track,\n          meta: {\n            codec: track.codec,\n            timescale: track.timescale,\n            baseDts: track.baseDts,\n            ... (track.type === TrackType.VIDEO\n              ? {width: track.width,\n                height: track.height,\n                sarRatio: track.sarRatio\n              }\n              : {\n                codec: track.codec,\n                channelCount: track.channelCount,\n                sampleRate: track.sampleRate\n              })\n          }\n        })\n      }\n    })\n    logger.debug(logCC)\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = Event.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = Event.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = Event.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = Event.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = Event.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = Event.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.hls.emit(Event.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.hls.emit(Event.SEI, {\n        ...sei,\n        originPts: sei.originPts / 90, // sei 统一时间单位为毫秒\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","import { TsDemuxer, MP4Parser } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, ERR, StreamingError, Logger, EVENT } from 'xgplayer-streaming-shared'\nimport { Decryptor } from './decrypt'\nimport { Transmuxer } from './transmuxer'\nimport { Event } from '../constants'\n\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  _decryptor = new Decryptor()\n  /** @type {Transmuxer} */\n  _transmuxer = null\n  /** @type {MSE} */\n  _mse = null\n  _softVideo = null\n  _sourceCreated = false\n  _needInitSegment = true\n  _directAppend = false\n\n  constructor (hls) {\n    this.hls = hls\n    if (hls.config.softDecode) { // soft decode\n      this._softVideo = hls.media\n    } else {\n      this._mse = new MSE(null, {\n        preferMMS: hls.config.preferMMS\n      })\n\n      if (hls.config.url) {\n        this._mse.bindMedia(hls.media).then((e) => {\n          this.hls.emit(EVENT.MEDIASOURCE_OPENED, e)\n        })\n      }\n    }\n\n    // If a third-party decryption module is configured, use it\n    if (hls.config.decryptor) {\n      this._decryptor.externalDecryptor = hls.config.decryptor\n    }\n  }\n\n  get baseDts () {\n    return this._transmuxer?._demuxer?._fixer?._baseDts\n  }\n\n  get nbSb () {\n    if (!this._mse?._sourceBuffer) return 0\n\n    return Object.keys(this._mse._sourceBuffer).length\n  }\n\n  get msIsOpened () {\n    return this._mse?.isOpened\n  }\n\n  get msHasOpTasks () {\n    return this._mse?.hasOpTasks\n  }\n\n  get msStreaming () {\n    return this._mse?.streaming\n  }\n\n  async updateDuration (duration) {\n    logger.debug('update duration', duration)\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      await this._mse.updateDuration(duration)\n    } else if (this._softVideo) {\n      this._softVideo.duration = duration\n    }\n  }\n\n  createSource (videoChunk, audioChunk, videoCodec, audioCodec) {\n    if (this._sourceCreated) return\n    const chunk = videoChunk || audioChunk\n    if (!chunk) return\n    if (TsDemuxer.probe(chunk)) {\n      if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, false, !this._softVideo)\n    } else if (MP4Parser.probe(chunk)) {\n      if (this._softVideo) {\n        if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, true)\n      } else {\n        this._directAppend = true\n        let mix = false\n        if (videoChunk && !videoCodec) {\n          MP4Parser.findBox(videoChunk, ['moov', 'trak']).forEach(t => {\n            const box = MP4Parser.findBox(t.data, ['trak', 'mdia', 'minf', 'stbl', 'stsd'])[0]\n            if (box) {\n              const e = MP4Parser.stsd(box).entries[0]\n              if (e) {\n                if (e.hvcC) {\n                  videoCodec = e.hvcC.codec || 'hev1.1.6.L93.B0'\n                } else if (e.avcC) {\n                  videoCodec = e.avcC.codec\n                } else if (e.sampleRate || e.esds) {\n                  audioCodec = e.esds?.codec || 'mp4a.40.2'\n                  mix = true\n                }\n              }\n            }\n          })\n        }\n        if (audioChunk && !audioCodec) {\n          MP4Parser.findBox(audioChunk, ['moov', 'trak', 'mdia', 'minf', 'stbl', 'stsd']).forEach(stsd => {\n            const e = MP4Parser.stsd(stsd).entries[0]\n            if (e && e.esds) audioCodec = e.esds.codec\n          })\n        }\n        if (videoChunk && !videoCodec) videoCodec = 'avc1.42e01e'\n        if (audioChunk && !audioCodec) audioCodec = 'mp4a.40.2'\n        if (mix) {\n          videoCodec += `, ${audioCodec}`\n          audioCodec = ''\n        }\n        this._createMseSource(videoCodec, audioCodec)\n      }\n    } else {\n      throw new StreamingError(ERR.OTHER, null, null, null, 'unsupported stream')\n    }\n    if (this._softVideo) this._sourceCreated = true\n  }\n\n  async appendBuffer (segment, audioSegment, videoChunk, audioChunk, discontinuity, contiguous, startTime) {\n    if (!videoChunk?.length && !audioChunk?.length) return\n    if (this._directAppend) {\n      const p = []\n      if (videoChunk) p.push(this._mse.append(MSE.VIDEO, videoChunk))\n      if (audioChunk) p.push(this._mse.append(MSE.AUDIO, audioChunk))\n      return Promise.all(p)\n    }\n    const needInit = this._needInitSegment || discontinuity\n    const [video, audio] = this._transmuxer.transmux(videoChunk, audioChunk, needInit, contiguous, startTime, this._needInitSegment || discontinuity)\n\n    if (audioChunk && audioSegment) {\n      audioSegment?.setTrackExist(false, true)\n    }\n\n    if (audioChunk && segment) {\n      segment?.setTrackExist(true, false)\n    }\n\n    if (!audioSegment) {\n      segment?.setTrackExist(!!video, !!audio)\n    }\n\n\n    if (video && !audio) {\n      this.hls.emit(Event.NO_AUDIO_TRACK)\n    }\n\n    if (this._softVideo) {\n      this._softVideo.appendBuffer(video, audio)\n      this._needInitSegment = false\n    } else if (this._mse) {\n      const isFirstAppend = !this._sourceCreated\n      if (isFirstAppend) {\n        this._createMseSource(video?.codec, audio?.codec)\n      }\n      this._needInitSegment = false\n      const mse = this._mse\n      const p = []\n\n      if (needInit && !isFirstAppend) {\n        // handle codec change during midstream\n        this._handleCodecChange(video, audio)\n      }\n\n      if (video) {\n        const {data: videoData, ...videoRest} = video\n        p.push(mse.append(MSE.VIDEO, videoData, videoRest))\n      }\n      if (audio) {\n        const {data: audioData, ...audioRest} = audio\n        p.push(mse.append(MSE.AUDIO, audioData, audioRest))\n      }\n      return Promise.all(p)\n    }\n  }\n\n  async removeBuffer (start = 0, end = Infinity) {\n    const media = this.hls.media\n    if (!this._mse || !media || start < 0 || end < start || start >= this._mse.duration) return\n\n    return this._mse\n      .clearBuffer(start, end)\n      .then(() => this.hls.emit(EVENT.REMOVE_BUFFER, { start, end, removeEnd: end }))\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.hls.media\n    if (!this._mse || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this.removeBuffer(0, removeEnd)\n  }\n\n  async clearAllBuffer () {\n    if (this._mse) return this._mse.clearAllBuffer()\n  }\n\n  decryptBuffer (video, audio) {\n    return this._decryptor.decrypt(video, audio)\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      this._transmuxer = null\n      this._sourceCreated = false\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.hls.media)\n    }\n    this._needInitSegment = true\n    this._directAppend = false\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.hls.emit(EVENT.BUFFEREOS)\n      }\n    }\n    if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async setLiveSeekableRange (start, end) {\n    if (this._mse) this._mse.setLiveSeekableRange(start, end)\n  }\n\n  async destroy () {\n    this._decryptor?.destroy()\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n\n    this._decryptor = null\n    this._mse = null\n    this._softVideo = null\n  }\n\n  /**\n   * @private\n   */\n  _createMseSource (videoCodec, audioCodec) {\n    logger.debug(`create mse source, videoCodec=${videoCodec}, audioCodec=${audioCodec}`)\n    const mse = this._mse\n    if (!mse) return\n    if (videoCodec) {\n      mse.createSource(MSE.VIDEO, `video/mp4;codecs=${videoCodec}`)\n      this._sourceCreated = true\n    }\n    if (audioCodec) {\n      mse.createSource(MSE.AUDIO, `audio/mp4;codecs=${audioCodec}`)\n      this._sourceCreated = true\n    }\n    this.hls.emit(EVENT.SOURCEBUFFER_CREATED)\n  }\n\n  /**\n   * This makes it possible to change codecs or container type mid-stream.\n   * @private\n   */\n  _handleCodecChange (video, audio) {\n    const mse = this._mse\n    const codecList = [{\n      type: MSE.VIDEO,\n      codecs: video?.codec\n    }, {\n      type: MSE.AUDIO,\n      codecs: audio?.codec\n    }]\n\n    codecList.filter(item => !!item.codecs).forEach(({type, codecs}) => {\n      const sourceBuffer = mse.getSourceBuffer(type)\n      if (sourceBuffer) {\n        const codec = codecs.split(',')[0]\n        if (!new RegExp(codec, 'ig').test(sourceBuffer.mimeType)) {\n          mse.changeType(type, `${type}/mp4;codecs=${codecs}`)\n        }\n      }\n    })\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n  }\n\n  isFull (mediaType = MSE.VIDEO){\n    return this._mse?.isFull(mediaType)\n  }\n}\n","export class MasterPlaylist {\n  version = 0\n  streams = [] // MasterStream\n  /**\n   * @readonly\n   */\n  isMaster = true\n}\n\nconst MediaType = {\n  Audio: 'AUDIO',\n  Video: 'VIDEO',\n  SubTitle: 'SUBTITLE',\n  ClosedCaptions: 'CLOSED-CAPTIONS'\n}\n\n// #EXT-X-KEY KEYFORMAT values\nconst KeySystems = {\n  CLEAR_KEY: 'org.w3.clearkey',\n  FAIRPLAY: 'com.apple.streamingkeydelivery',\n  WIDEVINE: 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n  PLAYREADY: 'com.microsoft.playready'\n}\n\nexport class MediaStream {\n  id = 0\n  url = ''\n  default = false\n  autoSelect = false\n  forced = false\n  group = ''\n  name = ''\n  lang = ''\n  segments = []\n  endSN = 0\n}\n\nexport class AudioStream extends MediaStream {\n  mediaType = MediaType.Audio\n  channels = 0\n}\n\nexport class VideoStream extends MediaStream {\n  mediaType = MediaType.Video\n}\n\nexport class SubTitleStream extends MediaStream {\n  mediaType = MediaType.SubTitle\n}\n\nexport class ClosedCaptionsStream extends MediaStream {\n  mediaType = MediaType.ClosedCaptions\n}\n\nexport class MasterStream {\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n  audioGroup = ''\n\n  /** @type {AudioStream[]} */\n  audioStreams = []\n\n  /** @type {SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {ClosedCaptionsStream[]} */\n  closedCaptionsStream = []\n}\n\nexport class MediaPlaylist {\n  version = 0\n  url = ''\n  type = '' // upper case\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = 0\n  totalDuration = 0\n  targetDuration = 0\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  live = true\n  lowLatency = false\n  endPartIndex = 0\n  /** @type {Array.<MediaSegment>} */\n  segments = []\n}\n\nexport class MediaSegment {\n  sn = 0 // Media Sequence Number\n  cc = 0\n  url = ''\n  parentUrl = ''\n  title = ''\n  start = 0\n  duration = 0\n  dataTime = ''\n  /** @type {?MediaSegmentKey} */\n  key = null\n  byteRange = null // [start, end]\n  isInitSegment = false\n  /** @type {?MediaSegment} */\n  initSegment = null\n  isLast = false\n  hasAudio = false\n  hasVideo = false\n\n  independent = false\n  partIndex = 0\n\n  constructor (parentUrl) {\n    this.parentUrl = parentUrl\n  }\n\n  get end () {\n    return this.start + this.duration\n  }\n\n  setTrackExist (v, a) {\n    this.hasVideo = v\n    this.hasAudio = a\n  }\n\n  setByteRange (data, prevSegment) {\n    this.byteRange = [0]\n    const bytes = data.split('@')\n    if (bytes.length === 1 && prevSegment && prevSegment.byteRange) {\n      this.byteRange[0] = prevSegment.byteRange[1] || 0\n      if (this.byteRange[0]) this.byteRange[0] += 1\n    } else {\n      this.byteRange[0] = parseInt(bytes[1])\n    }\n    this.byteRange[1] = this.byteRange[0] + parseInt(bytes[0]) - 1\n  }\n}\n\nexport class MediaSegmentKey {\n  method = ''\n  url = ''\n  /** @type {?Uint8Array} */\n  iv = null\n  keyFormat = ''\n  keyFormatVersions = ''\n\n  constructor (segKey) {\n    if (segKey instanceof MediaSegmentKey) {\n      this.method = segKey.method\n      this.url = segKey.url\n      this.keyFormat = segKey.keyFormat\n      this.keyFormatVersions = segKey.keyFormatVersions\n      if (segKey.iv) this.iv = new Uint8Array(segKey.iv)\n    }\n  }\n\n  clone (sn) {\n    const key = new MediaSegmentKey(this)\n    if (sn !== null && sn !== undefined) key.setIVFromSN(sn)\n    return key\n  }\n\n  setIVFromSN (sn) {\n    if (!this.iv && this.method === 'AES-128' && typeof sn === 'number' && this.url) {\n      this.iv = new Uint8Array(16)\n      for (let i = 12; i < 16; i++) {\n        this.iv[i] = (sn >> (8 * (15 - i))) & 0xff\n      }\n    }\n  }\n\n  isSegmentEncrypted () {\n    const { method } = this\n    return method === 'AES-128' // || method === 'AES-256' || method === 'AES-256-CTR'\n  }\n\n  isValidKeySystem () {\n    const isKeyFormatValid =\n      [\n        KeySystems.CLEAR_KEY,\n        KeySystems.FAIRPLAY,\n        KeySystems.WIDEVINE,\n        KeySystems.PLAYREADY\n      ].indexOf(this.keyFormat) > -1\n    if (!isKeyFormatValid) {\n      return false\n    }\n\n    const isMethodValid =\n      ['SAMPLE-AES', 'SAMPLE-AES-CENC', 'SAMPLE-AES-CTR'].indexOf(this.method) > -1\n    if (!isMethodValid) {\n      return false\n    }\n    return true\n  }\n\n  isSupported () {\n    if (!this.method) {\n      return false\n    }\n    if (this.isSegmentEncrypted()) {\n      return true\n    } else if (this.isValidKeySystem()) {\n      return true\n    }\n    return false\n  }\n}\n","const REGEXP_TAG = /^#(EXT[^:]*)(?::(.*))?$/\nconst REGEXP_ATTR = /([^=]+)=(?:\"([^\"]*)\"|([^\",]*))(?:,|$)/g\nconst REGEXP_ABSOLUTE_URL = /^(?:[a-zA-Z0-9+\\-.]+:)?\\/\\//\nconst REGEXP_URL_PAIR = /^((?:[a-zA-Z0-9+\\-.]+:)?\\/\\/[^/?#]*)?([^?#]*\\/)?/\n\nexport function getLines (text) {\n  return text.split(/[\\r\\n]/).map((x) => x.trim()).filter(Boolean)\n}\n\nexport function parseTag (text) {\n  const ret = text.match(REGEXP_TAG)\n  if (!ret || !ret[1]) return\n  return [ret[1].replace('EXT-X-', ''), ret[2]]\n}\n\nexport function parseAttr (text) {\n  const ret = {}\n  let match = REGEXP_ATTR.exec(text)\n  while (match) {\n    ret[match[1]] = match[2] || match[3]\n    match = REGEXP_ATTR.exec(text)\n  }\n  return ret\n}\n\nexport function getAbsoluteUrl (url, parentUrl) {\n  if (!parentUrl || !url || REGEXP_ABSOLUTE_URL.test(url)) return url\n  const pairs = REGEXP_URL_PAIR.exec(parentUrl)\n  if (!pairs) return url\n  if (url[0] === '/') return pairs[1] + url\n  return pairs[1] + pairs[2] + url\n}\n\nconst CODECS_REGEXP = {\n  audio: [/^mp4a/, /^vorbis$/, /^opus$/, /^flac$/, /^[ae]c-3$/],\n  video: [/^avc/, /^hev/, /^hvc/, /^vp0?[89]/, /^av1$/],\n  text: [/^vtt$/, /^wvtt/, /^stpp/]\n}\n\n/**\n * @param {'audio' | 'video' | 'text'} type\n * @param {Array<string>} codecs\n * @returns {string | undefined}\n */\nexport function getCodecs (type, codecs) {\n  const re = CODECS_REGEXP[type]\n  if (!re || !codecs || !codecs.length) return\n  for (let i = 0; i < re.length; i++) {\n    for (let j = 0; j < codecs.length; j++) {\n      if (re[i].test(codecs[j])) return codecs[j]\n    }\n  }\n}\n","import { MasterPlaylist, MasterStream, AudioStream, SubTitleStream, MediaStream } from './model'\nimport { parseAttr, parseTag, getAbsoluteUrl, getCodecs } from './utils'\n\n/**\n * @param {Array<string>} lines\n * @param {string} parentUrl\n * @returns {MasterPlaylist}\n */\nexport function parseMasterPlaylist (lines, parentUrl) {\n  const master = new MasterPlaylist()\n  let index = 0\n  let line\n  const audioStreams = []\n  const subtitleStreams = []\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    if (name === 'VERSION') {\n      master.version = parseInt(data)\n    } else if (name === 'MEDIA' && data) {\n      const attr = parseAttr(data)\n      let stream\n      switch (attr.TYPE) {\n        case 'AUDIO':\n          stream = new AudioStream()\n          break\n        case 'SUBTITLES':\n          stream = new SubTitleStream()\n          break\n        default:\n          stream = new MediaStream()\n      }\n\n      stream.url = getAbsoluteUrl(attr.URI, parentUrl)\n      stream.default = attr.DEFAULT === 'YES'\n      stream.autoSelect = attr.AUTOSELECT === 'YES'\n      stream.group = attr['GROUP-ID']\n      stream.name = attr.NAME\n      stream.lang = attr.LANGUAGE\n      if (attr.CHANNELS) {\n        stream.channels = Number(attr.CHANNELS.split('/')[0])\n        if (Number.isNaN(stream.channels)) stream.channels = 0\n      }\n\n      if (attr.TYPE === 'AUDIO' && attr.URI) {\n        audioStreams.push(stream)\n      }\n\n      if (attr.TYPE === 'SUBTITLES') {\n        subtitleStreams.push(stream)\n      }\n\n    } else if (name === 'STREAM-INF' && data) {\n      const stream = new MasterStream()\n      const attr = parseAttr(data)\n\n      stream.bitrate = parseInt(attr['AVERAGE-BANDWIDTH'] || attr.BANDWIDTH)\n      stream.name = attr.NAME\n      stream.url = getAbsoluteUrl(lines[index++], parentUrl)\n      if (attr.RESOLUTION) {\n        const [w, h] = attr.RESOLUTION.split('x')\n        stream.width = parseInt(w)\n        stream.height = parseInt(h)\n      }\n      if (attr.CODECS) {\n        const codecs = attr.CODECS.split(/[ ,]+/).filter(Boolean)\n        stream.videoCodec = getCodecs('video', codecs)\n        stream.audioCodec = getCodecs('audio', codecs)\n        stream.textCodec = getCodecs('text', codecs)\n      }\n      stream.audioGroup = attr.AUDIO\n      stream.subtitleGroup = attr.SUBTITLES\n\n      master.streams.push(stream)\n    }\n  }\n  master.streams.forEach((s, i) => { s.id = i })\n\n  if (audioStreams.length) {\n    audioStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.audioGroup) {\n        stream.audioStreams = audioStreams.filter(x => x.group === stream.audioGroup)\n      }\n    })\n  }\n\n  if (subtitleStreams.length) {\n    subtitleStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.subtitleGroup) {\n        stream.subtitleStreams = subtitleStreams.filter(x => x.group === stream.subtitleGroup)\n      }\n    })\n  }\n\n  return master\n}\n","import { MediaPlaylist, MediaSegment, MediaSegmentKey } from './model'\nimport { getAbsoluteUrl, parseAttr, parseTag } from './utils'\n\nexport function parseMediaPlaylist (lines, parentUrl, useLowLatency) {\n  const media = new MediaPlaylist()\n  media.url = parentUrl\n  let curSegment = new MediaSegment(parentUrl)\n  let curInitSegment = null\n  let curKey = null\n  let totalDuration = 0\n  let curSN = 0\n  let curCC = 0\n  let index = 0\n  let line\n  let endOfList = false\n  let partSegmentIndex = 0\n\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    if (endOfList) {\n      break\n    }\n    if (line[0] !== '#') { // url\n      if (media.lowLatency) {\n        curSN++\n        continue\n      }\n\n      curSegment.sn = curSN\n      curSegment.cc = curCC\n      curSegment.url = getAbsoluteUrl(line, parentUrl)\n      if (curKey) curSegment.key = curKey.clone(curSN)\n      if (curInitSegment) curSegment.initSegment = curInitSegment\n      media.segments.push(curSegment)\n      curSegment = new MediaSegment(parentUrl)\n      curSN++\n      continue\n    }\n\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    switch (name) {\n      case 'VERSION':\n        media.version = parseInt(data)\n        break\n      case 'PLAYLIST-TYPE':\n        media.type = data?.toUpperCase()\n        break\n      case 'TARGETDURATION':\n        media.targetDuration = parseFloat(data)\n        break\n      case 'PART-INF': {\n        if (useLowLatency) {\n          media.lowLatency = true\n        }\n        const attr = parseAttr(data)\n        if (attr['PART-TARGET']) {\n          media.partTargetDuration = parseFloat(attr['PART-TARGET'])\n        }\n      }\n        break\n      case 'SERVER-CONTROL':{\n        const attr = parseAttr(data)\n        media.canBlockReload = attr['CAN-BLOCK-RELOAD'] === 'YES'\n        media.partHoldBack = parseFloat(attr['PART-HOLD-BACK'] || 0)\n        media.canSkipUntil = parseFloat(attr['CAN-SKIP-UNTIL'] || 0)\n        media.canSkipDateRanges = attr['CAN-SKIP-DATERANGES'] === 'YES'\n      }\n        break\n      case 'ENDLIST': {\n        const lastSegment = media.segments[media.segments.length - 1]\n        if (lastSegment) {\n          lastSegment.isLast = true\n        }\n        media.live = false\n        endOfList = true\n      }\n        break\n      case 'MEDIA-SEQUENCE':\n        curSN = media.startSN = parseInt(data)\n        break\n      case 'DISCONTINUITY-SEQUENCE':\n        curCC = media.startCC = parseInt(data)\n        break\n      case 'DISCONTINUITY':\n        curCC++\n        break\n      case 'BYTERANGE':\n        curSegment.setByteRange(data, media.segments[media.segments.length - 1])\n        break\n      case 'PART': {\n        if (!media.lowLatency) break\n        const attr = parseAttr(data)\n        curSegment.duration = parseFloat(attr['DURATION'])\n        curSegment.independent = attr['INDEPENDENT'] === 'YES'\n        curSegment.sn = curSN\n        curSegment.cc = curCC\n        curSegment.partIndex = partSegmentIndex\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(attr['DURATION'])\n        totalDuration += curSegment.duration\n        curSegment.url = getAbsoluteUrl(attr['URI'], parentUrl)\n        if (curKey) curSegment.key = curKey.clone(curSN)\n        if (curInitSegment) curSegment.initSegment = curInitSegment\n        media.segments.push(curSegment)\n        curSegment = new MediaSegment(parentUrl)\n        partSegmentIndex++\n      }\n\n        break\n      case 'PRELOAD-HINT':\n        break\n      case 'PROGRAM-DATE-TIME':\n        curSegment.dataTime = data\n        break\n      case 'EXTINF': {\n        if (media.lowLatency) {\n          partSegmentIndex = 0\n          break\n        }\n        const [duration, title] = data.split(',')\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(duration)\n        totalDuration += curSegment.duration\n        curSegment.title = title\n      }\n        break\n      case 'KEY': {\n        const attr = parseAttr(data)\n        if (attr.METHOD === 'NONE') {\n          curKey = null\n          break\n        }\n        curKey = new MediaSegmentKey()\n        curKey.method = attr.METHOD\n        curKey.url = /^blob:/.test(attr.URI) ? attr.URI : getAbsoluteUrl(attr.URI, parentUrl)\n        curKey.keyFormat = attr.KEYFORMAT || 'identity'\n        curKey.keyFormatVersions = attr.KEYFORMATVERSIONS\n        if (!curKey.isSupported()) {\n          throw new Error(`encrypt ${attr.METHOD}/${attr.KEYFORMAT} is not supported`)\n        }\n        if (attr.IV) {\n          let str = attr.IV.slice(2)\n          str = (str.length & 1 ? '0' : '') + str\n          curKey.iv = new Uint8Array(str.length / 2)\n          for (let i = 0, l = str.length / 2; i < l; i++) {\n            curKey.iv[i] = parseInt(str.slice(i * 2, i * 2 + 2), 16)\n          }\n        }\n      }\n        break\n      case 'MAP': {\n        const attr = parseAttr(data)\n        curSegment.url = getAbsoluteUrl(attr.URI, parentUrl)\n        if (attr.BYTERANGE) curSegment.setByteRange(attr.BYTERANGE)\n        curSegment.isInitSegment = true\n        curSegment.sn = 0\n        if (curKey) {\n          curSegment.key = curKey.clone(0)\n        }\n        curInitSegment = curSegment\n        curSegment = new MediaSegment(parentUrl)\n      }\n        break\n      default:\n    }\n  }\n\n  media.segments = media.segments.filter(x => x.duration !== 0)\n\n  const lastSegment = media.segments[media.segments.length - 1]\n  if (lastSegment) {\n    media.endSN = lastSegment.sn\n    media.endPartIndex = lastSegment.partIndex\n\n    // The real lastSegment maybe filter by 0 duration\n    if (endOfList && !lastSegment.isLast) {\n      lastSegment.isLast = true\n    }\n  }\n\n  media.totalDuration = totalDuration\n  media.endCC = curCC\n\n  return media\n}\n","import { parseMasterPlaylist } from './master'\nimport { parseMediaPlaylist } from './media'\nimport { getLines } from './utils'\n\nexport class M3U8Parser {\n  static parse (text = '', parentUrl, useLowLatency) {\n    if (!text.includes('#EXTM3U')) throw new Error('Invalid m3u8 file')\n\n    const lines = getLines(text)\n\n    if (M3U8Parser.isMediaPlaylist(text)) {\n      return parseMediaPlaylist(lines, parentUrl, useLowLatency)\n    }\n    return parseMasterPlaylist(lines, parentUrl)\n  }\n\n  static isMediaPlaylist (text) {\n    return text.includes('#EXTINF:') || text.includes('#EXT-X-TARGETDURATION:')\n  }\n}\n","import { NetLoader, StreamingError, EVENT, ERR } from 'xgplayer-streaming-shared'\nimport { M3U8Parser } from './parser'\nimport { Event } from '../constants'\n\nexport class ManifestLoader {\n  constructor (hls) {\n    this.hls = hls\n    this._timer = null\n    this._useLowLatency = hls.config.useLowLatency\n\n    const { retryCount, retryDelay, manifestLoadTimeout, fetchOptions } = this.hls.config\n    this._loader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n    this._subtitleLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n  }\n\n  async load (url, audioUrl, subtitleUrl) {\n    const toLoad = [this._loader.load(url)]\n    if (audioUrl) {\n      toLoad.push(this._audioLoader.load(audioUrl))\n    }\n\n    if (subtitleUrl) {\n      toLoad.push(this._subtitleLoader.load(subtitleUrl))\n    }\n\n    let videoText\n    let audioText\n    let subtitleText\n    let videoResUrl\n    let audioResUrl\n    let subtitleResUrl\n\n    try {\n      const [video, audio, subtitle] = await Promise.all(toLoad)\n      if (!video) return []\n\n      this._emitOnLoaded(video, url)\n\n      videoText = video.data\n      videoResUrl = video.response.url || url\n\n      if (audioUrl) {\n        audioText = audio?.data\n        subtitleText = subtitle?.data\n        audioResUrl = audio?.response?.url || audioUrl\n        subtitleResUrl = subtitle?.response?.url || subtitleUrl\n        audioText && this._emitOnLoaded(audio, audioUrl)\n        subtitleText && this._emitOnLoaded(subtitle, subtitleUrl)\n      } else {\n        subtitleText = audio?.data\n        subtitleResUrl = audio?.response?.url || subtitleUrl\n        subtitleText && this._emitOnLoaded(audio, subtitleUrl)\n      }\n\n    } catch (error) {\n      throw StreamingError.network(error)\n    }\n\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    let audioPlaylist\n    let subtitlePlaylist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n        if (audioText) audioText = onPreM3U8Parse(audioText, true) || audioText\n        if (subtitleText) subtitleText = onPreM3U8Parse(subtitleText, true) || subtitleText\n      }\n      playlist = M3U8Parser.parse(videoText, videoResUrl, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n      if (audioText) {\n        audioPlaylist = M3U8Parser.parse(audioText, audioResUrl, this._useLowLatency)\n      }\n      if (subtitleText) {\n        subtitlePlaylist = M3U8Parser.parse(subtitleText, subtitleResUrl, this._useLowLatency)\n      }\n\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n\n    return [playlist, audioPlaylist, subtitlePlaylist]\n  }\n\n  parseText (videoText, url) {\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n      }\n      playlist = M3U8Parser.parse(videoText, url, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n    return [playlist]\n  }\n\n  poll (url, audioUrl, subtitleUrl, cb, errorCb, time) {\n    clearTimeout(this._timer)\n    time = time || 3000\n    let retryCount = this.hls.config.pollRetryCount\n    const fn = async () => {\n      clearTimeout(this._timer)\n      try {\n        const res = await this.load(url, audioUrl, subtitleUrl)\n        if (!res[0]) return\n        retryCount = this.hls.config.pollRetryCount\n        cb(res[0], res[1], res[2])\n      } catch (e) {\n        retryCount--\n        if (retryCount <= 0) {\n          errorCb(e)\n        }\n      }\n      this._timer = setTimeout(fn, time)\n    }\n    this._timer = setTimeout(fn, time)\n  }\n\n  stopPoll () {\n    clearTimeout(this._timer)\n    return this.cancel()\n  }\n\n  cancel () {\n    return Promise.all([\n      this._loader.cancel(),\n      this._audioLoader.cancel()\n    ])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(Event.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","export function clamp (num, min, max) {\n  if (min > max) {\n    max = min\n  }\n  return Math.min(Math.max(num, min), max)\n}\n","import { Logger } from 'xgplayer-streaming-shared'\n\nconst logger = new Logger('playlist')\n\nexport class Stream {\n  live = undefined\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = -1\n  totalDuration = 0\n  targetDuration = 0\n\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  lowLatency = false\n  endPartIndex = 0\n\n  snDiff = null // number\n\n  segments = []\n\n  /** @type {import('../../parser/model').AudioStream[]} */\n  audioStreams = []\n\n  /** @type {import('../../parser/model').SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {import('../../parser/model').ClosedCaptionsStream[]} */\n  closedCaptions = []\n\n  /** @type {import('../../parser/model').AudioStream | null} */\n  currentAudioStream = null\n\n  /** @type {import('../../parser/model').subtitleStreams | null} */\n  currentSubtitleStream = null\n\n  /**\n   * asdasd {@link AudioStream}\n   */\n  get lastSegment () {\n    if (this.segments.length) {\n      return this.segments[this.segments.length - 1]\n    }\n    return null\n  }\n\n  get segmentDuration () {\n    return this.targetDuration || this.segments[0]?.duration || 0\n  }\n\n  get liveEdge () {\n    return this.endTime\n  }\n\n  set liveEdge (end) {\n    this.endTime = end\n  }\n\n  get endTime () {\n    return this.lastSegment?.end || 0\n  }\n\n  set endTime (end) {\n    const lastSeg = this.lastSegment\n    if (lastSeg)\n      lastSeg.duration = end - lastSeg.start\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentSubtitleStream?.endSN || 0\n  }\n\n  constructor (playlist, audioPlaylist, subtitlePlaylist) {\n    this.update(this._setLLPlaybackPoint(playlist), audioPlaylist, subtitlePlaylist)\n  }\n\n  clearOldSegment (startTime, pointer) {\n    if (this.currentAudioStream) {\n      this._clearSegments(startTime, pointer)\n    }\n\n    return this._clearSegments(startTime, pointer)\n  }\n\n  getAudioSegment (seg) {\n    if (!seg || !this.currentAudioStream) return\n    const sn = seg.sn - this.snDiff\n    return this.currentAudioStream.segments.find(x => x.sn === sn)\n  }\n\n  update (playlist, audioPlaylist) {\n    this.url = playlist.url\n    if (Array.isArray(playlist.segments)) { // media\n      if (this.live === null || this.live === undefined) this.live = playlist.live\n      this._updateSegments(playlist, this)\n\n      this.startCC = playlist.startCC\n      this.endCC = playlist.endCC\n      this.startSN = playlist.startSN\n      this.endSN = playlist.endSN || -1\n      this.totalDuration = playlist.totalDuration\n      this.targetDuration = playlist.targetDuration\n      this.live = playlist.live\n\n      this.lowLatency = playlist.lowLatency\n      this.canBlockReload = playlist.canBlockReload\n      this.canSkipDateRanges = playlist.canSkipDateRanges\n      this.canSkipUntil = playlist.canSkipUntil\n      this.partHoldBack = playlist.partHoldBack\n      this.partTargetDuration = playlist.partTargetDuration\n      this.skippedSegments = playlist.skippedSegments\n      this.endPartIndex = playlist.endPartIndex\n\n      if (audioPlaylist && this.currentAudioStream && Array.isArray(audioPlaylist.segments)) {\n        this._updateSegments(audioPlaylist, this.currentAudioStream)\n        if ((this.snDiff === null || this.snDiff === undefined) && playlist.segments.length && audioPlaylist.segments.length) {\n          this.snDiff = playlist.segments[0].sn - audioPlaylist.segments[0].sn\n        }\n      }\n\n    } else { // master stream\n      this.id = playlist.id\n      this.bitrate = playlist.bitrate\n      this.width = playlist.width\n      this.height = playlist.height\n      this.name = playlist.name\n      this.audioCodec = playlist.audioCodec\n      this.videoCodec = playlist.videoCodec\n      this.textCodec = playlist.textCodec\n      this.audioStreams = playlist.audioStreams\n      this.subtitleStreams = playlist.subtitleStreams\n      if (!this.currentAudioStream && this.audioStreams.length) {\n        this.currentAudioStream = this.audioStreams.find(x => x.default) || this.audioStreams[0]\n      }\n\n      if (!this.currentSubtitleStream && this.subtitleStreams.length) {\n        this.currentSubtitleStream = this.subtitleStreams.find(x => x.default) || this.subtitleStreams[0]\n      }\n    }\n  }\n\n  updateSubtitle (subtitlePlaylist) {\n    if (!(subtitlePlaylist && this.currentSubtitleStream && Array.isArray(subtitlePlaylist.segments))) return\n\n    const newSegs = this._updateSegments(subtitlePlaylist, this.currentSubtitleStream)\n    const segs = this.currentSubtitleStream.segments\n    if (segs.length > 100 ) {\n      this.currentSubtitleStream.segments = segs.slice(100)\n    }\n\n    if (!newSegs) return\n\n    return newSegs.map(x => {\n      return {\n        sn: x.sn,\n        url: x.url,\n        duration: x.duration,\n        start: x.start,\n        end: x.end,\n        lang: this.currentSubtitleStream.lang\n      }\n    })\n  }\n\n\n  switchSubtitle (lang) {\n    const toSwitch = this.subtitleStreams.find(x => x.lang === lang)\n    const origin = this.currentSubtitleStream\n    if (toSwitch) {\n      this.currentSubtitleStream = toSwitch\n      origin.segments = []\n    }\n  }\n\n  _setLLPlaybackPoint (playlist) {\n    if (!playlist.lowLatency || !playlist.segments.length) return playlist\n\n    const maxStartPoint = playlist.totalDuration - playlist.partHoldBack\n    const segs = playlist.segments\n    let index = 0\n\n    for (let i = 0, l = segs.length; i < l; i++) {\n      if (segs[i].start <= maxStartPoint && segs[i].independent) {\n        index = i\n      }\n    }\n\n    const usefulSegs = segs.slice(index)\n    let endTime = 0\n\n    usefulSegs.forEach(s => {\n      s.start = endTime\n      endTime = s.end\n    })\n\n    playlist.segments = usefulSegs\n    playlist.totalDuration = endTime\n    playlist.startSN = usefulSegs[0].sn\n    playlist.startCC = usefulSegs[0].cc\n\n    logger.log(`set ll-hls playback point: SN=${playlist.startSN} partIndex=${usefulSegs[0].partIndex}, duration=${endTime}`)\n\n    return playlist\n\n  }\n\n  _clearSegments (startTime, pointer) {\n    let sliceStart = 0\n    const segments = this.segments\n    for (let i = 0, l = segments.length; i < l; i++) {\n      if (segments[i].end >= startTime) {\n        sliceStart = i\n        break\n      }\n    }\n\n    if (sliceStart > pointer) {\n      sliceStart = pointer\n    }\n\n    if (sliceStart) {\n      this.segments = this.segments.slice(sliceStart)\n      if (this.currentAudioStream) {\n        this.currentAudioStream.segments = this.currentAudioStream.segments.slice(sliceStart)\n      }\n    }\n\n    return pointer - sliceStart\n  }\n\n  _updateSegments (playlist, segObj) {\n    const segments = segObj.segments\n    if (this.live) {\n      const lowLatency = playlist.lowLatency\n      const endSeg = segments[segments.length - 1]\n      const endSN = endSeg?.sn ?? -1\n      const endPartIndex = endSeg?.partIndex || 0\n\n      let hasNew = endSN < playlist.endSN && playlist.segments.length\n\n      if (lowLatency) {\n        hasNew = hasNew || endPartIndex < playlist.endPartIndex\n      }\n\n      if (hasNew) {\n        logger.log(`update segments: endSN:${endSN}, partIndex:${endPartIndex} --> endSN:${playlist.endSN}, partIndex:${playlist.endPartIndex}`)\n        const index = playlist.segments.findIndex(x => x.sn === endSN && x.partIndex === endPartIndex)\n        const toAppend = index < 0 ? playlist.segments : playlist.segments.slice(index + 1)\n\n        if (segments.length && toAppend.length) {\n          let endTime = endSeg.end\n          const endTimeBeforeAppend = endTime\n          toAppend.forEach(seg => {\n            seg.start = endTime\n            endTime = seg.end\n          })\n\n          logger.log(`liveEdge: ${endTimeBeforeAppend} -> ${endTime}`)\n\n          const lastCC = endSeg?.cc || -1\n          if (lastCC > toAppend[0].cc) {\n            toAppend.forEach(seg => (seg.cc += lastCC))\n          }\n        }\n        segObj.endSN = playlist.endSN\n        segObj.segments = segments.concat(toAppend)\n\n        return toAppend\n      }\n    } else {\n      segObj.segments = playlist.segments\n    }\n  }\n\n}\n","import { clamp } from '../utils'\nimport { Stream } from './stream'\nimport { Event } from '../constants'\n\nexport class Playlist {\n  /** @type {import('./stream').Stream[]} */\n  streams = []\n\n  /** @type {import('./stream').Stream} */\n  currentStream = null\n\n  dvrWindow = 0\n\n  _segmentPointer = -1\n\n  constructor (hls) {\n    this.hls = hls\n  }\n\n  get lowLatency () {\n    return this.currentStream?.lowLatency\n  }\n\n  get lastSegment () {\n    return this.currentStream?.lastSegment\n  }\n\n  get currentSegment () {\n    return this.currentSegments?.[this._segmentPointer]\n  }\n\n  get nextSegment () {\n    return this.currentSegments?.[this._segmentPointer + 1]\n  }\n\n  get currentSegments () {\n    return this.currentStream?.segments\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentStream?.currentSubtitleEndSn\n  }\n\n  get liveEdge () {\n    return this.currentStream?.liveEdge\n  }\n\n  set liveEdge (end) {\n    if (this.currentStream) {\n      this.currentStream.liveEdge = end\n    }\n  }\n\n  get totalDuration () {\n    return this.currentStream?.totalDuration || 0\n  }\n\n  get seekRange () {\n    const segments = this.currentSegments\n    if (!segments || !segments.length) return\n    return [\n      segments[0].start,\n      segments[segments.length - 1].end\n    ]\n  }\n\n  get nbSegments () {\n    return this.currentSegments?.length || 0\n  }\n\n  get isEmpty () {\n    return !this.currentSegments?.length\n  }\n\n  get isLive () {\n    return this.currentStream?.live\n  }\n\n  get hadSegmentLoaded () {\n    return this._segmentPointer !== -1\n  }\n\n  get hasSubtitle () {\n    return !!this.currentStream?.currentSubtitleStream\n  }\n\n  getAudioSegment (seg) {\n    return this.currentStream?.getAudioSegment(seg)\n  }\n\n  moveSegmentPointer (pos) {\n    if (pos === null || pos === undefined) pos = this._segmentPointer + 1\n    this._segmentPointer = clamp(pos, -1, this.currentSegments?.length)\n  }\n\n  reset () {\n    this.streams = []\n    this.currentStream = null\n    this.dvrWindow = 0\n    this._segmentPointer = -1\n  }\n\n  getSegmentByIndex (index) {\n    return this.currentSegments?.[index]\n  }\n\n  setNextSegmentByIndex (index = 0) {\n    this._segmentPointer = index - 1\n  }\n\n  setNextSegmentBySN (sn = 0) {\n    const preIndex = this.currentSegments?.findIndex(x => x.sn === sn)\n    if (preIndex !== -1) {\n      this.setNextSegmentByIndex(preIndex + 1)\n    }\n    return preIndex\n  }\n\n  findSegmentIndexByTime (time) {\n    const segments = this.currentSegments\n    if (segments) {\n      for (let i = 0, l = segments.length, seg; i < l; i++) {\n        seg = segments[i]\n        if (time >= seg.start && time < seg.end) {\n          return i\n        }\n      }\n\n      const lastSegment = segments[segments.length - 1]\n      if (Math.abs(time - lastSegment?.end) < 0.2) return segments.length - 1\n    }\n  }\n\n  upsertPlaylist (playlist, audioPlaylist, subtitlePlaylist) {\n    if (!playlist) return\n    if (playlist.isMaster) {\n      this.streams.length = playlist.streams.length\n      playlist.streams.filter(x => x.url).forEach((stream, i) => {\n        if (this.streams[i]) {\n          this.streams[i].update(stream)\n        } else {\n          this.streams[i] = new Stream(stream)\n        }\n      })\n      this.currentStream = this.streams[0]\n      // update media\n    } else if (Array.isArray(playlist.segments)) {\n      const stream = this.currentStream\n      if (stream) {\n        stream.update(playlist, audioPlaylist, subtitlePlaylist)\n        const newSubtitleSegs = stream.updateSubtitle(subtitlePlaylist)\n        if (newSubtitleSegs) {\n          this.hls.emit(Event.SUBTITLE_SEGMENTS, {\n            list: newSubtitleSegs\n          })\n        }\n      } else {\n        this.reset()\n        this.currentStream = this.streams[0] = new Stream(playlist, audioPlaylist, subtitlePlaylist)\n      }\n    }\n\n    const currentStream = this.currentStream\n\n    if (currentStream) {\n      if (this.hls.isLive && !this.dvrWindow) {\n        this.dvrWindow = this.currentSegments.reduce((a, c) => {\n          a += c.duration\n          return a\n        }, 0)\n      }\n    }\n  }\n\n  updateSegmentsRanges (sn, start) {\n    const segs = this.currentSegments?.filter(x => x.sn >= sn)\n    segs.forEach(s => {\n      s.start = start\n      start = s.end\n    })\n  }\n\n  switchSubtitle (lang) {\n    this.currentStream?.switchSubtitle(lang)\n  }\n\n  clearOldSegment (maxPlaylistSize = 50) {\n    const stream = this.currentStream\n    if (!this.dvrWindow || !stream) return\n    const startTime = stream.endTime - this.dvrWindow\n    if (startTime <= 0) return\n    const segments = stream.segments\n    if (segments.length <= maxPlaylistSize) return\n\n    this._segmentPointer = stream.clearOldSegment(startTime, this._segmentPointer)\n  }\n\n  checkSegmentTrackChange (cTime, nbSb) {\n    const index = this.findSegmentIndexByTime(cTime)\n    const seg = this.getSegmentByIndex(index)\n\n    if (!seg) return\n\n    if (!seg.hasAudio && !seg.hasVideo) return\n\n    // when seek\n    if (nbSb !== 2 && seg.hasAudio && seg.hasVideo) return seg\n\n    // continuous play\n    if (seg.end - cTime > 0.3) return\n\n    const next = this.getSegmentByIndex(index + 1)\n\n    if (!next) return\n\n    if (!next.hasAudio && !next.hasVideo) return\n\n    if ((next.hasAudio !== seg.hasAudio || next.hasVideo !== seg.hasVideo)) return next\n  }\n\n  feedbackLiveEdge (segment, bufferEnd) {\n    const segs = this.currentSegments\n    if (!segs) return\n    const isLast = this.lastSegment?.sn === segment.sn\n    if (isLast) {\n      this.liveEdge = bufferEnd\n      return\n    }\n\n    this.updateSegmentsRanges(segment.sn + 1, bufferEnd)\n  }\n\n}\n","import { NetLoader, EVENT, BandwidthService, StreamingError } from 'xgplayer-streaming-shared'\n\n\n/**\n * @typedef {import('../manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n\nexport class SegmentLoader {\n  /** @type {Error} */\n  error = null\n\n  constructor (hls) {\n    this.hls = hls\n    this._bandwidthService = new BandwidthService()\n    this._mapCache = {}\n    this._keyCache = {}\n\n    const { retryCount, retryDelay, loadTimeout, fetchOptions } = this.hls.config\n    this._segmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioSegmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._keyLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @param {boolean} loadInit\n   * @param {boolean} loadAudioInit\n   */\n  load (seg, audioSeg, loadInit, loadAudioInit = loadInit) {\n    const toLoad = []\n    if (seg) toLoad[0] = this.loadVideoSegment(seg, loadInit)\n    if (audioSeg) toLoad[1] = this.loadAudioSegment(audioSeg, loadAudioInit)\n    return Promise.all(toLoad)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadVideoSegment (seg, loadInit) {\n    return this._loadSegment(this._segmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadAudioSegment (seg, loadInit) {\n    return this._loadSegment(this._audioSegmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {NetLoader} segLoader\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  async _loadSegment (segLoader, seg, loadInit) {\n    let map\n    let key\n    let keyIv\n    let mapKey\n    let mapKeyIv\n    const toLoad = []\n\n    this.hls.emit(EVENT.LOAD_START, { url: seg.url })\n    toLoad[0] = segLoader.load(seg.url)\n    if (loadInit && seg.initSegment) {\n      const mapUrl = seg.initSegment.url\n      map = this._mapCache[mapUrl]\n      if (!map) {\n        this.hls.emit(EVENT.LOAD_START, { url: mapUrl })\n        toLoad[1] = segLoader.load(mapUrl).then(r => {\n          if (r) {\n            const l = Object.keys(this._mapCache)\n            if (l > 30) this._mapCache = {}\n            map = this._mapCache[mapUrl] = r.data\n            this._emitOnLoaded(r, mapUrl)\n          }\n        })\n      }\n      const keyUrl = seg.initSegment.key?.url\n      if (keyUrl) {\n        mapKeyIv = seg.initSegment.key.iv\n        mapKey = this._keyCache[keyUrl]\n        if (!mapKey) {\n          this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n          toLoad[2] = this._keyLoader.load(keyUrl).then(r => {\n            if (r) {\n              mapKey = this._keyCache[keyUrl] = r.data\n              this._emitOnLoaded(r, keyUrl)\n            }\n          })\n        }\n      }\n    }\n\n    const keyUrl = seg.key?.url\n    if (keyUrl && seg.key.isSegmentEncrypted()) {\n      keyIv = seg.key.iv\n      key = this._keyCache[keyUrl]\n      if (!key) {\n        this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n        toLoad[3] = this._keyLoader.load(keyUrl).then(r => {\n          if (r) {\n            key = this._keyCache[keyUrl] = r.data\n            this._emitOnLoaded(r, keyUrl)\n          }\n        })\n      }\n    }\n\n    const [s] = await Promise.all(toLoad)\n    if (!s) return\n    const data = s.data\n    this._emitOnLoaded(s, seg.url)\n\n    return {\n      data,\n      map,\n      key,\n      mapKey,\n      keyIv,\n      mapKeyIv\n    }\n  }\n\n  reset () {\n    this.error = null\n    this._mapCache = {}\n    this._keyCache = {}\n    this._bandwidthService.reset()\n  }\n\n  async cancel () {\n    await Promise.all([this._keyLoader.cancel(), this._segmentLoader.cancel(), this._audioSegmentLoader.cancel()])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { data, response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this._bandwidthService.addRecord(contentLength || data.byteLength, time)\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","import EventEmitter from 'eventemitter3'\nimport { Buffer, ERR, GapService, getVideoPlaybackQuality, isMediaPlaying, Logger, MediaStatsService, MSE, SeiService, StreamingError } from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './buffer-service'\nimport { getConfig } from './config'\nimport { Event } from './constants'\nimport { ManifestLoader } from './manifest-loader'\nimport { Playlist } from './playlist'\nimport { SegmentLoader } from './segment-loader'\nimport { clamp } from './utils'\n\n/**\n * @typedef {import('./manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\n/**\n * @typedef {{\n *  seamless?: boolean,\n *  startTime?: number,\n *  bitrate?: number\n * }} SwitchUrlOptions\n */\n\nconst logger = new Logger('hls')\n\nexport class Hls extends EventEmitter {\n  static version = __VERSION__\n  version = Hls.version\n  /** @type {HTMLMediaElement | null} */\n  media = null\n  /** @type {import('./config').HlsOption} */\n  config = null\n\n  /** @type {ManifestLoader} */\n  _manifestLoader = null\n\n  /** @type {SegmentLoader} */\n  _segmentLoader = null\n\n  /** @type {Playlist} */\n  _playlist = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {SeiService} */\n  _seiService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  _prevSegSn = null\n  _prevSegCc = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _segmentProcessing = false\n  _reloadOnPlay = false\n\n  _switchUrlOpts = null\n  _isProcessQuotaExceeded = false\n\n  constructor (cfg) {\n    super()\n    this.config = cfg = getConfig(cfg)\n    this.media = this.config.media\n\n    this._manifestLoader = new ManifestLoader(this)\n    this._segmentLoader = new SegmentLoader(this)\n    this._playlist = new Playlist(this)\n    this._bufferService = new BufferService(this)\n    if (cfg.seiInTime) {\n      this._seiService = new SeiService(this)\n    }\n    if (!cfg.softDecode) this._gapService = new GapService()\n\n    this._stats = new MediaStatsService(this, 90000)\n\n    this.media.addEventListener('loadeddata', this._onLoadeddata)\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('pause', this._onPause)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n  }\n\n  get isLive () { return this._playlist.isLive }\n  get streams () { return this._playlist.streams }\n  get currentStream () { return this._playlist.currentStream }\n  get hasSubtitle () { return this._playlist.hasSubtitle}\n  get totalDuration () { return this._playlist.totalDuration}\n  get baseDts () {\n    return this._bufferService?.baseDts\n  }\n\n  speedInfo () {\n    return this._segmentLoader.speedInfo()\n  }\n\n  bufferInfo (maxHole = 0.1) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  async load (url, reuseMse = false) {\n    if (url) this.config.url = url\n    url = this.config.url\n    await this._reset(reuseMse)\n    await this._loadData(url)\n    this._startTick()\n  }\n\n  /**\n   * @param {string} url\n   * @private\n   */\n  async _loadData (url) {\n    try {\n      if (url) url = url.trim()\n    } catch (e) {}\n\n    if (!url) throw this._emitError(new StreamingError(ERR.OTHER, ERR.SUB_TYPES.OPTION, null, null, 'm3u8 url is missing'))\n\n    const manifest = await this._loadM3U8(url)\n    const { currentStream } = this._playlist\n\n    if (this._urlSwitching && !this.isLive) {\n      if (currentStream.bitrate === 0 && this._switchUrlOpts?.bitrate) {\n        currentStream.bitrate = this._switchUrlOpts?.bitrate\n      }\n      const switchTimePoint = this._getSeamlessSwitchPoint()\n      this.config.startTime = switchTimePoint\n\n      const segIdx = this._playlist.findSegmentIndexByTime(switchTimePoint)\n      const nextSeg = this._playlist.getSegmentByIndex(segIdx + 1)\n\n      if (nextSeg) {\n        // move to next segment in case of media stall\n        const bufferClearStartPoint = nextSeg.start\n        await this._bufferService.removeBuffer(bufferClearStartPoint)\n      }\n    }\n\n    if (this._urlSwitching && this.isLive) {\n      // skip loaded segment\n      const preIndex = this._playlist.setNextSegmentBySN(this._prevSegSn)\n      logger.log(`segment nb=${this._prevSegSn} index of ${preIndex} in the new playlist`)\n      // the new stream no matched with old one\n      if (preIndex === -1) {\n        this._prevSegCc = null\n        this._prevSegSn = null\n      }\n    }\n\n    if (!manifest) return\n\n    if (this.isLive) {\n      this._bufferService.setLiveSeekableRange(0, 0xffffffff)\n      logger.log('totalDuration first time got:', this._playlist.totalDuration)\n      logger.log('nb segments got:', this._playlist.nbSegments)\n\n      // 配置的目标延迟小于首次获取分片总时长\n      if (this.config.targetLatency < this._playlist.totalDuration) {\n        this.config.targetLatency = this._playlist.totalDuration\n        this.config.maxLatency = 1.5 * this.config.targetLatency\n      }\n\n      if (!manifest.isMaster) this._pollM3U8(url)\n      if (this._playlist.nbSegments < this.config.minSegmentsStartPlay) return\n\n      await this._loadSegment()\n      return\n    }\n\n    await this._bufferService.updateDuration(currentStream.totalDuration)\n\n    const { startTime } = this.config\n    if (startTime) {\n      if (!this._switchUrlOpts?.seamless) {\n        this.media.currentTime = startTime\n      }\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(startTime) || 0)\n    }\n\n    await this._loadSegment()\n  }\n\n  async replay (isPlayEmit) {\n    this.config.startTime = 0\n    await this.load()\n    this._reloadOnPlay = false\n    return this.media.play(!isPlayEmit)\n  }\n\n  /**\n   * @param {string} url\n   * @param {?SwitchUrlOptions} options\n   * @returns\n   */\n  async switchURL (url, options = {}) {\n    const defaultOpts = {\n      seamless: false,\n      startTime: 0,\n      bitrate: 0\n    }\n    switch (typeof options) {\n      case 'number':\n        options = {startTime: options}\n        break\n      case 'boolean':\n        options = {seamless: options}\n        break\n      case 'object':\n        for (const key in options) {\n          if (options[key] === undefined || options[key] === null) {\n            delete options[key]\n          }\n        }\n        break\n      default:\n        throw `unsupported switchURL args: ${options}`\n    }\n\n    options = Object.assign({}, defaultOpts, options)\n    const { seamless, startTime } = options\n    this.config.url = url\n    this.config.startTime = startTime\n    this._switchUrlOpts = options\n\n    if (!seamless) {\n      let appended\n      try {\n        appended = this.config.softDecode ? this.load(url) : (await this.load(url))\n      } catch (error) {\n        this.emit(Event.SWITCH_URL_FAILED, error)\n        throw error\n      }\n      this._reloadOnPlay = false\n\n      if (appended) {\n        this.emit(Event.SWITCH_URL_SUCCESS, { url })\n      }\n      return this.media.play(true)\n    } else {\n      this._urlSwitching = true\n      if (!this.isLive) {\n        this._prevSegSn = null\n        this._prevSegCc = null\n      }\n\n      this._playlist.reset()\n      this._bufferService.seamlessSwitch()\n      await this._clear()\n      await this._loadData(url)\n      this._startTick()\n    }\n\n    this._switchUrlOpts = null\n  }\n\n  async switchStream (id, force = true) {\n    const curStream = this.currentStream\n    const streams = this.streams\n    if (!curStream || curStream.id === id || !streams || streams.length < 2) return\n    const toSwitch = streams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    // 同步更新\n    if (curStream.currentAudioStream && toSwitch.audioStreams.length > 2) {\n      const curId = curStream.currentAudioStream.id\n      toSwitch.currentAudioStream = toSwitch.audioStreams.find(x => x.id === curId) || toSwitch.currentAudioStream\n    }\n\n    this._playlist.currentStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      this._playlist.currentStream = curStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchAudioStream (id, force = true) {\n    const curStream = this.currentStream\n    if (!curStream) return\n    const audioStream = curStream.currentAudioStream\n    if (!audioStream || audioStream.id === id || curStream.audioStreams.length < 2) return\n    const toSwitch = curStream.audioStreams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    curStream.currentAudioStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      curStream.currentAudioStream = audioStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchSubtitleStream (lang) {\n    this._playlist.switchSubtitle(lang)\n    await this._manifestLoader.stopPoll()\n    await this._refreshM3U8()\n  }\n\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this.media.removeEventListener('loadeddata', this._onLoadeddata)\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('pause', this._onPause)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  /**\n   * @private\n   */\n  async _loadM3U8 (url) {\n    let playlist\n    try {\n      const manifest = this.config.manifestList?.filter(x => x.url === url)[0]?.manifest;\n\n      [playlist] = manifest\n        ? this._manifestLoader.parseText(manifest, url) :\n        await this._manifestLoader.load(url)\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n    if (!playlist) return\n    this._playlist.upsertPlaylist(playlist)\n\n    if (playlist.isMaster) {\n      if (this._playlist.currentStream.subtitleStreams?.length) {\n        this.emit(Event.SUBTITLE_PLAYLIST, {\n          list: this._playlist.currentStream.subtitleStreams\n        })\n      }\n      await this._refreshM3U8()\n    }\n    this.emit(Event.STREAM_PARSED)\n    return playlist\n  }\n\n  /**\n   * @private 首次更新 master playlist 的 media level\n   */\n  _refreshM3U8 () {\n    const stream = this._playlist.currentStream\n    if (!stream || !stream.url) throw this._emitError(StreamingError.create(null, null, new Error('m3u8 url is not defined')))\n    const url = stream.url\n    const audioUrl = stream.currentAudioStream?.url\n    const subtitleUrl = stream.currentSubtitleStream?.url\n    return this._manifestLoader.load(url, audioUrl, subtitleUrl).then(([mediaPlaylist, audioPlaylist, subtitlePlaylist]) => {\n      if (!mediaPlaylist) return\n      this._playlist.upsertPlaylist(mediaPlaylist, audioPlaylist, subtitlePlaylist)\n      if (!this.isLive) return\n      this._pollM3U8(url, audioUrl, subtitleUrl)\n    }).catch(err => {\n      throw this._emitError(StreamingError.create(err))\n    })\n  }\n\n  /**\n   * @private\n   */\n  _pollM3U8 (url, audioUrl, subtitleUrl) {\n    let isEmpty = this._playlist.isEmpty\n    let pollInterval\n\n    if (this._playlist.lowLatency) {\n      pollInterval = (this._playlist.currentStream.partTargetDuration * 2 || 0) * 1000\n    } else {\n      pollInterval = (this._playlist.lastSegment?.duration || 0) * 1000\n    }\n\n    this._manifestLoader.poll(\n      url,\n      audioUrl,\n      subtitleUrl,\n      (p1, p2, p3) => {\n        this._playlist.upsertPlaylist(p1, p2, p3)\n        this._playlist.clearOldSegment()\n        const switchToNoEmpty = p1 && isEmpty && !this._playlist.isEmpty\n        if (switchToNoEmpty || (!this._playlist.hadSegmentLoaded && this._playlist.nbSegments >= this.config.minSegmentsStartPlay)) {\n          this._loadSegment()\n        }\n        if (isEmpty) isEmpty = this._playlist.isEmpty\n      }, (err) => {\n        this._emitError(StreamingError.create(err))\n      },\n      // 刷新时间\n      pollInterval\n    )\n  }\n\n  /**\n   * @private\n   */\n  _loadSegment = async () => {\n    if (this._segmentProcessing || !this.media) return\n    const nextSeg = this._playlist.nextSegment\n    const { config } = this\n\n    if (!nextSeg) return\n\n    if (!this.isLive) {\n      let bInfo = this.bufferInfo()\n      if (this.media.paused && !this.media.currentTime) {\n        bInfo = this.bufferInfo(bInfo.nextStart || 0.5)\n      }\n      const bufferThroughout = Math.abs(bInfo.end - this.media.duration) < 0.1\n      if (bInfo.remaining >= config.preloadTime || bufferThroughout) {\n        this._tryEos()\n        return\n      }\n\n      if (config.preferMMSStreaming && !this._bufferService.msStreaming) {\n        return\n      }\n\n      // reset segment pointer by buffer end\n      if (!this._urlSwitching &&\n        this._prevSegSn !== nextSeg.sn - 1 &&\n        bInfo.end &&\n        Math.abs(nextSeg.start - bInfo.end) > 1) {\n        this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(bInfo.end + 0.1))\n      }\n    }\n\n    return this._loadSegmentDirect()\n  }\n\n\n  /**\n   * @private\n   */\n  async _loadSegmentDirect (loadOnce) {\n    const seg = this._playlist.nextSegment\n    if (!seg) return\n\n    let appended = false\n    let cachedError = null\n    try {\n      this._segmentProcessing = true\n      logger.log(`load segment, sn:${seg.sn}, [${seg.start}, ${seg.end}], partIndex:${seg.partIndex}`)\n      appended = await this._reqAndBufferSegment(seg, this._playlist.getAudioSegment(seg))\n    } catch (error) {\n      // If an exception is thrown here, other reference functions\n      // need to handle the exception, so the error stops here\n      cachedError = error\n    } finally {\n      this._segmentProcessing = false\n    }\n\n    if (cachedError) {\n      if (this._bufferService.isFull()) {\n        logger.log(`load segment, sn:${seg.sn}, partIndex:${seg.partIndex}`)\n        // if buffer is full, stop request new fragments\n        this._segmentProcessing = true\n        this._isProcessQuotaExceeded = true\n        return false\n      }\n      return this._emitError(StreamingError.create(cachedError))\n    }\n    if (appended) {\n      const bufferEnd = this.bufferInfo().end\n      if (this.isLive && !this.media.seeking && bufferEnd && Math.abs(seg.end - bufferEnd) > 1) {\n        logger.warn(`segment: ${seg.sn} expected end=${seg.end}, real end=${bufferEnd}`)\n        this._playlist.feedbackLiveEdge(seg, bufferEnd)\n      }\n\n      const sameStream = this._playlist.currentStream?.url === seg.parentUrl\n      // switching -> pre playlist segment appended -> new playlist loaded -> new playlist segment appended\n      // _needInitSegment status maybe reset by pre playlist segment appendBuffer()\n      if (this._urlSwitching && !sameStream) {\n        logger.warn('pre playlist segment appended!')\n        this._bufferService.seamlessSwitch()\n      }\n\n      // switching -> new playlist loaded -> new playlist segment appended\n      if (this.isLive && this._urlSwitching && sameStream) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_SUCCESS, { url: this.config.url })\n      }\n\n      this._playlist.moveSegmentPointer()\n      if (seg.isLast) {\n        this._end()\n      } else if (!loadOnce) {\n        this._loadSegment()\n      }\n    }\n\n    return appended\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @private\n   */\n  async _reqAndBufferSegment (seg, audioSeg) {\n    const cc = seg ? seg.cc : audioSeg.cc\n    const discontinuity = this._prevSegCc !== cc\n    let responses = []\n    try {\n      responses = await this._segmentLoader.load(seg, audioSeg, discontinuity)\n    } catch (e) {\n      e.fatal = false\n      this._segmentLoader.error = e\n      throw e\n    }\n    if (!responses[0]) return\n    const data = await this._bufferService.decryptBuffer(...responses)\n    if (!data) return\n    const sn = seg ? seg.sn : audioSeg.sn\n    let start = seg ? seg.start : audioSeg.start\n    const stream = this._playlist.currentStream\n    this._bufferService.createSource(data[0], data[1], stream?.videoCodec, stream?.audioCodec)\n    const before = Date.now()\n    const contiguous = this._prevSegSn === sn - 1\n    if (this.isLive && this._urlSwitching) {\n      const segStart = this.bufferInfo().end\n      // update the new segements [start、end] to match timeline.\n      // (this appended segment duration maybe not matched with m3u8 description)\n      this._playlist.updateSegmentsRanges(sn, segStart)\n      logger.warn(`update the new playlist liveEdge, segment id=${sn}, buffer start=${segStart}, liveEdge=${this._playlist.liveEdge}`)\n      start = segStart\n    }\n    await this._bufferService.appendBuffer(seg, audioSeg, data[0], data[1], discontinuity, contiguous, start)\n    this.emit(Event.APPEND_COST, {elapsed: Date.now() - before, url: seg.url})\n    await this._bufferService.evictBuffer(this.config.bufferBehind)\n    this._prevSegCc = cc\n    this._prevSegSn = sn\n    return true\n  }\n\n  /**\n   * @private\n   */\n  _onLoadeddata = () => {\n    if (this.isLive && !this.config.mseLowLatency) {\n      // update duration to Infinity\n      if (this.media.duration !== Infinity) {\n        this._bufferService.updateDuration(Infinity).catch(e=>{})\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onPlay = async () => {\n    // fix replay 重复请求问题\n    if (this.media.seeking && this.media.currentTime === 0){\n      logger.debug('replay currentTime 0, return')\n      return\n    }\n    clearTimeout(this._disconnectTimer)\n    if (this._reloadOnPlay) {\n      this._reloadOnPlay = false\n      this.replay(true)\n    } else {\n      await this._loadSegment()\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onPause = () => {\n    if (this.isLive) {\n      if (!this._reloadOnPlay) {\n        let { disconnectTime } = this.config\n        if (disconnectTime === null || disconnectTime === undefined) disconnectTime = this._playlist.dvrWindow\n        if (!Number.isFinite(disconnectTime)) return\n        clearTimeout(this._disconnectTimer)\n        this._disconnectTimer = setTimeout(() => {\n          this._reloadOnPlay = true\n          this._clear()\n        }, disconnectTime || 0)\n      }\n    } else {\n      this._stopTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onSeeking = async () => {\n    if (!this.media) return\n    this._onCheckQuotaExceeded()\n    const seekTime = this.media.currentTime\n    const seekRange = this._playlist.seekRange\n    if (seekRange) {\n      const newSeekTime = clamp(seekTime, seekRange[0], this.isLive ? seekRange[1] : this.media.duration)\n      if (\n        // if newSeekTime less than 0, media.currentTime will be 0, this causes an infinite loop\n        newSeekTime >= 0 &&\n        Math.abs(seekTime - newSeekTime) >= 0.1\n      ) {\n        this.media.currentTime = newSeekTime\n        return\n      }\n    }\n\n    const curSeg = this._playlist.currentSegment\n    const info = Buffer.info(Buffer.get(this.media), seekTime, 0.1)\n    if (curSeg) {\n      if (info.end && Math.abs(info.end - curSeg.end) < 0.2) return\n      if (this.isLive && info.end) return\n    }\n\n    const segIndex = this._playlist.findSegmentIndexByTime(seekTime)\n    const seg = this._playlist.getSegmentByIndex(segIndex)\n    if (segIndex === null || segIndex === undefined || !seg || (this._segmentProcessing && seg === this._playlist.nextSegment)) return\n\n    logger.debug('seek to', seekTime, seg)\n\n    this._playlist.setNextSegmentByIndex(segIndex)\n\n    this._stopTick()\n    await this._segmentLoader.cancel()\n\n    this._segmentProcessing = false\n    if (!info.end || this.isLive) {\n      await this._loadSegmentDirect(true)\n    }\n    this._startTick()\n  }\n\n  async _onCheckQuotaExceeded (){\n    const seekTime = this.media.currentTime\n    // handle buffer QuotaExceeded when seek\n    const buffered = this.media.buffered\n    let inBuffered = false\n    for (let i = 0; i < buffered.length; i++){\n      if (buffered.start(0) >= seekTime && seekTime < buffered.end(i)){\n        inBuffered = true\n        break\n      }\n    }\n    if (this._bufferService.isFull() ) {\n      const bufferBehind = inBuffered ? this.config.bufferBehind : 5\n      const mediaTime = this.media.currentTime\n      if (mediaTime - bufferBehind > 0){\n        await this._bufferService.removeBuffer(0, mediaTime - bufferBehind)\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onTimeupdate = () => {\n    if (!this.media) return\n    const cfg = this.config\n    if (cfg.isLive && cfg.maxLatency && cfg.targetLatency && this.media) {\n      const liveEdge = this._playlist.liveEdge\n      if (!liveEdge) return\n      const latency = liveEdge - this.media.currentTime\n      if (latency >= cfg.maxLatency) {\n        logger.debug(`latency jump, currentTime:${this.media.currentTime}, liveEdge:${liveEdge},  latency=${latency}`)\n        this.media.currentTime = liveEdge - cfg.targetLatency\n      }\n    }\n\n    if (cfg.seiInTime) {\n      this._seiService?.throw(this.media.currentTime)\n    }\n\n    if (this.config.allowedStreamTrackChange && !this.config.softDecode) {\n      this._checkStreamTrackChange(this.media.currentTime)\n    }\n\n  }\n\n  _checkStreamTrackChange (time) {\n    const changedSeg = this._playlist.checkSegmentTrackChange(time, this._bufferService.nbSb)\n    if (!changedSeg) return\n    this.switchURL(this.config.url, changedSeg.start + 0.2)\n  }\n\n  /**\n   * @private\n   */\n  async _clear () {\n    clearTimeout(this._disconnectTimer)\n    this._stopTick()\n    await Promise.all([\n      this._segmentLoader.cancel(),\n      this._manifestLoader.stopPoll()\n    ])\n    this._segmentProcessing = false\n  }\n\n  /**\n   * @private\n   */\n  async _reset (reuseMse = false) {\n    this._reloadOnPlay = false\n    this._prevSegSn = null\n    this._prevSegCc = null\n    this._switchUrlOpts = null\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this._stats.reset()\n    await this._clear()\n    return this._bufferService.reset(reuseMse)\n  }\n\n  /**\n   * @private\n   */\n  _end () {\n    this._clear()\n    this._bufferService.endOfStream()\n    if (this.media.readyState <= 2 || this.media.buffered.length > 1) {\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _stopTick () {\n    if (this._tickTimer) {\n      clearTimeout(this._tickTimer)\n    }\n    this._tickTimer = null\n  }\n\n  /**\n   * @private\n   */\n  _startTick () {\n    this._stopTick()\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /**\n   * @private\n   */\n  _tick = () => {\n    if (!this.media) return\n    this._startTick()\n    const media = this.media\n    const buffered = Buffer.get(media)\n    const segLoaderError = this._segmentLoader.error\n    this._onCheckQuotaExceeded()\n    // change _segmentProcessing to false\n    if (this._isProcessQuotaExceeded){\n      if (!this._bufferService.isFull()){\n        this._isProcessQuotaExceeded = false\n        this._segmentProcessing = false\n      }\n    }\n    if (segLoaderError) {\n      // Compatible with the case where the buffer does not start from 0\n      const bufferMaxHoleTolerance = 0.5\n\n      if (!media.readyState || this.bufferInfo(bufferMaxHoleTolerance).remaining < 1) {\n        segLoaderError.fatal = true\n        this._emitError(StreamingError.network(segLoaderError))\n      }\n      return\n    }\n\n    if (Buffer.end(buffered) >= 0.1 && media.readyState) {\n      if (isMediaPlaying(media)) {\n        this._loadSegment()\n        if (this._gapService) {\n          this._gapService.do(media, this.config.maxJumpDistance, this.isLive)\n        }\n      } else {\n        if (media.readyState < 2 && this._gapService) {\n          this._gapService.do(media, this.config.maxJumpDistance, !media.currentTime ? true : this.isLive)\n        }\n      }\n    }\n\n    if (!this.isLive) {\n      this._tryEos()\n    }\n  }\n\n  /**\n   * @param {StreamingError} error\n   * @param {boolean?} endOfStream\n   * @private\n   */\n  _emitError (error, endOfStream = false) {\n    if (error.originError?.fatal === false) {\n      logger.warn(error)\n    } else {\n      logger.table(error)\n      logger.error(error)\n      logger.error(this.media?.error)\n\n      if (this.media?.readyState) {\n        this.media.pause()\n      }\n      this._stopTick()\n      if (this._urlSwitching) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_FAILED, error)\n      }\n      this.emit(Event.ERROR, error)\n      if (endOfStream) this._end()\n      this._seiService?.reset()\n    }\n    return error\n  }\n\n  /**\n   * @private\n   */\n  _getSeamlessSwitchPoint () {\n    const { media } = this\n    let nextLoadPoint = media.currentTime\n    if (!media.paused) {\n      const segIdx = this._playlist.findSegmentIndexByTime(media.currentTime)\n      const curSeg = this._playlist.getSegmentByIndex(segIdx)\n      const latestKbps = this._stats?.getStats().downloadSpeed // latest download speed\n      if (latestKbps && curSeg) {\n        const delay = (curSeg.duration * this._playlist.currentStream.bitrate) / latestKbps + 1\n\n        nextLoadPoint += delay\n      } else {\n        nextLoadPoint += 5\n      }\n    }\n\n    return nextLoadPoint\n  }\n\n  /**\n   * @private\n   */\n  _tryEos () {\n    const { media } = this\n    const { nextSegment, lastSegment } = this._playlist\n    const eosAllowed =\n      !nextSegment &&\n      media.readyState &&\n      media.duration > 0 &&\n      this._bufferService?.msIsOpened &&\n      !this._bufferService?.msHasOpTasks\n\n    if (!eosAllowed) {\n      return\n    }\n\n    let bInfo = this.bufferInfo()\n    if (media.paused && !media.currentTime) {\n      bInfo = this.bufferInfo(bInfo.nextStart || 0.5)\n    }\n\n    const bufferThroughout = Math.abs(bInfo.end - media.duration) < 0.1 ||\n      (!this.isLive && lastSegment && bInfo.end >= (lastSegment.start + lastSegment.duration))\n    if (bufferThroughout) {\n      this._bufferService.endOfStream()\n    }\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Hls.enableLogger()\n  } else {\n    Hls.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  targetLatency?: number,\n *  maxPlaylistSize?: number,\n *  maxLatency?: number,\n *  bufferBehind?: number,\n *  maxJumpDistance?: number,\n *  startTime?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  loadTimeout?: number,\n *  manifestLoadTimeout?:number,\n *  preloadTime?: number,\n *  disconnectTime?: number,\n *  allowedStreamTrackChange?: boolean,\n *  seiInTime?: boolean,\n *  manifestList?: Array<{url: string, manifest: string}>\n *  fetchOptions?: RequestInit\n *  onPreM3U8Parse?: (m3u8: string) => string | void\n *  decryptor?: Decryptor,\n *  minSegmentsStartPlay?: number\n *  preferMMS?: boolean\n *  preferMMSStreaming?: boolean,\n *  mseLowLatency?: boolean,\n * }} HlsOption\n */\n\n/**\n * @param {HlsOption} cfg\n * @returns {HlsOption}\n */\nexport function getConfig (cfg) {\n  const media = cfg?.media || document.createElement('video')\n  return {\n    maxPlaylistSize: 50,\n    retryCount: 3,\n    retryDelay: 1000,\n    pollRetryCount: 2,\n    loadTimeout: 10000,\n    manifestLoadTimeout:10000,\n    preloadTime: 30,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    startTime: 0,\n    useLowLatency: true,\n    targetLatency: 10,\n    maxLatency: 20,\n    allowedStreamTrackChange: true,\n    seiInTime: false,\n    manifestList: [],\n    minSegmentsStartPlay: 3,\n    preferMMS: false,\n    preferMMSStreaming: false,\n    mseLowLatency: true, // mse 低延迟模式渲染 https://issues.chromium.org/issues/41161663\n    ...cfg,\n    media\n  }\n}\n","import { Event } from './hls/constants'\n\nexport default class PluginExtension {\n  _opts = null\n  _plugin = null\n\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, isLive } = this._opts\n\n    if (!media) return\n\n    if (!isLive && media.setPlayMode) {\n      media.setPlayMode('VOD')\n      return\n    }\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n  _onLowDecode = () => {\n    const { media, innerDegrade } = this._opts\n\n    this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n    this._plugin?.player?.emit('core_event', {\n      ...media.degradeInfo,\n      eventName: Event.LOWDECODE\n    })\n\n    if (innerDegrade === 1) {\n      this._degrade(media.src)\n    }\n  }\n\n  /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo && originVideo.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const hlsPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(hlsPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Errors, Events } from 'xgplayer'\nimport { EVENT, MSE } from 'xgplayer-streaming-shared'\nimport { Hls } from './hls'\nimport { Event } from './hls/constants'\nimport PluginExtension from './plugin-extension'\n\nexport function parseSwitchUrlArgs (args, plugin) {\n  const { player } = plugin\n  const curTime = player.currentTime\n  const options = {\n    startTime: curTime\n  }\n\n  switch (typeof args) {\n    case 'boolean':\n      options.seamless = args\n      break\n    case 'object':\n      Object.assign(options, args)\n      break\n    default:\n      break\n  }\n  return options\n}\n\nexport class HlsPlugin extends BasePlugin {\n  static Hls = Hls\n\n  static EVENT = Event\n\n  /**\n   * @type {Hls}\n   */\n  hls = null\n\n  pluginExtension = null\n\n  static get pluginName () {\n    return 'hls'\n  }\n\n  get core () {\n    return this.hls\n  }\n\n  get version () {\n    return this.hls?.version\n  }\n\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio'\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n    const hlsOpts = config.hls || {}\n\n    if (\n      (!config.url &&\n        // private config key\n        !config.__allowHlsEmptyUrl__) ||\n      (!hlsOpts.preferMMS && MSE.isMMSOnly())\n    ) {\n      return\n    }\n\n    if (this.hls) this.hls.destroy()\n    this.player.switchURL = this._onSwitchURL\n    this.player.handleSource = false // disable player source handle\n\n    hlsOpts.innerDegrade = hlsOpts.innerDegrade || config.innerDegrade\n    if (hlsOpts.disconnectTime === null || hlsOpts.disconnectTime === undefined) hlsOpts.disconnectTime = 0\n\n    this.hls = new Hls({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: this.player.media || this.player.video,\n      startTime: config.startTime,\n      url: config.url,\n      ...hlsOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => this.hls?.media?.src,\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        isLive: config.isLive,\n        media: this.player.video,\n        ...hlsOpts\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      // This is a heavy operation for the vod flow, which may cause seeked event never emit\n      this.player?.useHooks('replay', () => this.hls?.replay())\n    }\n\n    this.on(Events.SWITCH_SUBTITLE || 'switch_subtitle', this._onSwitchSubtitle)\n    this.on(Events.URL_CHANGE, this._onSwitchURL)\n    this.on(Events.DESTROY, this.destroy.bind(this))\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.MEDIASOURCE_OPENED)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.DEMUXED_TRACK)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.SPEED)\n    this._transCoreEvent(EVENT.HLS_MANIFEST_LOADED)\n    this._transCoreEvent(EVENT.HLS_LEVEL_LOADED)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n    this._transCoreEvent(Event.NO_AUDIO_TRACK)\n    this._transCoreEvent(Event.STREAM_PARSED)\n    this._transCoreEvent(Event.SUBTITLE_SEGMENTS)\n    this._transCoreEvent(Event.SUBTITLE_PLAYLIST)\n    this._transCoreEvent(Event.APPEND_COST)\n\n    if (config.url) {\n      this.hls.load(config.url, true).catch(e => {})\n    }\n  }\n\n  /**\n   * It needs to be supported as a subclass to be inherited externally, so don't write it as an attribute here\n   */\n  destroy () {\n    if (this.hls) {\n      this.hls.destroy()\n      this.hls = null\n    }\n\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @returns {import('./hls').Stats |  undefined}\n   */\n  getStats = () => {\n    return this.hls?.getStats()\n  }\n\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Hls.isSupported(mediaType, codec)\n  }\n\n  _onSwitchSubtitle = ({lang}) => {\n    this.hls?.switchSubtitleStream(lang)\n  }\n\n  _onSwitchURL = (url, args) => {\n    return new Promise((resolve, reject) => {\n      const { player, hls } = this\n      if (hls) {\n        const options = parseSwitchUrlArgs(args, this)\n        player.config.url = url\n        hls.switchURL(url, options)\n          .then(() => resolve(true))\n          .catch(reject)\n\n        if (!options.seamless && this.player.config?.hls?.keepStatusAfterSwitch) {\n          this._keepPauseStatus()\n        }\n      } else {\n        reject()\n      }\n    })\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _transError () {\n    this.hls.on(Event.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.hls.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n\n        if (eventName === EVENT.SEI_IN_TIME && this.hls.hasSubtitle) {\n          this._emitSeiPaylodTime(e)\n        }\n      }\n    })\n  }\n\n  _emitSeiPaylodTime (e) {\n    try {\n      const seiJson = JSON.parse(Array.from(e.data.payload).map(x=>String.fromCharCode(x)).join('').slice(0,-1))\n      if (!seiJson['rtmp_dts']) return\n      this.player.emit('core_event', {\n        eventName: Event.SEI_PAYLOAD_TIME,\n        time: seiJson['rtmp_dts']\n      })\n    } catch (e) {}\n  }\n\n}\n"],"names":["Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","arguments","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","isBrowser","window","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","apply","disabled","console","debug","nowTime","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","e","delLog","shift","join","reset","_console5","group","table","groupEnd","val","Date","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","createPublicPromise","res","rej","promise","Promise","resolve","reject","used","parseInt","performance","now","getTime","SafeJSON","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","isMMS","mediaSource","test","OP_NAME","MSE","media","_this2","create","_logger","queue","_queue","op","opName","_this2$_sourceBuffer$","costtime","_opst","ranges","TimeRanges","getTimeRanges","_sourceBuffer","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","readyState","_this3","flag","keys","forEach","k","isArray","_url","_this$mediaSource2","duration","streaming","_mseFullFlag","VIDEO","_this4","isReduceDuration","bufferEnd","Math","max","_enqueueBlockingOp","isEnded","_this5","_openPromise","isOpened","ms","addEventListener","onOpen","costTime","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMMS","_this6","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","_onStartStreaming","_onEndStreaming","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this7","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this8","changeType","_enqueueOp","createSource","buffer","_this9","byteLength","_this9$_sourceBuffer$","appendBuffer","startTime","endTime","_this10","isInsertHead","remove","p","_this11","_this12","allClear","_this$_queue$type","initQueue","isinit","reason","_this13","setLiveSeekableRange","exec","_this14","splice","then","_callee3","types","waiters","_this15","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this16","_this17","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","TTFB","LOAD_START","LOAD_RESPONSE_HEADERS","LOAD_COMPLETE","LOAD_RETRY","SOURCEBUFFER_CREATED","MEDIASOURCE_OPENED","ANALYZE_DURATION_EXCEEDED","REMOVE_BUFFER","BUFFEREOS","KEYFRAME","CHASEFRAME","METADATA_PARSED","SEI","SEI_IN_TIME","FLV_SCRIPT_DATA","LOWDECODE","SWITCH_URL_SUCCESS","SWITCH_URL_FAILED","SPEED","HLS_MANIFEST_LOADED","HLS_LEVEL_LOADED","DEMUXED_TRACK","STREAM_EXCEPTION","LARGE_AV_FIRST_FRAME_GAP_DETECT","LARGE_VIDEO_DTS_GAP_DETECT","LARGE_AUDIO_DTS_GAP_DETECT","AUDIO_GAP_DETECT","AUDIO_OVERLAP_DETECT","MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT","REAL_TIME_SPEED","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","totalByte","_speeds","_chunkSpeeds","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","_startGopId","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","dts","pts","first","isVideoEncryption","AudioTrack","sampleDuration","isAudioEncryption","VideoSample","originPts","originDts","keyframe","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","isFirefox","isAndroid","MAX_SIZE","pow","readBig16","readBig32","readBig64","getAvcCodec","codecs","h","parse","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","MAX_VIDEO_FRAME_DURATION","TsFixer","vSamples","aSamples","firstVideoSample","firstAudioSample","vaDelta","vDeltaToNextDts","aDeltaToNextDts","_samples$i","prevDts","second","expectFragEnd","_audioLastSample","TsDemuxer","_pmtId","_remainingPacketData","_videoPesData","_audioPesData","remainingLength","videoPid","audioPid","payloadUnitStartIndicator","adaptationFiledControl","tableEnd","programInfoLength","esPid","_parseVideoData","_parseAudioData","pes","_parsePES","_toConsumableArray","parseAnnexB","_createVideoSample","spsInfo","ffByteFound","_pushVideoSample","_parseAacData","_track$samples","parseADTS","headerDataLen","pesLen","ptsDtsFlags","MP4Parser","headerSize","subData","findBox","box","parseBox","trackId","baseDataOffsetPresent","flags","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","reference_ID","version","earliest_presentation_time","first_offset","references","ref","tmp32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mvhd","trak","pssh","nextTrackId","tkhd","mdia","mdhd","hdlr","minf","lang","language","handlerType","vmhd","smhd","stbl","graphicsmode","opcolor","balance","_ret$stsd$entries$","_ret$stsd$entries$$si","_ret$stsd$entries$$si2","stsd","stts","ctts","stsc","stsz","stco","co64","default_IV_size","entries","sinf","schi","tenc","stss","senc","iv","sampleCount","InitializationVector","subsamples","subsampleCount","subsample","BytesOfClearData","BytesOfProtectedData","keyIds","systemId","toHex","numKeyIds","keyId","data_size","kid","system_id","entryCount","avc1","hvc1","mp4a","alaw","samplesize","esds","horizresolution","vertresolution","avcC","pasp","default_IsEncrypted","default_KID","frma","data_format","bodyStart","parseVisualSampleEntry","configurationVersion","AVCProfileIndication","AVCLevelIndication","lengthSizeMinusOne","spsLength","ppsLength","tmp","generalProfileCompatibility","avgFrameRate","_ret$vps","nalus","_ret$sps","_ret$pps","hSpacing","vSpacing","parseAudioSampleEntry","byteRead","tag","substring","padStart","firstChunk","samplesPerChunk","entrySizes","mfhd","traf","tfhd","tfdt","trun","dataOffset","firstSampleFlags","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","moov","_e$esds","_e$esds2","tracks","vTrack","find","_t$mdia","_t$mdia$hdlr","aTrack","_t$mdia2","_t$mdia2$hdlr","_vTrack$tkhd","_vTrack$mdia","_vTrack$mdia$minf","_vTrack$mdia$minf$stb","_vTrack$mdia2","_vTrack$mdia2$minf","_vTrack$mdia2$minf$st","_vTrackId","id","tkhdDuration","mvhdDurtion","mvhdTimecale","_e1$sinf","_e1$sinf$schi","_e1$sinf2","_e1$sinf2$schi","_e1$sinf3","_e1$sinf3$schi","_e1$sinf4","_e1$sinf4$frma","e1","videoSenc","useEME","kidValue","encv","_aTrack$tkhd","_e$esds3","_e$esds4","_aTrack$mdia","_aTrack$mdia$minf","_aTrack$mdia$minf$stb","_aTrack$mdia2","_aTrack$mdia2$minf","_aTrack$mdia2$minf$st","_aTrackId","_e$sinf","_e$sinf$frma","_e$sinf2","_e$sinf2$schi","_e$sinf3","_e$sinf3$schi","_e$sinf4","_e$sinf4$schi","getRateIndexByRate","audioSenc","enca","_videoTrack$encv","_audioTrack$enca","vkid","akid","videoSampleCount","_audioTrack$samples","audioSampleCount","moof","defaultSize","defaultDuration","evaluateDefaultDuration","_t$mdia3","_t$mdia3$hdlr","_t$mdia4","_t$mdia4$hdlr","videoSamples","audioSamples","_vTrack$mdia3","_vTrack$mdia3$minf","videoStbl","getSamples","_aTrack$mdia3","_aTrack$mdia3$minf","_aTrack$mdia$mdhd","audioStbl","keyframeMap","cttsArr","cttsEntries","stscEntries","stcoEntries","stszEntrySizes","stssEntries","chunkIndex","chunkRunIndex","offsetInChunk","lastSampleInChunk","lastChunkInRun","dataReferenceIndex","frameCount","isFullBox","readBig24","pad","charstr","maxlen","chars","r","hex","FMP4Demuxer","videoData","audioData","videoExist","audioExist","moovBox","moovToTrack","moofBox","moofToSamples","baseOffset","sampleData","videoBaseMediaDecodeTime","audioBaseMediaDecodeTime","Concat","ResultConstructor","arrays","self","UINT32_MAX","FTYPHEV1","FTYPAVC1","ftyp","content","mvex","HDLR_TYPES","VMHD","SMHD","DINF","extBox","STTS","STSC","STSZ","STCO","avc1hev1","_concat$concat","avcc","btrt","charCodeAt","schm","typ","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","sencLength","isVideo","videoSencLength","saiz","saio","trun1","sbgp","sdtp","extension","writeUint32","samplesLength","writeUint16","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i$flag","_samples$i$cts","trackMP4","mdiaMP4","minfMP4","stblMP4","_ref5","_ref6","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","crypto","msCrypto","subtle","webkitSubtle","externalDecryptor","_decryptData2","_decryptSegment2","_this$externalDecrypt","destroy","_decryptSegment","seg","_decryptData","keyIv","aesKey","importKey","_x5","_x6","_x7","Event","STREAM_PARSED","NO_AUDIO_TRACK","SUBTITLE_SEGMENTS","SUBTITLE_PLAYLIST","SEI_PAYLOAD_TIME","APPEND_COST","Transmuxer","hls","isMP4","needRemux","_demuxer","_isMP4","_remuxer","videoChunk","audioChunk","needInit","demuxer","demuxAndFix","vParsed","firstDts","firstPts","samplesDuration","aParsed","newId","_initSegmentId","_fireEvents","mseLowLatency","totalDuration","_this$_remuxer$remux","remux","logCC","toFixed","meta","code","BufferService","softDecode","_softVideo","_mse","decryptor","_decryptor","_destroy","_setLiveSeekableRange","_endOfStream","_reset","_clearAllBuffer","_evictBuffer","_removeBuffer","_appendBuffer","_updateDuration","_this$_transmuxer","_this$_transmuxer$_de","_this$_transmuxer$_de2","_transmuxer","_this$_mse","_this$_mse2","_this$_mse3","hasOpTasks","_this$_mse4","updateDuration","_sourceCreated","_directAppend","mix","_createMseSource","segment","_this$_transmuxer$tra","_this$_transmuxer$tra2","isFirstAppend","mse","_p","videoRest","audioRest","AUDIO","_needInitSegment","transmux","setTrackExist","_handleCodecChange","_excluded2","_x8","_args3","clearBuffer","removeEnd","_callee4","bufferBehind","_context4","removeBuffer","_x9","_callee5","_context5","clearAllBuffer","_callee6","reuseMse","_args6","_context6","_callee7","_context7","_callee8","_context8","_x10","_x11","_callee9","_this$_decryptor","_context9","sourceBuffer","getSourceBuffer","RegExp","_this$_mse5","mediaType","isFull","MasterPlaylist","MediaType","KeySystems","CLEAR_KEY","FAIRPLAY","WIDEVINE","PLAYREADY","MediaStream","AudioStream","_MediaStream","SubTitleStream","_MediaStream3","MasterStream","MediaPlaylist","MediaSegment","parentUrl","prevSegment","byteRange","bytes","MediaSegmentKey","segKey","keyFormat","keyFormatVersions","sn","setIVFromSN","isSegmentEncrypted","isValidKeySystem","REGEXP_TAG","REGEXP_ATTR","REGEXP_ABSOLUTE_URL","REGEXP_URL_PAIR","getLines","parseTag","match","parseAttr","getAbsoluteUrl","pairs","CODECS_REGEXP","getCodecs","re","parseMasterPlaylist","lines","line","master","audioStreams","subtitleStreams","_tag","attr","stream","TYPE","URI","default","DEFAULT","autoSelect","AUTOSELECT","NAME","LANGUAGE","CHANNELS","channels","BANDWIDTH","RESOLUTION","_attr$RESOLUTION$spli2","w","CODECS","textCodec","audioGroup","subtitleGroup","SUBTITLES","streams","parseMediaPlaylist","useLowLatency","curSegment","curInitSegment","curKey","curSN","curCC","endOfList","partSegmentIndex","toUpperCase","targetDuration","lowLatency","partTargetDuration","canBlockReload","partHoldBack","canSkipUntil","canSkipDateRanges","lastSegment","segments","isLast","live","startSN","startCC","setByteRange","independent","cc","partIndex","dataTime","_data$split2","title","METHOD","KEYFORMAT","KEYFORMATVERSIONS","IV","BYTERANGE","isInitSegment","endSN","endPartIndex","endCC","M3U8Parser","isMediaPlaylist","ManifestLoader","elapsed","retryTime","network","_timer","_useLowLatency","_this$hls$config","manifestLoadTimeout","fetchOptions","_onLoaderRetry","_audioLoader","_subtitleLoader","_load","audioUrl","subtitleUrl","toLoad","videoText","audioText","subtitleText","videoResUrl","audioResUrl","subtitleResUrl","_yield$Promise$all","_yield$Promise$all2","subtitle","_audio$response","_subtitle$response","_audio$response2","onPreM3U8Parse","playlist","audioPlaylist","subtitlePlaylist","_playlist","_emitOnLoaded","isMaster","_playlist2","cb","errorCb","pollRetryCount","num","Stream","_setLLPlaybackPoint","_this$segments$","_this$lastSegment","lastSeg","_this$currentSubtitle","currentSubtitleStream","pointer","currentAudioStream","_clearSegments","snDiff","_updateSegments","skippedSegments","newSegs","segs","toSwitch","maxStartPoint","usefulSegs","sliceStart","segObj","_endSeg$sn","endSeg","hasNew","findIndex","toAppend","endTimeBeforeAppend","lastCC","Playlist","_this$currentStream","currentStream","_this$currentStream2","_this$currentSegments","currentSegments","_segmentPointer","_this$currentSegments2","_this$currentStream3","_this$currentStream4","currentSubtitleEndSn","_this$currentStream5","liveEdge","_this$currentStream6","_this$currentSegments3","_this$currentSegments4","_this$currentStream7","_this$currentStream8","_this$currentStream9","getAudioSegment","_this$currentSegments5","dvrWindow","_this$currentSegments6","_this$currentSegments7","preIndex","setNextSegmentByIndex","newSubtitleSegs","updateSubtitle","list","_this$currentSegments8","_this$currentStream10","switchSubtitle","maxPlaylistSize","clearOldSegment","cTime","nbSb","findSegmentIndexByTime","getSegmentByIndex","updateSegmentsRanges","SegmentLoader","_bandwidthService","addRecord","_mapCache","_keyCache","loadTimeout","_segmentLoader","_audioSegmentLoader","_keyLoader","_loadSegment2","getLatestSpeed","getAvgSpeed","audioSeg","loadInit","loadAudioInit","loadVideoSegment","loadAudioSegment","_loadSegment","segLoader","_seg$key","mapKey","mapKeyIv","_seg$initSegment$key","mapUrl","_keyUrl","keyUrl","Hls","_reset2","_clear2","_onCheckQuotaExceeded2","_reqAndBufferSegment2","_loadSegmentDirect2","_loadM3U","_switchSubtitleStream","_switchAudioStream","_switchStream","_switchURL","_replay","_loadData2","nextSeg","_assertThisInitialize","bInfo","bufferThroughout","_segmentProcessing","nextSegment","paused","preloadTime","_tryEos","preferMMSStreaming","_bufferService","msStreaming","_urlSwitching","_prevSegSn","_loadSegmentDirect","_disconnectTimer","_reloadOnPlay","replay","_startTick","disconnectTime","_clear","_stopTick","seekTime","seekRange","newSeekTime","curSeg","segIndex","_onCheckQuotaExceeded","currentSegment","_this$_seiService","maxLatency","targetLatency","latency","seiInTime","_seiService","throw","allowedStreamTrackChange","_checkStreamTrackChange","segLoaderError","_isProcessQuotaExceeded","fatal","_emitError","ended","playbackRate","isMediaPlaying","_gapService","do","document","createElement","manifestList","minSegmentsStartPlay","_manifestLoader","_onLoadeddata","_onPlay","_onPause","_onSeeking","_onTimeupdate","hasSubtitle","_this$_bufferService","_this$media","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args4","_loadData","manifest","_this$_switchUrlOpts","_this$_switchUrlOpts2","switchTimePoint","segIdx","bufferClearStartPoint","_this$_switchUrlOpts3","_loadM3U8","_switchUrlOpts","_getSeamlessSwitchPoint","setNextSegmentBySN","_prevSegCc","nbSegments","_pollM3U8","seamless","isPlayEmit","play","defaultOpts","_options","appended","_args7","seamlessSwitch","force","curStream","curId","_args8","_refreshM3U8","audioStream","_args9","_callee10","_context10","stopPoll","_callee11","_this$_seiService2","_context11","_callee12","_this$config$manifest","_this$config$manifest2","_this$_playlist$curre","_context12","parseText","upsertPlaylist","_stream$currentAudioS","_stream$currentSubtit","mediaPlaylist","pollInterval","_this$_playlist$lastS","isEmpty","poll","p1","p2","p3","hadSegmentLoaded","_callee13","loadOnce","cachedError","_this$_playlist$curre2","sameStream","_context13","_reqAndBufferSegment","finish","feedbackLiveEdge","moveSegmentPointer","_end","_callee14","_this$_bufferService2","responses","before","segStart","_context14","decryptBuffer","evictBuffer","_callee15","inBuffered","mediaTime","_context15","changedSeg","checkSegmentTrackChange","switchURL","_callee16","_context16","_callee17","_this$_seiService3","_args17","_context17","_tickTimer","_tick","_tickInterval","_error$originError","_this$media2","_this$media3","_this$_seiService4","pause","nextLoadPoint","_this$_stats","latestKbps","delay","_this$_bufferService3","_this$_bufferService4","_this$_playlist","msIsOpened","msHasOpTasks","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","opts","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","_this$_opts","_opts","innerDegrade","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","hlsPlugin","pluginName","unRegisterPlugin","_init","_this$_opts2","setPlayMode","setAttribute","_onLowDecode","_this$_opts3","_this$_opts3$media","parseSwitchUrlArgs","HlsPlugin","_BasePlugin","_args","_this$hls","_this$hls2","switchSubtitleStream","_this$player$config","_this$player$config$h","keepStatusAfterSwitch","_keepPauseStatus","_this$hls3","_this$player","_this$player$config2","hlsOpts","__allowHlsEmptyUrl__","isMMSOnly","_this$player2","_onSwitchURL","handleSource","defineGetterOrSetter","_this2$hls","_this2$hls$media","configurable","pluginExtension","forceDegradeToVideo","_this2$pluginExtensio","useHooks","_this2$hls2","SWITCH_SUBTITLE","_onSwitchSubtitle","URL_CHANGE","DESTROY","_transError","_transCoreEvent","_this$pluginExtension","Errors","_emitSeiPaylodTime","seiJson","BasePlugin"],"mappings":"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"}