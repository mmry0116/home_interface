export class ManifestLoader {
    constructor(hls: any);
    hls: any;
    _timer: NodeJS.Timeout;
    _useLowLatency: any;
    _loader: NetLoader;
    _audioLoader: NetLoader;
    _subtitleLoader: NetLoader;
    load(url: any, audioUrl: any, subtitleUrl: any): Promise<(import("./parser/model").MasterPlaylist | import("./parser/model").MediaPlaylist)[]>;
    parseText(videoText: any, url: any): (import("./parser/model").MasterPlaylist | import("./parser/model").MediaPlaylist)[];
    poll(url: any, audioUrl: any, subtitleUrl: any, cb: any, errorCb: any, time: any): void;
    stopPoll(): Promise<[void, void]>;
    cancel(): Promise<[void, void]>;
    _emitOnLoaded: (res: any, url: any) => void;
    _onLoaderRetry: (error: any, retryTime: any) => void;
}
import { NetLoader } from "../../../../xgplayer-streaming-shared/es/net";
