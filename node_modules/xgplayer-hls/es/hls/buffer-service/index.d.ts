export class BufferService {
    constructor(hls: any);
    _decryptor: Decryptor;
    /** @type {Transmuxer} */
    _transmuxer: Transmuxer;
    /** @type {MSE} */
    _mse: MSE;
    _softVideo: any;
    _sourceCreated: boolean;
    _needInitSegment: boolean;
    _directAppend: boolean;
    hls: any;
    get baseDts(): any;
    get nbSb(): number;
    get msIsOpened(): boolean;
    get msHasOpTasks(): boolean;
    get msStreaming(): any;
    updateDuration(duration: any): Promise<void>;
    createSource(videoChunk: any, audioChunk: any, videoCodec: any, audioCodec: any): void;
    appendBuffer(segment: any, audioSegment: any, videoChunk: any, audioChunk: any, discontinuity: any, contiguous: any, startTime: any): Promise<any[]>;
    removeBuffer(start?: number, end?: number): Promise<any>;
    evictBuffer(bufferBehind: any): Promise<any>;
    clearAllBuffer(): Promise<undefined>;
    decryptBuffer(video: any, audio: any): Promise<any[]>;
    reset(reuseMse?: boolean): Promise<void>;
    endOfStream(): Promise<void>;
    setLiveSeekableRange(start: any, end: any): Promise<void>;
    destroy(): Promise<void>;
    /**
     * @private
     */
    private _createMseSource;
    /**
     * This makes it possible to change codecs or container type mid-stream.
     * @private
     */
    private _handleCodecChange;
    seamlessSwitch(): void;
    isFull(mediaType?: string): any;
}
import { Decryptor } from "./decrypt";
import { Transmuxer } from "./transmuxer";
import { MSE } from "../../../../xgplayer-streaming-shared/es/mse";
