/**
 * @typedef {{
 *  media: HTMLMediaElement,
 *  url?: string,
 *  isLive?: boolean,
 *  softDecode?: boolean,
 *  targetLatency?: number,
 *  maxPlaylistSize?: number,
 *  maxLatency?: number,
 *  bufferBehind?: number,
 *  maxJumpDistance?: number,
 *  startTime?: number,
 *  retryCount?: number,
 *  retryDelay?: number,
 *  loadTimeout?: number,
 *  manifestLoadTimeout?:number,
 *  preloadTime?: number,
 *  disconnectTime?: number,
 *  allowedStreamTrackChange?: boolean,
 *  seiInTime?: boolean,
 *  manifestList?: Array<{url: string, manifest: string}>
 *  fetchOptions?: RequestInit
 *  onPreM3U8Parse?: (m3u8: string) => string | void
 *  decryptor?: Decryptor,
 *  minSegmentsStartPlay?: number
 *  preferMMS?: boolean
 *  preferMMSStreaming?: boolean,
 *  mseLowLatency?: boolean,
 * }} HlsOption
 */
/**
 * @param {HlsOption} cfg
 * @returns {HlsOption}
 */
export function getConfig(cfg: HlsOption): HlsOption;
export type HlsOption = HlsOption;
