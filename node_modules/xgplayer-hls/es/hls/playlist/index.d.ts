export class Playlist {
    constructor(hls: any);
    /** @type {import('./stream').Stream[]} */
    streams: import('./stream').Stream[];
    /** @type {import('./stream').Stream} */
    currentStream: import('./stream').Stream;
    dvrWindow: number;
    _segmentPointer: number;
    hls: any;
    get lowLatency(): boolean;
    get lastSegment(): any;
    get currentSegment(): any;
    get nextSegment(): any;
    get currentSegments(): any[];
    get currentSubtitleEndSn(): any;
    set liveEdge(arg: any);
    get liveEdge(): any;
    get totalDuration(): number;
    get seekRange(): any[];
    get nbSegments(): number;
    get isEmpty(): boolean;
    get isLive(): any;
    get hadSegmentLoaded(): boolean;
    get hasSubtitle(): boolean;
    getAudioSegment(seg: any): any;
    moveSegmentPointer(pos: any): void;
    reset(): void;
    getSegmentByIndex(index: any): any;
    setNextSegmentByIndex(index?: number): void;
    setNextSegmentBySN(sn?: number): number;
    findSegmentIndexByTime(time: any): number;
    upsertPlaylist(playlist: any, audioPlaylist: any, subtitlePlaylist: any): void;
    updateSegmentsRanges(sn: any, start: any): void;
    switchSubtitle(lang: any): void;
    clearOldSegment(maxPlaylistSize?: number): void;
    checkSegmentTrackChange(cTime: any, nbSb: any): any;
    feedbackLiveEdge(segment: any, bufferEnd: any): void;
}
