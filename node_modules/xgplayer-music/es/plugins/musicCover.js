import { inherits as _inherits, createSuper as _createSuper, createClass as _createClass, classCallCheck as _classCallCheck } from "../_virtual/_rollupPluginBabelHelpers.js";
import { Plugin } from "xgplayer";
var MusicCover = /* @__PURE__ */ function(_Plugin) {
  _inherits(MusicCover2, _Plugin);
  var _super = _createSuper(MusicCover2);
  function MusicCover2() {
    _classCallCheck(this, MusicCover2);
    return _super.apply(this, arguments);
  }
  _createClass(MusicCover2, [{
    key: "afterCreate",
    value: function afterCreate() {
      var _this = this;
      this.on("change", function(item) {
        if (item && item.poster) {
          if (_this.find("img")) {
            _this.find("img").src = item.poster;
          } else {
            var _img2 = new Image();
            _img2.src = item.poster;
            _this.appendChild(_img2);
          }
          _this.find("img").src = item.poster;
          _this.show();
        } else {
          _this.hide();
        }
      });
      if (this.playerConfig.poster) {
        var _img = new Image();
        _img.src = this.playerConfig.poster;
        this.appendChild(_img);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return '<xg-icon class="xgplayer-cover"></xg-icon>';
    }
  }], [{
    key: "pluginName",
    get: function get() {
      return "musiccover";
    }
  }, {
    key: "defaultConfig",
    get: function get() {
      return {
        index: 6,
        position: Plugin.POSITIONS.CONTROLS_LEFT
      };
    }
  }]);
  return MusicCover2;
}(Plugin);
export { MusicCover };
