import { inherits as _inherits, createSuper as _createSuper, createClass as _createClass, classCallCheck as _classCallCheck } from "../_virtual/_rollupPluginBabelHelpers.js";
import { Plugin } from "xgplayer";
var MusicMeta = /* @__PURE__ */ function(_Plugin) {
  _inherits(MusicMeta2, _Plugin);
  var _super = _createSuper(MusicMeta2);
  function MusicMeta2() {
    _classCallCheck(this, MusicMeta2);
    return _super.apply(this, arguments);
  }
  _createClass(MusicMeta2, [{
    key: "beforeCreate",
    value: function beforeCreate(args) {
      var progress = args.player.plugins.progress;
      if (progress) {
        args.root = progress.root;
      }
    }
  }, {
    key: "afterCreate",
    value: function afterCreate() {
      var _this = this;
      this.on("change", function(item) {
        if (item && item.title) {
          _this.root.innerHTML = "".concat(item.title);
        } else {
          _this.root.innerHTML = "";
        }
      });
    }
  }, {
    key: "render",
    value: function render() {
      var playerConfig = this.playerConfig;
      return '<xg-title class="xgplayer-name">\n          '.concat(playerConfig.title || "", "\n       </xg-title>");
    }
  }], [{
    key: "pluginName",
    get: function get() {
      return "musicmeta";
    }
  }, {
    key: "defaultConfig",
    get: function get() {
      return {
        index: 0
      };
    }
  }]);
  return MusicMeta2;
}(Plugin);
export { MusicMeta };
