import { shrink, scale, split } from "./helper.js";
function drawPath(ctx, dataArray, options, bufferLen) {
  var w = options.w, linear = options.linear, reverse = options.reverse, offset = options.offset;
  ctx.save();
  ctx.beginPath();
  var sliceWidth = w * 1 / bufferLen;
  ctx.strokeStyle = linear;
  var x = 0;
  var y = 0;
  for (var i = 0; i < bufferLen; i++) {
    y = reverse ? 0 - dataArray[i] : dataArray[i];
    y = offset - y;
    if (i === 0) {
      ctx.moveTo(x, y);
    } else {
      ctx.lineTo(x, y);
    }
    x += sliceWidth;
  }
  ctx.lineTo(w, y);
  ctx.stroke();
}
var drawWaves = function(context) {
  var options = context.options, ctx = context.ctx, h = context.h, w = context.w;
  var data = context.data;
  var colors = options.colors;
  data = shrink(data, 2048);
  data = scale(data, h / 2);
  data = split(data, 4).slice(0, 3);
  ctx.clearRect(0, 0, w, h);
  ctx.fillStyle = options.bgColor;
  ctx.fillRect(0, 0, w, h);
  for (var i = 0; i < data.length; i++) {
    drawPath(ctx, data[i], {
      linear: colors[i],
      w,
      h,
      offset: h / 2,
      reverse: false
    }, data[i].length);
    drawPath(ctx, data[i], {
      linear: colors[i],
      w,
      h,
      offset: h / 2,
      reverse: true
    }, data[i].length);
  }
};
export { drawWaves as default };
