function getGradient(ctx, w, colors) {
  var gradient = ctx.createLinearGradient(0, 0, w, 0);
  var len = colors.length;
  var per = 100 / len;
  for (var i = 0; i < colors.length; i++) {
    gradient.addColorStop(per * i / 100, colors[i]);
  }
  return gradient;
}
function shrink(data, count) {
  if (!count || count < 1) {
    count = data.length * count;
  }
  var rtn = [];
  var splitAt = Math.floor(data.length / count);
  for (var i = 1; i <= count; i++) {
    var arraySection = data.slice(i * splitAt, i * splitAt + splitAt);
    var middle = arraySection[Math.floor(arraySection.length / 2)];
    rtn.push(middle);
  }
  return rtn;
}
function scale(data, max) {
  var scalePercent = max / 255;
  if (max <= 3 && max >= 0)
    scalePercent = max;
  var rtn = data.map(function(value) {
    return value * scalePercent;
  });
  return rtn;
}
function split(data, count) {
  var size = Math.floor(data.length / count);
  var rtn = [];
  var temp = [];
  var track = 0;
  for (var i = 0; i <= size * count; i++) {
    if (track === size) {
      rtn.push(temp);
      temp = [];
      track = 0;
    }
    temp.push(data[i]);
    track++;
  }
  return rtn;
}
export { getGradient, scale, shrink, split };
