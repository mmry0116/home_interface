export type IAnalyzeOptions = {
    fftSize?: number;
    mode?: 'bars' | 'vertLines' | 'lightning' | 'doubleLine' | 'doubleBars' | 'waves';
    colors?: Array<string>;
    stroke?: number;
    bgColor?: string;
    isGradient?: boolean;
};
/**
 * @typedef {{
 *  fftSize?: number,
 *  mode?: 'bars' | 'vertLines' | 'lightning' | 'doubleLine' | 'doubleBars' | 'waves',
 *  colors?: Array<string>,
 *  stroke?: number,
 *  bgColor?: string,
 *  isGradient?: boolean
 * }} IAnalyzeOptions
 */
declare class Analyze {
    static get defaultConfig(): {
        fftSize: number;
        count: number;
        mode: string;
        colors: string[];
        stroke: number;
        bgColor: string;
        isGradient: boolean;
        linear: any;
    };
    /**
     * all modes
     * @type Array<string>
     */
    static get MODES(): string[];
    static get AudioCtx(): any;
    /**
     * @constructor
     * @param { any } player
     * @param { HTMLElement } canvas
     * @param { IAnalyzeOptions } options
     * @returns
     */
    constructor(player: any, canvas: HTMLElement, options?: IAnalyzeOptions);
    canvas: HTMLElement;
    player: any;
    options: {
        fftSize: number;
        count: number;
        mode: string;
        colors: string[];
        stroke: number;
        bgColor: string;
        isGradient: boolean;
        linear: any;
    };
    _audioCtx: any;
    analyser: any;
    gainNode: any;
    source: any;
    ctx: any;
    /**
     * @type { number }
     */
    set fftSize(arg: number);
    get fftSize(): number;
    frameCount: number;
    /**
     * @private
     */
    private _initPlayerEvents;
    start: () => void;
    stop: () => void;
    reqId: number;
    destroy(): void;
    /**
     * @private
     */
    private _onDestroy;
    /**
     * @private
     */
    private _onoVolumechange;
    /**
     * @private
     */
    private _renderFrame;
    /**
     * @type { string }
     */
    set mode(arg: string);
    get mode(): string;
    dataArray: Uint8Array;
}
import { MODES } from "./render";
export { Analyze as default, MODES };
