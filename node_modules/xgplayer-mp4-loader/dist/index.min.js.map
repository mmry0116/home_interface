{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4-parser.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/error.js","../src/cache.js","../src/utils.js","../src/loader.js","../src/config.js"],"sourcesContent":["export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nexport const SafeJSON = {\n  stringify (obj) {\n    try {\n      return JSON.stringify(obj)\n    } catch (e) {\n      return ''\n    }\n  },\n  parse (obj) {\n    try {\n      return JSON.parse(obj)\n    } catch (e) {\n      return undefined\n    }\n  }\n}\n","/* eslint-disable no-undef */\nimport { Buffer } from './buffer'\nimport { isBrowser } from './env'\nimport { ERR, StreamingError } from './error'\nimport { Logger } from './logger'\nimport { createPublicPromise, nowTime, SafeJSON } from './utils'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\nfunction isMMS (mediaSource) {\n  return /ManagedMediaSource/gi.test(Object.prototype.toString.call(mediaSource))\n}\n\n/**\n * @param {TimeRanges} buffered\n */\nfunction getTimeRanges (buffered) {\n  const ranges = []\n\n  if (buffered instanceof TimeRanges) {\n    for (let i = 0; i < buffered.length; i++) {\n      ranges.push({\n        start: buffered.start(i),\n        end: buffered.end(i)\n      })\n    }\n  }\n  return ranges\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @param { boolean} preferMMS\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  static isMMSOnly () {\n    return typeof ManagedMediaSource !== 'undefined' && typeof MediaSource === 'undefined'\n  }\n\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      preferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get hasOpTasks () {\n    let flag = false\n    Object.keys(this._queue).forEach(k => {\n      const queue = this._queue[k]\n      if (Array.isArray(queue)) {\n        flag ||= queue.length > 0\n      }\n    })\n    return flag\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  get streaming () {\n    return isMMS(this.mediaSource) ? this.mediaSource.streaming : true\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('setDuration but ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('setDuration', duration)\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costTime = nowTime() - this._st\n        this._logger.debug('sourceopen', costTime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime: costTime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @private\n   */\n  _onStartStreaming = () => {\n    this._logger.debug('startstreaming')\n  }\n\n  /**\n   * @private\n   */\n  _onEndStreaming = () => {\n    this._logger.debug('endstreaming')\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.preferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    const useMMS = isMMS(ms)\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costTime = nowTime() - this._st\n      this._logger.debug('sourceopen')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime: costTime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    if (useMMS) {\n      ms.addEventListener('startstreaming', this._onStartStreaming)\n      ms.addEventListener('endstreaming', this._onEndStreaming)\n    }\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    media.disableRemotePlayback = useMMS\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n\n      if (isMMS(ms)) {\n        ms.removeEventListener('startstreaming', this._onStartStreaming)\n        ms.removeEventListener('endstreaming', this._onEndStreaming)\n      }\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initQueue = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initQueue.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initQueue.length > 0 && this._queue[type].push(...initQueue)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug(`UpdateEnd(${type}/${op.opName})`, SafeJSON.stringify(getTimeRanges(this._sourceBuffer[type]?.buffered)), costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  MEDIASOURCE_OPENED: 'core.mediasourceopened',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  CHASEFRAME: 'core.chaseframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption () {\n    return this.isAudioEncryption\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        case 38: // HEVC FD_NUT\n          if (isHevc) {\n            let ffByteFound = false\n            for (let i = 2; i < unit.byteLength; i++) {\n              if (unit[i] === 0xff) {\n                ffByteFound = true\n                break\n              }\n            }\n            if (!ffByteFound) {\n              return\n            }\n          }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { AudioCodecType, VideoCodecType } from '../model'\nimport { getAvcCodec, readBig16, readBig24, readBig32, readBig64 } from '../utils'\nimport { AAC } from '../codec'\nexport class MP4Parser {\n  static findBox (data, names, start = 0) {\n    const ret = []\n    if (!data) return ret\n\n    let size = 0\n    let type = ''\n    let headerSize = 0\n    while (data.length > 7) {\n      size = readBig32(data)\n      type = String.fromCharCode.apply(null, data.subarray(4, 8))\n      headerSize = 8\n      if (size === 1) {\n        size = readBig64(data, 8)\n        headerSize += 8\n      } else if (!size) {\n        size = data.length\n      }\n      if (!names[0] || type === names[0]) {\n        const subData = data.subarray(0, size)\n        if (names.length < 2) {\n          ret.push({\n            start,\n            size,\n            headerSize,\n            type,\n            data: subData\n          })\n        } else {\n          return MP4Parser.findBox(subData.subarray(headerSize), names.slice(1), start + headerSize)\n        }\n      }\n\n      start += size\n      data = data.subarray(size)\n    }\n\n    return ret\n  }\n\n  static tfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.trackId = readBig32(data)\n      let start = 4\n      const baseDataOffsetPresent = (ret.flags & 0xff) & 0x01\n      const sampleDescriptionIndexPresent = (ret.flags & 0xff) & 0x02\n      const defaultSampleDurationPresent = (ret.flags & 0xff) & 0x08\n      const defaultSampleSizePresent = (ret.flags & 0xff) & 0x10\n      const defaultSampleFlagsPresent = (ret.flags & 0xff) & 0x20\n\n      if (baseDataOffsetPresent) {\n        start += 4 // truncate top 4 bytes\n        ret.baseDataOffset = readBig32(data, start)\n        start += 4\n      }\n      if (sampleDescriptionIndexPresent) {\n        ret.sampleDescriptionIndex = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleDurationPresent) {\n        ret.defaultSampleDuration = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleSizePresent) {\n        ret.defaultSampleSize = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleFlagsPresent) {\n        ret.defaultSampleFlags = readBig32(data, start)\n      }\n    })\n  }\n\n  static sidx (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      ret.reference_ID = readBig32(data, start)// stream.readUint32();\n      start += 4\n      ret.timescale = readBig32(data, start)\n      start += 4\n      if (ret.version === 0) {\n        ret.earliest_presentation_time = readBig32(data, start)\n        start += 4\n        ret.first_offset = readBig32(data, start)\n        start += 4\n      } else {\n        ret.earliest_presentation_time = readBig64(data, start)\n        start += 8\n        ret.first_offset = readBig64(data, start)\n        start += 8\n      }\n      start += 2\n      ret.references = []\n      const count = readBig16(data, start)\n      start += 2\n      for (let i = 0; i < count; i++) {\n        const ref = {}\n        ret.references.push(ref)\n        let tmp32 = readBig32(data, start)\n        start += 4\n        ref.reference_type = (tmp32 >> 31) & 0x1\n        ref.referenced_size = tmp32 & 0x7FFFFFFF\n        ref.subsegment_duration = readBig32(data, start)\n        start += 4\n        tmp32 = readBig32(data, start)\n        start += 4\n        ref.starts_with_SAP = (tmp32 >> 31) & 0x1\n        ref.SAP_type = (tmp32 >> 28) & 0x7\n        ref.SAP_delta_time = tmp32 & 0xFFFFFFF\n      }\n    })\n  }\n\n  static moov (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mvhd = MP4Parser.mvhd(MP4Parser.findBox(data, ['mvhd'], start)[0])\n      ret.trak = MP4Parser.findBox(data, ['trak'], start).map(trak => MP4Parser.trak(trak))\n      ret.pssh = MP4Parser.pssh(MP4Parser.findBox(data, ['pssh'], start)[0])\n    })\n  }\n\n  static mvhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      ret.nextTrackId = readBig32(data, start + 76)\n    })\n  }\n\n  static trak (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tkhd = MP4Parser.tkhd(MP4Parser.findBox(data, ['tkhd'], start)[0])\n      ret.mdia = MP4Parser.mdia(MP4Parser.findBox(data, ['mdia'], start)[0])\n    })\n  }\n\n  static tkhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.trackId = readBig32(data, 16)\n        ret.duration = readBig64(data, 24)\n        start += 32\n      } else {\n        ret.trackId = readBig32(data, 8)\n        ret.duration = readBig32(data, 16)\n        start += 20\n      }\n      ret.width = readBig32(data, start + 52)\n      ret.height = readBig32(data, start + 56)\n    })\n  }\n\n  static mdia (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mdhd = MP4Parser.mdhd(MP4Parser.findBox(data, ['mdhd'], start)[0])\n      ret.hdlr = MP4Parser.hdlr(MP4Parser.findBox(data, ['hdlr'], start)[0])\n      ret.minf = MP4Parser.minf(MP4Parser.findBox(data, ['minf'], start)[0])\n    })\n  }\n\n  static mdhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      const lang = readBig16(data, start)\n      ret.language = String.fromCharCode(((lang >> 10) & 0x1F) + 0x60, ((lang >> 5) & 0x1F) + 0x60, (lang & 0x1F) + 0x60)\n    })\n  }\n\n  static hdlr (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 0) {\n        ret.handlerType = String.fromCharCode.apply(null, data.subarray(4, 8))\n      }\n    })\n  }\n\n  static minf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.vmhd = MP4Parser.vmhd(MP4Parser.findBox(data, ['vmhd'], start)[0])\n      ret.smhd = MP4Parser.smhd(MP4Parser.findBox(data, ['smhd'], start)[0])\n      ret.stbl = MP4Parser.stbl(MP4Parser.findBox(data, ['stbl'], start)[0])\n    })\n  }\n\n  static vmhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.graphicsmode = readBig16(data)\n      ret.opcolor = [readBig16(data, 2), readBig16(data, 4), readBig16(data, 6)]\n    })\n  }\n\n  static smhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.balance = readBig16(data)\n    })\n  }\n\n  static stbl (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.stsd = MP4Parser.stsd(MP4Parser.findBox(data, ['stsd'], start)[0])\n      ret.stts = MP4Parser.stts(MP4Parser.findBox(data, ['stts'], start)[0])\n      ret.ctts = MP4Parser.ctts(MP4Parser.findBox(data, ['ctts'], start)[0])\n      ret.stsc = MP4Parser.stsc(MP4Parser.findBox(data, ['stsc'], start)[0])\n      ret.stsz = MP4Parser.stsz(MP4Parser.findBox(data, ['stsz'], start)[0])\n      ret.stco = MP4Parser.stco(MP4Parser.findBox(data, ['stco'], start)[0])\n      if (!ret.stco) {\n        ret.co64 = MP4Parser.co64(MP4Parser.findBox(data, ['co64'], start)[0])\n        ret.stco = ret.co64\n      }\n      const default_IV_size = ret.stsd.entries[0]?.sinf?.schi?.tenc.default_IV_size\n      ret.stss = MP4Parser.stss(MP4Parser.findBox(data, ['stss'], start)[0])\n      ret.senc = MP4Parser.senc(MP4Parser.findBox(data, ['senc'], start)[0], default_IV_size)\n    })\n  }\n\n  static senc (box, iv = 8) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      const sampleCount = readBig32(data, start)\n      start += 4\n      ret.samples = []\n      for (let i = 0; i < sampleCount; i++) {\n        const sample = {}\n        sample.InitializationVector = []\n        for (let j = 0; j < iv; j++){\n          sample.InitializationVector[j] = data[start + j]\n        }\n        start += iv\n        if (ret.flags & 0x2) {\n          sample.subsamples = []\n          const subsampleCount = readBig16(data, start)\n          start += 2\n          for (let j = 0; j < subsampleCount; j++) {\n            const subsample = {}\n            subsample.BytesOfClearData = readBig16(data, start)\n            start += 2\n            subsample.BytesOfProtectedData = readBig32(data, start)\n            start += 4\n            sample.subsamples.push(subsample)\n          }\n        }\n        ret.samples.push(sample)\n      }\n    })\n  }\n\n  static pssh (box) {\n    return parseBox(box, true, (ret, data) => {\n      const keyIds = []\n      const systemId = []\n      let start = 0\n      for (let i = 0; i < 16; i++) {\n        systemId.push(toHex(data[start + i]))\n      }\n      start += 16\n      if (ret.version > 0) {\n        const numKeyIds = readBig32(data, start)\n        start += 4\n        for (let i = 0; i < ('' + numKeyIds).length; i++) {\n          for (let j = 0; j < 16; j++) {\n            const keyId = data[start]\n            start += 1\n            keyIds.push(toHex(keyId))\n          }\n        }\n      }\n      const dataSize = readBig32(data, start)\n      ret.data_size = dataSize\n      start += 4\n      ret.kid = keyIds\n      ret.system_id = systemId\n      ret.buffer = data\n    })\n  }\n\n  static stsd (box) {\n    return parseBox(box, true, (ret, data, start) => {\n      ret.entryCount = readBig32(data)\n      ret.entries = MP4Parser.findBox(data.subarray(4), [], start + 4).map(b => {\n        switch (b.type) {\n          case 'avc1':\n          case 'avc2':\n          case 'avc3':\n          case 'avc4':\n            return MP4Parser.avc1(b)\n          case 'hvc1':\n          case 'hev1':\n            return MP4Parser.hvc1(b)\n          case 'mp4a':\n            return MP4Parser.mp4a(b)\n          case 'alaw':\n          case 'ulaw':\n            return MP4Parser.alaw(b)\n          case 'enca':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.channelCount = readBig16(data, 16)\n              ret.samplesize = readBig16(data, 18)\n              ret.sampleRate = (readBig32(data, 24) / (1 << 16))\n              data = data.subarray(28)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.esds = MP4Parser.esds(MP4Parser.findBox(data, ['esds'], start)[0])\n            })\n          case 'encv':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.width = readBig16(data, 24)\n              ret.height = readBig16(data, 26)\n              ret.horizresolution = readBig32(data, 28)\n              ret.vertresolution = readBig32(data, 32)\n              data = data.subarray(78)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.avcC = MP4Parser.avcC(MP4Parser.findBox(data, ['avcC'], start)[0])\n              ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(data, ['hvcC'], start)[0])\n              ret.pasp = MP4Parser.pasp(MP4Parser.findBox(data, ['pasp'], start)[0])\n            })\n          default:\n        }\n      }).filter(Boolean)\n    })\n  }\n\n  static tenc (box) {\n    return parseBox(box, false, (ret, data) => {\n      let start = 6\n      ret.default_IsEncrypted = data[start]\n      start += 1\n      ret.default_IV_size = data[start]\n      start += 1\n      ret.default_KID = []\n      for (let i = 0; i < 16; i++) {\n        ret.default_KID.push(toHex(data[start]))\n        start += 1\n      }\n    })\n  }\n\n  static schi (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tenc = MP4Parser.tenc(MP4Parser.findBox(data, ['tenc'], start)[0])\n    })\n  }\n\n  static sinf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.schi = MP4Parser.schi(MP4Parser.findBox(data, ['schi'], start)[0])\n      ret.frma = MP4Parser.frma(MP4Parser.findBox(data, ['frma'], start)[0])\n    })\n  }\n\n  static frma (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data_format = ''\n      for (let i = 0; i < 4; i++) {\n        ret.data_format += String.fromCharCode(data[i])\n      }\n    })\n  }\n\n  static avc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.avcC = MP4Parser.avcC(MP4Parser.findBox(bodyData, ['avcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static avcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data;\n      ret.configurationVersion = data[0]\n      ret.AVCProfileIndication = data[1]\n      ret.profileCompatibility = data[2]\n      ret.AVCLevelIndication = data[3]\n      ret.codec = getAvcCodec([data[1], data[2], data[3]])\n      ret.lengthSizeMinusOne = data[4] & 0x3\n      ret.spsLength = data[5] & 0x1F\n      ret.sps = []\n      let start = 6\n      for (let i = 0; i < ret.spsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.sps.push(data.subarray(start, start + size))\n        // ret.spsInfo = SpsParser.parseSPS(ret.sps[i])\n        // ret.pixelRatio = ret.spsInfo.par_ratio\n        start += size\n      }\n      ret.ppsLength = data[start]\n      start += 1\n      ret.pps = []\n      for (let i = 0; i < ret.ppsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.pps.push(data.subarray(start, start += size))\n        start += size\n      }\n    })\n  }\n\n  static hvc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(bodyData, ['hvcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static hvcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.codec = 'hev1.1.6.L93.B0'\n      ret.configurationVersion = data[0]\n      const tmp = data[1]\n      ret.generalProfileSpace = tmp >> 6\n      ret.generalTierFlag = (tmp & 0x20) >> 5\n      ret.generalProfileIdc = tmp & 0x1F\n      ret.generalProfileCompatibility = readBig32(data, 2)\n      ret.generalConstraintIndicatorFlags = data.subarray(6, 12)\n      ret.generalLevelIdc = data[12]\n      ret.avgFrameRate = readBig16(data, 19)\n      ret.numOfArrays = data[22]\n      ret.vps = []\n      ret.sps = []\n      ret.pps = []\n      let start = 23\n      let type = 0\n      let numNalus = 0\n      let size = 0\n      for (let i = 0; i < ret.numOfArrays; i++) {\n        type = data[start] & 0x3F\n        numNalus = readBig16(data, start + 1)\n        start += 3\n        const nalus = []\n        for (let j = 0; j < numNalus; j++) {\n          size = readBig16(data, start)\n          start += 2\n          nalus.push(data.subarray(start, start + size))\n          start += size\n        }\n\n        if (type === 32) {\n          ret.vps.push(...nalus)\n        } else if (type === 33) {\n          ret.sps.push(...nalus)\n        } else if (type === 34) {\n          ret.pps.push(...nalus)\n        }\n      }\n    })\n  }\n\n  static pasp (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.hSpacing = readBig32(data)\n      ret.vSpacing = readBig32(data, 4)\n    })\n  }\n\n  static mp4a (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseAudioSampleEntry(ret, data)\n      ret.esds = MP4Parser.esds(MP4Parser.findBox(data.subarray(bodyStart), ['esds'], start + bodyStart)[0])\n    })\n  }\n\n  static esds (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.codec = 'mp4a.'\n      let start = 0\n      let byteRead = 0\n      let size = 0\n      let tag = 0\n      while (data.length) {\n        start = 0\n        tag = data[start]\n        byteRead = data[start + 1]\n        start += 2\n        while (byteRead & 0x80) {\n          size = (byteRead & 0x7F) << 7\n          byteRead = data[start]\n          start += 1\n        }\n        size += byteRead & 0x7F\n        if (tag === 3) {\n          data = data.subarray(start + 3)\n        } else if (tag === 4) {\n          ret.codec += (data[start].toString(16) + '.').padStart(3, '0')\n          data = data.subarray(start + 13)\n        } else if (tag === 5) {\n          const config = ret.config = data.subarray(start, start + size)\n          let objectType = (config[0] & 0xF8) >> 3\n          if (objectType === 31 && config.length >= 2) {\n            objectType = 32 + ((config[0] & 0x7) << 3) + ((config[1] & 0xE0) >> 5)\n          }\n          ret.objectType = objectType\n          ret.codec += objectType.toString(16)\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        } else {\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        }\n      }\n    })\n  }\n\n  static alaw (box) {\n    return parseBox(box, false, (ret, data) => {\n      parseAudioSampleEntry(ret, data)\n    })\n  }\n\n  static stts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          count: readBig32(data, start),\n          delta: readBig32(data, start + 4)\n        })\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static ctts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      if (ret.version === 1) {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: readBig32(data, start + 4)\n          })\n          start += 8\n        }\n      } else {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: -(~readBig32(data, start + 4) + 1)\n          })\n          start += 8\n        }\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsc (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          firstChunk: readBig32(data, start),\n          samplesPerChunk: readBig32(data, start + 4),\n          sampleDescriptionIndex: readBig32(data, start + 8)\n        })\n        start += 12\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsz (box) {\n    return parseBox(box, true, (ret, data) => {\n      const sampleSize = readBig32(data)\n      const sampleCount = readBig32(data, 4)\n      const entrySizes = []\n      if (!sampleSize) {\n        let start = 8\n        for (let i = 0; i < sampleCount; i++) {\n          entrySizes.push(readBig32(data, start))\n          start += 4\n        }\n      }\n      ret.sampleSize = sampleSize\n      ret.sampleCount = sampleCount\n      ret.entrySizes = entrySizes\n    })\n  }\n\n  static stco (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static co64 (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig64(data, start))\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stss (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static moof (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mfhd = MP4Parser.mfhd(MP4Parser.findBox(data, ['mfhd'], start)[0])\n      ret.traf = MP4Parser.findBox(data, ['traf'], start).map(t => MP4Parser.traf(t))\n    })\n  }\n\n  static mfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.sequenceNumber = readBig32(data)\n    })\n  }\n\n  static traf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tfhd = MP4Parser.tfhd(MP4Parser.findBox(data, ['tfhd'], start)[0])\n      ret.tfdt = MP4Parser.tfdt(MP4Parser.findBox(data, ['tfdt'], start)[0])\n      ret.trun = MP4Parser.trun(MP4Parser.findBox(data, ['trun'], start)[0])\n    })\n  }\n\n  static trun (box) {\n    return parseBox(box, true, (ret, data) => {\n      const { version, flags } = ret\n      const dataLen = data.length\n      const sampleCount = ret.sampleCount = readBig32(data)\n      let offset = 4\n      if (dataLen > offset && flags & 1) {\n        ret.dataOffset = -(~readBig32(data, offset) + 1)\n        offset += 4\n      }\n      if (dataLen > offset && flags & 4) {\n        ret.firstSampleFlags = readBig32(data, offset)\n        offset += 4\n      }\n      ret.samples = []\n      if (dataLen > offset) {\n        let sample\n        for (let i = 0; i < sampleCount; i++) {\n          sample = {}\n          if (flags & 0x100) {\n            sample.duration = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x200) {\n            sample.size = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x400) {\n            sample.flags = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x800) {\n            if (version) {\n              sample.cts = -(~readBig32(data, offset + 4) + 1)\n            } else {\n              sample.cts = readBig32(data, offset)\n            }\n            offset += 4\n          }\n          ret.samples.push(sample)\n        }\n      }\n    })\n  }\n\n  static tfdt (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 1) {\n        ret.baseMediaDecodeTime = readBig64(data)\n      } else {\n        ret.baseMediaDecodeTime = readBig32(data)\n      }\n    })\n  }\n\n  static probe (data) {\n    return !!MP4Parser.findBox(data, ['ftyp'])\n  }\n\n  static parseSampleFlags (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    }\n  }\n\n  static moovToTrack (moov, videoTrack, audioTrack) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (vTrack && videoTrack) {\n      const v = videoTrack\n      const _vTrackId = vTrack.tkhd?.trackId\n      if (_vTrackId !== null && _vTrackId !== undefined) v.id = vTrack.tkhd.trackId\n      v.tkhdDuration = vTrack.tkhd.duration\n      v.mvhdDurtion = moov.mvhd.duration\n      v.mvhdTimecale = moov.mvhd.timescale\n      v.timescale = v.formatTimescale = vTrack.mdia.mdhd.timescale\n      v.duration = vTrack.mdia.mdhd.duration || (v.mvhdDurtion / v.mvhdTimecale * v.timescale)\n      const e1 = vTrack.mdia.minf.stbl.stsd.entries[0]\n      v.width = e1.width\n      v.height = e1.height\n      if (e1.pasp) {\n        v.sarRatio = [e1.pasp.hSpacing, e1.pasp.vSpacing]\n      }\n      if (e1.hvcC) {\n        v.codecType = VideoCodecType.HEVC\n        v.codec = e1.hvcC.codec\n        v.vps = e1.hvcC.vps\n        v.sps = e1.hvcC.sps\n        v.pps = e1.hvcC.pps\n        v.hvcC = e1.hvcC.data\n      } else if (e1.avcC) {\n        v.codec = e1.avcC.codec\n        v.sps = e1.avcC.sps\n        v.pps = e1.avcC.pps\n      } else {\n        throw new Error('unknown video stsd entry')\n      }\n      v.present = true\n      v.ext = {}\n      v.ext.stss = vTrack.mdia?.minf?.stbl?.stss\n      v.ext.ctts = vTrack.mdia?.minf?.stbl?.ctts\n\n      if (e1 && e1.type === 'encv') {\n        v.isVideoEncryption = true\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        v.videoSenc = vTrack.mdia.minf.stbl.senc && vTrack.mdia.minf.stbl.senc.samples\n        e1.data_format = e1.sinf?.frma?.data_format\n        v.useEME = moov.useEME\n        v.kidValue = moov.kidValue\n        v.pssh = moov.pssh\n        v.encv = e1\n      }\n    }\n\n    if (aTrack && audioTrack) {\n      const a = audioTrack\n      const _aTrackId = aTrack.tkhd?.trackId\n      if (_aTrackId !== null && _aTrackId !== undefined) a.id = aTrack.tkhd.trackId\n      a.tkhdDuration = aTrack.tkhd.duration\n      a.mvhdDurtion = moov.mvhd.duration\n      a.mvhdTimecale = moov.mvhd.timescale\n      a.timescale = a.formatTimescale = aTrack.mdia.mdhd.timescale\n      a.duration = aTrack.mdia.mdhd.duration || (a.mvhdDurtion / a.mvhdTimecale * a.timescale)\n      const e1 = aTrack.mdia.minf.stbl.stsd.entries[0]\n      a.sampleSize = e1.sampleSize\n      a.sampleRate = e1.sampleRate\n      a.channelCount = e1.channelCount\n      a.present = true\n\n      switch (e1.type) {\n        case 'alaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMA\n          a.sampleRate = 8000\n          break\n        case 'ulaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMU\n          a.sampleRate = 8000\n          break\n        default:\n          a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n          a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n          a.objectType = e1.esds?.objectType || 2\n          if (e1.esds) a.config = Array.from(e1.esds.config)\n          a.codec = e1.esds?.codec || 'mp4a.40.2'\n          break\n      }\n      a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n      a.objectType = e1.esds?.objectType || 2\n      if (e1.esds) {\n        if (e1.esds.config) {\n          a.config = Array.from(e1.esds.config)\n        } else {\n          console.warn('esds config is null')\n        }\n      }\n      a.codec = e1.esds?.codec || 'mp4a.40.2'\n      a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n      a.ext = {}\n      a.ext.stss = aTrack.mdia?.minf?.stbl?.stss\n      a.ext.ctts = aTrack.mdia?.minf?.stbl?.ctts\n      a.present = true\n      if (e1 && e1.type === 'enca') {\n        a.isAudioEncryption = true\n        e1.data_format = e1.sinf?.frma?.data_format\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        a.audioSenc = aTrack.mdia.minf.stbl.senc && aTrack.mdia.minf.stbl.senc.samples\n        a.useEME = moov.useEME\n        a.kidValue = moov.kidValue\n        a.enca = e1\n      }\n    }\n\n    audioTrack && (audioTrack.isVideoEncryption = videoTrack ? videoTrack.isVideoEncryption : false)\n    videoTrack && (videoTrack.isAudioEncryption = audioTrack ? audioTrack.isAudioEncryption : false)\n\n    if (videoTrack?.encv || audioTrack?.enca) {\n      const vkid = videoTrack?.encv?.default_KID\n      const akid = audioTrack?.enca?.default_KID\n      const kid = (vkid || akid) ? (vkid || akid).join('') : null\n      videoTrack && (videoTrack.kid = kid)\n      audioTrack && (audioTrack.kid = kid)\n    }\n\n    videoTrack && (videoTrack.flags = 0xf01)\n    audioTrack && (audioTrack.flags = 0x701)\n\n    return {\n      videoTrack,\n      audioTrack\n    }\n  }\n\n  static evaluateDefaultDuration (videoTrack, audioTrack, videoSampleCount) {\n    const audioSampleCount = audioTrack?.samples?.length\n\n    // audio\n    if (!audioSampleCount) return 1024\n\n    const segmentDuration = 1024 * audioSampleCount / audioTrack.timescale\n\n    return segmentDuration * videoTrack.timescale / videoSampleCount\n  }\n\n  static moofToSamples (moof, videoTrack, audioTrack) {\n    const ret = {}\n\n    if (moof.mfhd) {\n      if (videoTrack) videoTrack.sequenceNumber = moof.mfhd.sequenceNumber\n      if (audioTrack) audioTrack.sequenceNumber = moof.mfhd.sequenceNumber\n    }\n\n    moof.traf.forEach(({ tfhd, tfdt, trun }) => {\n      if (!tfhd || !trun) return\n      if (tfdt) {\n        if (videoTrack && videoTrack.id === tfhd.trackId) videoTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n        if (audioTrack && audioTrack.id === tfhd.trackId) audioTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n      }\n      const defaultSize = tfhd.defaultSampleSize || 0\n      const defaultDuration = tfhd.defaultSampleDuration || MP4Parser.evaluateDefaultDuration(videoTrack, audioTrack, trun.samples.length || trun.sampleCount)\n      let offset = trun.dataOffset || 0\n      let dts = 0\n      let gopId = -1\n      if (!trun.samples.length && trun.sampleCount) {\n        ret[tfhd.trackId] = []\n        for (let i = 0; i < trun.sampleCount; i++) {\n          ret[tfhd.trackId].push({\n            offset,\n            dts,\n            duration: defaultDuration,\n            size: defaultSize\n          })\n          dts += defaultDuration\n          offset += defaultSize\n        }\n      } else {\n        ret[tfhd.trackId] = trun.samples.map((s, index) => {\n          s = {\n            offset,\n            dts,\n            pts: dts + (s.cts || 0),\n            duration: s.duration || defaultDuration,\n            size: s.size || defaultSize,\n            gopId,\n            keyframe: index === 0 || ((s.flags !== null && s.flags !== undefined) && ((s.flags & 65536) >>> 0) !== 65536)\n          }\n          if (s.keyframe) {\n            gopId++\n            s.gopId = gopId\n          }\n          dts += s.duration\n          offset += s.size\n          return s\n        })\n      }\n    })\n\n    return ret\n  }\n\n  static moovToSamples (moov) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (!vTrack && !aTrack) return\n    let videoSamples\n    let audioSamples\n    if (vTrack) {\n      const videoStbl = vTrack.mdia?.minf?.stbl\n      if (!videoStbl) return\n      const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n      if (!stts || !stsc || !stsz || !stco || !stss) return\n      videoSamples = getSamples(stts, stsc, stsz, stco, ctts, stss)\n    }\n    if (aTrack) {\n      const audioStbl = aTrack.mdia?.minf?.stbl\n      if (!audioStbl) return\n      const timescale = aTrack.mdia.mdhd?.timescale\n      const { stts, stsc, stsz, stco } = audioStbl\n      if (!timescale || !stts || !stsc || !stsz || !stco) return\n      audioSamples = getSamples(stts, stsc, stsz, stco)\n    }\n\n    return {\n      videoSamples,\n      audioSamples\n    }\n  }\n}\n\nfunction getSamples (stts, stsc, stsz, stco, ctts, stss) {\n  const samples = []\n  const cttsEntries = ctts?.entries\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n\n  let sample\n  let gopId = -1\n  let dts = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  stts.entries.forEach(({ count, delta }) => {\n    for (let i = 0; i < count; i++) {\n      sample = {\n        dts,\n        duration: delta,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        sample.keyframe = keyframeMap[pos]\n        if (sample.keyframe) {\n          gopId++\n        }\n        sample.gopId = gopId\n      }\n      // sample.timeOffset = 0\n      if (cttsArr && pos < cttsArr.length) {\n        sample.pts = sample.dts + cttsArr[pos]\n        // sample.timeOffset = cttsArr[pos]\n        // if (pos === 0) {\n        //   sample.pts = sample.dts\n        //   sample.timeOffset = 0\n        // }\n      }\n      samples.push(sample)\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += sample.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  return samples\n}\n\nfunction parseVisualSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.width = readBig16(data, 24)\n  ret.height = readBig16(data, 26)\n  ret.horizresolution = readBig32(data, 28)\n  ret.vertresolution = readBig32(data, 32)\n  ret.frameCount = readBig16(data, 40)\n  ret.depth = readBig16(data, 74)\n  return 78\n}\n\nfunction parseAudioSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.channelCount = readBig16(data, 16)\n  ret.sampleSize = readBig16(data, 18)\n  ret.sampleRate = readBig32(data, 24) / (1 << 16)\n  return 28\n}\n\nfunction parseBox (box, isFullBox, parse) {\n  if (!box) return\n  if (box.size !== box.data.length) throw new Error(`box ${box.type} size !== data.length`)\n  const ret = {\n    start: box.start,\n    size: box.size,\n    headerSize: box.headerSize,\n    type: box.type\n  }\n  if (isFullBox) {\n    ret.version = box.data[box.headerSize]\n    ret.flags = readBig24(box.data, box.headerSize + 1)\n    ret.headerSize += 4\n  }\n  parse(ret, box.data.subarray(ret.headerSize), ret.start + ret.headerSize)\n  return ret\n}\n\nconst padStart = function (str, length, pad) {\n  const charstr = String(pad)\n  const len = length >> 0\n  let maxlen = Math.ceil(len / charstr.length)\n  const chars = []\n  const r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\nconst toHex = function (...value) {\n  const hex = []\n  value.forEach(item => {\n    hex.push(padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex[0]\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","export class MediaError {\n  constructor (msg, data) {\n    this.type = 'file'\n    this.message = msg\n    this.data = data\n  }\n}\n","export class Cache {\n  _data = Object.create(null)\n\n  set (id, data) {\n    this._data[id] = data\n  }\n\n  get (id) {\n    return this._data[id]\n  }\n\n  clear () {\n    this._data = Object.create(null)\n  }\n}\n","\nexport function moovToSegments (moov, duration) {\n  const tracks = moov.trak\n  if (!tracks || !tracks.length) return\n  const videoTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n  const audioTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n  if (!videoTrack && !audioTrack) return\n\n  let videoSegments = []\n  let audioSegments = []\n\n  let segmentDurations\n  if (videoTrack) {\n    const videoStbl = videoTrack.mdia?.minf?.stbl\n    if (!videoStbl) return\n    const timescale = videoTrack.mdia.mdhd?.timescale\n    const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n    if (!timescale || !stts || !stsc || !stsz || !stco || !stss) return\n    videoSegments = getSegments(duration, timescale, stts, stsc, stsz, stco, stss, ctts)\n    segmentDurations = videoSegments.map(x => x.duration)\n  }\n  if (audioTrack) {\n    const audioStbl = audioTrack.mdia?.minf?.stbl\n    if (!audioStbl) return\n    const timescale = audioTrack.mdia.mdhd?.timescale\n    const { stts, stsc, stsz, stco } = audioStbl\n    if (!timescale || !stts || !stsc || !stsz || !stco) return\n    audioSegments = getSegments(duration, timescale, stts, stsc, stsz, stco, null, null, segmentDurations)\n  }\n\n  return {\n    videoSegments,\n    audioSegments\n  }\n}\n\nfunction getSegments (segDuration, timescale, stts, stsc, stsz, stco, stss, ctts, segmentDurations) {\n  const frames = []\n  const gop = []\n  const gopDuration = []\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  const cttsEntries = ctts?.entries\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n\n  let frame\n  let duration\n  let startTime = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  let dts = 0\n  let gopId = -1\n  stts.entries.forEach(({ count, delta }) => {\n    duration = delta //   / timescale\n    for (let i = 0; i < count; i++) {\n      frame = {\n        dts,\n        startTime,\n        duration,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        frame.keyframe = keyframeMap[pos]\n        if (frame.keyframe) {\n          gopId++\n          gop.push([frame])\n          gopDuration.push(frame.duration)\n        } else {\n          gop[gop.length - 1].push(frame)\n          gopDuration[gop.length - 1] += frame.duration\n        }\n        frame.gopId = gopId\n      }\n      if (cttsArr && pos < cttsArr.length) {\n        frame.pts = dts + cttsArr[pos]\n      }\n      if (pos === 0) {\n        frame.pts = 0\n      }\n      frames.push(frame)\n      startTime += duration\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += frame.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  const l = frames.length\n  if (!l || (stss && !frames[0].keyframe)) return\n\n  const segments = []\n  let segFrames = []\n  let time = 0\n  let lastFrame\n  let adjust = 0\n  const pushSegment = (duration) => {\n    lastFrame = segFrames[segFrames.length - 1]\n    segments.push({\n      index: segments.length,\n      startTime: (segments[segments.length - 1]?.endTime || segFrames[0].startTime / timescale),\n      endTime: (lastFrame.startTime + lastFrame.duration) / timescale,\n      duration: duration,\n      range: [segFrames[0].offset, lastFrame.offset + lastFrame.size],\n      frames: segFrames\n    })\n    time = 0\n    segFrames = []\n  }\n\n  if (stss) {\n    const duration = segDuration * timescale\n    for (let i = 0, l = gop.length; i < l; i++) {\n      time += gopDuration[i]\n      segFrames.push(...gop[i])\n      if (i + 1 < l) {\n        if (i === 0 || time > duration) {\n          pushSegment(time / timescale)\n        }\n      } else {\n        pushSegment(time / timescale)\n      }\n    }\n  } else {\n    segmentDurations = segmentDurations || []\n    let duration = segmentDurations[0] || segDuration\n    for (let i = 0; i < l; i++) {\n      segFrames.push(frames[i])\n      time += frames[i].duration\n      const curTime = time / timescale\n      if (i + 1 >= l || curTime + adjust >= duration) {\n        adjust += curTime - duration\n        pushSegment(curTime)\n        duration = segmentDurations[segments.length] || segDuration\n      }\n    }\n  }\n\n  return segments\n}\n\nexport function moovToMeta (moov) {\n  let videoCodec = ''\n  let audioCodec = ''\n  let width = 0\n  let height = 0\n  let audioChannelCount = 0\n  let audioSampleRate = 0\n  let duration = 0\n  let videoTimescale = 0\n  let audioTimescale = 0\n  if (moov.mvhd) {\n    duration = moov.mvhd.duration / moov.mvhd.timescale\n  }\n\n  const tracks = moov.trak\n\n  if (tracks) {\n    const videoTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const audioTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    let e1 = null\n    let defaultKID\n    if (videoTrack) {\n      e1 = videoTrack.mdia?.minf?.stbl?.stsd.entries[0]\n      if (e1) {\n        width = e1.width\n        height = e1.height\n        videoTimescale = videoTrack.mdia?.mdhd?.timescale\n        videoCodec = (e1.avcC || e1.hvcC)?.codec\n        if (e1.type === 'encv') {\n          defaultKID = e1.sinf?.schi?.tenc.default_KID\n        }\n      }\n    }\n    if (audioTrack) {\n      e1 = audioTrack.mdia?.minf?.stbl?.stsd.entries[0]\n      if (e1) {\n        audioChannelCount = e1.channelCount\n        audioSampleRate = e1.sampleRate\n        audioCodec = e1.esds?.codec\n        audioTimescale = audioTrack.mdia?.mdhd?.timescale\n        if (e1.type === 'enca') {\n          defaultKID = defaultKID || e1.sinf?.schi?.tenc.default_KID\n        }\n      }\n    }\n    return {\n      kid: defaultKID ? defaultKID.join('') : null,\n      videoCodec,\n      audioCodec,\n      width,\n      height,\n      videoTimescale,\n      audioChannelCount,\n      audioSampleRate,\n      duration,\n      audioTimescale,\n      moov\n    }\n  }\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { NetLoader, concatUint8Array, Logger, EVENT } from 'xgplayer-streaming-shared'\nimport { MP4Parser } from 'xgplayer-transmuxer'\nimport { getConfig } from './config'\nimport { MediaError } from './error'\nimport { Cache } from './cache'\nimport { isNumber, moovToMeta, moovToSegments } from './utils'\nimport EventEmitter from 'eventemitter3'\n\nexport class MP4Loader extends EventEmitter {\n  vid = ''\n  url = ''\n  meta = {}\n  downloadInfo = []\n  videoSegments = []\n  audioSegments = []\n  cache = null\n  _currentSegmentIndex = -1\n  _currentLoadingSegmentIndex = -1\n  buffer\n  _error\n\n  constructor (config) {\n    super()\n    this._config = getConfig(config)\n    const {\n      vid,\n      cache,\n      ...rest\n    } = this._config\n    this.cache = cache || new Cache()\n    this.vid = vid || rest.url\n    this.url = rest.url\n    rest.transformError = this._transformError\n    this.logger = new Logger('MP4Loader_' + this.vid)\n    !!config.openLog && Logger.enable()\n    rest.logger = this.logger\n\n    this._loader = new NetLoader(rest)\n    this._loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n  }\n\n  get isMetaLoaded () {\n    return this.videoSegments.length || this.audioSegments.length\n  }\n\n  setCurrentSegment (segIndex) {\n    if (isNumber(segIndex)) {\n      this._currentSegmentIndex = segIndex\n    }\n  }\n\n  isLastSegment (segIndex) {\n    if (isNumber(segIndex)) {\n      const lastIndex = this.videoSegments[this.videoSegments.length - 1]?.index || this.audioSegments[this.audioSegments.length - 1]?.index || 0\n      return segIndex >= lastIndex\n    }\n\n    return false\n  }\n\n  isSegmentLoading (segIndex) {\n    return segIndex === this._currentLoadingSegmentIndex\n  }\n\n  async changeUrl (url, vid = url, moovEnd, notCancelLoader) {\n    await this.reset(notCancelLoader)\n    if (url) this.url = url\n    if (vid) this.vid = vid\n    if (moovEnd) this._config.moovEnd = moovEnd\n  }\n\n  async getOrLoadMeta (cache) {\n    if (!this.isMetaLoaded) await this.loadMeta(cache)\n    return this.meta\n  }\n\n  async loadMetaProcess (cache, [moovStart, moovEnd], onProgress, config) {\n    this._error = false\n    this.logger.debug('[loadMetaProcess start], range,', [moovStart, moovEnd])\n    const OnProgressHandle = async (data, state, options) => {\n      if (this.meta && options?.range && options.range.length > 0 && options.range[1] >= moovEnd) {\n        state = true\n        this.logger.debug('[loadMetaProcess],data done,setstate true,[', moovStart, moovEnd, ']')\n      }\n      if (state && options?.range && options.range.length > 0 && options.range[1] < moovEnd) {\n        state = false // 为了修复state为true但数据还么全部返回的问题\n        this.logger.debug('[loadMetaProcess],data not done,setstate false,[', moovStart, moovEnd, ']')\n      }\n      this.logger.debug('[loadMetaProcess],task,[', moovStart, moovEnd, '], range,', options.range, ',dataLen,', (data ? data.byteLength : undefined), ', state,', state, ',err,',this._error)\n      !this._error && data && data.byteLength > 0 && onProgress(data, state, options)\n      if (this.meta.moov || this._error) return\n      if (data && data.byteLength > 0) {\n        this.buffer = concatUint8Array(this.buffer, data)\n        let moov = MP4Parser.findBox(this.buffer, ['moov'])[0]\n        if (!moov) {\n          const mdat = MP4Parser.findBox(this.buffer, ['mdat'])[0]\n          if (state) {\n            if (!mdat) {\n              this._error = true\n              onProgress(null, state, options, {err:'cannot find moov or mdat box'})\n              return\n              // throw new MediaError('cannot find moov or mdat box')\n            } else {\n              const moovStart = mdat.start + mdat.size\n              const res = await this.loadData([moovStart, ''], cache, config)\n              if (res) {\n                moov = MP4Parser.findBox(res.data, ['moov'])[0]\n              }\n            }\n          }\n        }\n        if (moov && state && moov.size > moov.data.length) {\n          this.logger.debug('[loadMetaProcess],moov not all, range,', options.range[1], ',dataLen,', this.buffer.byteLength, ', state,', state)\n          await this.loadMetaProcess(cache, [options.range[1], moov.start + moov.size - 1], onProgress)\n        }\n        if (moov && moov.size <= moov.data.length && !this.meta.moov) {\n          const parsedMoov = MP4Parser.moov(moov)\n          if (!parsedMoov) {\n            this._error = true\n            onProgress(null, state, options, {err:'cannot parse moov box'})\n            return\n            // throw new MediaError('cannot parse moov box', moov.data)\n          }\n\n          const segments = moovToSegments(parsedMoov, this._config.segmentDuration)\n          if (!segments) {\n            this._error = true\n            onProgress(null, state, options, {err:'cannot parse segments'})\n            return\n            // throw new MediaError('cannot parse segments', moov.data)\n          }\n\n          this.meta = moovToMeta(parsedMoov)\n          const { videoSegments, audioSegments } = segments\n          this.videoSegments = videoSegments\n          this.audioSegments = audioSegments\n          this.logger.debug('[loadMetaProcess] moov ok')\n          onProgress(undefined, state, {\n            meta: {\n              meta: this.meta,\n              videoSegments,\n              audioSegments\n            }\n          })\n        }\n      }\n    }\n    await this.loadData([moovStart, moovEnd || this._config.moovEnd], cache, { onProgress: OnProgressHandle, ...config})\n  }\n\n  async loadMeta (cache, moovEnd, config) {\n    const responses = []\n    this.logger.debug('[loadMeta start]')\n    let res = await this.loadData([0, moovEnd || this._config.moovEnd], cache, config)\n    if (!res) return\n    responses.push(res)\n    let moov = MP4Parser.findBox(res.data, ['moov'])[0]\n    if (!moov) {\n      const mdat = MP4Parser.findBox(res.data, ['mdat'])[0]\n      if (!mdat) {\n        throw new MediaError('cannot find moov or mdat box', res.data)\n      }\n      const moovStart = mdat.start + mdat.size\n      res = await this.loadData([moovStart], cache, config)\n      if (!res) return\n      responses.push(res)\n      moov = MP4Parser.findBox(res.data, ['moov'], moovStart)[0]\n      if (!moov) {\n        throw new MediaError('cannot find moov box', res.data)\n      }\n    }\n    if (moov.size > moov.data.length) {\n      res = await this.loadData([res.data.length, moov.start + moov.size - 1], cache, config)\n      if (!res) return\n      responses.push(res)\n      moov.data = concatUint8Array(moov.data, res.data)\n    }\n    const parsedMoov = MP4Parser.moov(moov)\n    if (!parsedMoov) {\n      throw new MediaError('cannot parse moov box', moov.data)\n    }\n\n    const segments = moovToSegments(parsedMoov, this._config.segmentDuration)\n    if (!segments) {\n      throw new MediaError('cannot parse segments', moov.data)\n    }\n\n    this.meta = moovToMeta(parsedMoov)\n    const { videoSegments, audioSegments } = segments\n    this.videoSegments = videoSegments\n    this.audioSegments = audioSegments\n    this.logger.debug('[load moov end!!!!!]')\n    return {\n      meta: this.meta,\n      videoSegments,\n      audioSegments,\n      responses\n    }\n  }\n\n  loadCacheMeta (meta, segmentIndex){\n    const { moov } = meta\n    const segments = moovToSegments(moov, this._config.segmentDuration)\n    const { videoSegments, audioSegments } = segments\n    this.videoSegments = videoSegments\n    this.audioSegments = audioSegments\n    this._currentSegmentIndex = segmentIndex\n    this.meta = meta\n  }\n\n  getSegmentByTime (time) {\n    let video\n    let audio\n    if (!this.videoSegments.length) {\n      audio = this.audioSegments.find(x => x.startTime <= time && x.endTime > time)\n    } else {\n      video = this.videoSegments.find(x => x.startTime <= time && x.endTime > time)\n      if (video) {\n        audio = this.audioSegments[video.index]\n      }\n    }\n\n    return {\n      video,\n      audio\n    }\n  }\n\n  async loadSegmentByTime (time, cache, changeCurrent = true, config = {}) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta(cache)\n    }\n    const { video, audio } = this.getSegmentByTime(time)\n    return this._loadSegment(video, audio, cache, changeCurrent, config)\n  }\n\n  async loadNextSegment (cache, changeCurrent = true, config = {}) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta()\n    }\n    const video = this.videoSegments[this._currentSegmentIndex + 1]\n    const audio = this.audioSegments[this._currentSegmentIndex + 1]\n    return this._loadSegment(video, audio, cache, changeCurrent, config)\n  }\n\n  async preload (time) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta(true)\n    }\n    if (!time || time < 0) return\n    const { video, audio } = this.getSegmentByTime(time)\n    const index = Math.max(video?.index || 0, audio?.index || 0)\n    if (!index) return\n\n    const videos = this.videoSegments.slice(0, index)\n    const audios = this.audioSegments.slice(0, index)\n\n    const load = async (i) => {\n      if (i > index) return\n      await this._loadSegment(videos[i], audios[i], true, false)\n      await load(i + 1)\n    }\n\n    await load(0)\n  }\n\n  cancel () {\n    return this._loader.cancel()\n  }\n\n  async reset (notCancelLoader = false) {\n    if (!notCancelLoader) {\n      this.logger.debug('[MP4loader reset func call loader.cancel]')\n      await this._loader.cancel()\n    }\n    this.vid = this.url = ''\n    this.meta = {}\n    this.downloadInfo = []\n    this.videoSegments = []\n    this.audioSegments = []\n    this._currentSegmentIndex = -1\n    this._currentLoadingSegmentIndex = -1\n  }\n\n  async destroy () {\n    await this.reset()\n    // await this.cancel()\n    this.cache.clear()\n  }\n\n  async _loadSegment (video, audio, cache, changeCurrent, config) {\n    if (!video && !audio) return\n    const segIndex = video?.index || audio?.index || 0\n    this._currentLoadingSegmentIndex = segIndex\n    let res\n    try {\n      res = await this.loadData([\n        Math.min(video?.range[0] || Infinity, audio?.range[0] || Infinity),\n        Math.max(video?.range[1] || 0, audio?.range[1] || 0)\n      ], cache, config)\n    } finally {\n      this._currentLoadingSegmentIndex = -1\n    }\n    if (!res) return\n\n    if (changeCurrent) {\n      this._currentSegmentIndex = segIndex\n    }\n\n    res.video = video\n    res.audio = audio\n\n    return res\n  }\n\n  async loadData (range, cache, config) {\n    const cacheKey = this._getCacheKey(range)\n    const data = await this.cache.get(cacheKey)\n    let res\n    if (!data) {\n      const url = config && config.url ? config.url : this.url\n      res = await this._loader.load(url, { range, vid: this.vid, ...config })\n    } else {\n      res = { data, state: true, options: { fromCache: true, range, vid: this.vid } }\n    }\n    if (!res) return\n    if (!data) {\n      res.data && this.downloadInfo.push({\n        startTime: res.startTime,\n        endTime: res.endTime,\n        size: res.data.byteLength,\n        range\n      })\n      if (this.downloadInfo && this.downloadInfo.length > this._config.maxDownloadInfoSize) {\n        this.downloadInfo = this.downloadInfo.slice(-this._config.maxDownloadInfoSize)\n      }\n    }\n\n    if (!data && cache) {\n      // this.cache.set(cacheKey, res.data)\n    }\n\n    // res.range = range\n    return res\n  }\n\n  _transformError = (error) => {\n    // error.type = 'network'\n    return error\n  }\n\n  _getCacheKey (range) {\n    return (this.vid || this.url) + ':' + range\n  }\n}\n","export function getConfig (cfg) {\n  return {\n    vid: '',\n    moovEnd: 80000,\n    segmentDuration: 2,\n    maxDownloadInfoSize: 30,\n    responseType: 'arraybuffer',\n    cache: null,\n    // ...xgplayer-streaming-shared/src/net/config\n    ...cfg\n  }\n}\n"],"names":["Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","arguments","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","isBrowser","window","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","apply","disabled","console","debug","nowTime","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","e","delLog","shift","join","reset","_console5","group","table","groupEnd","val","Date","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","createPublicPromise","res","rej","promise","Promise","resolve","reject","used","parseInt","performance","now","getTime","SafeJSON","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","isMMS","mediaSource","test","OP_NAME","MSE","media","_this2","create","_logger","queue","_queue","op","opName","_this2$_sourceBuffer$","costtime","_opst","ranges","TimeRanges","getTimeRanges","_sourceBuffer","context","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","get","_this$mediaSource","readyState","_this3","flag","keys","forEach","k","isArray","_url","_this$mediaSource2","duration","streaming","_mseFullFlag","VIDEO","_this4","isReduceDuration","bufferEnd","Math","max","_enqueueBlockingOp","isEnded","_this5","_openPromise","isOpened","ms","addEventListener","onOpen","costTime","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMMS","_this6","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","_onStartStreaming","_onEndStreaming","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this7","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this8","changeType","_enqueueOp","createSource","buffer","_this9","byteLength","_this9$_sourceBuffer$","appendBuffer","startTime","endTime","_this10","isInsertHead","remove","p","_this11","_this12","allClear","_this$_queue$type","initQueue","isinit","reason","_this13","setLiveSeekableRange","exec","_this14","splice","then","_callee3","types","waiters","_this15","_context3","prom","all","updating","_x2","_x3","_x4","indexOf","timestampOffset","_this16","_this17","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","millisec","round","EVENT","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","width","height","fpsDen","fpsNum","baseMediaDecodeTime","timescale","codec","present","pid","pps","sps","vps","sarRatio","samples","warnings","hvcC","dts","pts","first","isVideoEncryption","AudioTrack","sampleDuration","sampleRate","channelCount","codecType","isAudioEncryption","VideoSample","units","originPts","originDts","keyframe","dependsOn","isNonSyncSample","AudioSample","sampleOffset","size","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","min","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","isFirefox","isAndroid","MAX_SIZE","pow","readBig16","readBig32","readBig64","getAvcCodec","codecs","h","parse","NALu","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","fps","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","videoTrack","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","sample","silentFrame","_getSilentFrame","silentSample","track","sampleSize","getSilentFrame","AMF","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","decode","getUint16","FlvDemuxer","_fixer","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","gopId","hevc","_needAddMetaBeforeKeyFrameNal","MP4Parser","headerSize","subData","findBox","box","parseBox","trackId","baseDataOffsetPresent","flags","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","reference_ID","version","earliest_presentation_time","first_offset","references","ref","tmp32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mvhd","trak","pssh","nextTrackId","tkhd","mdia","mdhd","hdlr","minf","lang","language","handlerType","vmhd","smhd","stbl","graphicsmode","opcolor","balance","_ret$stsd$entries$","_ret$stsd$entries$$si","_ret$stsd$entries$$si2","stsd","stts","ctts","stsc","stsz","stco","co64","default_IV_size","entries","sinf","schi","tenc","stss","senc","iv","sampleCount","InitializationVector","subsamples","subsampleCount","subsample","BytesOfClearData","BytesOfProtectedData","keyIds","systemId","toHex","numKeyIds","keyId","data_size","kid","system_id","entryCount","avc1","hvc1","mp4a","alaw","samplesize","esds","horizresolution","vertresolution","avcC","pasp","default_IsEncrypted","default_KID","frma","data_format","bodyStart","parseVisualSampleEntry","configurationVersion","AVCProfileIndication","AVCLevelIndication","lengthSizeMinusOne","spsLength","ppsLength","tmp","generalProfileCompatibility","avgFrameRate","_ret$vps","nalus","_ret$sps","_ret$pps","hSpacing","vSpacing","parseAudioSampleEntry","byteRead","tag","substring","padStart","firstChunk","samplesPerChunk","entrySizes","mfhd","traf","tfhd","tfdt","trun","dataOffset","firstSampleFlags","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","moov","_e$esds","_e$esds2","tracks","vTrack","find","_t$mdia","_t$mdia$hdlr","aTrack","_t$mdia2","_t$mdia2$hdlr","_vTrack$tkhd","_vTrack$mdia","_vTrack$mdia$minf","_vTrack$mdia$minf$stb","_vTrack$mdia2","_vTrack$mdia2$minf","_vTrack$mdia2$minf$st","_vTrackId","id","tkhdDuration","mvhdDurtion","mvhdTimecale","_e1$sinf","_e1$sinf$schi","_e1$sinf2","_e1$sinf2$schi","_e1$sinf3","_e1$sinf3$schi","_e1$sinf4","_e1$sinf4$frma","e1","videoSenc","useEME","kidValue","encv","_aTrack$tkhd","_e$esds3","_e$esds4","_aTrack$mdia","_aTrack$mdia$minf","_aTrack$mdia$minf$stb","_aTrack$mdia2","_aTrack$mdia2$minf","_aTrack$mdia2$minf$st","_aTrackId","_e$sinf","_e$sinf$frma","_e$sinf2","_e$sinf2$schi","_e$sinf3","_e$sinf3$schi","_e$sinf4","_e$sinf4$schi","getRateIndexByRate","audioSenc","enca","_videoTrack$encv","_audioTrack$enca","vkid","akid","videoSampleCount","_audioTrack$samples","audioSampleCount","moof","defaultSize","defaultDuration","evaluateDefaultDuration","_t$mdia3","_t$mdia3$hdlr","_t$mdia4","_t$mdia4$hdlr","videoSamples","audioSamples","_vTrack$mdia3","_vTrack$mdia3$minf","videoStbl","getSamples","_aTrack$mdia3","_aTrack$mdia3$minf","_aTrack$mdia$mdhd","audioStbl","keyframeMap","cttsArr","cttsEntries","stscEntries","stcoEntries","stszEntrySizes","stssEntries","chunkIndex","chunkRunIndex","offsetInChunk","lastSampleInChunk","lastChunkInRun","dataReferenceIndex","frameCount","isFullBox","readBig24","pad","charstr","maxlen","chars","r","hex","Concat","ResultConstructor","arrays","self","UINT32_MAX","FTYPHEV1","FTYPAVC1","ftyp","content","mvex","_toConsumableArray","HDLR_TYPES","VMHD","SMHD","DINF","extBox","STTS","STSC","STSZ","STCO","avc1hev1","_concat$concat","avcc","btrt","charCodeAt","schm","typ","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","sencLength","isVideo","videoSencLength","saiz","saio","trun1","sbgp","sdtp","extension","writeUint32","samplesLength","writeUint16","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i","_samples$i$flag","_samples$i$cts","trackMP4","mdiaMP4","minfMP4","stblMP4","_ref5","_ref6","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","StblTable","Base","properties","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","MediaError","Cache","moovToSegments","segmentDurations","videoSegments","audioSegments","_videoTrack$mdia","_videoTrack$mdia$minf","_videoTrack$mdia$mdhd","getSegments","_audioTrack$mdia","_audioTrack$mdia$minf","_audioTrack$mdia$mdhd","segDuration","frame","gop","gopDuration","lastFrame","segments","segFrames","adjust","pushSegment","_segments","_segFrames","curTime","moovToMeta","videoCodec","audioCodec","audioChannelCount","audioSampleRate","videoTimescale","audioTimescale","defaultKID","_videoTrack$mdia2","_videoTrack$mdia2$min","_videoTrack$mdia2$min2","_videoTrack$mdia3","_videoTrack$mdia3$mdh","_audioTrack$mdia2","_audioTrack$mdia2$min","_audioTrack$mdia2$min2","_e1$esds","_audioTrack$mdia3","_audioTrack$mdia3$mdh","isNumber","MP4Loader","_loadData","_loadSegment2","_destroy","_reset","_preload","_loadNextSegment","_loadSegmentByTime","_loadMeta","_loadMetaProcess","_getOrLoadMeta","_changeUrl","moovEnd","segmentDuration","maxDownloadInfoSize","_transformError","segIndex","_currentSegmentIndex","_this$videoSegments","_this$audioSegments","_currentLoadingSegmentIndex","notCancelLoader","_args","isMetaLoaded","loadMeta","meta","_callee4","moovStart","OnProgressHandle","_context4","state","_moovStart","parsedMoov","loadData","loadMetaProcess","_x7","_x8","_x9","_x5","_x6","_callee5","responses","_context5","_x10","_x11","_x12","segmentIndex","_callee6","changeCurrent","_this$getSegmentByTim","_args6","_context6","getSegmentByTime","_loadSegment","loadSegmentByTime","_x13","_x14","_callee7","_args7","_context7","_x15","_callee9","_this$getSegmentByTim2","videos","audios","_context9","_callee8","_context8","_x17","_x16","_callee10","_args10","_context10","downloadInfo","_callee11","_context11","clear","_callee12","_context12","finish","_x18","_x19","_x20","_x21","_x22","_callee13","cacheKey","_context13","_getCacheKey","fromCache","_x23","_x24","_x25"],"mappings":"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"}