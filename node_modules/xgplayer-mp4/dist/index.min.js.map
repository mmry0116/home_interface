{"version":3,"file":"index.min.js","sources":["../../../node_modules/eventemitter3/index.js","../../../node_modules/concat-typed-array/lib/index.js","../../../node_modules/concat-typed-array/lib/concat.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/mp4/mp4-parser.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../../../node_modules/crypto-es/lib/pad-nopadding.js","../../xgplayer-transmuxer/src/mp4/crypto/crypto.js","../../xgplayer-transmuxer/src/mp4/mp4-demuxer.js","../src/version.js","../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../src/error.js","../src/util/index.js","../../xgplayer-mp4-loader/src/error.js","../../xgplayer-mp4-loader/src/cache.js","../../xgplayer-mp4-loader/src/utils.js","../../xgplayer-mp4-loader/src/loader.js","../../xgplayer-mp4-loader/src/config.js","../src/util/logger.js","../src/worker/index.js","../src/mp4.js","../src/util/timer.js","../src/util/proxy-promise.js","../src/mp4Plugin.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(this.sampleRate && this.channelCount && this.codec && this.codecType === AudioCodecType.AAC)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption () {\n    return this.isAudioEncryption\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  static parseAnnexB (data) {\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if ((len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = (originObjectType === 2 || originObjectType === 5) ? originObjectType : 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCETION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BREACKED_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video breaked\n      if (this._videoTimestampBreak >= TRACK_BREACKED_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream breaked\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      audioTrack.sampleDuration = audioTrack.codecType === AudioCodecType.AAC\n        ? AAC.getFrameDuration(audioTrack.timescale, timescale)\n        : this._getG711Duration(audioTrack)\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate = audioTrack.codecType === AudioCodecType.AAC ? 1024 : refSampleDuration * audioTrack.timescale / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio breaked\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BREACKED_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        sample.duration = sampleDurationInSampleRate\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== 10 && // AAC\n      format !== 7 && // G.711 A-law logarithmic PCM\n      format !== 8 // G.711 mu-law logarithmic PCM\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== 10) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    if (format === 10) {\n      this._parseAac(data, pts)\n    } else {\n      this._parseG711(data, pts, format)\n    }\n  }\n\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(new AudioSample(pts, data.subarray(1)))\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (frameType === 1) {\n          sample.setToKeyframe()\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        case 38: // HEVC FD_NUT\n          if (isHevc) {\n            let ffByteFound = false\n            for (let i = 2; i < unit.byteLength; i++) {\n              if (unit[i] === 0xff) {\n                ffByteFound = true\n                break\n              }\n            }\n            if (!ffByteFound) {\n              return\n            }\n          }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    this._parseAacData(pes)\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","import { AudioCodecType, VideoCodecType } from '../model'\nimport { getAvcCodec, readBig16, readBig24, readBig32, readBig64 } from '../utils'\nimport { AAC } from '../codec'\nexport class MP4Parser {\n  static findBox (data, names, start = 0) {\n    const ret = []\n    if (!data) return ret\n\n    let size = 0\n    let type = ''\n    let headerSize = 0\n    while (data.length > 7) {\n      size = readBig32(data)\n      type = String.fromCharCode.apply(null, data.subarray(4, 8))\n      headerSize = 8\n      if (size === 1) {\n        size = readBig64(data, 8)\n        headerSize += 8\n      } else if (!size) {\n        size = data.length\n      }\n      if (!names[0] || type === names[0]) {\n        const subData = data.subarray(0, size)\n        if (names.length < 2) {\n          ret.push({\n            start,\n            size,\n            headerSize,\n            type,\n            data: subData\n          })\n        } else {\n          return MP4Parser.findBox(subData.subarray(headerSize), names.slice(1), start + headerSize)\n        }\n      }\n\n      start += size\n      data = data.subarray(size)\n    }\n\n    return ret\n  }\n\n  static tfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.trackId = readBig32(data)\n      let start = 4\n      const baseDataOffsetPresent = (ret.flags & 0xff) & 0x01\n      const sampleDescriptionIndexPresent = (ret.flags & 0xff) & 0x02\n      const defaultSampleDurationPresent = (ret.flags & 0xff) & 0x08\n      const defaultSampleSizePresent = (ret.flags & 0xff) & 0x10\n      const defaultSampleFlagsPresent = (ret.flags & 0xff) & 0x20\n\n      if (baseDataOffsetPresent) {\n        start += 4 // truncate top 4 bytes\n        ret.baseDataOffset = readBig32(data, start)\n        start += 4\n      }\n      if (sampleDescriptionIndexPresent) {\n        ret.sampleDescriptionIndex = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleDurationPresent) {\n        ret.defaultSampleDuration = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleSizePresent) {\n        ret.defaultSampleSize = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleFlagsPresent) {\n        ret.defaultSampleFlags = readBig32(data, start)\n      }\n    })\n  }\n\n  static sidx (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      ret.reference_ID = readBig32(data, start)// stream.readUint32();\n      start += 4\n      ret.timescale = readBig32(data, start)\n      start += 4\n      if (ret.version === 0) {\n        ret.earliest_presentation_time = readBig32(data, start)\n        start += 4\n        ret.first_offset = readBig32(data, start)\n        start += 4\n      } else {\n        ret.earliest_presentation_time = readBig64(data, start)\n        start += 8\n        ret.first_offset = readBig64(data, start)\n        start += 8\n      }\n      start += 2\n      ret.references = []\n      const count = readBig16(data, start)\n      start += 2\n      for (let i = 0; i < count; i++) {\n        const ref = {}\n        ret.references.push(ref)\n        let tmp32 = readBig32(data, start)\n        start += 4\n        ref.reference_type = (tmp32 >> 31) & 0x1\n        ref.referenced_size = tmp32 & 0x7FFFFFFF\n        ref.subsegment_duration = readBig32(data, start)\n        start += 4\n        tmp32 = readBig32(data, start)\n        start += 4\n        ref.starts_with_SAP = (tmp32 >> 31) & 0x1\n        ref.SAP_type = (tmp32 >> 28) & 0x7\n        ref.SAP_delta_time = tmp32 & 0xFFFFFFF\n      }\n    })\n  }\n\n  static moov (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mvhd = MP4Parser.mvhd(MP4Parser.findBox(data, ['mvhd'], start)[0])\n      ret.trak = MP4Parser.findBox(data, ['trak'], start).map(trak => MP4Parser.trak(trak))\n      ret.pssh = MP4Parser.pssh(MP4Parser.findBox(data, ['pssh'], start)[0])\n    })\n  }\n\n  static mvhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      ret.nextTrackId = readBig32(data, start + 76)\n    })\n  }\n\n  static trak (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tkhd = MP4Parser.tkhd(MP4Parser.findBox(data, ['tkhd'], start)[0])\n      ret.mdia = MP4Parser.mdia(MP4Parser.findBox(data, ['mdia'], start)[0])\n    })\n  }\n\n  static tkhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.trackId = readBig32(data, 16)\n        ret.duration = readBig64(data, 24)\n        start += 32\n      } else {\n        ret.trackId = readBig32(data, 8)\n        ret.duration = readBig32(data, 16)\n        start += 20\n      }\n      ret.width = readBig32(data, start + 52)\n      ret.height = readBig32(data, start + 56)\n    })\n  }\n\n  static mdia (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mdhd = MP4Parser.mdhd(MP4Parser.findBox(data, ['mdhd'], start)[0])\n      ret.hdlr = MP4Parser.hdlr(MP4Parser.findBox(data, ['hdlr'], start)[0])\n      ret.minf = MP4Parser.minf(MP4Parser.findBox(data, ['minf'], start)[0])\n    })\n  }\n\n  static mdhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      const lang = readBig16(data, start)\n      ret.language = String.fromCharCode(((lang >> 10) & 0x1F) + 0x60, ((lang >> 5) & 0x1F) + 0x60, (lang & 0x1F) + 0x60)\n    })\n  }\n\n  static hdlr (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 0) {\n        ret.handlerType = String.fromCharCode.apply(null, data.subarray(4, 8))\n      }\n    })\n  }\n\n  static minf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.vmhd = MP4Parser.vmhd(MP4Parser.findBox(data, ['vmhd'], start)[0])\n      ret.smhd = MP4Parser.smhd(MP4Parser.findBox(data, ['smhd'], start)[0])\n      ret.stbl = MP4Parser.stbl(MP4Parser.findBox(data, ['stbl'], start)[0])\n    })\n  }\n\n  static vmhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.graphicsmode = readBig16(data)\n      ret.opcolor = [readBig16(data, 2), readBig16(data, 4), readBig16(data, 6)]\n    })\n  }\n\n  static smhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.balance = readBig16(data)\n    })\n  }\n\n  static stbl (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.stsd = MP4Parser.stsd(MP4Parser.findBox(data, ['stsd'], start)[0])\n      ret.stts = MP4Parser.stts(MP4Parser.findBox(data, ['stts'], start)[0])\n      ret.ctts = MP4Parser.ctts(MP4Parser.findBox(data, ['ctts'], start)[0])\n      ret.stsc = MP4Parser.stsc(MP4Parser.findBox(data, ['stsc'], start)[0])\n      ret.stsz = MP4Parser.stsz(MP4Parser.findBox(data, ['stsz'], start)[0])\n      ret.stco = MP4Parser.stco(MP4Parser.findBox(data, ['stco'], start)[0])\n      if (!ret.stco) {\n        ret.co64 = MP4Parser.co64(MP4Parser.findBox(data, ['co64'], start)[0])\n        ret.stco = ret.co64\n      }\n      const default_IV_size = ret.stsd.entries[0]?.sinf?.schi?.tenc.default_IV_size\n      ret.stss = MP4Parser.stss(MP4Parser.findBox(data, ['stss'], start)[0])\n      ret.senc = MP4Parser.senc(MP4Parser.findBox(data, ['senc'], start)[0], default_IV_size)\n    })\n  }\n\n  static senc (box, iv = 8) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      const sampleCount = readBig32(data, start)\n      start += 4\n      ret.samples = []\n      for (let i = 0; i < sampleCount; i++) {\n        const sample = {}\n        sample.InitializationVector = []\n        for (let j = 0; j < iv; j++){\n          sample.InitializationVector[j] = data[start + j]\n        }\n        start += iv\n        if (ret.flags & 0x2) {\n          sample.subsamples = []\n          const subsampleCount = readBig16(data, start)\n          start += 2\n          for (let j = 0; j < subsampleCount; j++) {\n            const subsample = {}\n            subsample.BytesOfClearData = readBig16(data, start)\n            start += 2\n            subsample.BytesOfProtectedData = readBig32(data, start)\n            start += 4\n            sample.subsamples.push(subsample)\n          }\n        }\n        ret.samples.push(sample)\n      }\n    })\n  }\n\n  static pssh (box) {\n    return parseBox(box, true, (ret, data) => {\n      const keyIds = []\n      const systemId = []\n      let start = 0\n      for (let i = 0; i < 16; i++) {\n        systemId.push(toHex(data[start + i]))\n      }\n      start += 16\n      if (ret.version > 0) {\n        const numKeyIds = readBig32(data, start)\n        start += 4\n        for (let i = 0; i < ('' + numKeyIds).length; i++) {\n          for (let j = 0; j < 16; j++) {\n            const keyId = data[start]\n            start += 1\n            keyIds.push(toHex(keyId))\n          }\n        }\n      }\n      const dataSize = readBig32(data, start)\n      ret.data_size = dataSize\n      start += 4\n      ret.kid = keyIds\n      ret.system_id = systemId\n      ret.buffer = data\n    })\n  }\n\n  static stsd (box) {\n    return parseBox(box, true, (ret, data, start) => {\n      ret.entryCount = readBig32(data)\n      ret.entries = MP4Parser.findBox(data.subarray(4), [], start + 4).map(b => {\n        switch (b.type) {\n          case 'avc1':\n          case 'avc2':\n          case 'avc3':\n          case 'avc4':\n            return MP4Parser.avc1(b)\n          case 'hvc1':\n          case 'hev1':\n            return MP4Parser.hvc1(b)\n          case 'mp4a':\n            return MP4Parser.mp4a(b)\n          case 'alaw':\n          case 'ulaw':\n            return MP4Parser.alaw(b)\n          case 'enca':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.channelCount = readBig16(data, 16)\n              ret.samplesize = readBig16(data, 18)\n              ret.sampleRate = (readBig32(data, 24) / (1 << 16))\n              data = data.subarray(28)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.esds = MP4Parser.esds(MP4Parser.findBox(data, ['esds'], start)[0])\n            })\n          case 'encv':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.width = readBig16(data, 24)\n              ret.height = readBig16(data, 26)\n              ret.horizresolution = readBig32(data, 28)\n              ret.vertresolution = readBig32(data, 32)\n              data = data.subarray(78)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.avcC = MP4Parser.avcC(MP4Parser.findBox(data, ['avcC'], start)[0])\n              ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(data, ['hvcC'], start)[0])\n              ret.pasp = MP4Parser.pasp(MP4Parser.findBox(data, ['pasp'], start)[0])\n            })\n          default:\n        }\n      }).filter(Boolean)\n    })\n  }\n\n  static tenc (box) {\n    return parseBox(box, false, (ret, data) => {\n      let start = 6\n      ret.default_IsEncrypted = data[start]\n      start += 1\n      ret.default_IV_size = data[start]\n      start += 1\n      ret.default_KID = []\n      for (let i = 0; i < 16; i++) {\n        ret.default_KID.push(toHex(data[start]))\n        start += 1\n      }\n    })\n  }\n\n  static schi (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tenc = MP4Parser.tenc(MP4Parser.findBox(data, ['tenc'], start)[0])\n    })\n  }\n\n  static sinf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.schi = MP4Parser.schi(MP4Parser.findBox(data, ['schi'], start)[0])\n      ret.frma = MP4Parser.frma(MP4Parser.findBox(data, ['frma'], start)[0])\n    })\n  }\n\n  static frma (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data_format = ''\n      for (let i = 0; i < 4; i++) {\n        ret.data_format += String.fromCharCode(data[i])\n      }\n    })\n  }\n\n  static avc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.avcC = MP4Parser.avcC(MP4Parser.findBox(bodyData, ['avcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static avcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data;\n      ret.configurationVersion = data[0]\n      ret.AVCProfileIndication = data[1]\n      ret.profileCompatibility = data[2]\n      ret.AVCLevelIndication = data[3]\n      ret.codec = getAvcCodec([data[1], data[2], data[3]])\n      ret.lengthSizeMinusOne = data[4] & 0x3\n      ret.spsLength = data[5] & 0x1F\n      ret.sps = []\n      let start = 6\n      for (let i = 0; i < ret.spsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.sps.push(data.subarray(start, start + size))\n        // ret.spsInfo = SpsParser.parseSPS(ret.sps[i])\n        // ret.pixelRatio = ret.spsInfo.par_ratio\n        start += size\n      }\n      ret.ppsLength = data[start]\n      start += 1\n      ret.pps = []\n      for (let i = 0; i < ret.ppsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.pps.push(data.subarray(start, start += size))\n        start += size\n      }\n    })\n  }\n\n  static hvc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(bodyData, ['hvcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static hvcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.codec = 'hev1.1.6.L93.B0'\n      ret.configurationVersion = data[0]\n      const tmp = data[1]\n      ret.generalProfileSpace = tmp >> 6\n      ret.generalTierFlag = (tmp & 0x20) >> 5\n      ret.generalProfileIdc = tmp & 0x1F\n      ret.generalProfileCompatibility = readBig32(data, 2)\n      ret.generalConstraintIndicatorFlags = data.subarray(6, 12)\n      ret.generalLevelIdc = data[12]\n      ret.avgFrameRate = readBig16(data, 19)\n      ret.numOfArrays = data[22]\n      ret.vps = []\n      ret.sps = []\n      ret.pps = []\n      let start = 23\n      let type = 0\n      let numNalus = 0\n      let size = 0\n      for (let i = 0; i < ret.numOfArrays; i++) {\n        type = data[start] & 0x3F\n        numNalus = readBig16(data, start + 1)\n        start += 3\n        const nalus = []\n        for (let j = 0; j < numNalus; j++) {\n          size = readBig16(data, start)\n          start += 2\n          nalus.push(data.subarray(start, start + size))\n          start += size\n        }\n\n        if (type === 32) {\n          ret.vps.push(...nalus)\n        } else if (type === 33) {\n          ret.sps.push(...nalus)\n        } else if (type === 34) {\n          ret.pps.push(...nalus)\n        }\n      }\n    })\n  }\n\n  static pasp (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.hSpacing = readBig32(data)\n      ret.vSpacing = readBig32(data, 4)\n    })\n  }\n\n  static mp4a (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseAudioSampleEntry(ret, data)\n      ret.esds = MP4Parser.esds(MP4Parser.findBox(data.subarray(bodyStart), ['esds'], start + bodyStart)[0])\n    })\n  }\n\n  static esds (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.codec = 'mp4a.'\n      let start = 0\n      let byteRead = 0\n      let size = 0\n      let tag = 0\n      while (data.length) {\n        start = 0\n        tag = data[start]\n        byteRead = data[start + 1]\n        start += 2\n        while (byteRead & 0x80) {\n          size = (byteRead & 0x7F) << 7\n          byteRead = data[start]\n          start += 1\n        }\n        size += byteRead & 0x7F\n        if (tag === 3) {\n          data = data.subarray(start + 3)\n        } else if (tag === 4) {\n          ret.codec += (data[start].toString(16) + '.').padStart(3, '0')\n          data = data.subarray(start + 13)\n        } else if (tag === 5) {\n          const config = ret.config = data.subarray(start, start + size)\n          let objectType = (config[0] & 0xF8) >> 3\n          if (objectType === 31 && config.length >= 2) {\n            objectType = 32 + ((config[0] & 0x7) << 3) + ((config[1] & 0xE0) >> 5)\n          }\n          ret.objectType = objectType\n          ret.codec += objectType.toString(16)\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        } else {\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        }\n      }\n    })\n  }\n\n  static alaw (box) {\n    return parseBox(box, false, (ret, data) => {\n      parseAudioSampleEntry(ret, data)\n    })\n  }\n\n  static stts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          count: readBig32(data, start),\n          delta: readBig32(data, start + 4)\n        })\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static ctts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      if (ret.version === 1) {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: readBig32(data, start + 4)\n          })\n          start += 8\n        }\n      } else {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: -(~readBig32(data, start + 4) + 1)\n          })\n          start += 8\n        }\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsc (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          firstChunk: readBig32(data, start),\n          samplesPerChunk: readBig32(data, start + 4),\n          sampleDescriptionIndex: readBig32(data, start + 8)\n        })\n        start += 12\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsz (box) {\n    return parseBox(box, true, (ret, data) => {\n      const sampleSize = readBig32(data)\n      const sampleCount = readBig32(data, 4)\n      const entrySizes = []\n      if (!sampleSize) {\n        let start = 8\n        for (let i = 0; i < sampleCount; i++) {\n          entrySizes.push(readBig32(data, start))\n          start += 4\n        }\n      }\n      ret.sampleSize = sampleSize\n      ret.sampleCount = sampleCount\n      ret.entrySizes = entrySizes\n    })\n  }\n\n  static stco (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static co64 (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig64(data, start))\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stss (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static moof (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mfhd = MP4Parser.mfhd(MP4Parser.findBox(data, ['mfhd'], start)[0])\n      ret.traf = MP4Parser.findBox(data, ['traf'], start).map(t => MP4Parser.traf(t))\n    })\n  }\n\n  static mfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.sequenceNumber = readBig32(data)\n    })\n  }\n\n  static traf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tfhd = MP4Parser.tfhd(MP4Parser.findBox(data, ['tfhd'], start)[0])\n      ret.tfdt = MP4Parser.tfdt(MP4Parser.findBox(data, ['tfdt'], start)[0])\n      ret.trun = MP4Parser.trun(MP4Parser.findBox(data, ['trun'], start)[0])\n    })\n  }\n\n  static trun (box) {\n    return parseBox(box, true, (ret, data) => {\n      const { version, flags } = ret\n      const dataLen = data.length\n      const sampleCount = ret.sampleCount = readBig32(data)\n      let offset = 4\n      if (dataLen > offset && flags & 1) {\n        ret.dataOffset = -(~readBig32(data, offset) + 1)\n        offset += 4\n      }\n      if (dataLen > offset && flags & 4) {\n        ret.firstSampleFlags = readBig32(data, offset)\n        offset += 4\n      }\n      ret.samples = []\n      if (dataLen > offset) {\n        let sample\n        for (let i = 0; i < sampleCount; i++) {\n          sample = {}\n          if (flags & 0x100) {\n            sample.duration = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x200) {\n            sample.size = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x400) {\n            sample.flags = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x800) {\n            if (version) {\n              sample.cts = -(~readBig32(data, offset + 4) + 1)\n            } else {\n              sample.cts = readBig32(data, offset)\n            }\n            offset += 4\n          }\n          ret.samples.push(sample)\n        }\n      }\n    })\n  }\n\n  static tfdt (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 1) {\n        ret.baseMediaDecodeTime = readBig64(data)\n      } else {\n        ret.baseMediaDecodeTime = readBig32(data)\n      }\n    })\n  }\n\n  static probe (data) {\n    return !!MP4Parser.findBox(data, ['ftyp'])\n  }\n\n  static parseSampleFlags (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    }\n  }\n\n  static moovToTrack (moov, videoTrack, audioTrack) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (vTrack && videoTrack) {\n      const v = videoTrack\n      const _vTrackId = vTrack.tkhd?.trackId\n      if (_vTrackId !== null && _vTrackId !== undefined) v.id = vTrack.tkhd.trackId\n      v.tkhdDuration = vTrack.tkhd.duration\n      v.mvhdDurtion = moov.mvhd.duration\n      v.mvhdTimecale = moov.mvhd.timescale\n      v.timescale = v.formatTimescale = vTrack.mdia.mdhd.timescale\n      v.duration = vTrack.mdia.mdhd.duration || (v.mvhdDurtion / v.mvhdTimecale * v.timescale)\n      const e1 = vTrack.mdia.minf.stbl.stsd.entries[0]\n      v.width = e1.width\n      v.height = e1.height\n      if (e1.pasp) {\n        v.sarRatio = [e1.pasp.hSpacing, e1.pasp.vSpacing]\n      }\n      if (e1.hvcC) {\n        v.codecType = VideoCodecType.HEVC\n        v.codec = e1.hvcC.codec\n        v.vps = e1.hvcC.vps\n        v.sps = e1.hvcC.sps\n        v.pps = e1.hvcC.pps\n        v.hvcC = e1.hvcC.data\n      } else if (e1.avcC) {\n        v.codec = e1.avcC.codec\n        v.sps = e1.avcC.sps\n        v.pps = e1.avcC.pps\n      } else {\n        throw new Error('unknown video stsd entry')\n      }\n      v.present = true\n      v.ext = {}\n      v.ext.stss = vTrack.mdia?.minf?.stbl?.stss\n      v.ext.ctts = vTrack.mdia?.minf?.stbl?.ctts\n\n      if (e1 && e1.type === 'encv') {\n        v.isVideoEncryption = true\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        v.videoSenc = vTrack.mdia.minf.stbl.senc && vTrack.mdia.minf.stbl.senc.samples\n        e1.data_format = e1.sinf?.frma?.data_format\n        v.useEME = moov.useEME\n        v.kidValue = moov.kidValue\n        v.pssh = moov.pssh\n        v.encv = e1\n      }\n    }\n\n    if (aTrack && audioTrack) {\n      const a = audioTrack\n      const _aTrackId = aTrack.tkhd?.trackId\n      if (_aTrackId !== null && _aTrackId !== undefined) a.id = aTrack.tkhd.trackId\n      a.tkhdDuration = aTrack.tkhd.duration\n      a.mvhdDurtion = moov.mvhd.duration\n      a.mvhdTimecale = moov.mvhd.timescale\n      a.timescale = a.formatTimescale = aTrack.mdia.mdhd.timescale\n      a.duration = aTrack.mdia.mdhd.duration || (a.mvhdDurtion / a.mvhdTimecale * a.timescale)\n      const e1 = aTrack.mdia.minf.stbl.stsd.entries[0]\n      a.sampleSize = e1.sampleSize\n      a.sampleRate = e1.sampleRate\n      a.channelCount = e1.channelCount\n      a.present = true\n\n      switch (e1.type) {\n        case 'alaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMA\n          a.sampleRate = 8000\n          break\n        case 'ulaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMU\n          a.sampleRate = 8000\n          break\n        default:\n          a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n          a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n          a.objectType = e1.esds?.objectType || 2\n          if (e1.esds) a.config = Array.from(e1.esds.config)\n          a.codec = e1.esds?.codec || 'mp4a.40.2'\n          break\n      }\n      a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n      a.objectType = e1.esds?.objectType || 2\n      if (e1.esds) {\n        if (e1.esds.config) {\n          a.config = Array.from(e1.esds.config)\n        } else {\n          console.warn('esds config is null')\n        }\n      }\n      a.codec = e1.esds?.codec || 'mp4a.40.2'\n      a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n      a.ext = {}\n      a.ext.stss = aTrack.mdia?.minf?.stbl?.stss\n      a.ext.ctts = aTrack.mdia?.minf?.stbl?.ctts\n      a.present = true\n      if (e1 && e1.type === 'enca') {\n        a.isAudioEncryption = true\n        e1.data_format = e1.sinf?.frma?.data_format\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        a.audioSenc = aTrack.mdia.minf.stbl.senc && aTrack.mdia.minf.stbl.senc.samples\n        a.useEME = moov.useEME\n        a.kidValue = moov.kidValue\n        a.enca = e1\n      }\n    }\n\n    audioTrack && (audioTrack.isVideoEncryption = videoTrack ? videoTrack.isVideoEncryption : false)\n    videoTrack && (videoTrack.isAudioEncryption = audioTrack ? audioTrack.isAudioEncryption : false)\n\n    if (videoTrack?.encv || audioTrack?.enca) {\n      const vkid = videoTrack?.encv?.default_KID\n      const akid = audioTrack?.enca?.default_KID\n      const kid = (vkid || akid) ? (vkid || akid).join('') : null\n      videoTrack && (videoTrack.kid = kid)\n      audioTrack && (audioTrack.kid = kid)\n    }\n\n    videoTrack && (videoTrack.flags = 0xf01)\n    audioTrack && (audioTrack.flags = 0x701)\n\n    return {\n      videoTrack,\n      audioTrack\n    }\n  }\n\n  static evaluateDefaultDuration (videoTrack, audioTrack, videoSampleCount) {\n    const audioSampleCount = audioTrack?.samples?.length\n\n    // audio\n    if (!audioSampleCount) return 1024\n\n    const segmentDuration = 1024 * audioSampleCount / audioTrack.timescale\n\n    return segmentDuration * videoTrack.timescale / videoSampleCount\n  }\n\n  static moofToSamples (moof, videoTrack, audioTrack) {\n    const ret = {}\n\n    if (moof.mfhd) {\n      if (videoTrack) videoTrack.sequenceNumber = moof.mfhd.sequenceNumber\n      if (audioTrack) audioTrack.sequenceNumber = moof.mfhd.sequenceNumber\n    }\n\n    moof.traf.forEach(({ tfhd, tfdt, trun }) => {\n      if (!tfhd || !trun) return\n      if (tfdt) {\n        if (videoTrack && videoTrack.id === tfhd.trackId) videoTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n        if (audioTrack && audioTrack.id === tfhd.trackId) audioTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n      }\n      const defaultSize = tfhd.defaultSampleSize || 0\n      const defaultDuration = tfhd.defaultSampleDuration || MP4Parser.evaluateDefaultDuration(videoTrack, audioTrack, trun.samples.length || trun.sampleCount)\n      let offset = trun.dataOffset || 0\n      let dts = 0\n      let gopId = -1\n      if (!trun.samples.length && trun.sampleCount) {\n        ret[tfhd.trackId] = []\n        for (let i = 0; i < trun.sampleCount; i++) {\n          ret[tfhd.trackId].push({\n            offset,\n            dts,\n            duration: defaultDuration,\n            size: defaultSize\n          })\n          dts += defaultDuration\n          offset += defaultSize\n        }\n      } else {\n        ret[tfhd.trackId] = trun.samples.map((s, index) => {\n          s = {\n            offset,\n            dts,\n            pts: dts + (s.cts || 0),\n            duration: s.duration || defaultDuration,\n            size: s.size || defaultSize,\n            gopId,\n            keyframe: index === 0 || ((s.flags !== null && s.flags !== undefined) && ((s.flags & 65536) >>> 0) !== 65536)\n          }\n          if (s.keyframe) {\n            gopId++\n            s.gopId = gopId\n          }\n          dts += s.duration\n          offset += s.size\n          return s\n        })\n      }\n    })\n\n    return ret\n  }\n\n  static moovToSamples (moov) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (!vTrack && !aTrack) return\n    let videoSamples\n    let audioSamples\n    if (vTrack) {\n      const videoStbl = vTrack.mdia?.minf?.stbl\n      if (!videoStbl) return\n      const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n      if (!stts || !stsc || !stsz || !stco || !stss) return\n      videoSamples = getSamples(stts, stsc, stsz, stco, ctts, stss)\n    }\n    if (aTrack) {\n      const audioStbl = aTrack.mdia?.minf?.stbl\n      if (!audioStbl) return\n      const timescale = aTrack.mdia.mdhd?.timescale\n      const { stts, stsc, stsz, stco } = audioStbl\n      if (!timescale || !stts || !stsc || !stsz || !stco) return\n      audioSamples = getSamples(stts, stsc, stsz, stco)\n    }\n\n    return {\n      videoSamples,\n      audioSamples\n    }\n  }\n}\n\nfunction getSamples (stts, stsc, stsz, stco, ctts, stss) {\n  const samples = []\n  const cttsEntries = ctts?.entries\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n\n  let sample\n  let gopId = -1\n  let dts = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  stts.entries.forEach(({ count, delta }) => {\n    for (let i = 0; i < count; i++) {\n      sample = {\n        dts,\n        duration: delta,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        sample.keyframe = keyframeMap[pos]\n        if (sample.keyframe) {\n          gopId++\n        }\n        sample.gopId = gopId\n      }\n      // sample.timeOffset = 0\n      if (cttsArr && pos < cttsArr.length) {\n        sample.pts = sample.dts + cttsArr[pos]\n        // sample.timeOffset = cttsArr[pos]\n        // if (pos === 0) {\n        //   sample.pts = sample.dts\n        //   sample.timeOffset = 0\n        // }\n      }\n      samples.push(sample)\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += sample.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  return samples\n}\n\nfunction parseVisualSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.width = readBig16(data, 24)\n  ret.height = readBig16(data, 26)\n  ret.horizresolution = readBig32(data, 28)\n  ret.vertresolution = readBig32(data, 32)\n  ret.frameCount = readBig16(data, 40)\n  ret.depth = readBig16(data, 74)\n  return 78\n}\n\nfunction parseAudioSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.channelCount = readBig16(data, 16)\n  ret.sampleSize = readBig16(data, 18)\n  ret.sampleRate = readBig32(data, 24) / (1 << 16)\n  return 28\n}\n\nfunction parseBox (box, isFullBox, parse) {\n  if (!box) return\n  if (box.size !== box.data.length) throw new Error(`box ${box.type} size !== data.length`)\n  const ret = {\n    start: box.start,\n    size: box.size,\n    headerSize: box.headerSize,\n    type: box.type\n  }\n  if (isFullBox) {\n    ret.version = box.data[box.headerSize]\n    ret.flags = readBig24(box.data, box.headerSize + 1)\n    ret.headerSize += 4\n  }\n  parse(ret, box.data.subarray(ret.headerSize), ret.start + ret.headerSize)\n  return ret\n}\n\nconst padStart = function (str, length, pad) {\n  const charstr = String(pad)\n  const len = length >> 0\n  let maxlen = Math.ceil(len / charstr.length)\n  const chars = []\n  const r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\nconst toHex = function (...value) {\n  const hex = []\n  value.forEach(item => {\n    hex.push(padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex[0]\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse /* hashVal */ } from '../utils'\nimport Buffer from './buffer'\n// import Crypto from './crypto/crypto'\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        content = MP4.mp4a(track)\n        // console.log('[remux],mp4a, len,', content.byteLength, track.type, hashVal(content.toString()))\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n\n    let mdatSize = 0\n\n    samples.forEach((s) => {\n      mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n      mdatSize += (s.units.length * 4)\n    })\n\n    const mdata = new Uint8Array(mdatSize)\n    const mdatView = new DataView(mdata.buffer)\n\n    for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n      sample = samples[i]\n\n      let sampleSize = 0\n      sample.units.forEach((u) => {\n        mdatView.setUint32(offset, u.byteLength)\n        offset += 4\n        mdata.set(u, offset)\n        offset += u.byteLength\n        sampleSize += (4 + u.byteLength)\n      })\n      sample.size = sampleSize\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","/**\n * A noop padding strategy.\n */\nexport const NoPadding = {\n  pad() {\n  },\n\n  unpad() {\n  },\n};\n","import { WordArray, Hex } from 'crypto-es/lib/core'\nimport { CipherParams } from 'crypto-es/lib/cipher-core'\nimport { AES } from 'crypto-es/lib/aes'\nimport { CTR } from 'crypto-es/lib/mode-ctr'\nimport { NoPadding } from 'crypto-es/lib/pad-nopadding'\nimport { formatIV } from '../../utils'\nimport Buffer from '../buffer'\n\nconst Crypto = {\n\n  decryptWordArray: function (raw, key, iv) {\n    const realKey = Hex.parse(key)\n\n    const realIV = Hex.parse(formatIV(iv))\n    const message = WordArray.create(new Uint8Array(raw))\n    const decryptWord = AES.decrypt(\n      CipherParams.create({\n        ciphertext: message\n      }),\n      realKey,\n      {\n        iv: realIV,\n        mode: CTR,\n        padding: NoPadding\n      }\n    )\n    return Crypto.wordArrayToUint8Array(decryptWord)\n  },\n  wordArrayToUint8Array: function (wordArray) {\n    const l = wordArray.sigBytes\n    const words = wordArray.words\n    const result = new Uint8Array(l)\n    let i = 0\n    let j = 0\n    while (true) {\n      if (i === l) { break }\n      const w = words[j++]\n      result[i++] = (w & 0xff000000) >>> 24\n      if (i === l) { break }\n      result[i++] = (w & 0x00ff0000) >>> 16\n      if (i === l) { break }\n      result[i++] = (w & 0x0000ff00) >>> 8\n      if (i === l) { break }\n      result[i++] = (w & 0x000000ff)\n    }\n    return result\n  },\n\n  decoderAESCTRData (videoTrack, audioTrack, customDescryptHandler) {\n    if (videoTrack.videoSenc) {\n      const key = videoTrack.kidValue\n      const senc = videoTrack.videoSenc\n      videoTrack.samples.forEach((item, index) => {\n        const sencBox = senc[index]\n        let encodeWord = item.data\n        const encodeBuffers = []\n        const decodeBuffers = []\n        const iv = sencBox.InitializationVector\n        if (sencBox.subsamples && sencBox.subsamples.length) {\n          sencBox.subsamples.forEach(function (value) {\n            const len = value.BytesOfClearData + value.BytesOfProtectedData\n            const sampleData = encodeWord.slice(0, len)\n            encodeBuffers.push(sampleData.slice(0, value.BytesOfClearData))\n            decodeBuffers.push(sampleData.slice(value.BytesOfClearData))\n            encodeWord = encodeWord.slice(len)\n          })\n        } else {\n          const len = item.size\n          encodeBuffers.push(encodeWord.slice(0, 0))\n          decodeBuffers.push(encodeWord.slice(0, len))\n          encodeWord = encodeWord.slice(len)\n        }\n        const tempBuffer = new Buffer()\n        tempBuffer.write(...decodeBuffers)\n        let decrypted = customDescryptHandler ? customDescryptHandler(tempBuffer.buffer, key, iv) : Crypto.decryptWordArray(tempBuffer.buffer, key, iv)\n        const buffer = new Buffer()\n        encodeBuffers.forEach((clearDataBuf, i) => {\n          const protectedDataLen = decodeBuffers[i].length\n          const decodeProtectedData = decrypted.slice(0, protectedDataLen)\n          buffer.write(clearDataBuf)\n          buffer.write(decodeProtectedData)\n          decrypted = decrypted.slice(protectedDataLen)\n        })\n        videoTrack.samples[index].data = buffer.buffer\n      })\n    }\n\n    if (audioTrack.audioSenc) {\n      const key = audioTrack.kidValue\n      const senc = audioTrack.audioSenc\n      audioTrack.samples.forEach((item, index) => {\n        const sencBox = senc[index]\n        const dec = customDescryptHandler ? customDescryptHandler(item.data, key, sencBox.InitializationVector) : Crypto.decryptWordArray(item.data, key, sencBox.InitializationVector)\n        audioTrack.samples[index].data = dec\n      })\n    }\n  }\n}\n\nexport default Crypto\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample } from '../model'\nimport { readBig32 } from '../utils'\nimport { MP4Parser } from './mp4-parser'\nimport { Logger } from './logger'\nimport Crypto from './crypto/crypto'\nconst NEW_ARRAY_MAX_CNT = 20\nexport class MP4Demuxer {\n  _videoSamples = []\n  _audioSamples = []\n  _lastRemainBuffer = []\n  _lastRemainBufferStartPos = 0\n\n  constructor (videoSegmnents, audioSegmnents, metadataTrack, options) {\n    this.videoTrack = new VideoTrack()\n    this.audioTrack = new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this.log = new Logger('MP4Demuxer', options && options.openLog ? !options.openLog : true)\n\n    videoSegmnents && videoSegmnents.forEach(item => {\n      this._videoSamples.push(...item.frames)\n    })\n    audioSegmnents && audioSegmnents.forEach(item => {\n      this._audioSamples.push(...item.frames)\n    })\n  }\n\n  parseSamples (moov) {\n    if (!moov) {\n      throw new Error('moov is required')\n    }\n    if (!this.videoTrack.codec && !this.audioTrack.codec) {\n      MP4Parser.moovToTrack(moov, this.videoTrack, this.audioTrack)\n      this.videoSenc = this.videoTrack.videoSenc\n      this.audioSenc = this.audioTrack.audioSenc\n    }\n    if (!this._audioSamples.length && !this._videoSamples.length) {\n      const ret = MP4Parser.moovToSamples(moov)\n      if (!ret) throw new Error('cannot parse samples from moov box')\n      this._videoSamples = ret.videoSamples || []\n      this._audioSamples = ret.audioSamples || []\n    }\n  }\n\n  demux (data, dataStart, videoIndexRange, audioIndexRange, moov) {\n    this.parseSamples(moov)\n\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    let sample\n    let sampleData\n    let startByte\n    if (videoIndexRange) {\n      let frame\n      let nalSize = 0\n      for (let i = videoIndexRange[0], l = videoIndexRange[1]; i <= l; i++) {\n        sample = this._videoSamples[i]\n        if (!sample) {\n          throw new Error(`cannot found video frame #${i}`)\n        }\n        startByte = sample.offset - dataStart\n        sampleData = data.subarray(startByte, startByte + sample.size)\n        frame = new VideoSample(sample.pts || sample.dts, sample.dts)\n        frame.duration = sample.duration\n        frame.gopId = sample.gopId\n        if (sample.keyframe) frame.setToKeyframe()\n        let start = 0\n        const len = sampleData.length - 1\n        while (start < len) {\n          nalSize = readBig32(sampleData, start)\n          start += 4\n          frame.units.push(sampleData.subarray(start, start + nalSize))\n          start += nalSize\n        }\n        videoTrack.samples.push(frame)\n      }\n\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioIndexRange) {\n      for (let i = audioIndexRange[0], l = audioIndexRange[1]; i <= l; i++) {\n        sample = this._audioSamples[i]\n        if (!sample) {\n          throw new Error(`cannot found video frame #${i}`)\n        }\n        startByte = sample.offset - dataStart\n        sampleData = data.subarray(startByte, startByte + sample.size)\n        audioTrack.samples.push(new AudioSample(sample.dts, sampleData, sample.duration))\n      }\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].dts\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  demuxPart (data, dataStart, videoIndexRange, audioIndexRange, moov, useEME, kidValue, customDescryptHandler) {\n    this.parseSamples(moov)\n\n    this.videoTrack.useEME = useEME\n    this.audioTrack.useEME = useEME\n    // this.log.debug('[demuxPart start],dataStart,', dataStart, ',dataLen,', data.byteLength, ', lastRemain,', this._lastRemainBuffer ? this._lastRemainBuffer.byteLength : 0)\n    if (this._lastRemainBuffer && this._lastRemainBuffer.byteLength > 0 && dataStart > this._lastRemainBufferStartPos && dataStart <= this._lastRemainBufferStartPos + this._lastRemainBuffer.byteLength) {\n      let tryCnt = 0\n      while (tryCnt < NEW_ARRAY_MAX_CNT) {\n        try {\n          const buffer = this._lastRemainBuffer.subarray(0, dataStart - this._lastRemainBufferStartPos)\n          const temp = new Uint8Array(data.byteLength + buffer.byteLength)\n          temp.set(buffer, 0)\n          temp.set(new Uint8Array(data), buffer.byteLength)\n          data = temp\n          dataStart -= buffer.byteLength\n          this._lastRemainBuffer = null\n          this._lastRemainBufferStartPos = 0\n          // this.log.debug('[demuxPart add lastRemain],dataStart,', dataStart, ',dataLen,', data.byteLength)\n          break\n        } catch (e) {\n          if (tryCnt < NEW_ARRAY_MAX_CNT) {\n            tryCnt++\n          } else {\n            throw new Error('new Uint8Array error:,' + e.errorMessage)\n          }\n        }\n      }\n    }\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n    videoTrack.videoSenc = null\n    audioTrack.audioSenc = null\n\n    let sample\n    let sampleData\n    let startByte\n    let videoEndByte = 0\n    let audioEndByte = 0\n    if (this._videoSamples.length > 0 && videoIndexRange.length > 0) {\n      let frame\n      const end = data.byteLength + dataStart\n      for (let i = videoIndexRange[0]; i <= videoIndexRange[1]; i++) {\n        sample = this._videoSamples[i]\n        if (!sample) {\n          throw new Error(`cannot found video frame #${i}`)\n        }\n        if (sample.offset >= dataStart && sample.offset + sample.size <= end) {\n          startByte = sample.offset - dataStart\n          videoEndByte = startByte + sample.size\n          sampleData = data.subarray(startByte, videoEndByte)\n          frame = new VideoSample(sample.pts || sample.dts, sample.dts)\n          frame.duration = sample.duration\n          // this.log.debug('[video !!!!!!!!],frame,index，', sample.index, ',segmentIdx', segmentIdx, ', dataStart,', dataStart, ',dataEnd', end, ',Samplestart,', sample.offset, ', SampleEnd,', sample.offset + sample.size, ',size,', sample.size, 'dts,', sample.dts, ',pts,', sample.pts, ', keyframe', sample.keyframe)\n          frame.gopId = sample.gopId\n          frame.sampleOffset = sample.index\n          // frame.timeOffset = sample.timeOffset || sample.timeOffset === 0 ? sample.timeOffset : null\n          if (sample.keyframe) frame.setToKeyframe()\n          frame.data = sampleData\n          frame.size = sample.size\n          // this.log.debug('[demux video frame],frame,index，', sample.index, ', size,', sampleData.byteLength, ', hash ', hashVal(sampleData.toString()))\n          videoTrack.samples.push(frame)\n        }\n      }\n      if (videoTrack.samples.length > 0) {\n        videoTrack.gopId = videoTrack.samples[0].gopId\n        videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n        videoTrack.startPts = videoTrack.samples[0].pts / videoTrack.timescale\n        videoTrack.endPts = videoTrack.samples[videoTrack.samples.length - 1].pts / videoTrack.timescale\n        // this.log.debug('[demux video],frame,startPts，', videoTrack.startPts, ', endPts,', videoTrack.endPts)\n        if (this.videoSenc) {\n          videoTrack.videoSenc = this.videoSenc.slice(videoTrack.samples[0].sampleOffset, videoTrack.samples[0].sampleOffset + videoTrack.samples.length)\n          videoTrack.kidValue = kidValue\n        }\n      }\n    }\n    if (this._audioSamples.length > 0 && audioIndexRange.length > 0) {\n      for (let i = audioIndexRange[0]; i <= audioIndexRange[1]; i++) {\n        sample = this._audioSamples[i]\n        if (!sample) {\n          throw new Error(`cannot found video frame #${i}`)\n        }\n        if (sample.offset >= dataStart && sample.offset + sample.size <= data.byteLength + dataStart) {\n          startByte = sample.offset - dataStart\n          audioEndByte = startByte + sample.size\n          sampleData = data.subarray(startByte, audioEndByte)\n          // this.log.debug('[audio !!!!!!!!],audio frame,index，', sample.index, ',segmentIdx', segmentIdx, ', Samplestart,', sample.offset, ', SampleEnd,', sample.offset + sample.size, ',size,', sample.size, 'dts,', sample.dts, ',pts,', sample.pts || sample.dts)\n          // frame.gopId = sample.gopId\n          // this.log.debug('[demux audio frame],index ,', sample.index, ', size,', sampleData.byteLength, ', hash,', hashVal(sampleData.toString()))\n          audioTrack.samples.push(new AudioSample(sample.dts, sampleData, sample.duration, sample.index))\n        }\n      }\n      if (audioTrack.samples.length > 0) {\n        audioTrack.gopId = audioTrack.samples[0].gopId || videoTrack.gopId\n        audioTrack.baseMediaDecodeTime = audioTrack.samples[0].dts\n        audioTrack.startPts = audioTrack.samples[0].pts / audioTrack.timescale\n        audioTrack.endPts = audioTrack.samples[audioTrack.samples.length - 1].pts / audioTrack.timescale\n        // this.log.debug('[demux audio],frame,startPts，', audioTrack.startPts, ', endPts,', audioTrack.endPts)\n        if (this.audioSenc) {\n          audioTrack.audioSenc = this.audioSenc.slice(audioTrack.samples[0].sampleOffset, audioTrack.samples[0].sampleOffset + audioTrack.samples.length)\n          audioTrack.kidValue = kidValue\n        }\n      }\n    }\n    this.decoderData(videoTrack, audioTrack, customDescryptHandler)\n    let nalSize = 0\n    for (let i = 0; i < videoTrack.samples.length; i++) {\n      let start = 0\n      const sampleData = videoTrack.samples[i].data\n      const len = sampleData.length - 1\n      while (start < len) {\n        nalSize = readBig32(sampleData, start)\n        start += 4\n        videoTrack.samples[i].units.push(sampleData.subarray(start, start + nalSize))\n        start += nalSize\n      }\n    }\n    this._lastRemainBuffer = data.subarray(Math.max(videoEndByte, audioEndByte))\n    if (this._lastRemainBuffer.byteLength > 0) {\n      this._lastRemainBufferStartPos = dataStart + data.byteLength - this._lastRemainBuffer.byteLength\n    } else {\n      this._lastRemainBufferStartPos = 0\n    }\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  reset () {\n    this._videoSamples = []\n    this._audioSamples = []\n    this._lastRemainBuffer = null\n    this._lastRemainBufferStartPos = 0\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n    this.metadataTrack.reset()\n  }\n\n  decoderData (videoTrack, audioTrack, customDescryptHandler) {\n    if (videoTrack.useEME || audioTrack.useEME) return\n    Crypto.decoderAESCTRData(videoTrack, audioTrack, customDescryptHandler)\n  }\n\n  static probe (data) {\n    return MP4Parser.probe(data)\n  }\n}\n","/**\n * @type {string}\n * */\nexport default __VERSION__\n","export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN:'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE:'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME:'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    OPTION: 'OPTION',\n    DASH:'DASH',\n    LICENSE:'LICENSE',\n    CUSTOM_LICENSE:'CUSTOM_LICENSE',\n    MSE_HIJACK:'MSE_HIJACK',\n    EME_HIJACK:'EME_HIJACK',\n    SIDX:'SIDX',\n    NO_CANPLAY_ERROR:'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR:'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED:'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK:'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE:'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED:'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED:'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY:'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH:1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]:2103,\n  [ERR.NETWORK_NOTFOUND]:2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]:2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK:5204,\n    EME_HIJACK:5301\n  },\n  [ERR.DRM]:{\n    LICENSE:7100,\n    CUSTOM_LICENSE:7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]:{\n    NO_CANPLAY_ERROR:9001,\n    BUFFERBREAK_ERROR:9002,\n    WAITING_TIMEOUT_ERROR:9003\n  }\n}\n\n\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(this._prefix, nowTime(), ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(this._prefix, nowTime(), ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(this._prefix, nowTime(), ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(this._prefix, nowTime(), ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = this._prefix + nowTime() + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nexport const SafeJSON = {\n  stringify (obj) {\n    try {\n      return JSON.stringify(obj)\n    } catch (e) {\n      return ''\n    }\n  },\n  parse (obj) {\n    try {\n      return JSON.parse(obj)\n    } catch (e) {\n      return undefined\n    }\n  }\n}\n","/* eslint-disable no-undef */\nimport { Buffer } from './buffer'\nimport { isBrowser } from './env'\nimport { ERR, StreamingError } from './error'\nimport { Logger } from './logger'\nimport { createPublicPromise, nowTime, SafeJSON } from './utils'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\nfunction isMMS (mediaSource) {\n  return /ManagedMediaSource/gi.test(Object.prototype.toString.call(mediaSource))\n}\n\n/**\n * @param {TimeRanges} buffered\n */\nfunction getTimeRanges (buffered) {\n  const ranges = []\n\n  if (buffered instanceof TimeRanges) {\n    for (let i = 0; i < buffered.length; i++) {\n      ranges.push({\n        start: buffered.start(i),\n        end: buffered.end(i)\n      })\n    }\n  }\n  return ranges\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @param { boolean} preferMMS\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  static isMMSOnly () {\n    return typeof ManagedMediaSource !== 'undefined' && typeof MediaSource === 'undefined'\n  }\n\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      preferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get hasOpTasks () {\n    let flag = false\n    Object.keys(this._queue).forEach(k => {\n      const queue = this._queue[k]\n      if (Array.isArray(queue)) {\n        flag ||= queue.length > 0\n      }\n    })\n    return flag\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  get streaming () {\n    return isMMS(this.mediaSource) ? this.mediaSource.streaming : true\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('setDuration but ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('setDuration', duration)\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costTime = nowTime() - this._st\n        this._logger.debug('sourceopen', costTime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime: costTime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @private\n   */\n  _onStartStreaming = () => {\n    this._logger.debug('startstreaming')\n  }\n\n  /**\n   * @private\n   */\n  _onEndStreaming = () => {\n    this._logger.debug('endstreaming')\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.preferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    const useMMS = isMMS(ms)\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costTime = nowTime() - this._st\n      this._logger.debug('sourceopen')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime: costTime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    if (useMMS) {\n      ms.addEventListener('startstreaming', this._onStartStreaming)\n      ms.addEventListener('endstreaming', this._onEndStreaming)\n    }\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    media.disableRemotePlayback = useMMS\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n\n      if (isMMS(ms)) {\n        ms.removeEventListener('startstreaming', this._onStartStreaming)\n        ms.removeEventListener('endstreaming', this._onEndStreaming)\n      }\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') return Promise.reject()\n\n    return this._enqueueOp(type, () => {\n      sb.changeType(mimeType)\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initQueue = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initQueue.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initQueue.length > 0 && this._queue[type].push(...initQueue)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error))\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug(`UpdateEnd(${type}/${op.opName})`, SafeJSON.stringify(getTimeRanges(this._sourceBuffer[type]?.buffered)), costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, millisec) {\n  return Math.round(byteLen * 8 * 1000 / millisec / 1024)\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  MEDIASOURCE_OPENED: 'core.mediasourceopened',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  CHASEFRAME: 'core.chaseframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","// import { Errors } from 'xgplayer'\nimport version from './version'\nimport { ERR, ERR_CODE } from 'xgplayer-streaming-shared'\nconst ERROR_CODES = {\n  416: ERR_CODE[ERR.NETWROK_RANGE_NOT_SATISFIABLE], // -499899\n  403: ERR_CODE[ERR.NETWORK_FORBIDDEN], // -499897,\n  404: ERR_CODE[ERR.NETWORK_NOTFOUND], // -499896,\n  timeout: ERR_CODE[ERR.NETWORK_TIMEOUT], // -499895,\n  '4xx': `${ERR_CODE[ERR.NETWORK] }4XX`,// -499894,\n  '5xx': `${ERR_CODE[ERR.NETWORK] }5XX`,// -499893,\n  networkError: ERR_CODE[ERR.NETWORK],// -499892,\n  contentError: `${ERR_CODE[ERR.NETWORK] }contentError`,// -499891,\n  mse: ERR_CODE[ERR.MEDIA][ERR.SUB_TYPES.MSE_OTHER], // -499971,\n  mseOpen: ERR_CODE[ERR.MEDIA][ERR.SUB_TYPES.MSE_ADD_SB], // -499972,\n  mseAppend: ERR_CODE[ERR.MEDIA][ERR.SUB_TYPES.MSE_APPEND_BUFFER], // -499973,\n  mse_hijack: ERR_CODE[ERR.MEDIA][ERR.SUB_TYPES.MSE_HIJACK], // -499974,\n  eme_hijack: ERR_CODE[ERR.MEDIA][ERR.SUB_TYPES.EME_HIJACK], // -499975,\n  metaError: ERR_CODE[ERR.DEMUX][ERR.SUB_TYPES.MP4],// -499985,\n  muxError: ERR_CODE[ERR.REMUX][ERR.SUB_TYPES.FMP4],// -499986,\n  other: ERR_CODE[ERR.OTHER], // -499989,\n  waitTimeout: ERR_CODE[ERR.RUNTIME][ERR.SUB_TYPES.BUFFERBREAK_ERROR],// -499791,\n  waitTimeoutWithHidden : ERR_CODE[ERR.RUNTIME][ERR.SUB_TYPES.WAITING_TIMEOUT_ERROR],\n  drm: ERR_CODE[ERR.DRM][ERR.SUB_TYPES.LICENSE],\n}\nconst ERROR_TYPES = ERR\n\n/**\n * 根据httpCode获取对应的错误码\n * @param { number} httpCode\n * @returns { number }\n */\nfunction getErrorCodeByHttpCode (httpCode) {\n  return ERROR_CODES[httpCode] || httpCode\n}\nclass NetWorkError {\n  constructor (type, httpCode, context) {\n    let rangeStart = 0\n    let rangeEnd = 0\n    if (context && context.range && context.range.length > 1) {\n      rangeStart = context.range[0]\n      rangeEnd = context.range[1]\n    }\n    const _errCode = getErrorCodeByHttpCode(httpCode)\n    return {\n      errorCode: _errCode,\n      errorType: type,\n      // errorTypeCode: ERROR_TYPES[type],\n      errorMessage: context?.httpText || context?.message,\n      url: context?.url,\n      httpCode,\n      version,\n      rangeStart,\n      rangeEnd,\n      ext: context,\n      mediaError: {\n        code: _errCode,\n        message: context?.httpText || context?.message,\n      },\n    }\n  }\n}\n\nclass ParserError {\n  constructor (type, errorCode, ext) {\n    return {\n      errorCode,\n      errorType: type,\n      // errorTypeCode: ERROR_TYPES[type],\n      version,\n      errorMessage: ext.msg,\n      ext,\n      mediaError: {\n        code: errorCode,\n        message: ext.msg,\n      },\n    }\n  }\n}\n\nexport {\n  // Errors as default,\n  NetWorkError,\n  ParserError,\n  ERROR_CODES,\n  ERROR_TYPES,\n  getErrorCodeByHttpCode,\n}\n","/* eslint-disable camelcase */\nconst util = {}\n\nutil.nowTime = function () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nutil.concatData = function (video, audio) {\n  const resBuffers = []\n  let bufferSize = 0\n  if (video) {\n    resBuffers.push(video)\n  }\n  if (audio) {\n    resBuffers.push(audio)\n  }\n  resBuffers.every(item => {\n    item && (bufferSize += item.byteLength)\n    return true\n  })\n  const buffer = new Uint8Array(bufferSize)\n  let offset = 0\n  resBuffers.every(item => {\n    if (item) {\n      buffer.set(item, offset)\n      offset += item.byteLength\n    }\n    return true\n  })\n  return buffer\n}\n\nexport default util\n","export class MediaError {\n  constructor (msg, data) {\n    this.type = 'file'\n    this.message = msg\n    this.data = data\n  }\n}\n","export class Cache {\n  _data = Object.create(null)\n\n  set (id, data) {\n    this._data[id] = data\n  }\n\n  get (id) {\n    return this._data[id]\n  }\n\n  clear () {\n    this._data = Object.create(null)\n  }\n}\n","\nexport function moovToSegments (moov, duration) {\n  const tracks = moov.trak\n  if (!tracks || !tracks.length) return\n  const videoTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n  const audioTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n  if (!videoTrack && !audioTrack) return\n\n  let videoSegments = []\n  let audioSegments = []\n\n  let segmentDurations\n  if (videoTrack) {\n    const videoStbl = videoTrack.mdia?.minf?.stbl\n    if (!videoStbl) return\n    const timescale = videoTrack.mdia.mdhd?.timescale\n    const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n    if (!timescale || !stts || !stsc || !stsz || !stco || !stss) return\n    videoSegments = getSegments(duration, timescale, stts, stsc, stsz, stco, stss, ctts)\n    segmentDurations = videoSegments.map(x => x.duration)\n  }\n  if (audioTrack) {\n    const audioStbl = audioTrack.mdia?.minf?.stbl\n    if (!audioStbl) return\n    const timescale = audioTrack.mdia.mdhd?.timescale\n    const { stts, stsc, stsz, stco } = audioStbl\n    if (!timescale || !stts || !stsc || !stsz || !stco) return\n    audioSegments = getSegments(duration, timescale, stts, stsc, stsz, stco, null, null, segmentDurations)\n  }\n\n  return {\n    videoSegments,\n    audioSegments\n  }\n}\n\nfunction getSegments (segDuration, timescale, stts, stsc, stsz, stco, stss, ctts, segmentDurations) {\n  const frames = []\n  const gop = []\n  const gopDuration = []\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  const cttsEntries = ctts?.entries\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n\n  let frame\n  let duration\n  let startTime = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  let dts = 0\n  let gopId = -1\n  stts.entries.forEach(({ count, delta }) => {\n    duration = delta //   / timescale\n    for (let i = 0; i < count; i++) {\n      frame = {\n        dts,\n        startTime,\n        duration,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        frame.keyframe = keyframeMap[pos]\n        if (frame.keyframe) {\n          gopId++\n          gop.push([frame])\n          gopDuration.push(frame.duration)\n        } else {\n          gop[gop.length - 1].push(frame)\n          gopDuration[gop.length - 1] += frame.duration\n        }\n        frame.gopId = gopId\n      }\n      if (cttsArr && pos < cttsArr.length) {\n        frame.pts = dts + cttsArr[pos]\n      }\n      if (pos === 0) {\n        frame.pts = 0\n      }\n      frames.push(frame)\n      startTime += duration\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += frame.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  const l = frames.length\n  if (!l || (stss && !frames[0].keyframe)) return\n\n  const segments = []\n  let segFrames = []\n  let time = 0\n  let lastFrame\n  let adjust = 0\n  const pushSegment = (duration) => {\n    lastFrame = segFrames[segFrames.length - 1]\n    segments.push({\n      index: segments.length,\n      startTime: (segments[segments.length - 1]?.endTime || segFrames[0].startTime / timescale),\n      endTime: (lastFrame.startTime + lastFrame.duration) / timescale,\n      duration: duration,\n      range: [segFrames[0].offset, lastFrame.offset + lastFrame.size],\n      frames: segFrames\n    })\n    time = 0\n    segFrames = []\n  }\n\n  if (stss) {\n    const duration = segDuration * timescale\n    for (let i = 0, l = gop.length; i < l; i++) {\n      time += gopDuration[i]\n      segFrames.push(...gop[i])\n      if (i + 1 < l) {\n        if (i === 0 || time > duration) {\n          pushSegment(time / timescale)\n        }\n      } else {\n        pushSegment(time / timescale)\n      }\n    }\n  } else {\n    segmentDurations = segmentDurations || []\n    let duration = segmentDurations[0] || segDuration\n    for (let i = 0; i < l; i++) {\n      segFrames.push(frames[i])\n      time += frames[i].duration\n      const curTime = time / timescale\n      if (i + 1 >= l || curTime + adjust >= duration) {\n        adjust += curTime - duration\n        pushSegment(curTime)\n        duration = segmentDurations[segments.length] || segDuration\n      }\n    }\n  }\n\n  return segments\n}\n\nexport function moovToMeta (moov) {\n  let videoCodec = ''\n  let audioCodec = ''\n  let width = 0\n  let height = 0\n  let audioChannelCount = 0\n  let audioSampleRate = 0\n  let duration = 0\n  let videoTimescale = 0\n  let audioTimescale = 0\n  if (moov.mvhd) {\n    duration = moov.mvhd.duration / moov.mvhd.timescale\n  }\n\n  const tracks = moov.trak\n\n  if (tracks) {\n    const videoTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const audioTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    let e1 = null\n    let defaultKID\n    if (videoTrack) {\n      e1 = videoTrack.mdia?.minf?.stbl?.stsd.entries[0]\n      if (e1) {\n        width = e1.width\n        height = e1.height\n        videoTimescale = videoTrack.mdia?.mdhd?.timescale\n        videoCodec = (e1.avcC || e1.hvcC)?.codec\n        if (e1.type === 'encv') {\n          defaultKID = e1.sinf?.schi?.tenc.default_KID\n        }\n      }\n    }\n    if (audioTrack) {\n      e1 = audioTrack.mdia?.minf?.stbl?.stsd.entries[0]\n      if (e1) {\n        audioChannelCount = e1.channelCount\n        audioSampleRate = e1.sampleRate\n        audioCodec = e1.esds?.codec\n        audioTimescale = audioTrack.mdia?.mdhd?.timescale\n        if (e1.type === 'enca') {\n          defaultKID = defaultKID || e1.sinf?.schi?.tenc.default_KID\n        }\n      }\n    }\n    return {\n      kid: defaultKID ? defaultKID.join('') : null,\n      videoCodec,\n      audioCodec,\n      width,\n      height,\n      videoTimescale,\n      audioChannelCount,\n      audioSampleRate,\n      duration,\n      audioTimescale,\n      moov\n    }\n  }\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { NetLoader, concatUint8Array, Logger, EVENT } from 'xgplayer-streaming-shared'\nimport { MP4Parser } from 'xgplayer-transmuxer'\nimport { getConfig } from './config'\nimport { MediaError } from './error'\nimport { Cache } from './cache'\nimport { isNumber, moovToMeta, moovToSegments } from './utils'\nimport EventEmitter from 'eventemitter3'\n\nexport class MP4Loader extends EventEmitter {\n  vid = ''\n  url = ''\n  meta = {}\n  downloadInfo = []\n  videoSegments = []\n  audioSegments = []\n  cache = null\n  _currentSegmentIndex = -1\n  _currentLoadingSegmentIndex = -1\n  buffer\n  _error\n\n  constructor (config) {\n    super()\n    this._config = getConfig(config)\n    const {\n      vid,\n      cache,\n      ...rest\n    } = this._config\n    this.cache = cache || new Cache()\n    this.vid = vid || rest.url\n    this.url = rest.url\n    rest.transformError = this._transformError\n    this.logger = new Logger('MP4Loader_' + this.vid)\n    !!config.openLog && Logger.enable()\n    rest.logger = this.logger\n\n    this._loader = new NetLoader(rest)\n    this._loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n  }\n\n  get isMetaLoaded () {\n    return this.videoSegments.length || this.audioSegments.length\n  }\n\n  setCurrentSegment (segIndex) {\n    if (isNumber(segIndex)) {\n      this._currentSegmentIndex = segIndex\n    }\n  }\n\n  isLastSegment (segIndex) {\n    if (isNumber(segIndex)) {\n      const lastIndex = this.videoSegments[this.videoSegments.length - 1]?.index || this.audioSegments[this.audioSegments.length - 1]?.index || 0\n      return segIndex >= lastIndex\n    }\n\n    return false\n  }\n\n  isSegmentLoading (segIndex) {\n    return segIndex === this._currentLoadingSegmentIndex\n  }\n\n  async changeUrl (url, vid = url, moovEnd, notCancelLoader) {\n    await this.reset(notCancelLoader)\n    if (url) this.url = url\n    if (vid) this.vid = vid\n    if (moovEnd) this._config.moovEnd = moovEnd\n  }\n\n  async getOrLoadMeta (cache) {\n    if (!this.isMetaLoaded) await this.loadMeta(cache)\n    return this.meta\n  }\n\n  async loadMetaProcess (cache, [moovStart, moovEnd], onProgress, config) {\n    this._error = false\n    this.logger.debug('[loadMetaProcess start], range,', [moovStart, moovEnd])\n    const OnProgressHandle = async (data, state, options) => {\n      if (this.meta && options?.range && options.range.length > 0 && options.range[1] >= moovEnd) {\n        state = true\n        this.logger.debug('[loadMetaProcess],data done,setstate true,[', moovStart, moovEnd, ']')\n      }\n      if (state && options?.range && options.range.length > 0 && options.range[1] < moovEnd) {\n        state = false // 为了修复state为true但数据还么全部返回的问题\n        this.logger.debug('[loadMetaProcess],data not done,setstate false,[', moovStart, moovEnd, ']')\n      }\n      this.logger.debug('[loadMetaProcess],task,[', moovStart, moovEnd, '], range,', options.range, ',dataLen,', (data ? data.byteLength : undefined), ', state,', state, ',err,',this._error)\n      !this._error && data && data.byteLength > 0 && onProgress(data, state, options)\n      if (this.meta.moov || this._error) return\n      if (data && data.byteLength > 0) {\n        this.buffer = concatUint8Array(this.buffer, data)\n        let moov = MP4Parser.findBox(this.buffer, ['moov'])[0]\n        if (!moov) {\n          const mdat = MP4Parser.findBox(this.buffer, ['mdat'])[0]\n          if (state) {\n            if (!mdat) {\n              this._error = true\n              onProgress(null, state, options, {err:'cannot find moov or mdat box'})\n              return\n              // throw new MediaError('cannot find moov or mdat box')\n            } else {\n              const moovStart = mdat.start + mdat.size\n              const res = await this.loadData([moovStart, ''], cache, config)\n              if (res) {\n                moov = MP4Parser.findBox(res.data, ['moov'])[0]\n              }\n            }\n          }\n        }\n        if (moov && state && moov.size > moov.data.length) {\n          this.logger.debug('[loadMetaProcess],moov not all, range,', options.range[1], ',dataLen,', this.buffer.byteLength, ', state,', state)\n          await this.loadMetaProcess(cache, [options.range[1], moov.start + moov.size - 1], onProgress)\n        }\n        if (moov && moov.size <= moov.data.length && !this.meta.moov) {\n          const parsedMoov = MP4Parser.moov(moov)\n          if (!parsedMoov) {\n            this._error = true\n            onProgress(null, state, options, {err:'cannot parse moov box'})\n            return\n            // throw new MediaError('cannot parse moov box', moov.data)\n          }\n\n          const segments = moovToSegments(parsedMoov, this._config.segmentDuration)\n          if (!segments) {\n            this._error = true\n            onProgress(null, state, options, {err:'cannot parse segments'})\n            return\n            // throw new MediaError('cannot parse segments', moov.data)\n          }\n\n          this.meta = moovToMeta(parsedMoov)\n          const { videoSegments, audioSegments } = segments\n          this.videoSegments = videoSegments\n          this.audioSegments = audioSegments\n          this.logger.debug('[loadMetaProcess] moov ok')\n          onProgress(undefined, state, {\n            meta: {\n              meta: this.meta,\n              videoSegments,\n              audioSegments\n            }\n          })\n        }\n      }\n    }\n    await this.loadData([moovStart, moovEnd || this._config.moovEnd], cache, { onProgress: OnProgressHandle, ...config})\n  }\n\n  async loadMeta (cache, moovEnd, config) {\n    const responses = []\n    this.logger.debug('[loadMeta start]')\n    let res = await this.loadData([0, moovEnd || this._config.moovEnd], cache, config)\n    if (!res) return\n    responses.push(res)\n    let moov = MP4Parser.findBox(res.data, ['moov'])[0]\n    if (!moov) {\n      const mdat = MP4Parser.findBox(res.data, ['mdat'])[0]\n      if (!mdat) {\n        throw new MediaError('cannot find moov or mdat box', res.data)\n      }\n      const moovStart = mdat.start + mdat.size\n      res = await this.loadData([moovStart], cache, config)\n      if (!res) return\n      responses.push(res)\n      moov = MP4Parser.findBox(res.data, ['moov'], moovStart)[0]\n      if (!moov) {\n        throw new MediaError('cannot find moov box', res.data)\n      }\n    }\n    if (moov.size > moov.data.length) {\n      res = await this.loadData([res.data.length, moov.start + moov.size - 1], cache, config)\n      if (!res) return\n      responses.push(res)\n      moov.data = concatUint8Array(moov.data, res.data)\n    }\n    const parsedMoov = MP4Parser.moov(moov)\n    if (!parsedMoov) {\n      throw new MediaError('cannot parse moov box', moov.data)\n    }\n\n    const segments = moovToSegments(parsedMoov, this._config.segmentDuration)\n    if (!segments) {\n      throw new MediaError('cannot parse segments', moov.data)\n    }\n\n    this.meta = moovToMeta(parsedMoov)\n    const { videoSegments, audioSegments } = segments\n    this.videoSegments = videoSegments\n    this.audioSegments = audioSegments\n    this.logger.debug('[load moov end!!!!!]')\n    return {\n      meta: this.meta,\n      videoSegments,\n      audioSegments,\n      responses\n    }\n  }\n\n  loadCacheMeta (meta, segmentIndex){\n    const { moov } = meta\n    const segments = moovToSegments(moov, this._config.segmentDuration)\n    const { videoSegments, audioSegments } = segments\n    this.videoSegments = videoSegments\n    this.audioSegments = audioSegments\n    this._currentSegmentIndex = segmentIndex\n    this.meta = meta\n  }\n\n  getSegmentByTime (time) {\n    let video\n    let audio\n    if (!this.videoSegments.length) {\n      audio = this.audioSegments.find(x => x.startTime <= time && x.endTime > time)\n    } else {\n      video = this.videoSegments.find(x => x.startTime <= time && x.endTime > time)\n      if (video) {\n        audio = this.audioSegments[video.index]\n      }\n    }\n\n    return {\n      video,\n      audio\n    }\n  }\n\n  async loadSegmentByTime (time, cache, changeCurrent = true, config = {}) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta(cache)\n    }\n    const { video, audio } = this.getSegmentByTime(time)\n    return this._loadSegment(video, audio, cache, changeCurrent, config)\n  }\n\n  async loadNextSegment (cache, changeCurrent = true, config = {}) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta()\n    }\n    const video = this.videoSegments[this._currentSegmentIndex + 1]\n    const audio = this.audioSegments[this._currentSegmentIndex + 1]\n    return this._loadSegment(video, audio, cache, changeCurrent, config)\n  }\n\n  async preload (time) {\n    if (!this.isMetaLoaded) {\n      await this.loadMeta(true)\n    }\n    if (!time || time < 0) return\n    const { video, audio } = this.getSegmentByTime(time)\n    const index = Math.max(video?.index || 0, audio?.index || 0)\n    if (!index) return\n\n    const videos = this.videoSegments.slice(0, index)\n    const audios = this.audioSegments.slice(0, index)\n\n    const load = async (i) => {\n      if (i > index) return\n      await this._loadSegment(videos[i], audios[i], true, false)\n      await load(i + 1)\n    }\n\n    await load(0)\n  }\n\n  cancel () {\n    return this._loader.cancel()\n  }\n\n  async reset (notCancelLoader = false) {\n    if (!notCancelLoader) {\n      this.logger.debug('[MP4loader reset func call loader.cancel]')\n      await this._loader.cancel()\n    }\n    this.vid = this.url = ''\n    this.meta = {}\n    this.downloadInfo = []\n    this.videoSegments = []\n    this.audioSegments = []\n    this._currentSegmentIndex = -1\n    this._currentLoadingSegmentIndex = -1\n  }\n\n  async destroy () {\n    await this.reset()\n    // await this.cancel()\n    this.cache.clear()\n  }\n\n  async _loadSegment (video, audio, cache, changeCurrent, config) {\n    if (!video && !audio) return\n    const segIndex = video?.index || audio?.index || 0\n    this._currentLoadingSegmentIndex = segIndex\n    let res\n    try {\n      res = await this.loadData([\n        Math.min(video?.range[0] || Infinity, audio?.range[0] || Infinity),\n        Math.max(video?.range[1] || 0, audio?.range[1] || 0)\n      ], cache, config)\n    } finally {\n      this._currentLoadingSegmentIndex = -1\n    }\n    if (!res) return\n\n    if (changeCurrent) {\n      this._currentSegmentIndex = segIndex\n    }\n\n    res.video = video\n    res.audio = audio\n\n    return res\n  }\n\n  async loadData (range, cache, config) {\n    const cacheKey = this._getCacheKey(range)\n    const data = await this.cache.get(cacheKey)\n    let res\n    if (!data) {\n      const url = config && config.url ? config.url : this.url\n      res = await this._loader.load(url, { range, vid: this.vid, ...config })\n    } else {\n      res = { data, state: true, options: { fromCache: true, range, vid: this.vid } }\n    }\n    if (!res) return\n    if (!data) {\n      res.data && this.downloadInfo.push({\n        startTime: res.startTime,\n        endTime: res.endTime,\n        size: res.data.byteLength,\n        range\n      })\n      if (this.downloadInfo && this.downloadInfo.length > this._config.maxDownloadInfoSize) {\n        this.downloadInfo = this.downloadInfo.slice(-this._config.maxDownloadInfoSize)\n      }\n    }\n\n    if (!data && cache) {\n      // this.cache.set(cacheKey, res.data)\n    }\n\n    // res.range = range\n    return res\n  }\n\n  _transformError = (error) => {\n    // error.type = 'network'\n    return error\n  }\n\n  _getCacheKey (range) {\n    return (this.vid || this.url) + ':' + range\n  }\n}\n","export function getConfig (cfg) {\n  return {\n    vid: '',\n    moovEnd: 80000,\n    segmentDuration: 2,\n    maxDownloadInfoSize: 30,\n    responseType: 'arraybuffer',\n    cache: null,\n    // ...xgplayer-streaming-shared/src/net/config\n    ...cfg\n  }\n}\n","import util from './index'\nconst isSupport = _isLocalStorageUsable()\nexport const openLog = checkOpenLog()\nexport const openTestLog = checkTestOpenLog()\nfunction probeSupport () {\n  try {\n    return (\n      typeof localStorage !== 'undefined' &&\n            'setItem' in window.localStorage &&\n            !!window.localStorage.setItem\n    )\n  } catch (e) {\n    return false\n  }\n}\n\nfunction checkIfLocalStorageThrows () {\n  const localStorageTestKey = '_localstorage_support_test'\n\n  try {\n    window.localStorage.setItem(localStorageTestKey, true)\n    window.localStorage.removeItem(localStorageTestKey)\n    return false\n  } catch (e) {\n    return true\n  }\n}\n\nexport function checkOpenLog () {\n  if (isSupport) {\n    try {\n      return !!window.localStorage.getItem('playerlog')\n    } catch (e) {\n      return false\n    }\n  }\n  return false\n}\n\nfunction _isLocalStorageUsable () {\n  return probeSupport() && !checkIfLocalStorageThrows()\n}\n\nexport function log ( message, ...optionalParams) {\n  openLog && console.log && console.log('[logger]', util.nowTime(), message, ...optionalParams)\n}\n\nexport function checkTestOpenLog () {\n  if (isSupport) {\n    try {\n      return !!window.localStorage.getItem('playertestlog')\n    } catch (e) {\n      return false\n    }\n  }\n  return false\n}\n\n\n","import EventEmitter from 'eventemitter3'\nimport TransmuxerWorker from './transmuxerworker?worker&inline'\n\nexport default class TransmuxerWorkerControl extends EventEmitter {\n  constructor (options) {\n    super()\n    this.openlog = options.openLog\n    this.codecType = options.codecType\n    this.supportHevc = options.supportHevc\n    this.worker = new TransmuxerWorker()\n    this.worker.onmessage = (e) => {\n      this.emit(e.data.method, e.data)\n    }\n    this.worker.postMessage({\n      method: 'init',\n      id: options.id || 0,\n      args: { openlog: this.openlog, supportHevc: this.supportHevc, codecType: this.codecType}\n    })\n  }\n\n  transmux (id, data, start, videoIdx, audioIdx, moov, useEME, kidValue, context) {\n    const buffer = data.buffer\n    this.worker && this.worker.postMessage({\n      method: 'transmux',\n      id,\n      buffer,\n      args: { start, videoIdx, audioIdx, moov, useEME, kidValue, context}\n    },[buffer])\n  }\n\n  reset () {\n    this.worker && this.worker.postMessage({\n      method: 'reset'\n    })\n  }\n\n  destroy () {\n    this.worker && this.worker.terminate()\n  }\n\n}\n","import EventEmitter from 'eventemitter3'\nimport Concat from 'concat-typed-array'\nimport { MP4Demuxer, FMP4Remuxer } from 'xgplayer-transmuxer'\nimport { ERROR_CODES, NetWorkError, ParserError, ERROR_TYPES } from './error'\nimport util from './util'\nimport MP4Loader from 'xgplayer-mp4-loader'\nimport { checkOpenLog, log } from './util/logger'\nimport TransmuxerWorkerControl from './worker'\n\nconst MP4_EVENTS = {\n  ERROR: 'error',\n  META_READY: 'metaReady',\n  MOOV_REQ_PROGRESS: 'moov_request_Progress',\n  UPDATE_LOAD_IDX: 'update_load_fragmentIdx'\n}\n\nclass MP4 extends EventEmitter {\n\n  static getDefaultConfig () {\n    return {\n      segmentDuration: 5,\n      onProcessMinLen: 1024, // 当fetch用onprocess渐进式回调数据时，当收到的数据量最少到配置值时才回调\n      chunkSize: 800000, // [请求的数据块大小，对于长视频设置的较大些可以避免二次请求]\n      retryCount: 3,\n      retryDelay: 1000,\n      timeout: 3000,\n      enableWorker: false,\n      playerId: '',\n      vid: '',\n      ext: {}\n    }\n  }\n  /**\n   * [constructor 构造函数]\n   * @param { string } url                      [视频地址]\n   * @param { Object } options\n   * @param { Number } [chunk_size=Math.pow(25, 4)]           [请求的数据块大小，对于长视频设置的较大些可以避免二次请求]\n   * @param { any } preloader [预加载器]\n   * @param { any } preloadTimeCache  [预加载信息]\n   */\n\n  constructor (url, options) {\n    super()\n    this.url = url\n    this.options = MP4.getDefaultConfig()\n    // eslint-disable-next-line array-callback-return\n    Object.keys(options).map(key => {\n      options[key] !== undefined && options[key] !== null && (this.options[key] = options[key])\n    })\n    this.timeRange = []\n    this.CHUNK_SIZE = this.options.chunkSize\n    this.bufferLoaded = new Uint8Array(0)\n    this.bufferLoadedPos = 0\n    this.meta = null\n    this.videoTrak = null\n    this.audioTrak = null\n    this.canDownload = true\n    this._loadSuccessCallBack = null\n    this._isPending = false // 当前流程是否进入错误处理挂起状态\n    this._metaLoading = false // meta请求是否进行中\n    this.MP4Loader = new MP4Loader({\n      segmentDuration: this.options.segmentDuration,\n      url: url,\n      vid: options.vid,\n      retry: this.options.retryCount,\n      retryDelay: this.options.retryDelay,\n      timeout: this.options.timeout,\n      ...options.reqOptions,\n      openLog: checkOpenLog()\n    })\n    this.MP4Demuxer = null\n    this.FMP4Remuxer = null\n    this._needInitSegment = true\n    this._switchBitRate = false\n    this.enableWorker = this.options.enableWorker\n    if (this.enableWorker && typeof Worker !== 'undefined') {\n      try {\n        this.workerSequence = 0\n        this.transmuxerWorkerControl = new TransmuxerWorkerControl({id: this.workerSequence, codecType : options.codecType, supportHevc: this.options.supportHevc, openLog: checkOpenLog()})\n        this.transmuxerWorkerControl.on('transmux', (muxRes) => {\n          const res = muxRes.args\n          this.log('[transmuxerworker end] ,range, ',JSON.stringify(res.range), ',dataLen,',res.buffer.byteLength, res.context)\n          this._loadSuccessCallBack && this._loadSuccessCallBack(res)\n        })\n        // this.eventListen = false\n      } catch (error) {\n        this.log('Error in worker:', error)\n        this.enableWorker = false\n        this.transmuxerWorkerControl = null\n      }\n    }\n    if (!this.enableWorker) {\n      this.MP4Demuxer = null\n      this.FMP4Remuxer = null\n    }\n    this.seekTime = -1\n    this.changeBitRateTime = -1\n  }\n\n\n  async changeBitRate (bitRateInfo) {\n    this.url = bitRateInfo.url\n    await this.MP4Loader.changeUrl(this.url, this.options.vid + Date.now(), this.CHUNK_SIZE)\n    this._switchBitRate = true\n    this.log('[switchBitrate] changeUrl, bitRate,',this.url)\n  }\n\n  log (message, ...optionalParams) {\n    const { options } = this\n    const newMessage = (options && options.vid) ? `[MP4] ${options.vid} ${message}` : `[MP4] ${message}`\n    log(newMessage, ...optionalParams)\n  }\n\n  /**\n   * 错误处理\n   * @param { Error } error\n   * @param { string } state\n   */\n  async errorHandler (error, state, context = {}) {\n    const { response, message } = error\n    const vid = this.options ? this.options.vid : ''\n    let _error = null\n    this._isPending = true\n    if (response) {\n      _error = new NetWorkError('network', response.status, {\n        httpText: response.httpText,\n        message: message,\n        url: response.url\n      })\n      this.emit(MP4_EVENTS.ERROR, _error)\n    } else {\n      // 其他错误信息\n      console.log(`[MP4] [${vid}] errorHandler,`, error)\n      _error = error\n      this.emit(MP4_EVENTS.ERROR, _error)\n    }\n  }\n\n\n  async init () {\n    if (this.url) await this.MP4Loader.changeUrl(this.url, this.options.vid + Date.now(), this.CHUNK_SIZE)\n    await this.getMetaInfo()\n  }\n\n  getTimeRange () {\n    const range = []\n    let timeRange = null\n    for (let i = 0; this.videoTrak && i < this.videoTrak.length; i++) {\n      timeRange = {\n        startTime: this.videoTrak[i].startTime,\n        endTime: this.videoTrak[i].endTime,\n        downloaded : false,\n        isLoading : false\n      }\n      range.push(timeRange)\n    }\n    if (this.audioTrak && this.audioTrak.length > range.length) {\n      for (let j = range.length; j < this.audioTrak.length; j++) {\n        timeRange = {\n          startTime: Math.max(this.audioTrak[j].startTime, timeRange ? timeRange.endTime : 0),\n          endTime: Math.max(this.audioTrak[j].endTime, timeRange ? timeRange.endTime : 0),\n          downloaded : false,\n          isLoading : false\n        }\n        range.push(timeRange)\n      }\n    }\n    return range\n  }\n\n  async getMetaInfo (isEmitMetaEvent = true) {\n    try {\n      this._metaLoading = true\n      this.log('getMetaInfo start')\n      this.bufferLoaded = new Uint8Array(0)\n      let startPos = 0\n      const onProgressHandle = async (data, state, options) => {\n        this.log('getMetaInfo onProgressHandle, dataLen,', data ? data.byteLength : -1, ', state,',state, ',range,',JSON.stringify(options.range))\n        if (data) {\n          if (options.range[0] === startPos) {\n            this.bufferLoaded = Concat(Uint8Array, this.bufferLoaded, new Uint8Array(data))\n            startPos += data.byteLength\n          }\n        }\n        if (options.meta && !this.meta) {\n          const metaInfo = options.meta\n          this.videoTrak = metaInfo.videoSegments\n          this.audioTrak = metaInfo.audioSegments\n          this.timeRange = this.getTimeRange()\n          this.meta = {...metaInfo.meta, ext:{videoTrak: this.videoTrak, audioTrak: this.audioTrak}}\n          metaInfo.bufferLoaded = this.bufferLoaded\n          this.log('meta reach')\n          if (isEmitMetaEvent) {\n            this.emit(MP4_EVENTS.META_READY, this.meta)\n          }\n        }\n        if (this.meta && state) {\n          this.log('[getMetaInfo req end]')\n          this._metaLoading = false\n        }\n\n        if (this.meta && (data || state)) {\n          this.log('emit moov_req_progress')\n          this.emit(MP4_EVENTS.MOOV_REQ_PROGRESS)\n        }\n      }\n      await this.MP4Loader.loadMetaProcess(this.MP4Loader.cache, [0, this.CHUNK_SIZE], onProgressHandle)\n    } catch (error) {\n      console.error('[MP4] trigger errorHandler getMetaInfo',error?.message)\n      this.loadError(error, 'getMetaInfo')\n    }\n  }\n\n  getFragmentIdx (time) {\n    let video\n    let audio\n    if (!this.videoTrak.length) {\n      audio = this.audioTrak.find(x => x.startTime <= time && x.endTime > time)\n      return audio ? audio.index : 0\n    } else {\n      video = this.videoTrak.find(x => x.startTime <= time && x.endTime > time)\n      audio = this.audioTrak.find(x => x.startTime <= time && x.endTime > time)\n      if (video && audio) {\n        return Math.min(video.index, audio.index)\n      } else if (video || audio){\n        return video ? video.index : audio.index\n      } else {\n        let last = Number.MAX_VALUE\n        if (this.videoTrak && this.videoTrak.length > 0) {\n          last = this.videoTrak.length - 1\n        }\n        if (this.audioTrak && this.audioTrak.length > 0) {\n          last = Math.min(this.audioTrak.length - 1, last)\n        }\n        return last\n      }\n    }\n  }\n\n  async _checkHasMeta () {\n    this.log(' loadMeta start')\n    this._metaLoading = true\n    const metaInfo = await this.MP4Loader.loadMeta(this.MP4Loader.cache, Math.round(this.CHUNK_SIZE / 2))\n    this._metaLoading = false\n    this.videoTrak = metaInfo.videoSegments\n    this.audioTrak = metaInfo.audioSegments\n    this.meta = {...metaInfo.meta, ext:{videoTrak: this.videoTrak, audioTrak: this.audioTrak}}\n    this.timeRange = this.getTimeRange()\n    this.bufferLoaded = new Uint8Array(0)\n    metaInfo.bufferLoaded = this.bufferLoaded\n    return true\n  }\n\n  resetFragmentLoadState (fragIndex){\n    for (let i = 0; i < this.timeRange.length; i++) {\n      if (i < fragIndex) {\n        this.timeRange[i].downloaded = true\n        this.timeRange[i].isLoading = true\n      } else {\n        this.timeRange[i].downloaded = false\n        this.timeRange[i].isLoading = false\n      }\n    }\n  }\n\n  getFragRange (fragIndex) {\n    let videoSeg = null\n    if (this.videoTrak) {\n      videoSeg = fragIndex < this.videoTrak.length ? this.videoTrak[fragIndex] : this.videoTrak[this.videoTrak.length - 1]\n    }\n    let audioSeg = null\n    if ( this.audioTrak) {\n      audioSeg = fragIndex < this.audioTrak.length ? this.audioTrak[fragIndex] : this.audioTrak[this.audioTrak.length - 1]\n    }\n    let videodiff = 0, audiodiff = 0\n    if (this.videoTrak && fragIndex >= this.videoTrak.length - 1) {\n      videodiff = -1\n    }\n    if (this.audioTrak && fragIndex >= this.audioTrak.length - 1) {\n      audiodiff = -1\n    }\n    const range = [\n      Math.min(videoSeg?.range[0] || Infinity, audioSeg?.range[0] || Infinity),\n      Math.max((videoSeg ?.range[1]) + videodiff || 0, (audioSeg?.range[1]) + audiodiff || 0)\n    ]\n    if (fragIndex < this.timeRange.length) {\n      this.timeRange[fragIndex].range = range\n    }\n    return range\n  }\n\n  async load (fragIndex, successCallback) {\n    this._loadSuccessCallBack = successCallback\n    if (this._switchBitRate && !this._metaLoading) {\n      this.log('[switchBitrate], switch bitRate start load, time,', fragIndex >= this.videoTrak.length ? this.audioTrak[fragIndex].startTime : this.videoTrak[fragIndex].startTime, ', fragIndex,',fragIndex)\n      const metaReady = await this._checkHasMeta()\n      if (this.changeBitRateTime > 0) {\n        if (this.timeRange[fragIndex].startTime <= this.changeBitRateTime && this.changeBitRateTime < this.timeRange[fragIndex].endTime) {\n          this.log('[switchBitrate], not need update load fragIndex', fragIndex,',stTime,',this.changeBitRateTime)\n        } else {\n          // 需要根据新码率的关键帧列表去找切换后码率的开始下载的fragIndex，修复不同码率关键帧不对齐导致卡播\n          fragIndex = this.getFragmentIdx(this.changeBitRateTime)\n          this.log('[switchBitrate], need update load fragIndex', fragIndex,',stTime,',this.changeBitRateTime, ',newBitrateTimeRange,',this.timeRange[fragIndex].startTime,'-',this.timeRange[fragIndex].endTime)\n          this.emit(MP4_EVENTS.UPDATE_LOAD_IDX, fragIndex)\n        }\n        this.seekTime = this.changeBitRateTime\n        this.changeBitRateTime = -1\n      }\n      this.resetFragmentLoadState(fragIndex)\n      this.log('[switchBitrate], reset timerange state,', fragIndex)\n      this._needInitSegment = true\n      this.resetTansmuxer()\n      if (metaReady) {\n        this._switchBitRate = false\n      }\n    }\n\n    if (this._switchBitRate && this._metaLoading) {\n      return\n    }\n    const range = this.getFragRange(fragIndex)\n    this.log('loadFragment,',fragIndex, ',range,',JSON.stringify(range))\n    if (this.seekTime > 0) {\n      const subRange = this.getSubRange(fragIndex, this.seekTime, range)\n      this.loadFragment(fragIndex, subRange)\n      this.seekTime = -1\n    } else {\n      this.loadFragment(fragIndex, range)\n    }\n  }\n\n  /**\n   * 查找离time最近的左边的关键帧的开始的range\n   * @param { fragIndex }\n   * @param { time }\n   * @param { range }\n   * @return {\n   *  range: array<number>,\n\n   * }\n   */\n\n  getSubRange (fragIndex, time, range) {\n    let videoStartRange = range[0]\n    let audioStartRange = range[0]\n    let i = 1\n    let find = false\n    this.log('>>>>>getSubRange time,',time, JSON.stringify(range))\n    if (this.videoTrak) {\n      const videoSeg = fragIndex < this.videoTrak.length ? this.videoTrak[fragIndex] : this.videoTrak[this.videoTrak.length - 1]\n      const keyFrameList = videoSeg.frames.filter(getKeyFrameList)\n      const videoTimescale = this.meta.videoTimescale\n      let startTime = keyFrameList[0].startTime / videoTimescale\n      this.log('>>>>>getSubRange video, startTime,',videoSeg.startTime,',endTime,',videoSeg.endTime)\n      for (let j = 0; j < keyFrameList.length; j++) {\n        this.log('>>>>>getSubRange video keyFrameList, startTime,',keyFrameList[j].startTime / videoTimescale,',range,',keyFrameList[j].offset)\n      }\n      for (; i < keyFrameList.length; i++) {\n        const endTime = keyFrameList[i].startTime / videoTimescale\n        if ( startTime <= time && time < endTime && range[0] < keyFrameList[i - 1].offset) {\n          videoStartRange = keyFrameList[i - 1].offset\n          find = true\n          this.log('>>>>>getSubRange video end, startTime,',startTime, ',endTime,',endTime, ',startRange,',videoStartRange, ', keyFrameIndex,',i - 1)\n          break\n        }\n        startTime = endTime\n      }\n      if (!find && startTime <= time && time < videoSeg.endTime + 0.8) {\n        videoStartRange = keyFrameList[i - 1].offset\n        this.log('>>>>>getSubRange video last, startTime,',startTime, ',endTime,',videoSeg.endTime, ',startRange,',videoStartRange)\n      }\n    }\n    i = 1\n    if (this.audioTrak) {\n      const audioSeg = fragIndex < this.audioTrak.length ? this.audioTrak[fragIndex] : this.audioTrak[this.audioTrak.length - 1]\n      const frameList = audioSeg.frames\n      const audioTimescale = this.meta.audioTimescale\n      i = Math.floor((time * audioTimescale - frameList[0].startTime) / audioSeg.frames[0].duration)\n      i = Math.min(frameList.length - 1, i)\n      let starttime = i > 0 ? frameList[i - 1].startTime / audioTimescale : frameList[0].startTime / audioTimescale\n      for ( ; i >= 0 && i < frameList.length; ) {\n        if (i > 0 && starttime > time) {\n          i -= 1\n          starttime = frameList[i].startTime / audioTimescale\n          continue\n        }\n        const endtime = (frameList[i].startTime + frameList[i].duration) / audioTimescale\n        if (starttime <= time && time < endtime && range[0] < frameList[i].offset) {\n          audioStartRange = frameList[i].offset\n          find = true\n          this.log('>>>>>getSubRange audio end, startTime,', starttime, ',endTime,', endtime, ',startRange,', audioStartRange, ', index,', i)\n          break\n        }\n        starttime = endtime\n        i++\n      }\n    }\n    const finalRange = [Math.min(audioStartRange, videoStartRange), range[1]]\n    this.log('>>>>>getSubRange finalRange ', JSON.stringify(finalRange), ',oldRange,',JSON.stringify(range))\n    return finalRange\n  }\n\n\n  onprogressDataArrive = async (data, state, options) => {\n    if (data && data.byteLength > 0) {\n      const curSegRange = this.timeRange[options.index].range\n      if (curSegRange && options.range[1] >= curSegRange[1] && !state) {\n        state = true\n      }\n      this.log('[mp4.loadFragment onprogressDataArrive ] receive data, >>> index,', options.index, ',range,', JSON.stringify(options.range), ', dataLen,', data.byteLength)\n      this._mux(data, options.range[0], options.index, state)\n    }\n    if (state) {\n      this.timeRange[options.index].downloaded = true\n      this.bufferLoadedPos = -1\n      this.log('[FragLoadDowned],fragmentIdx,',options.index,',rangeEnd,',options.range[1])\n    }\n  }\n\n  _mux (buffer, start, fragIndex, state) {\n    const videoIndexRange = this.getSamplesRange(fragIndex, 'video')\n    const audioIndexRange = this.getSamplesRange(fragIndex, 'audio')\n    const range = [start, start + buffer.byteLength]\n    if (this.transmuxerWorkerControl) {\n      const context = {\n        range,\n        state,\n        fragIndex\n      }\n      this.log('[transmuxerworker start] ,range, ',JSON.stringify(range), ',dataLen,',buffer.byteLength, context)\n      this.transmuxerWorkerControl.transmux(this.workerSequence, buffer, start, videoIndexRange, audioIndexRange, this.meta.moov, this.useEME, this.kidValue, context)\n    } else {\n      try {\n        if (!this.MP4Demuxer) {\n          this.MP4Demuxer = new MP4Demuxer(this.videoTrak, this.audioTrak, null,{openLog: checkOpenLog()})\n        }\n        const demuxRet = this.MP4Demuxer.demuxPart(buffer, start, videoIndexRange, audioIndexRange, this.meta.moov, this.useEME, this.kidValue)\n        if (!this.FMP4Remuxer && (!this.checkCodecH265() || this.options.supportHevc)) {\n          this.FMP4Remuxer = new FMP4Remuxer(this.MP4Demuxer.videoTrack, this.MP4Demuxer.audioTrack, {openLog: checkOpenLog()})\n        }\n        let res\n        this.log('[mux], videoTimeRange,',demuxRet.videoTrack ? [demuxRet.videoTrack.startPts, demuxRet.videoTrack.endPts] : null, ',audioTimeRange,',demuxRet.audioTrack ? [demuxRet.audioTrack.startPts, demuxRet.audioTrack.endPts] : null)\n        const startPts = Math.min(demuxRet.videoTrack.startPts, demuxRet.audioTrack.startPts)\n        const endPts = Math.max(demuxRet.videoTrack.endPts, demuxRet.audioTrack.endPts)\n        const timeRange = [startPts, endPts]\n        if (this.FMP4Remuxer) {\n          const remuxRes = this.FMP4Remuxer.remux(this._needInitSegment, {initMerge: true, range: range})\n          remuxRes.initSegment && (this._needInitSegment = false)\n          const data = util.concatData(remuxRes.audioSegment,remuxRes.videoSegment)\n          res = {\n            buffer: data,\n            range,\n            state,\n            context: {\n              range, fragIndex, timeRange\n            },\n            initSeg: remuxRes.initSegment\n          }\n        } else {\n          res = {\n            videoTrack: demuxRet.videoTrack,\n            audioTrack: demuxRet.audioTrack,\n            buffer: null,\n            range,\n            state,\n            context: {\n              range, fragIndex, timeRange\n            }\n          }\n        }\n        this._loadSuccessCallBack && this._loadSuccessCallBack(res)\n      } catch (e) {\n        console.error('mux err:', e)\n        const err = new ParserError(ERROR_TYPES.remux, ERROR_CODES.muxError, {msg:JSON.stringify(e)})\n        this.errorHandler(err, 'mux', {fragIndex, range: [start, start + buffer.byteLength]})\n      }\n    }\n  }\n\n  getSamplesRange (fragmentIdx, type) {\n    const range = []\n    switch (type) {\n      case 'video':\n        if (this.videoTrak && fragmentIdx < this.videoTrak.length ) {\n          const frames = this.videoTrak[fragmentIdx].frames\n          range.push(frames[0].index)\n          range.push(frames[frames.length - 1].index)\n        }\n        break\n      case 'audio':\n        if (this.audioTrak && fragmentIdx < this.audioTrak.length ) {\n          const frames = this.audioTrak[fragmentIdx].frames\n          range.push(frames[0].index)\n          range.push(frames[frames.length - 1].index)\n        }\n        break\n      default:\n        console.warn('[getSamplesRange] type ', type, ' is invalid')\n        break\n    }\n    return range\n  }\n\n  async loadFragment (fragIndex, range) {\n    if (this._isPending || (range.length > 0 && range[0] === 0 && range[1] === 0) || this.timeRange[fragIndex].isLoading) {\n      return\n    }\n    this.log('[MP4.loadFragment] ,fragIndex,', fragIndex, ',range ', range, ',len ,', range[1] - range[0],', bufferLoaded_Len,', this.bufferLoaded.byteLength)\n    if (range.length >= 2 && range[1] && range[1] > 0 && range[1] <= this.bufferLoaded.byteLength) {\n      this.timeRange[fragIndex].isLoading = true\n      const start = Math.max(range[0], this.bufferLoadedPos)\n      const buffer = new Uint8Array(this.bufferLoaded.slice(start, range[1]))\n      this.log('[mp4.loadFragment] has all data: ', start, range[1])\n      this.timeRange[fragIndex].downloaded = true\n      this.bufferLoadedPos = -1\n      this._mux(buffer, start, fragIndex, true)\n    } else {\n      // // 对range进行缩减，已经有的数据不在重复下载\n      if (range.length >= 2 && range[0] && range[0] <= this.bufferLoaded.byteLength) {\n        if (!this.timeRange[fragIndex].isLoading) {\n          const start = Math.max(range[0], this.bufferLoadedPos)\n          const buffer = new Uint8Array(this.bufferLoaded.slice(start, range[1]))\n          if (buffer.byteLength > 0) {\n            this.bufferLoadedPos = start + buffer.byteLength\n            this.log('[mp4.loadFragment] has part data: ', start, start + buffer.byteLength)\n            this._mux(buffer, start, fragIndex, range[1] <= this.bufferLoadedPos)\n            return\n          }\n          if (!this._metaLoading && !this.timeRange[fragIndex].isLoading) {\n            this.log('[mp4.loadFragment] ready to load part data >>> ', this.bufferLoaded.byteLength, range[1])\n            this.timeRange[fragIndex].isLoading = true\n            await this.startLoad([this.bufferLoaded.byteLength, range[1]],fragIndex)\n          }\n        }\n      } else {\n        if ((!this._metaLoading || range[0] >= this.CHUNK_SIZE ) && !this.timeRange[fragIndex].isLoading) {\n          this.timeRange[fragIndex].isLoading = true\n          this.log('[mp4.loadFragment],ready to load all data ,segmentIdx, ', fragIndex, ',range >>> ', JSON.stringify(range))\n          await this.startLoad(range,fragIndex)\n        }\n      }\n    }\n  }\n\n  async startLoad (range, fragIndex){\n    try {\n      await this.MP4Loader.loadData(range, this.MP4Loader.cache, {\n        index: fragIndex,\n        onProgress: this.onprogressDataArrive,\n        onProcessMinLen: this.options.onProcessMinLen\n      })\n    } catch (e) {\n      console.error('[MP4] trigger errorHandler getMetaInfo', e?.message)\n      this.loadError(e, 'loadFragment', {range, fragIndex})\n    }\n  }\n\n  loadError (e, loadState, context) {\n    !e.response && (e.response = {})\n    if (e.isTimeout) {\n      e.response.status = 'timeout'\n    } else if (!e?.response?.status) {\n      e.response.status = 'networkError'\n    }\n    this.errorHandler(e, loadState, context)\n  }\n\n  async cancelLoading () {\n    await this.MP4Loader && this.MP4Loader.cancel()\n  }\n\n  update (url) {\n    this.url = url\n  }\n\n\n  checkCodecH265 () {\n    const isHvc = this.meta && (this.meta.videoCodec.indexOf('hvc1') > -1 ||\n      this.meta.videoCodec.indexOf('hev1') > -1\n    )\n    return isHvc\n  }\n\n  destroy () {\n    if (this.hasDestroyed) {\n      return\n    }\n    this.resetTansmuxer()\n    this.transmuxerWorkerControl && this.transmuxerWorkerControl.destroy()\n    this._isPending = false\n    this._metaLoading = false\n    this.bufferLoadedPos = 0\n    this.bufferLoaded = new Uint8Array(0)\n    if (this.MP4Loader) {\n      this.MP4Loader.cancel()\n      this.MP4Loader.destroy()\n    }\n    this.hasDestroyed = true\n  }\n\n  resetTansmuxer () {\n    this.MP4Demuxer && this.MP4Demuxer.reset()\n    this.MP4Demuxer = null\n    this.FMP4Remuxer && this.FMP4Remuxer.reset()\n    this.FMP4Remuxer = null\n    this.transmuxerWorkerControl && this.transmuxerWorkerControl.reset()\n  }\n}\n\nexport {\n  MP4 as default,\n  MP4_EVENTS\n}\n\nfunction getKeyFrameList (frame){\n  if (frame.keyframe) return frame\n}\n","export default class Timer {\n  constructor (onTick) {\n    this.onTick_ = onTick\n    this.cancelPending_ = null\n  }\n\n  tickAfter (delayInSeconds, callback = null) {\n    this.stop()\n    let alive = true\n    let timeoutId = null\n\n    this.cancelPending_ = () => {\n      window.clearTimeout(timeoutId)\n      alive = false\n    }\n\n    const onTick = () => {\n      if (alive) {\n        this.onTick_()\n        if (callback) {\n          callback()\n        }\n      }\n    }\n\n    timeoutId = window.setTimeout(onTick, delayInSeconds * 1000)\n\n    return this\n  }\n\n  tickEvery (seconds) {\n    this.tickAfter(seconds, () => {\n      this.tickEvery(seconds)\n    })\n  }\n\n  stop () {\n    if (this.cancelPending_) {\n      this.cancelPending_()\n      this.cancelPending_ = null\n    }\n  }\n}\n","export default class ProxyPromise {\n  constructor () {\n    let resolvePromise\n    let rejectPromise\n\n    const promise = new Promise((resolve, reject) => {\n      resolvePromise = resolve\n      rejectPromise = reject\n    })\n\n    const publicPromise = promise\n    publicPromise.resolve = function (data) {\n      resolvePromise(data)\n      publicPromise.state = 'fulfilled'\n    }\n    publicPromise.reject = function (error) {\n      rejectPromise(error)\n      publicPromise.state = 'rejected'\n      publicPromise.isBreak = error === 'DESTROYED'\n    }\n    publicPromise.state = 'pending'\n\n    return publicPromise\n  }\n\n  /** @param {T=} value */\n  // eslint-disable-next-line no-unused-vars\n  resolve (value) {\n    //\n  }\n\n  /** @param {*=} reason */\n  // eslint-disable-next-line no-unused-vars\n  reject (reason) {\n    //\n  }\n}\n","/* eslint-disable array-callback-return */\n// import 'core-js/modules/es7.string.pad-start';\nimport { BasePlugin, Events, Sniffer, Errors, Util } from 'xgplayer'\nimport MP4, { MP4_EVENTS } from './mp4'\nimport { ERROR_TYPES, ERROR_CODES } from './error'\nimport { MSE } from 'xgplayer-streaming-shared'\nimport util from './util'\nimport Timer from './util/timer'\nimport ProxyPromise from './util/proxy-promise'\nimport { log } from './util/logger'\n\nconst DESTROYED = 'DESTROYED'\n\nlet _playerPlayNext = null\n\nlet _playerStartInit = null\n\nlet _playerChangeDefinition = null\n\nlet _playerSwitchUrl = null\n\nexport default class Mp4Plugin extends BasePlugin {\n  static get pluginName () {\n    return 'mp4Plugin'\n  }\n\n  static get defaultConfig () {\n    return {\n      maxBufferLength: 40,\n      minBufferLength: 5,\n      disableBufferBreakCheck: false,\n      waitingTimeOut: 15000,\n      waitingInBufferTimeOut: 5000,\n      waitJampBufferMaxCnt:3,\n      tickInSeconds: 0.1,\n      reqOptions: null,\n      closeDowngrade: false\n    }\n  }\n\n  static get version () {\n    return __VERSION__\n  }\n\n  constructor (options) {\n    super(options)\n    this.mp4 = null\n    this.mse = null\n    this._waitAdjustTimeCnt = 0\n    this._lastCheckTime = util.nowTime()\n    this._removeBuffeEndTime = 0\n    this._pendingPromises = []\n  }\n\n  afterCreate () {\n    window.__mp4player = this\n    try {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        __url: {\n          get: () => {\n            try {\n              return this.mse ? this.mse.url : this.config.url\n            } catch (error) {\n              return null\n            }\n          }\n        }\n      })\n    } catch (e) {\n      // NOOP\n    }\n\n    this._proxyPlayer()\n  }\n\n  attachEvents () {\n    this.off(Events.SEEKING, this._onSeeking)\n    this.on(Events.SEEKING, this._onSeeking)\n    this.on(Events.WAITING, this._onWaiting)\n    this.off(Events.URL_CHANGE, this.switchURL)\n    this.on(Events.URL_CHANGE, this.switchURL)\n  }\n\n  detachEvents () {\n    this.off(Events.SEEKING, this._onSeeking)\n    this.off(Events.WAITING, this._onWaiting)\n    this.off(Events.URL_CHANGE, this.switchURL)\n  }\n\n  /**\n   * 代理播放器的相关API\n   * platNext、_startInit\n   */\n  _proxyPlayer () {\n    if (typeof this.player.playNext === 'function') {\n      _playerPlayNext = this.player.playNext\n    }\n    this.player.playNext = (...args) => {\n      this.playNext(...args)\n    }\n\n    _playerStartInit = this.player._startInit\n    _playerSwitchUrl = this.player.switchURL\n    _playerChangeDefinition = this.player.changeDefinition\n\n    this.player._startInit = this._playerStartInit.bind(this)\n    this.player.switchURL = this.switchURL.bind(this)\n    this.player.changeDefinition = this.changeDefinition.bind(this)\n\n    this.player.removeHooks('replay', this._replayHook)\n\n    this.player.removeHooks('retry', this._retryHook)\n  }\n\n  _playerStartInit (url) {\n    const { config, playerConfig } = this\n    if (config.supportHevc === undefined) {\n      if (Sniffer?.isHevcSupported && Sniffer.isHevcSupported()) {\n        config.supportHevc = true\n      }\n    }\n    const ret = this.initMp4()\n    this._initPromise = ret\n    this._addPendingPromise(this._initPromise)\n    if (this.mse && Util.typeOf(url) === 'String' && /^blob/.test(url) && url !== this.mse.url) {\n      url = playerConfig.url\n    }\n    ret.then(() => {\n      if (this.mse) {\n        url = this.mse.url\n      }\n      this.attachEvents()\n      this._startProgress()\n    }).catch((e) => {\n      const isBreak = this._initPromise ? this._initPromise.isBreak : false\n      if (this.isDestroy || isBreak) {\n        return\n      }\n\n      let err = e\n      if (!err.errorCode) {\n        err = new Errors(this.player, {\n          errorType: ERROR_TYPES.RUNTIME, // 'runtime',\n          // errorTypeCode: e?.errorTypeCode || ERROR_TYPES.runtime,\n          errorCode: e?.errorCode || ERROR_CODES.other,\n          vid: this.playerConfig.vid,\n          errorMessage: e?.errorMessage || e?.message,\n          mediaError: {\n            code: e?.httpCode || ERROR_CODES.other,\n            message: e?.errorMessage || e?.message,\n            errorType:e?.errorType\n          }\n        })\n        err.url = url\n      }\n      this.useVideoLoad = true\n      this.player.vtype = 'MP4_1'\n      this.player.emit('playCatch', this.player.vtype, err)\n    }).finally(() => {\n      if (!this._initPromise) {\n        return\n      }\n      const { isBreak } = this._initPromise\n      if (isBreak) {\n        return\n      }\n      this._initPromise && this._removePendingPromise(this._initPromise)\n      this._initPromise = null\n      !this.isDestroy && !isBreak && _playerStartInit.call(this.player, url)\n    })\n  }\n\n  initMp4 () {\n    const { player } = this\n    if (!player.config.vid) {\n      player.config.vid = Date.now()\n    }\n    const _promise = new ProxyPromise()\n    if (this.mp4) {\n      this.mp4.off(MP4_EVENTS.META_READY, this._onMp4MetaReady)\n      this.mp4.off(MP4_EVENTS.ERROR, this._onMp4Error)\n      this.mp4.off(MP4_EVENTS.MOOV_REQ_PROGRESS, this._onMp4DataCallBack)\n      this.mp4.destroy()\n      this.mp4 = null\n    }\n    this.mp4 = new MP4(player.config.url, {...this.config, vid: player.config.vid})\n    this.mp4.on(MP4_EVENTS.META_READY, this._onMp4MetaReady)\n    this.mp4.on(MP4_EVENTS.ERROR, this._onMp4Error)\n    this.mp4.on(MP4_EVENTS.MOOV_REQ_PROGRESS, this._onMp4DataCallBack)\n    this.mp4.on(MP4_EVENTS.UPDATE_LOAD_IDX, (fragment) => {\n      this._curLoadSegmentIdx = fragment\n      this.log('[update curLoadSegmentIdx]',fragment)\n    })\n    this.mp4.init()\n    return _promise\n  }\n\n  _onMp4DataCallBack = () => {\n    if (this._isMseInit) {\n      this._onTimeUpdate()\n    }\n  }\n\n  _onMp4MetaReady = (meta) => {\n    const { config } = this\n    const isH265 = this.mp4.checkCodecH265()\n    try {\n      if (isH265 && !this.config.supportHevc) {\n        const message = 'browser not support HEVC'\n        const _err = new Errors(this.player, {\n          errorType: 'runtime',\n          errorTypeCode: ERROR_TYPES.runtime,\n          errorCode: ERROR_CODES.h265Error,\n          errorMessage: message,\n          vid: config.vid,\n          mediaError: { code: ERROR_CODES.h265Error, message: message}\n        })\n        this._errorHandler(_err)\n      } else {\n        this._initMse(meta)\n        this._initPromise.resolve()\n      }\n    } catch (e) {\n      const _err = new Errors(this.player, {\n        errorType: 'runtime',\n        errorTypeCode: ERROR_TYPES.runtime,\n        errorCode: ERROR_CODES.mse,\n        errorMessage: e?.message,\n        vid: config.vid,\n        mediaError: { code: ERROR_CODES.other1, message: e?.message}\n      })\n      this._errorHandler(_err)\n      return\n    }\n    this._loadData()\n  }\n\n  setConfig (newConfig) {\n    this.config = Object.assign(this.config, newConfig)\n  }\n\n  /**\n   * 播放下一个\n   * @param { any } newConfig 播放器\n   */\n  playNext (newConfig) {\n    const { player } = this\n    this._defInited = false\n\n    player.resetState()\n    player._currentTime = 0\n    player._duration = 0\n    player.isPlaying = false\n    this._MSEError = false\n    player.pause()\n    this._reset()\n    player.setConfig(newConfig)\n    this.log('[Index] playNext', newConfig)\n    player.play()\n    // 下发播放下一个视频事件\n    this.emit('playnext')\n  }\n\n  checkDegrade (error) {\n    const { closeDowngrade } = this.config\n    return !closeDowngrade || error.httpCode === 'networkError'\n  }\n\n\n  _onMp4Error = (err) => {\n    const { vid } = this.playerConfig\n    console.error('[Index] _onMp4Error', vid, err)\n    this._errorHandler(err)\n  }\n\n  _errorHandler (err) {\n    const {player, config} = this\n    if (!player || this.useVideoLoad) {\n      return\n    }\n    if (!err.url && this.mp4?.url) {\n      err.url = this.mp4.url\n    }\n    const preState = player.paused\n    console.error('final error !!!!, ', config.vid, err)\n    this.player.vtype = 'MP4_2'\n    this.player.emit('playCatch', this.player.vtype, err)\n    const isDegrade = this.checkDegrade(err)\n    if (isDegrade) {\n      if (this._initPromise) {\n        this._removeAndRejectInitPromise(err)\n      } else {\n        this._startDegradedPlayback(err, preState)\n      }\n    } else {\n      this.player.pause()\n      this._reset()\n      const { currentTime } = player\n      this.destroyMSE()\n      player.currentTime = currentTime\n      this.emit('error', err)\n    }\n  }\n\n  /**\n   * @@description 降级到video播放\n   */\n  _startDegradedPlayback (err, preState) {\n    console.log('>>>_startDegradedPlayback')\n    const { player, playerConfig } = this\n    this.useVideoLoad = true\n    this.destroyMSE()\n    this._currentTime = player.currentTime\n    this.__onmetadataHandle = () => {\n      if (this._currentTime) {\n        player.currentTime = this._currentTime\n      }\n      if (preState) {\n        this.player.pause()\n      } else {\n        this.player.play()\n      }\n      player.media.removeEventListener('loadedmetadata', this.__onmetadataHandle)\n      this.__onmetadataHandle = null\n    }\n    player.media.addEventListener('loadedmetadata', this.__onmetadataHandle)\n    const _url = playerConfig.url\n    player.media.src = _url\n  }\n\n  _addPendingPromise (p) {\n    this._pendingPromises.push(p)\n  }\n\n  _removePendingPromise (p) {\n    // this.log(LogCacheLevel.LOG,'removePendingPromise', p?.id)\n    const idx = this._pendingPromises.indexOf(p)\n    if (idx > -1) {\n      this._pendingPromises.splice(idx, 1)\n    }\n  }\n\n  _cancelPendingPromises () {\n    if (this._pendingPromises.length > 0) {\n      this._pendingPromises.forEach(promise => {\n        promise.reject(DESTROYED)\n      })\n    }\n    this._pendingPromises = []\n  }\n\n  _removeAndRejectInitPromise (error) {\n    if (this._initPromise) {\n      this._removePendingPromise(this._initPromise)\n      this._initPromise.reject(error)\n    }\n  }\n\n  /**\n   * 初始化MSE信息\n   * @param {*} mp4\n   * @param {*} meta\n   * @param {*} promise\n   * @param {*} preloadTimeCache\n   */\n  async _initMse (meta) {\n    if (this.mse) {\n      await this.mse.unbindMedia()\n      this.mse = null\n    }\n    const isHvc = this.mp4 && this.mp4.checkCodecH265()\n    const hasVideo = !!meta.videoCodec\n    const hasAudio = !!meta.audioCodec\n\n    let codec\n    if (hasVideo && hasAudio) {\n      codec = isHvc ? 'video/mp4; codecs=\"hev1.1.6.L93.B0, mp4a.40.5\"' : 'video/mp4; codecs=\"avc1.64001E, mp4a.40.5\"'\n    } else if (hasVideo) {\n      codec = isHvc ? 'video/mp4; codecs=\"hev1.1.6.L93.B0\"' : 'video/mp4; codecs=\"avc1.64001E\"'\n    } else {\n      codec = 'video/mp4; codecs=\"mp4a.40.5\"'\n    }\n\n    const contentTypes = { [MSE.VIDEO]: { mimeType: 'video/mp4', codec } }\n    this.mse = new MSE()\n    const openPromise = this.mse.bindMedia(this.player.video)\n    openPromise.then(()=> {\n      const contentTypesLocal = Object.keys(contentTypes)\n      try {\n        for (let i = 0; i < contentTypesLocal.length; i++) {\n          const type = contentTypesLocal[i]\n          this.mse.createSource(type, contentTypes[type].codec)\n        }\n      } catch (e) {\n        console.error('MSE error: ',e)\n        this._errorHandler(e)\n      }\n      this._isMseInit = true\n      this._onTimeUpdate()\n    })\n  }\n\n  /**\n   * 销毁MSE对象 // 在重用MSE的时候，如果降级到video原生播放，单实例复用时，需要重新绑定url.所以降级到video原生的需要删除mse对象\n   */\n  async destroyMSE() {\n    await this.mse?.unbindMedia()\n    this.mse = null\n  }\n\n  _onTimeUpdate () {\n    const { mse, mp4, player, config } = this\n    if (!mp4) return\n    const timeRange = mp4.timeRange\n    const range = player.getBufferedRange(player.buffered2)\n    if ( mse && mp4 && mp4.canDownload) {\n      if (util.nowTime() - this._lastCheckTime > 1000) {\n        this._lastCheckTime = util.nowTime()\n        this._loadStuckCheck()\n        this._checkRemoveSourceBuffer(range, player.currentTime)\n      }\n      const cacheMaxTime = player.paused ? player.currentTime + config.minBufferLength : player.currentTime + config.maxBufferLength\n      if (range[1] - cacheMaxTime < 0) {\n        timeRange.every((item, idx) => {\n          if (item.downloaded) {\n            return true\n          }\n          // 为了避免切换码率卡顿，仍有一小段旧码率的数据buffer，在此处算有buffer不会下载,所以排除下切换码率\n          if (!this._isChangeDefinition && item.endTime - item.startTime > 1 && this._isInBuffer(item)) {\n            item.downloaded = true\n            item.isLoading = true\n            this.log(`onTimeUpdate, ${idx} download segment, has buffer`,item.startTime, item.endTime)\n            return true\n          }\n          if (item.startTime - player.currentTime < config.maxBufferLength) {\n            this._curLoadSegmentIdx = idx\n            this.log('[onTimeUpdate],load index==>>>, ', idx, ',IdxTimeRange, ', item.startTime, '-', item.endTime, ',buffEnd, ', range[1], ',playCurTime,', player.currentTime, ', bufferLen,', range[1] - player.currentTime, ',bufferRangeList,',this.player.buffered2 ? this.player.buffered2.bufferedList : null)\n            this._loadData()\n          }\n        })\n      }\n      this._isEnded()\n    }\n    this.checkRemoveOldBitrateBuffer()\n  }\n\n  checkRemoveOldBitrateBuffer () {\n    const { mse, player } = this\n    if ( mse && this._removeBuffeEndTime > 0 && player.currentTime > this._removeBuffeEndTime + 1) {\n      this.log('remove old bitrate buffer',this._removeBuffeEndTime)\n      mse.remove(MSE.VIDEO, 0, this._removeBuffeEndTime - 1)\n      this._removeBuffeEndTime = 0\n    }\n  }\n\n  // 如果item所在的区间有buffer，则不进行重复下载\n  _isInBuffer (item, gap = 0) {\n    let inbuffer = false\n    const buffered = this.player.video.buffered\n    for (let i = 0; i < buffered.length; i++) {\n      const start = buffered.start(i) - gap\n      const end = buffered.end(i) + gap\n      if (start <= item.startTime && item.endTime <= end) {\n        inbuffer = true\n        break\n      }\n    }\n    return inbuffer\n  }\n\n  async _loadData () {\n    if (!this.mp4 || !this._isMseInit) {\n      this.log('loadData, player.mp4 null', this._isMseInit)\n      return\n    }\n    try {\n      await this.mp4.load(this._curLoadSegmentIdx, this._loadDataSuccess)\n    } catch (e) {\n      console.error('[Index] _loadData error', this.playerConfig.vid , e)\n    }\n  }\n\n  _loadDataSuccess = (data) => {\n    if (this.isDestroy || !this.mse) {\n      return\n    }\n    this.log('[loadFragment] _loadDataSuccess ', JSON.stringify(data.context.range), ',dataLen,', data.buffer ? data.buffer.byteLength : 0, data.state)\n    try {\n      if (data.initSeg) {\n        this._appendInitSeg(data.initSeg)\n        if (!data.buffer || data.buffer.byteLength < 1) {\n          this.log('no data, must load data')\n          this._onTimeUpdate()\n        }\n      }\n      const {buffer, state, context } = data\n      // 为了修复，可能最后一小部分回来的数据，并没有借出来任何的帧数据，所以没有调用append,不能触发计算bufferEndTime\n      if (this.mse && state && (!buffer || buffer.byteLength <= 0) && context.fragIndex === this.mp4.timeRange.length - 1) {\n        const buffered = this.player.buffered\n        if (buffered && buffered.length > 0) {\n          this.bufferEndTime = buffered.end(buffered.length - 1)\n        }\n        this._isEnded()\n        this.log('loaded ended !!!==>>>', JSON.stringify(context.range), ', fragIndex,',context.fragIndex, ', bufferEndTime,',this.bufferEndTime, ',meta_duration,',this.mp4.meta.duration)\n      }\n      if (this.mse && state && context.fragIndex === this.mp4.timeRange.length - 1 && (!buffer || buffer.byteLength <= 0)) {\n        const buffered = this.player.buffered\n        if (buffered && buffered.length > 0) {\n          this.bufferEndTime = buffered.end(buffered.length - 1)\n        }\n        this._isEnded()\n        this.log('load ended !!!==>>>', this.playerConfig.vid, JSON.stringify(context.range), ', fragIndex,',context.fragIndex, ', bufferEndTime,',this.bufferEndTime, ',meta_duration,',this.mp4.meta.duration)\n      }\n      if (buffer && this.mse) {\n        if (buffer && buffer.byteLength > 0) {\n          this._appendBuffer(MSE.VIDEO, buffer, context, state)\n        }\n      }\n    } catch (e) {\n      // TODO: 测试异常处理逻辑\n      this.log('appendBuffer error', e)\n      const _err = new Errors(this.player, {\n        errorType: 'runtime',\n        errorTypeCode: ERROR_TYPES.runtime,\n        errorCode: ERROR_CODES.mse,\n        vid: this.player.config.vid,\n        errorMessage: e.message,\n        mediaError: {code: ERROR_CODES.mse, message: e.message}\n      })\n      this._errorHandler(_err)\n    }\n    if (data?.state) {\n      this._onTimeUpdate()\n    }\n  }\n\n  _onWaiting = () => {\n    const { player, config } = this\n    clearTimeout(this._waitInBufferTimer)\n    this._waitInBufferTimer = null\n    const curTime = player.currentTime\n    // console.log('[>>>>onWaiting],currentTime, ',curTime, util.nowTime())\n    const buffer = player.bufferedPoint\n    if (buffer.end > 0 && buffer.end - player.currentTime >= 2) {\n      if (this._waitAdjustTimeCnt < config.waitJampBufferMaxCnt) {\n        this._waitInBufferTimer = setTimeout(() => {\n          this._waitAdjustTimeCnt++\n          player.currentTime = player.currentTime + 0.5\n          this.log('[waitInBufferTimeout], waitAdjustTimeCnt,', this._waitAdjustTimeCnt, ',curtime,', curTime, util.nowTime())\n        }, config.waitingInBufferTimeOut)\n      }\n    }\n  }\n\n  _onSeeking = async () => {\n    const { player, mp4 } = this\n    const curTime = player.currentTime\n    this.log('[seekTime], curTime,',curTime, ',buffer,',player.buffered2.bufferedList)\n    if (!mp4 || !mp4.meta) {\n      return\n    }\n    this.endofstream = false\n    mp4.bufferLoadedPos = -1\n    mp4._metaLoading = false\n    const buffered = player.bufferedPoint\n    let hasBuffered = false\n    let fragIndex = 0\n    if (buffered.end > 0) {\n      hasBuffered = true\n      if (mp4.meta.duration - buffered.end < 0.5) {\n        this._startProgress()\n        this.log('[seeking in buffered range], buffer end,',buffered.end, ', duration,', mp4.meta.duration)\n        return\n      }\n      fragIndex = mp4.getFragmentIdx(buffered.end)\n      if (this._curLoadSegmentIdx === fragIndex) {\n        this._startProgress()\n        this.log('[seeking in buffered range], seek fragIndex is current load segmentIdx', fragIndex)\n        return\n      }\n      mp4.seekTime = buffered.end\n      fragIndex < 0 && (fragIndex = this._curLoadSegmentIdx)\n      this.log('[seeking in buffered range], seekTime ', curTime,',bufferRange,',buffered.start, '-',buffered.end, ', fragIndex,', fragIndex)\n    }\n    if (!hasBuffered) {\n      mp4.seekTime = curTime\n      fragIndex = mp4.getFragmentIdx(curTime)\n      fragIndex < 0 && (fragIndex = this._curLoadSegmentIdx)\n      this.log('[seekTime out buffer range], curTime,', curTime, ', Idx,', fragIndex)\n      const { mse } = this\n      if (mse && mse.isFull()) {\n        const bufferList = player.buffered2.bufferedList\n        const bufferRange = bufferList[bufferList.length - 1]\n        mse.clearOpQueues(MSE.VIDEO)\n        this._checkRemoveSourceBuffer([bufferRange.start, bufferRange.end], player.currentTime , true, true)\n      }\n    }\n    await mp4.cancelLoading()\n    mp4.resetFragmentLoadState(fragIndex)\n    this._curLoadSegmentIdx = fragIndex\n    this._onTimeUpdate()\n    this._startProgress()\n    this._isEnded()\n  }\n\n\n  _appendInitSeg (initSeg) {\n    // 校验是否是h265的视频\n    if (!this.mp4 || !this.mse) return\n    this.mse.append(MSE.VIDEO, initSeg, {vid: this.playerConfig.vid, range: null, dataLen: initSeg.byteLength, isinit: true}).then((data) => {\n      this.log('appendInitSeg end ==>>>', data.context ? data.context : null, ', costTime,', data.costtime)\n    })\n  }\n\n\n  _appendBuffer (codec, buffer, context = {},state) {\n    const { mse, config } = this\n    mse.append(codec, buffer, {vid:config.vid, fragIndex: context.fragIndex, range: context.range, dataLen: buffer.byteLength, state}).then((data) => {\n      this.log('player appendBuffer end ==>>>', data.context ? data.context : null, ', costTime,', data.costtime, ', opt,', data.name,',bufferRange,',this.player.getBufferedRange())\n      if (this.mse && context.state && context.fragIndex === this.mp4.timeRange.length - 1) {\n        const buffered = this.player.buffered\n        if (buffered && buffered.length > 0) {\n          this.bufferEndTime = buffered.end(buffered.length - 1)\n        }\n        this._isEnded()\n        this.log('loaded ended !!!==>>>', context.range, ', fragIndex,',context.fragIndex, ', bufferEndTime,',this.bufferEndTime, ',meta_duration,',this.mp4.meta.duration)\n      }\n    }).catch((error) => {\n      console.log('[MSE error]', error)\n      if (error && mse?.isFull()) {\n        const bufferRange = this.player.getBufferedRange(this.player.buffered2)\n        this._checkRemoveSourceBuffer(bufferRange, this.player.currentTime, true)\n      }\n    })\n  }\n\n  /**\n   *清除sourcebuffer中播放过的数据\n   */\n  _checkRemoveSourceBuffer (sourceBufferRange, currentTime, mustClear) {\n    const { mse, mp4, player } = this\n    if (!mse || !mp4 || !player) return\n    if (mustClear) {\n      clearTimeout(this._removeBufferTimer)\n      this._removeBufferTimer = null\n    }\n    if (!sourceBufferRange) sourceBufferRange = player.getBufferedRange(player.buffered2)\n    if (!currentTime) currentTime = player.currentTime\n    if (!mustClear && util.nowTime() - this._checkRemoveBufferLastTime <= this.config.removeBufferLen || this.endofstream) return\n    this._checkRemoveBufferLastTime = util.nowTime()\n    if (sourceBufferRange && sourceBufferRange[0] >= 0 && (currentTime - sourceBufferRange[0] > this.config.removeBufferLen || mse.isFull())) {\n      const time = sourceBufferRange[1]\n      const segmentIdx = mp4.getFragmentIdx(time)\n      if (segmentIdx >= 0 && (mp4.timeRange[segmentIdx].startTime < currentTime)) {\n        const clearEnd = Math.floor(Math.min(mp4.timeRange[segmentIdx].startTime, sourceBufferRange[1]))\n        if (sourceBufferRange[0] < clearEnd) {\n          this.log('[checkremoveSourceBuffer], remove range==>>>', sourceBufferRange[0], clearEnd)\n          mse.remove(MSE.VIDEO, sourceBufferRange[0], clearEnd)\n        } else if (mse.isFull() && !this._removeBufferTimer) {\n          this._removeBufferTimer = setTimeout( () => {this._checkRemoveSourceBuffer( null, null, true)}, 10 * 1000)\n        }\n      }\n    }\n  }\n\n  /**\n   * 检查是否播放完成\n   * @returns {Boolean}\n   */\n  _isEnded () {\n    const { player, mp4 } = this\n    const buffered = player.bufferedPoint\n    const _end = buffered ? buffered.end : 0\n    if (!this.endofstream && this.mse && mp4.meta.duration - player.currentTime < 0.5) {\n      this.log('[check player isEnded],deal mse.endOfStream, currentTime,',player.currentTime, ', bufferend,',_end, ', duration,',mp4.meta.duration)\n      this.endofstream = true\n      this.mse.endOfStream()\n    }\n    if (mp4 && mp4.meta && mp4.meta.duration - player.currentTime < 0.5) {\n      this._stopProgress()\n      this.log('[check player isEnded],stopProgress and endOfStream,currentTime, ',player.currentTime, ', bufferend,',_end, ', duration,',mp4.meta.duration)\n      this.mse && this.mse.endOfStream()\n      return true\n    }\n    return false\n  }\n\n\n  /**\n   * 切换播放源，用于同一个视频的不同播放源切换\n   * @param { string ||  Array<{ src: string,  [propName: string]: any; // 扩展定义}> } url\n   */\n  switchURL (definitionInfo) {\n    this.changeDefinition(definitionInfo)\n  }\n\n  oldChangeDefinition (to, from) {\n    const { config, player } = this\n    this.log('[oldChangeDefinition],currentTime,',player.currentTime, ',from,',from, ',to,',to)\n    const { currentTime, paused} = player\n    if (!this._changeDefState) {\n      this._changeDefState = {currentTime: currentTime, paused: paused}\n      this.log('[oldChangeDefinition],currentTime,',player.currentTime, ',pause,',paused)\n    }\n    player.config.url = to.url\n    config.focusUserDefinition = true\n    player.currentTime = 0\n    player.pause()\n    this._reset()\n    this._isMseInit = false\n    this._changeDefineCanPlay && player.off('canplay', this._changeDefineCanPlay)\n    this._changeDefineCanPlay = () => {\n      this.changeDefineCanPlay(currentTime, paused, from, to)\n      this._changeDefineCanPlay = null\n    }\n    player.once('canplay', this._changeDefineCanPlay)\n    this.player.video.load()\n    this.initMp4()\n  }\n\n  changeDefineCanPlay = (currentTime, paused, from, to) => {\n    const { player } = this\n    if (player.ended) {\n      player.currentTime = 0\n      return\n    }\n    this.log('[oldChangeDefinition],this._changeDefState,',this._changeDefState)\n    player.currentTime = this._changeDefState ? this._changeDefState.currentTime : currentTime\n    const isPause = this._changeDefState ? this._changeDefState.paused : paused\n    if (isPause) {\n      player.pause()\n    } else {\n      player.play()\n    }\n    this._changeDefState = null\n    player.emit(Events.AFTER_DEFINITION_CHANGE, { from, to })\n  }\n\n  changeDefinition = async (to, from ) => {\n    const { player, config, mp4 } = this\n\n    if (!from) {\n      from = player.curDefinition\n    }\n    this._MSEError = false\n\n    if (config.witchBitRateWay) {\n      this.oldChangeDefinition(to, from)\n      return\n    }\n\n    player.emit(Events.DEFINITION_CHANGE, {from, to})\n    const timeStart = player.currentTime\n    let fragIndex = mp4.getFragmentIdx(timeStart)\n    fragIndex < 0 && (fragIndex = this._curLoadSegmentIdx)\n    this.log('switchBitrate:point,fragIndex,', fragIndex, ',startTime,', mp4.timeRange[fragIndex].startTime, ',currentTime,',player.currentTime)\n    if (mp4) {\n      this.mp4.changeBitRateTime = timeStart\n      await mp4.cancelLoading()\n      mp4._metaLoading && (mp4._metaLoading = false)\n    }\n    this._removeBuffeEndTime = mp4.timeRange[fragIndex].startTime\n    this._isChangeDefinition = true\n    const buffered = player.getBufferedRange(player.buffered)\n    // 保留5s数据\n    if (buffered[1] > 0 && buffered[1] - player.currentTime > 5) {\n      this.mse.clearOpQueues(MSE.VIDEO)\n      this.mse.remove(MSE.VIDEO, player.currentTime + 5, buffered[1])\n    }\n    this.log('switchBitrate: resetFragmentLoadState,', fragIndex)\n    mp4.resetFragmentLoadState(fragIndex)\n    this._curLoadSegmentIdx = fragIndex\n    await this.mp4.changeBitRate(to)\n    this._onTimeUpdate()\n    player.emit('RESOLUTION_UPDATE', to)\n  }\n\n  /**\n   * 卡顿超时检查启用\n   * 卡顿超过一定时间则至直接降级处理\n   */\n  _loadStuckCheck () {\n    const { config , player } = this\n    if (!config.disableBufferBreakCheck) {\n      if (player.currentTime - (this._lastCurrentTime || 0) > 0.1 || player.paused) {\n        if (this._bufferBreakFlag === 1 || this._bufferBreakFlag === 2) {\n          this.log('视频没有卡死,重置卡死标记')\n          this._bufferBreakFlag = 0\n          clearTimeout(this._bufferBreakTimer)\n          this._bufferBreakFlag = null\n        }\n      } else {\n        // 开启卡死计时\n        if (!this._bufferBreakFlag) {\n          this._bufferBreakFlag = 1\n          this.log(`卡死计时开始! 持续${config.waitingTimeOut}毫秒则确认卡死`)\n          this._bufferBreakTimer = setTimeout(() => {\n            if (this.isDestroy) {\n              return\n            }\n            if (this._bufferBreakFlag === 1) {\n              this._bufferBreakFlag = 2\n              this.log('确认卡死!!!')\n              this._errorHandler(new Errors(this.player, {\n                errorType: 'runtime',\n                errorTypeCode: ERROR_TYPES.runtime,\n                errorCode: ERROR_CODES.waitTimeout,\n                errorMessage: 'wait_timeout',\n                vid: config.vid\n              }))\n            }\n            this._bufferBreakTimer = null\n          }, config.waitingTimeOut)\n        }\n      }\n      this._lastCurrentTime = player.currentTime\n    }\n  }\n\n  get isDestroy () {\n    return !this.player\n  }\n\n\n  _replayHook = () => {\n    this.player?.play()\n    return false\n  }\n\n  _retryHook = () => {\n    this.beforePlayerInit()\n    return false\n  }\n\n  _stopProgress () {\n    this._hasStartProgress = false\n    if (this._requestTimer) {\n      this._requestTimer.stop()\n      this._requestTimer = null\n    }\n    if (this._bufferBreakTimer) {\n      clearTimeout(this._bufferBreakTimer)\n      this._bufferBreakTimer = null\n      this._bufferBreakFlag = undefined\n    }\n  }\n\n  _startProgress () {\n    if (this._hasStartProgress) {\n      return\n    }\n    this._stopProgress()\n    this._requestTimer = new Timer(() => {\n      if (this._requestTimer) {\n        this._onTimeUpdate()\n      }\n    })\n    this._requestTimer.tickEvery(this.config.tickInSeconds)\n    this._hasStartProgress = true\n  }\n\n\n  log (message, ...optionalParams) {\n    const { playerConfig } = this\n    const newMessage = (playerConfig && playerConfig.vid) ? `[Index]${playerConfig.vid} ${message}` : `[Index] ${message}`\n    log(newMessage, ...optionalParams)\n  }\n\n  /**\n   * 重置当前插件的状态\n   */\n  _reset () {\n    this._isMseInit = false\n    this.endofstream = false\n\n    this._curLoadSegmentIdx = 0\n    this._removeBuffeEndTime = 0\n    this._isChangeDefinition = false\n    this._stopProgress()\n    if (this.mp4) {\n      this.mp4.off(MP4_EVENTS.META_READY, this._onMp4MetaReady)\n      this.mp4.off(MP4_EVENTS.ERROR, this._onMp4Error)\n      this.mp4.off(MP4_EVENTS.MOOV_REQ_PROGRESS, this._onMp4DataCallBack)\n      this.mp4.destroy()\n      this.mp4 = null\n    }\n    if (this.mse) {\n      this.mse.unbindMedia()\n      this.mse = null\n    }\n    this._unloadVideo()\n  }\n\n  // 销毁移除当前video的src\n  _unloadVideo () {\n    const { player } = this\n    try {\n      this.log(`unloadVideo src ${player.video.src}`)\n      if (player.video && player.video.src) {\n        player.video.removeAttribute('src') // empty source\n        player.video.load()\n      }\n    } catch (error) {\n      this.log('unloadVideo error', error)\n    }\n  }\n\n\n  destroy () {\n    const { player } = this\n\n    player.removeHooks('replay', this._replayHook)\n\n    player.removeHooks('retry', this._retryHook)\n\n    this.detachEvents()\n    this._reset()\n\n    this.player.playNext = _playerPlayNext\n    this.player._startInit = _playerStartInit\n    this.player.changeDefinition = _playerChangeDefinition\n    this.player.switchURL = _playerSwitchUrl\n\n    if (this._bufferBreakTimer) {\n      clearInterval(this._bufferBreakTimer)\n    }\n    if (this._removeBufferTimer) {\n      clearTimeout(this._removeBufferTimer)\n      this._removeBufferTimer = null\n    }\n    if (this._waitInBufferTimer) {\n      clearTimeout(this._waitInBufferTimer)\n      this._waitInBufferTimer = null\n    }\n  }\n}\n"],"names":["has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","names","events","name","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","module","exports","obj","defineProperty","value","default","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","arr","err","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","lib","require$$0","__esModule","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","_classCallCheck","_defineProperty","_createClass","key","sequenceNumber","width","height","fpsDen","fpsNum","duration","baseMediaDecodeTime","timescale","codec","present","pid","pps","sps","vps","sarRatio","samples","warnings","hvcC","get","dts","pts","first","last","isVideoEncryption","AudioTrack","sampleDuration","sampleRate","channelCount","config","codecType","isAudioEncryption","VideoSample","units","originPts","originDts","keyframe","flag","dependsOn","isNonSyncSample","AudioSample","data","sampleOffset","size","byteLength","Sample","FlvScriptSample","_Sample","_inherits","_super","_createSuper","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","Error","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","Math","min","workingBytes","Uint8Array","subarray","_word","DataView","buffer","getUint32","count","skipBytes","floor","bits","val","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","Logger","_prefix","_console","disabled","console","warn","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","join","start","checkLength","array","isBrowser","window","ua","navigator","userAgent","toLocaleLowerCase","isSafari","test","isFirefox","includes","isAndroid","concatUint8Array","filter","Boolean","reduce","p","c","prevLen","forEach","d","MAX_SIZE","pow","readBig16","readBig32","readBig64","getAvcCodec","codecs","h","toString","formatIV","iv","Number","toUpperCase","bufferToString","parse","a","isArray","parseInt","map","item","NALu","end","dataLen","unit","isHevc","type","uuid","payload","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","shift","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","fps","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","AAC","rate","FREQ","indexOf","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","remaining","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","max","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","MAX_SILENT_FRAME_DURATION","AUDIO_EXCETION_LOG_EMIT_DURATION","FlvFixer","videoTrack","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","_this","startTime","discontinuity","contiguous","round","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","s","time","_this2","refSampleDurationInt","x","lastSample","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_this3","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","_getG711Duration","sampleDurationInSampleRate","nextPts","sample","silentFrame","_getSilentFrame","silentSample","splice","track","sampleSize","getSilentFrame","AMF","ret","_parseValue","byteOffset","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","timestamp","getInt16","Date","decode","getUint16","logger","FlvDemuxer","_fixer","_remainingData","_headerParsed","reset","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","_parseAac","_parseG711","parseAudioSpecificConfig","sampleRateIndex","frameType","codecId","packetType","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","setToKeyframe","parseSEI","_gopId","gopId","hevc","_needAddMetaBeforeKeyFrameNal","MP4Parser","headerSize","subData","findBox","box","parseBox","trackId","baseDataOffsetPresent","flags","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","reference_ID","version","earliest_presentation_time","first_offset","references","ref","tmp32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mvhd","trak","pssh","nextTrackId","tkhd","mdia","mdhd","hdlr","minf","lang","language","handlerType","vmhd","smhd","stbl","graphicsmode","opcolor","balance","_ret$stsd$entries$","_ret$stsd$entries$$si","_ret$stsd$entries$$si2","stsd","stts","ctts","stsc","stsz","stco","co64","default_IV_size","entries","sinf","schi","tenc","stss","senc","sampleCount","InitializationVector","subsamples","subsampleCount","subsample","BytesOfClearData","BytesOfProtectedData","keyIds","systemId","toHex","numKeyIds","keyId","data_size","kid","system_id","entryCount","b","avc1","hvc1","mp4a","alaw","samplesize","esds","horizresolution","vertresolution","avcC","pasp","default_IsEncrypted","default_KID","frma","data_format","bodyStart","parseVisualSampleEntry","configurationVersion","AVCProfileIndication","AVCLevelIndication","lengthSizeMinusOne","spsLength","ppsLength","tmp","generalProfileCompatibility","avgFrameRate","_ret$vps","nalus","_ret$sps","_ret$pps","hSpacing","vSpacing","parseAudioSampleEntry","byteRead","tag","substring","padStart","firstChunk","samplesPerChunk","entrySizes","mfhd","traf","t","tfhd","tfdt","trun","dataOffset","firstSampleFlags","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","moov","_e$esds","_e$esds2","tracks","vTrack","find","_t$mdia","_t$mdia$hdlr","aTrack","_t$mdia2","_t$mdia2$hdlr","_vTrack$tkhd","_vTrack$mdia","_vTrack$mdia$minf","_vTrack$mdia$minf$stb","_vTrack$mdia2","_vTrack$mdia2$minf","_vTrack$mdia2$minf$st","v","_vTrackId","id","tkhdDuration","mvhdDurtion","mvhdTimecale","_e1$sinf","_e1$sinf$schi","_e1$sinf2","_e1$sinf2$schi","_e1$sinf3","_e1$sinf3$schi","_e1$sinf4","_e1$sinf4$frma","e1","ext","videoSenc","useEME","kidValue","encv","_aTrack$tkhd","_e$esds3","_e$esds4","_aTrack$mdia","_aTrack$mdia$minf","_aTrack$mdia$minf$stb","_aTrack$mdia2","_aTrack$mdia2$minf","_aTrack$mdia2$minf$st","_aTrackId","_e$sinf","_e$sinf$frma","_e$sinf2","_e$sinf2$schi","_e$sinf3","_e$sinf3$schi","_e$sinf4","_e$sinf4$schi","getRateIndexByRate","from","audioSenc","enca","_videoTrack$encv","_audioTrack$enca","vkid","akid","videoSampleCount","_audioTrack$samples","audioSampleCount","moof","_ref","defaultSize","defaultDuration","evaluateDefaultDuration","index","_t$mdia3","_t$mdia3$hdlr","_t$mdia4","_t$mdia4$hdlr","videoSamples","audioSamples","_vTrack$mdia3","_vTrack$mdia3$minf","videoStbl","getSamples","_aTrack$mdia3","_aTrack$mdia3$minf","_aTrack$mdia$mdhd","audioStbl","keyframeMap","cttsArr","cttsEntries","stscEntries","stcoEntries","stszEntrySizes","stssEntries","_ref2","pos","chunkIndex","chunkRunIndex","offsetInChunk","lastSampleInChunk","lastChunkInRun","_ref3","dataReferenceIndex","frameCount","depth","isFullBox","readBig24","str","pad","charstr","maxlen","chars","r","hex","Concat","Buffer","self","_len2","_key2","UINT32_MAX","MP4","FTYPHEV1","FTYPAVC1","init","ftyp","content","types","mvex","_toConsumableArray","HDLR_TYPES","VMHD","SMHD","DINF","extBox","STTS","STSC","STSZ","STCO","avc1hev1","_concat$concat","avcc","btrt","charCodeAt","schm","typ","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","trex","sencLength","isVideo","videoSencLength","saiz","saio","trun1","sbgp","sdtp","extension","writeUint32","samplesLength","writeUint16","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i","_samples$i$flag","_samples$i$cts","trackMP4","mdiaMP4","minfMP4","stblMP4","_ref5","_ref6","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","StblTable","enable","debug","_console2","log","_console3","_len3","_key3","_console4","_len4","_key4","error","_console5","group","table","groupEnd","FMP4Remuxer","options","browserVersions","exec","forceFirstIDR","openLog","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_loop","_offset","_sample","u","setUint32","Base","properties","assign","clone","constructor","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","stringify","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","_getPrototypeOf","nBytes","rcache","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","cfg","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","message","finalize","HMAC","_Base3","_super4","_this4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","n","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","mode","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","_this5","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t0","t1","t2","t3","AES","CTR","_CTR","counter","_counter","keystream","NoPadding","Crypto","decryptWordArray","raw","realKey","realIV","decryptWord","wordArrayToUint8Array","w","decoderAESCTRData","customDescryptHandler","sencBox","encodeWord","encodeBuffers","decodeBuffers","sampleData","tempBuffer","decrypted","clearDataBuf","protectedDataLen","decodeProtectedData","dec","MP4Demuxer","videoSegmnents","audioSegmnents","_this$_videoSamples","_videoSamples","_this$_audioSamples","_audioSamples","moovToTrack","moovToSamples","dataStart","videoIndexRange","audioIndexRange","parseSamples","startByte","frame","_lastRemainBuffer","_lastRemainBufferStartPos","tryCnt","temp","e","errorMessage","videoEndByte","audioEndByte","startPts","endPts","decoderData","buf","buffered","maxHole","buffers","bufLen","lastEnd","nextStart","nextEnd","prevStart","prevEnd","currentTime","behind","ERR","MANIFEST","NETWORK","NETWORK_TIMEOUT","NETWORK_FORBIDDEN","NETWORK_NOTFOUND","NETWROK_RANGE_NOT_SATISFIABLE","DEMUX","REMUX","MEDIA","DRM","OTHER","RUNTIME","SUB_TYPES","FLV","HLS","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_ERR_CODE","StreamingError","_Error","subType","origin","msg","errorType","originError","errorCode","_error$response","isTimeout","url","response","httpCode","status","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","logCacheLevel","logMaxSize","logSize","logTextArray","logCache","nowTime","text","_len5","logText","_key5","finLogText","logable","JSON","delLog","toLocaleString","reduceDepth","_typeof","objType","maxDepth","createPublicPromise","res","rej","promise","Promise","resolve","reject","used","performance","now","getTime","SafeJSON","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","isMMS","mediaSource","OP_NAME","MSE","media","_logger","queue","_queue","op","opName","_this2$_sourceBuffer$","costtime","_opst","ranges","TimeRanges","getTimeRanges","_sourceBuffer","_startQueue","_config","getDefaultConfig","bindMedia","_enqueueBlockingOp2","_unbindMedia","_bindMedia","_this$mediaSource","readyState","keys","k","_url","_this$mediaSource2","streaming","_mseFullFlag","VIDEO","isReduceDuration","bufferEnd","_enqueueBlockingOp","isEnded","_openPromise","isOpened","ms","addEventListener","onOpen","costTime","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMMS","_this6","wrap","_context","prev","unbindMedia","revokeObjectURL","src","_onStartStreaming","_onEndStreaming","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this7","_context2","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this8","changeType","_enqueueOp","createSource","_this9","_this9$_sourceBuffer$","appendBuffer","endTime","_this10","isInsertHead","remove","_this11","_this12","allClear","_this$_queue$type","initQueue","isinit","reason","_this13","setLiveSeekableRange","_this14","then","_callee3","waiters","_this15","_context3","prom","all","updating","_x2","_x3","_x4","timestampOffset","_this16","_this17","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","encode","replace","setUrlParams","params","toISOString","isObject","hashIndex","createResponse","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","isNaN","calculateSpeed","byteLen","millisec","EVENT","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","method","headers","body","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","catch","_error","_reader","st","getReader","_cache","_writeIdx","reader","pump","_this3$_range","startRange","curLen","retData","read","_receivedLength","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","sleep","NetLoader","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","ERROR_CODES","networkError","contentError","mse","mseAppend","mse_hijack","eme_hijack","metaError","muxError","other","waitTimeout","waitTimeoutWithHidden","drm","ERROR_TYPES","NetWorkError","rangeStart","rangeEnd","_errCode","getErrorCodeByHttpCode","httpText","mediaError","code","ParserError","util","concatData","resBuffers","bufferSize","every","MediaError","Cache","moovToSegments","segmentDurations","videoSegments","audioSegments","_videoTrack$mdia","_videoTrack$mdia$minf","_videoTrack$mdia$mdhd","getSegments","_audioTrack$mdia","_audioTrack$mdia$minf","_audioTrack$mdia$mdhd","segDuration","gop","gopDuration","lastFrame","segments","segFrames","adjust","pushSegment","_segments","_segFrames","curTime","moovToMeta","videoCodec","audioCodec","audioChannelCount","audioSampleRate","videoTimescale","audioTimescale","defaultKID","_videoTrack$mdia2","_videoTrack$mdia2$min","_videoTrack$mdia2$min2","_videoTrack$mdia3","_videoTrack$mdia3$mdh","_audioTrack$mdia2","_audioTrack$mdia2$min","_audioTrack$mdia2$min2","_e1$esds","_audioTrack$mdia3","_audioTrack$mdia3$mdh","isNumber","MP4Loader","_loadData","_loadSegment2","_destroy","_reset","_preload","_loadNextSegment","_loadSegmentByTime","_loadMeta","_loadMetaProcess","_getOrLoadMeta","_changeUrl","moovEnd","segmentDuration","maxDownloadInfoSize","_transformError","segIndex","_currentSegmentIndex","_this$videoSegments","_this$audioSegments","_currentLoadingSegmentIndex","notCancelLoader","_args","isMetaLoaded","loadMeta","meta","_callee4","moovStart","OnProgressHandle","_context4","state","_moovStart","parsedMoov","loadData","loadMetaProcess","_x7","_x8","_x9","_x5","_x6","_callee5","responses","_context5","_x10","_x11","_x12","segmentIndex","_callee6","changeCurrent","_this$getSegmentByTim","_args6","_context6","getSegmentByTime","_loadSegment","loadSegmentByTime","_x13","_x14","_callee7","_args7","_context7","_x15","_callee9","_this$getSegmentByTim2","videos","audios","_context9","_callee8","_context8","_x17","_x16","_callee10","_args10","_context10","downloadInfo","_callee11","_context11","clear","_callee12","_context12","finish","_x18","_x19","_x20","_x21","_x22","_callee13","cacheKey","_context13","_getCacheKey","fromCache","_x23","_x24","_x25","isSupport","localStorage","setItem","probeSupport","localStorageTestKey","removeItem","checkIfLocalStorageThrows","checkOpenLog","getItem","optionalParams","checkTestOpenLog","TransmuxerWorkerControl","openlog","supportHevc","worker","TransmuxerWorker","onmessage","postMessage","videoIdx","audioIdx","terminate","MP4_EVENTS","_cancelLoading","_loadFragment","_load","_checkHasMeta2","_getMetaInfo","_init","_errorHandler","_changeBitRate","curSegRange","timeRange","_mux","downloaded","bufferLoadedPos","CHUNK_SIZE","bufferLoaded","videoTrak","audioTrak","canDownload","_loadSuccessCallBack","_isPending","_metaLoading","reqOptions","_needInitSegment","_switchBitRate","enableWorker","Worker","workerSequence","transmuxerWorkerControl","muxRes","seekTime","changeBitRateTime","bitRateInfo","changeUrl","newMessage","errorHandler","getMetaInfo","isLoading","isEmitMetaEvent","startPos","onProgressHandle","metaInfo","getTimeRange","loadError","MAX_VALUE","fragIndex","_videoSeg","_audioSeg","_videoSeg2","_audioSeg2","videoSeg","audioSeg","videodiff","audiodiff","successCallback","metaReady","subRange","_checkHasMeta","getFragmentIdx","resetFragmentLoadState","resetTansmuxer","getFragRange","getSubRange","loadFragment","videoStartRange","audioStartRange","keyFrameList","getKeyFrameList","frameList","starttime","endtime","finalRange","getSamplesRange","transmux","demuxRet","demuxPart","checkCodecH265","remuxRes","remux","initSeg","fragmentIdx","_start","_buffer","startLoad","onprogressDataArrive","loadState","_e$response","isHvc","hasDestroyed","destroy","playerId","Timer","onTick","onTick_","cancelPending_","delayInSeconds","callback","timeoutId","seconds","tickAfter","tickEvery","ProxyPromise","resolvePromise","rejectPromise","publicPromise","isBreak","_playerPlayNext","_playerStartInit","_playerChangeDefinition","_playerSwitchUrl","Mp4Plugin","_BasePlugin","_loadData2","_destroyMSE","_initMse2","_isMseInit","_onTimeUpdate","isH265","mp4","_err","Errors","player","errorTypeCode","runtime","h265Error","_initMse","_initPromise","other1","playerConfig","isDestroy","_appendInitSeg","bufferEndTime","_isEnded","_appendBuffer","_assertThisInitialize2","_waitInBufferTimer","bufferedPoint","_waitAdjustTimeCnt","waitJampBufferMaxCnt","waitingInBufferTimeOut","_assertThisInitialize3","hasBuffered","_assertThisInitialize4","bufferList","bufferRange","buffered2","bufferedList","endofstream","_startProgress","_curLoadSegmentIdx","isFull","clearOpQueues","_checkRemoveSourceBuffer","cancelLoading","paused","ended","_changeDefState","pause","play","AFTER_DEFINITION_CHANGE","_assertThisInitialize6","timeStart","curDefinition","_MSEError","witchBitRateWay","oldChangeDefinition","DEFINITION_CHANGE","_removeBuffeEndTime","_isChangeDefinition","getBufferedRange","changeBitRate","_this$player","beforePlayerInit","_lastCheckTime","_pendingPromises","__mp4player","defineGetterOrSetter","__url","_proxyPlayer","SEEKING","_onSeeking","WAITING","_onWaiting","URL_CHANGE","switchURL","playNext","_startInit","changeDefinition","removeHooks","_replayHook","_retryHook","Sniffer","isHevcSupported","initMp4","_addPendingPromise","Util","typeOf","attachEvents","useVideoLoad","vtype","_removePendingPromise","_promise","_onMp4MetaReady","_onMp4Error","_onMp4DataCallBack","fragment","newConfig","_defInited","resetState","_currentTime","_duration","isPlaying","setConfig","closeDowngrade","_this$mp","preState","checkDegrade","_removeAndRejectInitPromise","_startDegradedPlayback","destroyMSE","__onmetadataHandle","idx","contentTypes","contentTypesLocal","_this$mse","_loadStuckCheck","cacheMaxTime","minBufferLength","maxBufferLength","_isInBuffer","checkRemoveOldBitrateBuffer","gap","inbuffer","_loadDataSuccess","sourceBufferRange","mustClear","_removeBufferTimer","_checkRemoveBufferLastTime","removeBufferLen","segmentIdx","clearEnd","_end","_stopProgress","definitionInfo","focusUserDefinition","_changeDefineCanPlay","changeDefineCanPlay","disableBufferBreakCheck","_lastCurrentTime","_bufferBreakFlag","_bufferBreakTimer","waitingTimeOut","_hasStartProgress","_requestTimer","tickInSeconds","_unloadVideo","detachEvents","clearInterval","BasePlugin"],"mappings":"28mBAEA,IAAIA,EAAMC,OAAOC,UAAUC,eACvBC,EAAS,IASb,SAASC,KA4BAC,SAAAA,EAAGC,EAAIC,EAASC,GACvBC,KAAKH,GAAKA,EACVG,KAAKF,QAAUA,EACfE,KAAKD,KAAOA,IAAQ,EActB,SAASE,EAAYC,EAASC,EAAON,EAAIC,EAASC,GAC5C,GAAc,mBAAPF,EACH,MAAA,IAAIO,UAAU,mCAGlBC,IAAAA,EAAW,IAAIT,EAAGC,EAAIC,GAAWI,EAASH,GAC1CO,EAAMZ,EAASA,EAASS,EAAQA,EAM7BD,OAJFA,EAAQK,QAAQD,GACXJ,EAAQK,QAAQD,GAAKT,GAC1BK,EAAQK,QAAQD,GAAO,CAACJ,EAAQK,QAAQD,GAAMD,GADRE,EAAAA,QAAQD,GAAKE,KAAKH,IAD1BE,EAAAA,QAAQD,GAAOD,EAAUH,EAAQO,gBAI7DP,EAUAQ,SAAAA,EAAWR,EAASI,GACI,KAAzBJ,EAAQO,aAA4BF,EAAAA,QAAU,IAAIZ,SAC5CO,EAAQK,QAAQD,GAU9B,SAASK,IACFJ,KAAAA,QAAU,IAAIZ,EACnBK,KAAKS,aAAe,EAxElBlB,OAAOqB,SACFpB,EAAAA,UAAmBoB,OAAAA,OAAO,OAM5B,IAAIjB,GAASkB,YAAoBnB,GAAA,IA2ExCiB,EAAanB,UAAUsB,WAAa,WAC9BC,IACAC,EACAC,EAFAF,EAAQ,GAIZ,GAA0B,IAAtBf,KAAKS,aAA2BM,OAAAA,EAE/BE,IAAAA,KAASD,EAAShB,KAAKO,QACtBjB,EAAI4B,KAAKF,EAAQC,IAAOF,EAAMP,KAAKd,EAASuB,EAAKE,MAAM,GAAKF,GAGlE,OAAI1B,OAAO6B,sBACFL,EAAMM,OAAO9B,OAAO6B,sBAAsBJ,IAG5CD,GAUTJ,EAAanB,UAAU8B,UAAY,SAAmBnB,GACpD,IAAIG,EAAMZ,EAASA,EAASS,EAAQA,EAChCoB,EAAWvB,KAAKO,QAAQD,GAE5B,IAAKiB,EAAU,MAAO,GACtB,GAAIA,EAAS1B,GAAW,MAAA,CAAC0B,EAAS1B,IAElC,IAAA,IAAS2B,EAAI,EAAGC,EAAIF,EAASG,OAAQC,EAAK,IAAIC,MAAMH,GAAID,EAAIC,EAAGD,IAC1DA,EAAAA,GAAKD,EAASC,GAAG3B,GAGf8B,OAAAA,GAUThB,EAAanB,UAAUqC,cAAgB,SAAuB1B,GAC5D,IAAIG,EAAMZ,EAASA,EAASS,EAAQA,EAChCmB,EAAYtB,KAAKO,QAAQD,GAE7B,OAAKgB,EACDA,EAAUzB,GAAW,EAClByB,EAAUI,OAFM,GAYzBf,EAAanB,UAAUsC,KAAO,SAAc3B,EAAO4B,EAAIC,EAAIC,EAAIC,EAAIC,GAC7D7B,IAAAA,EAAMZ,EAASA,EAASS,EAAQA,EAEhC,IAACH,KAAKO,QAAQD,GAAa,OAAA,EAE/B,IAEI8B,EACAZ,EAHAF,EAAYtB,KAAKO,QAAQD,GACzB+B,EAAMC,UAAUZ,OAIpB,GAAIJ,EAAUzB,GAAI,CAGRwC,OAFJf,EAAUvB,MAAMC,KAAKuC,eAAepC,EAAOmB,EAAUzB,QAAI2C,GAAW,GAEhEH,GACD,KAAA,EAAG,OAAOf,EAAUzB,GAAGqB,KAAKI,EAAUxB,UAAU,EAChD,KAAA,EAAG,OAAOwB,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,IAAK,EACpD,KAAA,EAAG,OAAOT,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,IAAK,EACxD,KAAA,EAAUV,OAAAA,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,IAAK,EAC5D,KAAA,EAAUX,OAAAA,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,EAAIC,IAAK,EAChE,KAAA,EAAUZ,OAAAA,EAAUzB,GAAGqB,KAAKI,EAAUxB,QAASiC,EAAIC,EAAIC,EAAIC,EAAIC,IAAK,EAGtEX,IAAAA,EAAI,EAAGY,EAAO,IAAIR,MAAMS,EAAK,GAAIb,EAAIa,EAAKb,IACxCA,EAAAA,EAAI,GAAKc,UAAUd,GAG1BF,EAAUzB,GAAG4C,MAAMnB,EAAUxB,QAASsC,OACjC,CACDV,IACAgB,EADAhB,EAASJ,EAAUI,OAGvB,IAAKF,EAAI,EAAGA,EAAIE,EAAQF,IAGda,OAFJf,EAAUE,GAAGzB,MAAMC,KAAKuC,eAAepC,EAAOmB,EAAUE,GAAG3B,QAAI2C,GAAW,GAEtEH,GACD,KAAA,EAAGf,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,SAAU,MAC/C,KAAA,EAAGwB,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,GAAK,MACnD,KAAA,EAAGT,EAAUE,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,EAAIC,GAAK,MACvD,KAAA,EAAaR,EAAAA,GAAG3B,GAAGqB,KAAKI,EAAUE,GAAG1B,QAASiC,EAAIC,EAAIC,GAAK,MAAA,QAE9D,IAAKG,EAAWM,IAAAA,EAAI,EAAGN,EAAO,IAAIR,MAAMS,EAAK,GAAIK,EAAIL,EAAKK,IACnDA,EAAAA,EAAI,GAAKJ,UAAUI,GAG1BpB,EAAUE,GAAG3B,GAAG4C,MAAMnB,EAAUE,GAAG1B,QAASsC,IAK7C,OAAA,GAYTzB,EAAanB,UAAUmD,GAAK,SAAYxC,EAAON,EAAIC,GACjD,OAAOG,EAAYD,KAAMG,EAAON,EAAIC,GAAS,IAY/Ca,EAAanB,UAAUO,KAAO,SAAcI,EAAON,EAAIC,GACrD,OAAOG,EAAYD,KAAMG,EAAON,EAAIC,GAAS,IAa/Ca,EAAanB,UAAU+C,eAAiB,SAAwBpC,EAAON,EAAIC,EAASC,GAC9EO,IAAAA,EAAMZ,EAASA,EAASS,EAAQA,EAEhC,IAACH,KAAKO,QAAQD,GAAa,OAAAN,KAC/B,IAAKH,EAEI,OADPa,EAAWV,KAAMM,GACVN,KAGLsB,IAAAA,EAAYtB,KAAKO,QAAQD,GAE7B,GAAIgB,EAAUzB,GAEVyB,EAAUzB,KAAOA,GACfE,IAAQuB,EAAUvB,MAClBD,GAAWwB,EAAUxB,UAAYA,GAEnCY,EAAWV,KAAMM,OAEd,CACIkB,IAAAA,IAAAA,EAAI,EAAGR,EAAS,GAAIU,EAASJ,EAAUI,OAAQF,EAAIE,EAAQF,KAEhEF,EAAUE,GAAG3B,KAAOA,GACnBE,IAASuB,EAAUE,GAAGzB,MACtBD,GAAWwB,EAAUE,GAAG1B,UAAYA,IAE9BU,EAAAA,KAAKc,EAAUE,IAOtBR,EAAOU,OAAQ1B,KAAKO,QAAQD,GAAyB,IAAlBU,EAAOU,OAAeV,EAAO,GAAKA,EACpEN,EAAWV,KAAMM,GAGjB,OAAAN,MAUTW,EAAanB,UAAUoD,mBAAqB,SAA4BzC,GAClEG,IAAAA,EAUG,OARHH,GACIT,EAAAA,EAASA,EAASS,EAAQA,EAC5BH,KAAKO,QAAQD,IAAMI,EAAWV,KAAMM,KAEnCC,KAAAA,QAAU,IAAIZ,EACnBK,KAAKS,aAAe,GAGfT,MAMTW,EAAanB,UAAUqD,IAAMlC,EAAanB,UAAU+C,eACpD5B,EAAanB,UAAUS,YAAcU,EAAanB,UAAUmD,GAK5DhC,EAAamC,SAAWpD,EAKxBiB,EAAaA,aAAeA,EAM1BoC,EAAAC,QAAiBrC,UCxUasC,mBCJzBC,OAAAA,eAAe7B,EAAS,aAAc,CAC3C8B,OAAO,IAGMC,EAAAA,QAAG,SAAUC,GAG1B,IAFA,IAAIC,EAAc,EAETC,EAAOjB,UAAUZ,OAAQ8B,EAAS5B,MAAM2B,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACzFA,EAAAA,EAAO,GAAKnB,UAAUmB,GAG/B,IAAIC,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBpB,EAEjB,IACF,IAAA,IAAgDqB,EAAvCC,EAAYN,EAAOO,OAAOC,cAAsBN,GAA6BG,EAAQC,EAAUG,QAAQC,MAAOR,GAA4B,EAAM,CACvJ,IAAIS,EAAMN,EAAMV,MAEhBG,GAAea,EAAIzC,cAEd0C,GACaT,GAAA,EACHS,EAAAA,EACT,QACJ,KACGV,GAA6BI,EAAUO,QAC1CP,EAAUO,SAEJ,QACR,GAAIV,EACIC,MAAAA,GAKRU,IAAAA,EAAS,IAAIjB,EAAkBC,GAC/BiB,EAAS,EACTC,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBlC,EAElB,IACF,IAAA,IAAiDmC,EAAxCC,EAAapB,EAAOO,OAAOC,cAAuBQ,GAA8BG,EAASC,EAAWX,QAAQC,MAAOM,GAA6B,EAAM,CAC7J,IAAIK,EAAOF,EAAOxB,MAEX2B,EAAAA,IAAID,EAAMN,GACjBA,GAAUM,EAAKnD,cAEV0C,GACcK,GAAA,EACHL,EAAAA,EACV,QACJ,KACGI,GAA8BI,EAAWP,QAC5CO,EAAWP,SAEL,QACR,GAAII,EACIC,MAAAA,GAKLJ,OAAAA,OD1DTS,IAFgC9B,EAJlB+B,IAIuC/B,EAAIgC,WAAahC,EAAM,CAAEG,QAASH,IAE7DG,QEPb8B,EACJ,QADIA,EAEJ,QAFIA,EAGD,WAICC,EACN,MADMA,EAEL,OAIKC,EACN,MADMA,EAED,SAFCA,EAGD,SAICC,EACK,iBADLA,GAEM,kBAFNA,GAGoB,gCAHpBA,GAIM,kBAJNA,GAKG,eALHA,GAMI,gBCzBJC,GAAU,WAAA,SAAAA,IAAAC,OAAAD,eAChB,GAELE,EAAAxF,KAAA,OACOkF,GAAeM,EAAAxF,KAAA,YAEVmF,GAAkBK,EAAAxF,KAAA,OAEtB,sBAGDwC,kBAEC,uBAEI,4BAEM,2BAED,gCAEK,oBAEZ,qBAEC,qBAEA,qBAGD,iBAGJ,iBAGA,iBAGA,oBAEG,mBAEA,qBAGE,mBAEH,mBAEC,wBAEK,qBAEJ,+BAEU,+BAEA,qBAEV,gBAEJ,oBAEC,MAEPgD,EAAAxF,KAAA,WAAA,GAyDCsF,OAzDDG,EAAAH,EAAA,CAAA,CAAAI,IAAA,QAAAvC,MAGA,WACEnD,KAAK2F,eACL3F,KAAK4F,MACL5F,KAAK6F,OACL7F,KAAK8F,OACL9F,KAAK+F,OACL/F,KAAKgG,SACLhG,KAAKiG,oBACLjG,KAAKkG,UAAY,EACjBlG,KAAKmG,MAAQ,GACbnG,KAAKoG,SAAU,EACfpG,KAAKqG,KAAM,EACXrG,KAAKsG,IAAM,GACXtG,KAAKuG,IAAM,GACXvG,KAAKwG,IAAM,GACXxG,KAAKyG,SAAW,GAChBzG,KAAK0G,QAAU,GACf1G,KAAK2G,SAAW,GAChB3G,KAAK4G,KAAO,OACb,CAAAlB,IAAA,WAAAmB,IAED,WACE,OAAO7G,KAAK0G,QAAQhF,OAAS1B,KAAK0G,QAAQ,GAAGI,IAAM,OACpD,CAAApB,IAAA,WAAAmB,IAED,WACE,OAAO7G,KAAK0G,QAAQhF,OAAS1B,KAAK0G,QAAQ,GAAGK,IAAM,OACpD,CAAArB,IAAA,kBAAAmB,IAED,WACM,GAAA7G,KAAK0G,QAAQhF,OAAS,EAAG,CACrBsF,IAAAA,EAAQhH,KAAK0G,QAAQ,GACrBO,EAAOjH,KAAK0G,QAAQ1G,KAAK0G,QAAQhF,OAAS,GAChD,OAAOuF,EAAKH,IAAME,EAAMF,IAAMG,EAAKjB,SAE9B,OAAA,IAGT,CAAAN,IAAA,QAAAvC,MAGA,WACS,SAAGnD,KAAKsG,IAAI5E,QAAU1B,KAAKuG,IAAI7E,QAAU1B,KAAKmG,SAGvD,CAAAT,IAAA,YAAAvC,MAGA,WACS,QAAEnD,KAAK0G,QAAQhF,SACvB,CAAAgE,IAAA,eAAAmB,IAED,WACE,OAAO7G,KAAKkH,sBACb5B,EA3HoB,GCAV6B,GAAU,WAAA,SAAAA,IAAA5B,OAAA4B,eAChB,GAEL3B,EAAAxF,KAAA,OACOkF,GAAeM,EAAAxF,KAAA,YAEVoF,GAAkBI,EAAAxF,KAAA,OAEtB,kBAEA,4BAES,2BAEA,sBAEL,4BAEM,gCAEI,qBAEX,qBAEA,qBAGD,qBAEA,uBAEG,wBAEA,yBAEE,uBAEF,4BAEK,mBAGT,sBAEC,+BAEU,+BAEA,gBAEd,MAENwF,EAAAxF,KAAA,WAAA,GAmDCmH,OAnDD1B,EAAA0B,EAAA,CAAA,CAAAzB,IAAA,QAAAvC,MAGA,WACEnD,KAAK2F,eAAiB,EACtB3F,KAAKkG,UAAY,EACjBlG,KAAKoH,eAAiB,EACtBpH,KAAKqH,WAAa,EAClBrH,KAAKsH,aAAe,EACpBtH,KAAKiG,oBAAsB,EAC3BjG,KAAKoG,SAAU,EACfpG,KAAKqG,KAAM,EACXrG,KAAKmG,MAAQ,GACbnG,KAAK0G,QAAU,GACf1G,KAAKuH,OAAS,GACdvH,KAAK2G,SAAW,KAGlB,CAAAjB,IAAA,QAAAvC,MAGA,WACS,SAAGnD,KAAKqH,YAAcrH,KAAKsH,cAAgBtH,KAAKmG,OAASnG,KAAKwH,YAAcpC,KAGrF,CAAAM,IAAA,YAAAvC,MAGA,WACS,QAAEnD,KAAK0G,QAAQhF,SACvB,CAAAgE,IAAA,eAAAmB,IAED,WACE,OAAO7G,KAAKyH,oBACb,CAAA/B,IAAA,WAAAmB,IAED,WACE,OAAO7G,KAAK0G,QAAQhF,OAAS1B,KAAK0G,QAAQ,GAAGI,IAAM,OACpD,CAAApB,IAAA,WAAAmB,IAED,WACE,OAAO7G,KAAK0G,QAAQhF,OAAS1B,KAAK0G,QAAQ,GAAGK,IAAM,OACpD,CAAArB,IAAA,kBAAAmB,IAED,WACM,GAAA7G,KAAK0G,QAAQhF,OAAS,EAAG,CACrBsF,IAAAA,EAAQhH,KAAK0G,QAAQ,GACrBO,EAAOjH,KAAK0G,QAAQ1G,KAAK0G,QAAQhF,OAAS,GAChD,OAAOuF,EAAKH,IAAME,EAAMF,IAAMG,EAAKjB,SAE9B,OAAA,MACRmB,EAvGoB,GCSVO,GAAW,WAuBtBA,SAAAA,EAAaX,EAAKD,EAAKa,GAAOpC,OAAAmC,GAtB9BlC,EAAAxF,KAAA,OACO,uBAEI,kBAEH,qBAEG,iBAEJ,kBAEC,0BAEO,KAUR4H,KAAAA,UAAY5H,KAAK+G,IAAMA,EACvBc,KAAAA,UAAY7H,KAAK8G,IAAMA,EACxBa,IAAO3H,KAAK2H,MAAQA,GAczBD,OAXDjC,EAAAiC,EAAA,CAAA,CAAAhC,IAAA,MAAAmB,IAGA,WACS,OAAA7G,KAAK+G,IAAM/G,KAAK8G,MACxB,CAAApB,IAAA,gBAAAvC,MAED,WACEnD,KAAK8H,UAAW,EAChB9H,KAAK+H,KAAKC,UAAY,EACtBhI,KAAK+H,KAAKE,gBAAkB,MAC7BP,EAxCqB,GCXXQ,GAAWzC,GAWtB,SAAAyC,EAAanB,EAAKoB,EAAMnC,EAAUoC,GAAc7C,OAAA2C,qBAVrC,MAAI1C,EAERxF,KAAA,OAAA,CAAEgI,UAAW,EAAGC,gBAAiB,uBAC7B,GAQTjI,KAAK4H,UAAY5H,KAAK+G,IAAM/G,KAAK8G,IAAMC,EACvC/G,KAAKmI,KAAOA,EACZnI,KAAKqI,KAAOF,EAAKG,WACjBtI,KAAKoI,aAAeA,EAChBpC,IAAUhG,KAAKgG,SAAWA,MCd5BuC,GAAM9C,GAOV,SAAA8C,EAAaJ,EAAMpB,GAAKxB,OAAAgD,iBANjB,GAOLvI,KAAKmI,KAAOA,EACPP,KAAAA,UAAY5H,KAAK+G,IAAMA,KAInByB,YAAeC,GAAAC,EAAAF,EAAAC,GAAAE,IAAAA,EAAAC,EAAAJ,GAAA,SAAAA,IAAAG,OAAApD,OAAAiD,GAAAG,EAAAlG,MAAAzC,KAAAsC,WAAA,OAAAmD,EAAA+C,IAASD,IAExBM,YAASC,GAAAJ,EAAAG,EAAAC,GAAAC,IAAAA,EAAAH,EAAAC,GAAA,SAAAA,IAAAE,OAAAxD,OAAAsD,GAAAE,EAAAtG,MAAAzC,KAAAsC,WAAA,OAAAmD,EAAAoD,IAASN,IAElBS,GAAa,WAAA,SAAAA,IAAAzD,OAAAyD,eAEnB,GAELxD,EAAAxF,KAAA,OACOkF,sBAEK,6BAGO,wBAGN,IAoBZ8D,OApBcvD,EAAAuD,EAAA,CAAA,CAAAtD,IAAA,QAAAvC,MAKf,WACS,SAAInD,KAAKiJ,iBAAiBvH,SAAU1B,KAAKkJ,WAAWxH,SAAW1B,KAAKkG,aAC5E,CAAAR,IAAA,QAAAvC,MAED,WACEnD,KAAKkG,UAAY,EACjBlG,KAAKiJ,iBAAmB,GACxBjJ,KAAKkJ,WAAa,KAGpB,CAAAxD,IAAA,YAAAvC,MAGA,WACE,SAAUnD,KAAKiJ,iBAAiBvH,SAAU1B,KAAKkJ,WAAWxH,YAC3DsH,EAjCuB,GCnBbG,GAAS,WAOpB,SAAAA,EAAahB,GACX,GADiB5C,OAAA4D,GAAA3D,EAAAxF,KAAA,uBAAA,2BAJF,kBAET,IAGDmI,EAAY,MAAA,IAAIiB,MAAM,qCAC3BpJ,KAAKqJ,MAAQlB,EACbnI,KAAKsJ,gBAAkBnB,EAAKG,WACxBtI,KAAKsJ,iBAAiBtJ,KAAKuJ,YA8GhCJ,OA7GA1D,EAAA0D,EAAA,CAAA,CAAAzD,IAAA,gBAAAmB,IAED,WACE,OAAO7G,KAAKwJ,iBACb,CAAA9D,IAAA,YAAAvC,MAED,WACE,IAAMsG,EAAWzJ,KAAKqJ,MAAMf,WAAatI,KAAKsJ,gBACxCI,EAAiBC,KAAKC,IAAI,EAAG5J,KAAKsJ,iBACxC,GAAuB,IAAnBI,EAA4B,MAAA,IAAIN,MAAM,sBAEpCS,IAAAA,EAAe,IAAIC,WAAW,GACpCD,EAAa/E,IAAI9E,KAAKqJ,MAAMU,SAASN,EAAUA,EAAWC,IAE1D1J,KAAKgK,MAAQ,IAAIC,SAASJ,EAAaK,QAAQC,UAAU,GACzDnK,KAAKwJ,eAAkC,EAAjBE,EACtB1J,KAAKsJ,iBAAmBI,IACzB,CAAAhE,IAAA,WAAAvC,MAED,SAAUiH,GACJ,GAAApK,KAAKwJ,eAAiBY,EACxBpK,KAAKgK,QAAUI,EACfpK,KAAKwJ,gBAAkBY,MAClB,CACLA,GAASpK,KAAKwJ,eACd,IAAMa,EAAYV,KAAKW,MAAMF,EAAQ,GACrCA,GAAsB,EAAZC,EACVrK,KAAKsJ,iBAAmBe,EACxBrK,KAAKuJ,YACLvJ,KAAKgK,QAAUI,EACfpK,KAAKwJ,gBAAkBY,KAE1B,CAAA1E,IAAA,WAAAvC,MAED,SAAUkF,GACR,GAAIA,EAAO,GACH,MAAA,IAAIe,MAAM,iCAGlB,IAAImB,EAAOZ,KAAKC,IAAI5J,KAAKwJ,eAAgBnB,GACnCmC,EAAMxK,KAAKgK,QAAW,GAAKO,EAU7BA,OARJvK,KAAKwJ,gBAAkBe,EACnBvK,KAAKwJ,eAAiB,EACxBxJ,KAAKgK,QAAUO,EACNvK,KAAKsJ,gBAAkB,GAChCtJ,KAAKuJ,aAGPgB,EAAOlC,EAAOkC,GACH,GAAKvK,KAAKwJ,eACXgB,GAAOD,EAAQvK,KAAKyK,SAASF,GAEhCC,IACR,CAAA9E,IAAA,SAAAvC,MAED,WACMuH,IAAAA,EACJ,IACEA,EAAmB,EACnBA,EAAmB1K,KAAKwJ,iBACtBkB,EAEF,GAAyD,IAApD1K,KAAKgK,MAAS,aAAeU,GAGzBA,OAFP1K,KAAKgK,QAAUU,EACf1K,KAAKwJ,gBAAkBkB,EAChBA,EAIJA,OADP1K,KAAKuJ,YACEmB,EAAmB1K,KAAK2K,WAChC,CAAAjF,IAAA,UAAAvC,MAED,WACEnD,KAAK4K,SAAS,EAAI5K,KAAK2K,YACxB,CAAAjF,IAAA,UAAAvC,MAED,WACQ0H,IAAAA,EAAM7K,KAAK2K,SACjB,OAAO3K,KAAKyK,SAASI,EAAM,GAAK,IACjC,CAAAnF,IAAA,SAAAvC,MAED,WACQqH,IAAAA,EAAMxK,KAAK8K,UACjB,OAAI,EAAIN,EACE,EAAIA,IAAS,MAEVA,IAAQ,KACtB,CAAA9E,IAAA,WAAAvC,MAED,WACS,OAAqB,IAArBnD,KAAKyK,SAAS,KACtB,CAAA/E,IAAA,YAAAvC,MAED,WACS,OAAAnD,KAAKyK,SAAS,KACtB,CAAA/E,IAAA,kBAAAvC,MAED,SAAiBiH,GAIf,IAHA,IAAIW,EAAY,EACZC,EAAY,EAEPtI,EAAI,EAAGA,EAAI0H,EAAO1H,IACP,IAAdsI,IAEWD,GAAAA,EADA/K,KAAKiL,SACoB,KAAO,KAEnCD,EAAc,IAAdA,EAAkBD,EAAYC,MAE7C7B,EAzHmB,GCAT+B,GAAM,WACjB,SAAAA,EAAajK,GAAMsE,OAAA2F,GACjBlL,KAAKiB,KAAOA,GAAQ,GACpBjB,KAAKmL,QAAO9J,IAAAA,OAAOrB,KAAKiB,KAAO,KAgBhCiK,OAfAzF,EAAAyF,EAAA,CAAA,CAAAxF,IAAA,OAAAvC,MAED,WAAeiI,IAAAA,EACb,IAAIF,EAAOG,SAAX,CAA2B,IAAA,IAAA9H,EAAAjB,UAAAZ,OADpBU,EAAIR,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJrB,EAAIqB,GAAAnB,UAAAmB,IAEX2H,EAAAE,SAAQC,KAAI9I,MAAA2I,EAAA,CAACpL,KAAKmL,SAAO9J,OAAKe,QAC/B,CAAA,CAAAsD,IAAA,SAAAvC,MAID,WACE+H,EAAOG,UAAW,IACnB,CAAA3F,IAAA,UAAAvC,MAED,WACE+H,EAAOG,UAAW,MACnBH,EAnBgB,GAANA,EAAAA,GAAM,YAWC,GCXpB,IAAaM,GAAI,WAAA,SAAAA,IAAAjG,OAAAiG,GAqEdA,OArEcA,EAAAA,EAAA,KAAA,CAAA,CAAA9F,IAAA,SAAAvC,MAMf,SAAesI,GAMb,IALA,IAAMC,EAAM,GACNC,EAAQF,EACVjK,EAAI,EACFE,EAAS+J,EAAW/J,OAEnBF,EAAIE,GACLiK,GAAAA,EAAMnK,GAAK,IACbkK,EAAIlL,KAAKoL,OAAOC,aAAaF,EAAMnK,OACjCA,MAFAmK,IAIOA,EAAMnK,GAAK,UAEXmK,GAAAA,EAAMnK,GAAK,KACpB,GAAIgK,EAAKM,mBAAmBH,EAAOnK,EAAG,GAAI,CACxC,IAAMuK,GAAmB,GAAXJ,EAAMnK,KAAc,EAAoB,GAAfmK,EAAMnK,EAAI,GACjD,GAAIuK,GAAQ,IAAM,CAChBL,EAAIlL,KAAKoL,OAAOC,aAAoB,MAAPE,IAC7BvK,GAAK,EACL,gBAGL,GAAUmK,EAAMnK,GAAK,KACpB,GAAIgK,EAAKM,mBAAmBH,EAAOnK,EAAG,GAAI,CACxC,IAAMuK,GAAmB,GAAXJ,EAAMnK,KAAa,IAAqB,GAAfmK,EAAMnK,EAAI,KAAc,EAAmB,GAAfmK,EAAMnK,EAAI,GAC7E,GAAIuK,GAAQ,MAA6B,QAAZ,MAAPA,GAA2B,CAC/CL,EAAIlL,KAAKoL,OAAOC,aAAoB,MAAPE,IAC7BvK,GAAK,EACL,gBAGL,GAAUmK,EAAMnK,GAAK,KAChBgK,EAAKM,mBAAmBH,EAAOnK,EAAG,GAAI,CACxC,IAAIuK,GAAmB,EAAXJ,EAAMnK,KAAa,IAAqB,GAAfmK,EAAMnK,EAAI,KAAc,IACnC,GAAfmK,EAAMnK,EAAI,KAAc,EAAoB,GAAfmK,EAAMnK,EAAI,GAC9CuK,GAAAA,EAAO,OAAWA,EAAO,QAAU,CAC7BC,GAAA,MACRN,EAAIlL,KAAKoL,OAAOC,aAAcE,IAAS,GAAM,QAC7CL,EAAIlL,KAAKoL,OAAOC,aAAqB,KAAPE,EAAgB,QAC9CvK,GAAK,EACL,UAINkK,EAAIlL,KAAKoL,OAAOC,aAAa,UAC3BrK,EAGGkK,OAAAA,EAAIO,KAAK,MACjB,CAAAvG,IAAA,qBAAAvC,MAED,SAA2BsI,EAAYS,EAAOC,GAC5C,IAAMC,EAAQX,EACVS,GAAAA,EAAQC,EAAcC,EAAM1K,OAAQ,CACtC,KAAOyK,KACL,GAAgC,MAAV,IAAjBC,IAAQF,IACJ,OAAA,EAGJ,OAAA,EAEA,OAAA,MAEVV,EArEc,GCAJa,GAA8B,oBAAXC,OAE1BC,GAAKF,IAAaG,UAAUC,UAAUC,oBAG/BC,GAAWN,IAAa,gCAAgCO,KAAKL,IAC7DM,GAAYR,IAAaE,GAAGO,SAAS,WACrCC,GAAYV,IAAaE,GAAGO,SAAS,WCD3C,SAASE,KAA0B,IAAA,IAAAzJ,EAAAjB,UAAAZ,OAALyC,EAAGvC,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAHU,EAAGV,GAAAnB,UAAAmB,GAChCU,EAAAA,EAAI8I,OAAOC,SACjB,IAAM/E,EAAO,IAAI2B,WAAW3F,EAAIgJ,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,EAAE/E,aAAY,IAC/DgF,EAAU,EAKPnF,OAJHoF,EAAAA,SAAQ,SAACC,GACN1I,EAAAA,IAAI0I,EAAGF,GACZA,GAAWE,EAAElF,cAERH,EAGF,IAAMsF,GAAW9D,KAAK+D,IAAI,EAAG,IAE7B,SAASC,GAAWxF,GAAM3G,IAAAA,EAACc,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAQ6F,EAAK3G,IAAM,IAAM2G,EAAK3G,EAAI,IAAM,GAOnC,SAASoM,GAAWzF,GAAM3G,IAAAA,EAACc,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAQ6F,EAAK3G,IAAM,KAAO,IAAM2G,EAAK3G,EAAI,IAAM,KAAO2G,EAAK3G,EAAI,IAAM,IAAM2G,EAAK3G,EAAI,IAAM,GAGrF,SAASqM,GAAW1F,GAAM3G,IAAAA,EAACc,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC5BsL,OAAAA,GAAUzF,EAAM3G,GAAKiM,GAAWG,GAAUzF,EAAM3G,EAAI,GAGtD,SAASsM,GAAaC,GAG3B,IAFA,IACIC,EADA7H,EAAQ,QAEH3E,EAAI,EAAGA,EAAI,EAAGA,KACjBuM,EAAAA,EAAOvM,GAAGyM,SAAS,KACjBvM,OAAS,IAAIL,EAAAA,IAAAA,OAAO2M,IACjBA,GAAAA,EAEJ7H,OAAAA,EAGF,SAAS+H,GAAU/J,GACxB,IAAIgK,EAAK,GAILA,GAHAZ,EAAAA,SAAQ,SAAApK,GACVgL,GA0BJ,SAAyBhL,GACf,OAAA,IAAOiL,OAAOjL,GAAO8K,SAAS,KAAM9M,OAAQ,GAAEkN,cA3B9CC,CAAenL,MAEnBgL,EAAGzM,QAAU,GAEf,IADMW,IAAAA,EAAM,GAAK8L,EAAGzM,OACXF,EAAI,EAAGA,EAAIa,EAAKb,IACjB2M,GAAA,IAGHA,OAAAA,EAGF,SAASI,GAAOC,GACrB,IAAK5M,MAAM6M,QAAQD,GAAI,CAGrB,IAFA,IAAMrK,EAAM,GACRhB,EAAQ,GACH3B,EAAI,EAAGA,EAAIgN,EAAE9M,OAAQF,IACxBA,EAAI,IACEgN,EAAAA,EAAEhN,EAAI,GAAKgN,EAAEhN,GACrB2C,EAAI3D,KAAKkO,SAASvL,EAAO,KACjBA,EAAA,IAGLgB,OAAAA,EAEFqK,OAAAA,EAAEG,KAAI,SAAAC,GAAiBF,OAAAA,SAASE,EAAM,OCvE/C,IAAaC,GAAI,WAAA,SAAAA,IAAAtJ,OAAAsJ,GA2IdA,OA3IcA,EAAAA,EAAA,KAAA,CAAA,CAAAnJ,IAAA,cAAAvC,MACf,SAAoBgF,GAIXA,IAHP,IAAM9F,EAAM8F,EAAKzG,OACbwK,EAAQ,EACR4C,EAAM,EACa,OAAhB3G,EAAK+D,SAAmC1J,IAAhB2F,EAAK+D,IAAwC,IAAhB/D,EAAK+D,IAC/DA,IAKF,IAFA4C,IADA5C,EACc,IAEH7J,EAAK,MAAO,GAIvB,IAFA,IAAMsF,EAAQ,GAEPmH,EAAMzM,GACX,OAAQ8F,EAAK2G,IACN,KAAA,EACC3G,GAAkB,IAAlBA,EAAK2G,EAAM,GAAU,CAChBA,GAAA,EACP,MACS3G,GAAkB,IAAlBA,EAAK2G,EAAM,GAAU,CAC9BA,IACA,MAGE5C,IAAU4C,EAAM,GAAGnH,EAAMnH,KAAK2H,EAAK4B,SAASmC,EAAO4C,EAAM,IAE1D,GACDA,UACqB,IAAd3G,EAAK2G,IAAcA,EAAMzM,GAElCyM,GADA5C,EAAQ4C,EAAM,GACA,EACd,MACG,KAAA,EACH,GAAsB,IAAlB3G,EAAK2G,EAAM,IAA8B,IAAlB3G,EAAK2G,EAAM,GAAU,CACvCA,GAAA,EACP,MAEE5C,IAAU4C,EAAM,GAAGnH,EAAMnH,KAAK2H,EAAK4B,SAASmC,EAAO4C,EAAM,IAE7DA,GADA5C,EAAQ4C,EAAM,GACA,EACd,MAAA,QAEOA,GAAA,EAONnH,OAFHuE,EAAQ7J,GAAKsF,EAAMnH,KAAK2H,EAAK4B,SAASmC,IAEnCvE,IACR,CAAAjC,IAAA,YAAAvC,MAED,SAAkBgF,GAAME,IAAAA,EAAI/F,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC7B,KAAI6F,EAAKzG,OAAS,GAAlB,CAMQ6C,IALR,IAII7C,EAJEqN,EAAU5G,EAAKzG,OACfiG,EAAQ,GAEVpD,EAAS,EAELA,EAAS8D,EAAQ0G,GAKvB,GAJSnB,EAAAA,GAAUzF,EAAM5D,GACZ,IAAT8D,IAAwB3G,KAAA,GAClB2G,GAAAA,EAEL3G,EAAL,CACI6C,GAAAA,EAAS7C,EAASqN,EACpB,MAGFpH,EAAMnH,KAAK2H,EAAK4B,SAASxF,EAAQA,EAAS7C,IAChCA,GAAAA,EAGLiG,OAAAA,KACR,CAAAjC,IAAA,WAAAvC,MAED,SAAiB6L,EAAMC,GAOdD,IANP,IAAM3M,EAAM2M,EAAKtN,OACbF,EAAIyN,EAAS,EAAI,EACjBC,EAAO,EACP7G,EAAO,EACP8G,EAAO,GAEQ,MAAZH,EAAKxN,IACF0N,GAAA,IACR1N,IAKKwN,IAFPE,GAAQF,EAAKxN,KAEM,MAAZwN,EAAKxN,IACF6G,GAAA,IACR7G,IAIF,GAFA6G,GAAQ2G,EAAKxN,KAEA,IAAT0N,GAAc7M,EAAMb,EAAI,GAC1B,IAAA,IAASkB,EAAI,EAAGA,EAAI,GAAIA,IACdsM,GAAAA,EAAKxN,GAAGyM,SAAS,IACzBzM,IAIG,MAAA,CACL4N,QAASJ,EAAKjF,SAASvI,EAAGA,EAAI6G,GAAO6G,KAAAA,EAAM7G,KAAAA,EAAM8G,KAAAA,KAEpD,CAAAzJ,IAAA,YAAAvC,MAED,SAAkBkM,GAKT7N,IAJP,IAAME,EAAS2N,EAAK/G,WACdgH,EAAoC,GACtC9N,EAAI,EAEDA,EAAIE,EAAS,GACF,IAAZ2N,EAAK7N,IAA4B,IAAhB6N,EAAK7N,EAAI,IAA4B,IAAhB6N,EAAK7N,EAAI,IACfhB,EAAAA,KAAKgB,EAAI,GAC3CA,GAAK,GAELA,IAIJ,IAAK8N,EAAkC5N,OAAe2N,OAAAA,EAEhDE,IAAAA,EAAY7N,EAAS4N,EAAkC5N,OACvD8N,EAAU,IAAI1F,WAAWyF,GAE3BE,EAAc,EAClB,IAAKjO,EAAI,EAAGA,EAAI+N,EAAWE,IAAejO,IACpCiO,IAAgBH,EAAkC,KACpDG,IACAH,EAAkCI,SAEpCF,EAAQhO,GAAK6N,EAAKI,GAGbD,OAAAA,MACRX,EA3Ic,GCCJc,GAAG,WAAA,SAAAA,IAAApK,OAAAoK,GAyMbA,OAzMaA,EAAAA,EAAA,KAAA,CAAA,CAAAjK,IAAA,qCAAAvC,MACd,SAA2CgF,GACzC,KAAIA,EAAKzG,OAAS,GAAlB,CAUA,IATMkO,IAEFC,EAMAC,EAREF,EAA8B,GAAL,EAAVzH,EAAK,IAGpB4H,EAAS,GACTC,EAAS,GAEXzL,EAAS,EACP0L,EAAqB,GAAV9H,EAAK,GAEb3G,EAAI,EAAGA,EAAIyO,EAAUzO,IAG5B,GAFAsO,EAAW3H,EAAK5D,IAAW,EAAK4D,EAAK5D,EAAS,GACpCA,GAAA,EACLuL,EAAL,CAEA,IAAMvJ,EAAM4B,EAAK4B,SAASxF,EAAQA,EAASuL,GACjCA,GAAAA,EACVC,EAAOvP,KAAK+F,GAEPsJ,IACHA,EAAYF,EAAIO,SAASrB,GAAKsB,UAAU5J,KAI5C,IAEI6J,EAFEC,EAAWlI,EAAK5D,GACtBA,IAEA,IAAA,IAAS/C,EAAI,EAAGA,EAAI6O,EAAU7O,IAC5B4O,EAAWjI,EAAK5D,IAAW,EAAK4D,EAAK5D,EAAS,GACpCA,GAAA,EACL6L,IACLJ,EAAOxP,KAAK2H,EAAK4B,SAASxF,EAAQA,EAAS6L,IACjCA,GAAAA,GAGL,MAAA,CACL7J,IAAKsJ,EACLE,OAAAA,EACAC,OAAAA,EACAJ,YAAAA,MAEH,CAAAlK,IAAA,WAAAvC,MAED,SAAiB6L,GACTsB,IAAAA,EAAK,IAAInH,GAAU6F,GACzBsB,EAAGC,YAEGC,IAAAA,EAAaF,EAAGC,YAChBE,EAAuBH,EAAGC,YAC1BG,EAAWJ,EAAGC,YACpBD,EAAGK,UAEH,IAAIC,EAAe,IAEjBJ,GAAe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,KAAfA,GACe,KAAfA,GACe,KAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,GACe,MAAfA,EACA,CACMK,IAAAA,EAAkBP,EAAGxF,UAMvBwF,GALAO,GAAmB,IAAGD,EAAe,CAAC,EAAG,IAAK,IAAK,KAAKC,IACpC,IAApBA,GAAuBP,EAAG1F,SAAS,GACvC0F,EAAGK,UACHL,EAAGK,UACHL,EAAG1F,SAAS,GACR0F,EAAGQ,WAEL,IADMC,IAAAA,EAAuC,IAApBF,EAAwB,EAAI,GAC5CrP,EAAI,EAAGA,EAAIuP,EAAkBvP,IAChC8O,EAAGQ,aACDtP,EAAI,EACN8O,EAAGU,gBAAgB,IAEnBV,EAAGU,gBAAgB,KAO7BV,EAAGK,UACGM,IAAAA,EAAkBX,EAAGxF,UAC3B,GAAwB,IAApBmG,EACFX,EAAGxF,eACL,GAA+B,IAApBmG,EAAuB,CAChCX,EAAG1F,SAAS,GACZ0F,EAAGK,UACHL,EAAGK,UAEH,IADMO,IAAAA,EAAiCZ,EAAGxF,UACjCtJ,EAAI,EAAGA,EAAI0P,EAAgC1P,IAClD8O,EAAGK,UAIPL,EAAGK,UACHL,EAAG1F,SAAS,GACNuG,IAAAA,EAAsBb,EAAGxF,UACzBsG,EAA4Bd,EAAGxF,UAC/BuG,EAAmBf,EAAG7F,SAAS,GACZ,IAArB4G,GAAwBf,EAAG1F,SAAS,GACxC0F,EAAG1F,SAAS,GAEZ,IAYInE,EACA6K,EACAvL,EACAD,EACAyL,EAhBAC,EAAsB,EACtBC,EAAuB,EACvBC,EAAqB,EACrBC,EAAwB,EAcxBrB,GAZAA,EAAGQ,aACLU,EAAsBlB,EAAGxF,UACzB2G,EAAuBnB,EAAGxF,UAC1B4G,EAAqBpB,EAAGxF,UACxB6G,EAAwBrB,EAAGxF,WAQzBwF,EAAGQ,WAAY,CACbR,GAAAA,EAAGQ,WAEGc,OADetB,EAAGC,aAEnB,KAAA,EAAc9J,EAAA,CAAC,EAAG,GAAI,MACtB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,EAAcA,EAAA,CAAC,GAAI,IAAK,MACxB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,GAAI,IAAK,MACzB,KAAA,GAAeA,EAAA,CAAC,IAAK,IAAK,MAC1B,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MACvB,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MACvB,KAAA,GAAeA,EAAA,CAAC,EAAG,GAAI,MAAA,KACvB,IACHA,EAAW,CACR6J,EAAGC,aAAe,EAAKD,EAAGC,YAC1BD,EAAGC,aAAe,EAAKD,EAAGC,aAoB/BD,GAZAA,EAAGQ,YAAYR,EAAGQ,WAElBR,EAAGQ,aACLR,EAAG7F,SAAS,GACR6F,EAAGQ,YAAYR,EAAG7F,SAAS,KAG7B6F,EAAGQ,aACLR,EAAGxF,UACHwF,EAAGxF,WAGDwF,EAAGQ,WAAY,CACXe,IAAAA,EAAiBvB,EAAG7F,SAAS,IAC7BqH,EAAYxB,EAAG7F,SAAS,IAC9B6G,EAAahB,EAAGQ,WAIhBS,GAFSO,EAAAA,IACThM,EAA0B,EAAjB+L,IAKN,MAAA,CACL1L,MAAO2H,GAAYkB,EAAKjF,SAAS,EAAG,IACpCyG,WAAAA,EACAC,qBAAAA,EACAC,SAAAA,EACAE,aAAAA,EACAhL,MAAO+D,KAAKoI,KACkB,IAA3BZ,EAAsB,GACrB,GAAKK,EAAsBC,IAE/B5L,QACG,EAAIwL,IAAqBD,EAA4B,GAAK,IAC1DC,EAAmB,EAAI,IACrBK,EAAqBC,GAC1BlL,SAAAA,EACAV,OAAAA,EACAD,OAAAA,EACAyL,IAAAA,EACAD,WAAAA,OAEH3B,EAzMa,GCDHqC,GAAG,WAAA,SAAAA,IAAAzM,OAAAyM,GAsNbA,OAtNaA,EAAAA,EAAA,KAAA,CAAA,CAAAtM,IAAA,qBAAAvC,MAiBd,SAA2B8O,GAClBD,OAAAA,EAAIE,KAAKC,QAAQF,KACzB,CAAAvM,IAAA,YAAAvC,MAED,SAAkBgF,EAAMpB,GAIdvF,IAHR,IAAMa,EAAM8F,EAAKzG,OACbF,EAAI,EAEAA,EAAI,EAAKa,IACC,MAAZ8F,EAAK3G,IAAwC,MAAV,IAAd2G,EAAK3G,EAAI,MAGlCA,IAGF,KAAIA,GAAKa,GAAT,CAEA,IAAM+P,EAAO5Q,EACP6Q,EAAS,GACTC,GAAwC,GAAdnK,EAAK3G,EAAI,MAAe,EAClD6F,EAAa2K,EAAIE,KAAKI,GAC5B,IAAKjL,EAAY,MAAM,IAAI+B,MAAK,2BAAA/H,OAA4BiR,IAUpD9Q,IATR,IAII+Q,EACAC,EALEC,EAA4C,IAAf,IAAdtK,EAAK3G,EAAI,MAAe,GACvC8F,GAA+B,EAAda,EAAK3G,EAAI,KAAW,GAAqB,IAAd2G,EAAK3G,EAAI,MAAe,EAC1EkR,EAA0BV,EAAIW,WAAWL,EAAwBhL,EAAcmL,GAAvElL,EAAMmL,EAANnL,OAAQpB,EAAKuM,EAALvM,MAIZyM,EAAa,EACX5M,EAAWgM,EAAIa,iBAAiBxL,GAE9B7F,EAAI,EAAKa,GACf,GAAiB,MAAZ8F,EAAK3G,IAAyC,MAAV,IAAd2G,EAAK3G,EAAI,IAApC,CAMA,GAAKa,EAAMb,GADXgR,GAA8B,EAAdrK,EAAK3G,EAAI,KAAc,GAAO2G,EAAK3G,EAAI,IAAM,GAAqB,IAAd2G,EAAK3G,EAAI,KAAc,GAC9D,MAE7B+Q,EAA8C,GAAR,GAAdpK,EAAK3G,EAAI,IACjC6Q,EAAO7R,KAAK,CACVuG,IAAKA,EAAM6L,EAAa5M,EACxBmC,KAAMA,EAAK4B,SAASvI,EAAI,EAAI+Q,EAAqB/Q,EAAIgR,KAGvDI,IACApR,GAAKgR,OAdHhR,IAiBG,MAAA,CACL4Q,KAAAA,EACAU,UAAWtR,GAAKa,OAAMG,EAAY2F,EAAK4B,SAASvI,GAChD6Q,OAAAA,EACAC,uBAAAA,EACAjL,WAAAA,EACAoL,WAAAA,EACAnL,aAAAA,EACAnB,MAAAA,EACAoB,OAAAA,EACAwL,YAAW,WAAA1R,OAAaoR,OAE3B,CAAA/M,IAAA,2BAAAvC,MAED,SAAiCgF,GAC/B,GAAKA,EAAKzG,OAAV,CACM+Q,IAAAA,EAAatK,EAAK,KAAO,EACzBmK,GAAqC,EAAVnK,EAAK,KAAc,EAAMA,EAAK,KAAO,EAChEb,GAA0B,IAAVa,EAAK,MAAe,EACpCd,EAAa2K,EAAIE,KAAKI,GAE5B,GAAKjL,EAAL,CACA2L,IAAAA,EAA0BhB,EAAIW,WAAWL,EAAwBhL,EAAcmL,GAExE,MAAA,CACLH,uBAAAA,EACAjL,WAAAA,EACAoL,WAAAA,EACAnL,aAAAA,EACAC,OAPYyL,EAANzL,OAQNpB,MARmB6M,EAAL7M,MASd4M,YAAW,WAAA1R,OAAaoR,QAE3B,CAAA/M,IAAA,mBAAAvC,MAED,SAAyB8O,GAAM/L,IAAAA,EAAS5D,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACzC,OAAO,KAAO4D,EAAY+L,IAC3B,CAAAvM,IAAA,aAAAvC,MAED,SAAmB8P,EAAe3L,EAAc4L,GAC9C,IACIT,EACAU,EAFE5L,EAAS,GAqCR,OAlCHsF,GACEoG,GAAiB,GACNR,EAAA,EACbU,EAAyBF,EAAgB,IAE5BR,EAAA,EACYQ,EAAAA,GAElBlG,IACI0F,EAAA,EACYQ,EAAAA,IAEzBR,EAAmC,IAArBS,GAA+C,IAArBA,EAA0BA,EAAmB,EAC5DD,EAAAA,EAErBA,GAAiB,EACnBE,EAAyBF,EAAgB,EACf,IAAjB3L,IACImL,EAAA,EACYQ,EAAAA,IAI7B1L,EAAO,GAAKkL,GAAc,EACnBlL,EAAA,KAAuB,GAAhB0L,IAAyB,EAChC1L,EAAA,IAAsB,EAAhB0L,IAAyB,EACtC1L,EAAO,IAAMD,GAAgB,EACV,IAAfmL,IACKlL,EAAA,KAAiC,GAAzB4L,IAAkC,EAC1C5L,EAAA,IAA+B,EAAzB4L,IAAkC,EAC/C5L,EAAO,IAAO,EACdA,EAAO,GAAK,GAGP,CACLA,OAAAA,EACApB,MAAK,WAAA9E,OAAaoR,MAItB,CAAA/M,IAAA,iBAAAvC,MACA,SAAuBgD,EAAOmB,GACpBnB,GACD,cADCA,EACD,CACH,GAAqB,IAAjBmB,EACK,OAAA,IAAIwC,WAAW,CAAC,EAAM,IAAM,EAAM,IAAM,GAAM,MACrD,GAAqB,IAAjBxC,EACJ,OAAO,IAAIwC,WAAW,CACpB,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,MAElD,GAAqB,IAAjBxC,EACJ,OAAO,IAAIwC,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,MAER,GAAqB,IAAjBxC,EACG,OAAA,IAAIwC,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,KAEtC,GAAqB,IAAjBxC,EACG,OAAA,IAAIwC,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,KAExD,GAAqB,IAAjBxC,EACJ,OAAO,IAAIwC,WAAW,CACpB,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAC5D,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAC5D,EAAM,GAAM,EAAM,UAGtB,CAEA,GAAqB,IAAjBxC,EACF,OAAO,IAAIwC,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,GAAM,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAC/D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,KAER,GAAqB,IAAjBxC,EACJ,OAAO,IAAIwC,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAC7D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,KAER,GAAqB,IAAjBxC,EACJ,OAAO,IAAIwC,WAAW,CACpB,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAC/D,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAC7D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC5D,GAAM,UAKfkI,EAtNa,GAuNfxM,EAvNYwM,GACG,OAAA,CACZ,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,MACA,IACA,OCbJ,IAAaoB,GAAI,WAAA,SAAAA,IAAA7N,OAAA6N,GAuLdA,OAvLcA,EAAAA,EAAA,KAAA,CAAA,CAAA1N,IAAA,sCAAAvC,MACf,SAA4CgF,GAAMvB,IAAAA,EAAItE,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACvD,KAAI6F,EAAKzG,OAAS,IAAlB,CACAkF,EAAOA,GAAQ,GAef,IAdMgJ,IAEFyD,EACAxD,EAQAyD,EACAC,EACAC,EAbE5D,EAA+B,GAAL,EAAXzH,EAAK,KAIpB4H,EAAS,GACTC,EAAS,GACTyD,EAAS,GAEXlP,EAAS,GACPmP,EAAcvL,EAAK,IAKhB3G,EAAI,EAAGA,EAAIkS,EAAalS,IAAK,CACpC8R,EAA6B,GAAfnL,EAAK5D,GACnBgP,EAAYpL,EAAK5D,EAAS,IAAM,EAAK4D,EAAK5D,EAAS,GAEzCA,GAAA,EAEV,IAAA,IAAS7B,EAAI,EAAGA,EAAI6Q,EAAU7Q,IAG5B,GAFA8Q,EAAWrL,EAAK5D,IAAW,EAAK4D,EAAK5D,EAAS,GACpCA,GAAA,EACLiP,EAAL,CACQF,OAAAA,GACD,KAAA,GACH,IAAM9M,EAAM2B,EAAK4B,SAASxF,EAAQA,EAASiP,GACtCH,IAAWA,EAAYD,EAAKO,SAAS9E,GAAKsB,UAAU3J,GAAMI,IAC/D6M,EAAOjT,KAAKgG,GAEZ,MACG,KAAA,GACH,IAAMD,EAAM4B,EAAK4B,SAASxF,EAAQA,EAASiP,GACtC3D,IAAWA,EAAYuD,EAAKlD,SAASrB,GAAKsB,UAAU5J,GAAMK,IAC/DmJ,EAAOvP,KAAK+F,GAEZ,MACG,KAAA,GACHyJ,EAAOxP,KAAK2H,EAAK4B,SAASxF,EAAQA,EAASiP,IAKrCA,GAAAA,GAIP,MAAA,CACL5M,KAAAA,EACAL,IAAKsJ,EACLE,OAAAA,EACAC,OAAAA,EACAyD,OAAAA,EACA7D,YAAAA,MAEH,CAAAlK,IAAA,WAAAvC,MAED,SAAiB6L,EAAMpI,GACrBA,EAAOA,GAAQ,GACT0J,IAAAA,EAAK,IAAInH,GAAU6F,GACzBsB,EAAGC,YACHD,EAAGC,YAEHD,EAAG7F,SAAS,IACNmJ,IAAAA,EAAwBtD,EAAG7F,SAAS,GAKnC7D,OAJPA,EAAKiN,kBAAoBlK,KAAKmK,IAAIlN,EAAKiN,mBAAqB,EAAGD,EAAwB,GACvFtD,EAAG7F,SAAS,IACZ2I,EAAKW,uBAAuBzD,EAAIsD,EAAuBhN,GAEhDA,IACR,CAAAlB,IAAA,WAAAvC,MAED,SAAiB6L,GAAMpI,IAAAA,EAAItE,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC5BsE,EAAOA,GAAQ,GACT0J,IAAAA,EAAK,IAAInH,GAAU6F,GACzBsB,EAAGC,YACHD,EAAGC,YAEHD,EAAG7F,SAAS,GACNuJ,IAAAA,EAAwB1D,EAAG7F,SAAS,GAC1C7D,EAAKiN,kBAAoBlK,KAAKmK,IAAIE,EAAwB,EAAGpN,EAAKiN,mBAAqB,GAClFI,EAAAA,iBAAmB3D,EAAG7F,SAAS,GACpC2I,EAAKW,uBAAuBzD,EAAI0D,EAAuBpN,GAEvD0J,EAAGxF,UAEH,IAAM+F,EAAkBjK,EAAKiK,gBAAkBP,EAAGxF,UAC9C8F,EAAe,IACfC,GAAmB,IAAGD,EAAe,CAAC,EAAG,IAAK,IAAK,KAAKC,IAE5D,IAAIqD,EAA0B,EACN,IAApBrD,IACwBP,EAAAA,EAAG7F,SAAS,IAGpC7E,IAKAuO,EACAC,EACAC,EACAC,EARA1O,EAAQ0K,EAAGxF,UACXjF,EAASyK,EAAGxF,UAEVyJ,EAAwBjE,EAAG7F,SAAS,GAgB1C,GAV8B,IAA1B8J,IACFJ,EAAoB7D,EAAGxF,UACvBsJ,EAAqB9D,EAAGxF,UACxBuJ,EAAmB/D,EAAGxF,UACtBwJ,EAAsBhE,EAAGxF,WAGtB0J,EAAAA,mBAAqBlE,EAAGxF,UACxB2J,EAAAA,qBAAuBnE,EAAGxF,UAED,IAA1ByJ,EAA6B,CAC/B,IAAMG,EAAmC,IAApB7D,GAA+C,IAApBA,GAAwD,IAA5BqD,EAAsC,EAAJ,EACxGS,EAAmC,IAApB9D,GAAuD,IAA5BqD,EAAkC,EAAI,EACtFtO,GAAU8O,GAAaN,EAAqBD,GAC5CtO,GAAW8O,GAAcL,EAAsBD,GAG1C,MAAA,CACLlO,MAAO,kBACPP,MAAAA,EACAC,OAAAA,EACA+K,aAAAA,EACAhK,KAAAA,KAEH,CAAAlB,IAAA,yBAAAvC,MAED,SAA+BmN,EAAIsE,EAAoBhO,GAC/CiO,IAAAA,EAAkBjO,EAAKiO,iBAAmB,EAC3CC,EAAAA,oBAAsBxE,EAAG7F,SAAS,GACvC7D,EAAKiO,gBAAkBlL,KAAKmK,IAAIxD,EAAG7F,SAAS,GAAIoK,GAC3CE,EAAAA,kBAAoBpL,KAAKmK,IAAIxD,EAAG7F,SAAS,GAAI7D,EAAKmO,mBAAqB,GACvEC,EAAAA,iCAAmC1E,EAAG7F,SAAS,IAC/CwK,EAAAA,gCAAkC,CAAC3E,EAAG7F,SAAS,GAAI6F,EAAG7F,SAAS,GAAI6F,EAAG7F,SAAS,GAAI6F,EAAG7F,SAAS,GAAI6F,EAAG7F,SAAS,GAAI6F,EAAG7F,SAAS,IAC9HyK,IAAAA,EAAkB5E,EAAG7F,SAAS,GAChCoK,EAAkBjO,EAAKiO,gBACzBjO,EAAKsO,gBAAkBA,EAEvBtO,EAAKsO,gBAAkBvL,KAAKmK,IAAIoB,EAAiBtO,EAAKsO,iBAAmB,GAG3E,IAAMC,EAA6B,GAC7BC,EAA2B,GAE7BR,GAAAA,EAAqBtE,EAAG+E,cAC1B,MAAM,IAAIjM,MAAK,kCAAA/H,OAAmCuT,IAGpD,IAAA,IAASlS,EAAI,EAAGA,EAAIkS,EAAoBlS,IACXA,EAAAA,GAAK4N,EAAG7F,SAAS,GACnB/H,EAAAA,GAAK4N,EAAG7F,SAAS,GAGxCmK,EAAqB,GACpBnK,EAAAA,SAAoC,GAA1B,EAAImK,IAGnB,IAAA,IAASpT,EAAI,EAAGA,EAAIoT,EAAoBpT,IACA,IAAlC2T,EAA2B3T,KAC7B8O,EAAG7F,SAAS,GACZ6F,EAAG7F,SAAS,GACZ6F,EAAG7F,SAAS,GAEZ6F,EAAG7F,SAAS,IACZ6F,EAAG7F,SAAS,IAEZ6F,EAAG7F,SAAS,GAEZ6F,EAAG7F,SAAS,IACZ6F,EAAG7F,SAAS,IACZ6F,EAAG7F,SAAS,KAEsB,IAAhC2K,EAAyB5T,IAC3B8O,EAAG7F,SAAS,OAGjB2I,EAvLc,GCGXkC,GAA4B,IAC5BC,GAAmC,IAM5BC,GAAQ,WACnBA,SAAAA,EAAaC,EAAYC,EAAYC,GAAepQ,OAAAiQ,GAClDxV,KAAKyV,WAAaA,EAClBzV,KAAK0V,WAAaA,EAClB1V,KAAK2V,cAAgBA,EAErB3V,KAAK4V,UAAW,EAChB5V,KAAK6V,gBAAiB,EAEtB7V,KAAK8V,mBAAgBtT,EACrBxC,KAAK+V,mBAAgBvT,EAErBxC,KAAKgW,qBAAuB,EAC5BhW,KAAKiW,qBAAuB,EAC5BjW,KAAKkW,mBAAqB,EAI1BlW,KAAKmW,sBAAuB,EAE5BnW,KAAKoW,2BAA4BC,EAAAA,EACjCrW,KAAKsW,+BAAgCD,EAAAA,EACrCrW,KAAKuW,gCAAiCF,EAAAA,EAEtCrW,KAAKwW,gCAAiCH,EAAAA,EACtCrW,KAAKyW,qCAAsCJ,EAAAA,EA8W5Cb,OA3WD/P,EAAA+P,EAAA,CAAA,CAAA9P,IAAA,MAAAvC,MAKA,WAA8D,IAAAuT,EAAA1W,KAAzD2W,EAASrU,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGsU,EAAatU,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,IAAAA,UAAA,GAAUuU,IAAUvU,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,KAAAA,UAAA,GACvCqH,EAAAA,KAAKmN,MAAkB,IAAZH,GACvB,IAAMlB,EAAazV,KAAKyV,WAClBC,EAAa1V,KAAK0V,YAEpBkB,GAAkBC,IACpB7W,KAAK+W,iBAAmB,KACxB/W,KAAK8V,mBAAgBtT,EACrBxC,KAAK+V,mBAAgBvT,EACrBxC,KAAKgW,qBAAuB,EAC5BhW,KAAKiW,qBAAuB,EAC5BjW,KAAKoW,2BAA4BC,EAAAA,EACjCrW,KAAKsW,+BAAgCD,EAAAA,EACrCrW,KAAKuW,gCAAiCF,EAAAA,EACtCrW,KAAKwW,gCAAiCH,EAAAA,EACtCrW,KAAKyW,qCAAsCJ,EAAAA,GAGzCO,IAAkBC,IACpB7W,KAAK6V,gBAAiB,GAGnB7V,KAAK6V,gBACHmB,KAAAA,kBAAkBtB,EAAYD,IAGhCoB,GAAcF,IACZb,KAAAA,cAAgB9V,KAAK+V,cAAgBY,GAG5C,IAAMM,EAAejX,KAAK6V,iBACvB7V,KAAKiW,uBAAyBjW,KAAKyV,WAAWyB,WAC9ClX,KAAKgW,uBAAyBhW,KAAK0V,WAAWwB,SAY7C,GAVAD,GACFjX,KAAKmX,iCAGPnX,KAAKoX,UAAU1B,GAEf1V,KAAKmW,sBAAuB,EAE5BnW,KAAKqX,UAAU5B,GAEXzV,KAAK2V,cAAcuB,QAAS,CACxBhR,IAAAA,EAAYlG,KAAK2V,cAAczP,UACrClG,KAAK2V,cAAczM,WAAWqE,SAAQ,SAAA+J,GAClCvQ,EAAAA,IAAMuQ,EAAE1P,UAAY8O,EAAKd,SAC3B0B,EAAEC,KAAO5N,KAAKmK,IAAI,EAAGwD,EAAEvQ,KAAOb,KAEhClG,KAAK2V,cAAc1M,iBAAiBsE,SAAQ,SAAA+J,GACxCvQ,EAAAA,IAAMuQ,EAAE1P,UAAY8O,EAAKd,SAC3B0B,EAAEC,KAAO5N,KAAKmK,IAAI,EAAGwD,EAAEvQ,KAAOb,KAI9BuP,EAAW/O,QAAQhF,SACVuE,EAAAA,oBAAsBwP,EAAW/O,QAAQ,GAAGI,KAErD4O,EAAWhP,QAAQhF,SACrBgU,EAAWzP,oBAAsByP,EAAWhP,QAAQ,GAAGK,IAAM2O,EAAWxP,UAAY,OAEvF,CAAAR,IAAA,YAAAvC,MAED,SAAWsS,GAAY,IAAA+B,EAAAxX,KACf0G,EAAU+O,EAAW/O,QAE3B,GAAKA,EAAQhF,OAAb,CAQI+V,IAAAA,EACAhC,GAPIlI,EAAAA,SAAQ,SAAAmK,GACdA,EAAE5Q,KAAO0Q,EAAK5B,SACd8B,EAAE3Q,KAAOyQ,EAAK5B,SACV8B,EAAE5P,WAAU0P,EAAKrB,sBAAuB,MAI1CV,EAAW1P,QAAU0P,EAAW3P,OAClC2R,EAAuBhC,EAAWvP,WAAauP,EAAW3P,OAAS2P,EAAW1P,aAChF,GAAW0P,EAAW/T,OAAS,EAAG,CAC1BsF,IAAAA,EAAQyO,EAAW/O,QAAQ,GAC3BO,EAAOwO,EAAW/O,QAAQA,EAAQhF,OAAS,GAC1BiI,EAAAA,KAAKW,OAAOrD,EAAKH,IAAME,EAAMF,MAAQJ,EAAQhF,OAAS,SAE7E+V,EAAuBzX,KAAKkW,oBAAsB,GAG9CyB,IAAAA,EAAajR,EAAQkR,MAQ3B,GANI5X,KAAK+W,kBACCc,EAAAA,QAAQ7X,KAAK+W,kBAGvB/W,KAAK+W,iBAAmBY,EAEnBjR,EAAQhF,OAAb,CAEI,QAAuBc,IAAvBxC,KAAK+V,cAA6B,CACpC,IAAM+B,EAAQpR,EAAQ,GACtB1G,KAAK+V,cAAgB+B,EAAMhR,IAG7B,IAAMzE,EAAMqE,EAAQhF,OAChB0F,EAAiB,EACf2Q,EAAcrR,EAAQ,GACtBsR,EAAShY,KAAK+V,cAAgBgC,EAAYjR,IAEhD,GAAI6C,KAAKsO,IAAID,GA/IqB,IA+IoB,CAEyDE,IAAAA,EAA7G,GAAIvO,KAAKsO,IAAIF,EAAYjR,IAAM9G,KAAKyW,qCAhJD,IAiJjCzW,KAAKyW,oCAAsCsB,EAAYjR,IAEvD2O,EAAW9O,SAASnG,KAAK,CACvB0O,KAAM7J,GACN8S,QAASnY,KAAK+V,cACdqC,eAAgBL,EAAYjR,IAC5BuR,cAAyB,QAAZH,EAAExR,EAAQ,UAAE,IAAAwR,OAAA,EAAVA,EAAYpR,IAC3BM,eAAgB4Q,IAKhBhY,KAAKiW,sBA5JmB,GA6J1BjW,KAAK+V,cAAgBgC,EAAYjR,IACjC9G,KAAKiW,qBAAuB,IAG5B8B,EAAYjR,KAAOkR,EACnBD,EAAYhR,KAAOiR,EACdhY,KAAK0V,WAAWwB,UACnBlX,KAAKiW,qBAAuB,IAKlC,IAAA,IAASzU,EAAI,EAAGA,EAAIa,EAAKb,IAAK,CACtBsF,IAAAA,EAAMJ,EAAQlF,GAAGsF,IACjBwR,EAAa5R,EAAQlF,EAAI,KAG7B4F,EADE5F,EAAIa,EAAM,EACKiW,EAAWxR,IAAMA,EACzB6Q,EACQA,EAAW7Q,IAAMA,EAEjB2Q,GArLQ,KAwLsBrQ,EAAiB,KAC3D6O,KAAAA,uBAEDtM,KAAKsO,IAAInR,EAAM9G,KAAKwW,gCAzLS,MA0L/BxW,KAAKwW,+BAAiC1P,EACtC2O,EAAW9O,SAASnG,KAAK,CACvB0O,KAAM7J,GACNkS,KAAMzQ,EAAM2O,EAAWvP,UACvBY,IAAAA,EACAe,UAAWnB,EAAQlF,GAAGqG,UACtBsQ,QAASnY,KAAK+V,cACd3O,eAAAA,EACAmR,kBAAmBd,KAINA,EAAAA,GAGnB/Q,EAAQlF,GAAGwE,SAAWoB,EACtBpH,KAAK+V,eAAiB3O,EACtBpH,KAAKkW,mBAAqB9O,OAE7B,CAAA1B,IAAA,YAAAvC,MAED,SAAWuS,GAAY,IAAA8C,EAAAxY,KACf0G,EAAUgP,EAAWhP,QACtBA,EAAQhF,SAGL6L,EAAAA,SAAQ,SAAAmK,GACdA,EAAE5Q,IAAM4Q,EAAE3Q,KAAOyR,EAAK5C,YAGnB6C,KAAAA,oBAAoB/C,EAAYhP,EAAS,QAC/C,CAAAhB,IAAA,oBAAAvC,MAED,SAAmBuS,EAAYD,GAC7B,IAAMiD,EAAahD,EAAWhP,QACxBiS,EAAalD,EAAW/O,QAE9B,IAAKgS,EAAWhX,SAAWiX,EAAWjX,OAC7B,OAAA,EAGT,IAAIkX,EAAevC,EAAAA,EACfwC,EAAexC,EAAAA,EAEfqC,EAAWhX,SACFoX,EAAAA,QAAUF,EAAeF,EAAW,GAAG3R,KAGhD4R,EAAWjX,SACFoX,EAAAA,QAAUD,EAAeF,EAAW,GAAG7R,KAGpD9G,KAAK4V,SAAWjM,KAAKC,IAAIgP,EAAcC,GAEvC,IAAME,EAAQF,EAAeD,EAatB,OAXHxK,OAAO4K,SAASD,IAAUpP,KAAKsO,IAAIc,GAxPV,KAyP3BtD,EAAW9O,SAASnG,KAAK,CACvB0O,KAAM7J,EACNwT,aAAAA,EACAD,aAAAA,EACAE,QAAS9Y,KAAK4V,SACdmD,MAAAA,IAIJ/Y,KAAK6V,gBAAiB,GACf,IACR,CAAAnQ,IAAA,iCAAAvC,MAED,WAeenD,KAAKgX,kBAAkBhX,KAAK0V,WAAY1V,KAAKyV,cAKrDzV,KAAK0V,WAAWwB,QAETlX,KAAKyV,WAAWyB,QAG1BlX,KAAK4V,UAAYjM,KAAKC,IAAI5J,KAAK8V,cAAe9V,KAAK+V,eAFnD/V,KAAK4V,UAAY5V,KAAK8V,cAFtB9V,KAAK4V,UAAY5V,KAAK+V,cAMxB/V,KAAKiW,qBAAuB,EAC5BjW,KAAKgW,qBAAuB,KAC7B,CAAAtQ,IAAA,sBAAAvC,MAED,SAAqBuS,EAAYhP,EAASR,GACnCwP,EAAWtO,iBACdsO,EAAWtO,eAAiBsO,EAAWlO,YAAcpC,EACjD4M,GAAIa,iBAAiB6C,EAAWxP,UAAWA,GAC3ClG,KAAKiZ,iBAAiBvD,IAE5B,IAAM6C,EAAoB7C,EAAWtO,eAE/B8R,EAA6BxD,EAAWlO,YAAcpC,EAAqB,KAAOmT,EAAoB7C,EAAWxP,UAAY,IAE/H,QAAuB1D,IAAvBxC,KAAK8V,cAA6B,CACpC,IAAMgC,EAAQpR,EAAQ,GACtB1G,KAAK8V,cAAgBgC,EAAM/Q,IAG7B,IAAA,IAASvF,EAAI,EAAGA,EAAIkF,EAAQhF,OAAQF,IAAK,CACvC,IAAI2X,EAAUnZ,KAAK8V,cACbsD,EAAS1S,EAAQlF,GACnBuX,EAAQK,EAAOrS,IAAMoS,EAYrB,GATM,IAAN3X,GAAWxB,KAAKgW,sBAnTQ,GAmT6ChW,KAAKmW,uBAClEgD,EAAAnZ,KAAK8V,cAAgBsD,EAAOtS,IAC9BiS,EAAA,EACR/Y,KAAKgW,qBAAuB,IAMzBhW,KAAKgW,sBAAwB+C,GAlUE,EAkU2CR,GAAqBQ,GAASzD,KAA8B3I,GAAU,CAC7I0M,IAAAA,EAAcrZ,KAAKsZ,gBAAgB5D,IAAehP,EAAQ,GAAGyB,KAAK4B,WAClEK,EAAQT,KAAKW,MAAMyO,EAAQR,GAE7B5O,KAAKsO,IAAImB,EAAOrS,IAAM/G,KAAKoW,2BAA6Bb,KAC1DvV,KAAKoW,0BAA4BgD,EAAOrS,IACxC2O,EAAW/O,SAASnG,KAAK,CACvB0O,KAAM7J,GACN0B,IAAKqS,EAAOrS,IACZa,UAAWwR,EAAOxR,UAClBwC,MAAAA,EACA+O,QAAAA,EACAZ,kBAAAA,KAIJ,IAAA,IAAS7V,EAAI,EAAGA,EAAI0H,EAAO1H,IAAK,CAC9B,IAAM6W,EAAe,IAAIrR,GAAYyB,KAAKW,MAAMtK,KAAK8V,cAAgByC,GAAqB5O,KAAKW,MAAMtK,KAAK8V,eAAgBuD,EAAaH,GACvIK,EAAa3R,UAAY+B,KAAKW,MAAMtK,KAAK4V,SAAWuD,GAC5CK,EAAAA,OAAOhY,EAAG,EAAG+X,GACrBvZ,KAAK8V,eAAiByC,EACtB/W,IAGFA,SAGSuX,IA7VyB,EA6VqBR,GAAqBQ,IAAS,KAEjFpP,KAAKsO,IAAImB,EAAOrS,IAAM/G,KAAKsW,+BAAiCf,KAC9DvV,KAAKsW,8BAAgC8C,EAAOrS,IAE5C2O,EAAW/O,SAASnG,KAAK,CACvB0O,KAAM7J,GACN0B,IAAKqS,EAAOrS,IACZa,UAAWwR,EAAOxR,UAClBuR,QAAAA,EACAZ,kBAAAA,KAGIiB,EAAAA,OAAOhY,EAAG,GAClBA,MAEImI,KAAKsO,IAAIc,GAASzD,KACfU,KAAAA,uBAEDrM,KAAKsO,IAAImB,EAAOrS,IAAM/G,KAAKuW,gCAAkChB,KAC/DvV,KAAKuW,+BAAiC6C,EAAOrS,IAC7C2O,EAAW/O,SAASnG,KAAK,CACvB0O,KAAM7J,GACNkS,KAAM6B,EAAOrS,IAAM,IACnBA,IAAKqS,EAAOrS,IACZa,UAAWwR,EAAOxR,UAClBuR,QAAAA,EACA/R,eAAgB2R,EAChBR,kBAAAA,MAKCzR,EAAAA,IAAMsS,EAAOrS,IAAMoS,EAC1BC,EAAOpT,SAAWkT,EAClBlZ,KAAK8V,eAAiByC,MAG3B,CAAA7S,IAAA,mBAAAvC,MAED,SAAkBsW,GAChB,IAAQC,EAAyCD,EAAzCC,WAAYpS,EAA6BmS,EAA7BnS,aAAcD,EAAeoS,EAAfpS,WAC5ByQ,EAAQ2B,EAAM/S,QAAQ,GAC5B,GAAKoR,EACL,OAA+B,EAAxBA,EAAM3P,KAAKG,WAAiBhB,GAAgBoS,EAAa,GAAKrS,EAAa,MACnF,CAAA3B,IAAA,kBAAAvC,MAED,SAAiBsW,GACXA,OAAAA,EAAMjS,YAAcpC,EAA2B4M,GAAI2H,eAAeF,EAAMtT,MAAOsT,EAAMnS,cAClF,IAAIwC,WAAW,EAAI2P,EAAMrS,eAAiBqS,EAAMnS,kBACxDkO,EAvYkB,GCXRoE,GAAG,WAAA,SAAAA,IAAArU,OAAAqU,GAiJbA,OAjJaA,EAAAA,EAAA,KAAA,CAAA,CAAAlU,IAAA,QAAAvC,MACd,SAAcgF,GACZ,KAAIA,EAAKzG,OAAS,GAAlB,CAEA,IAAMmY,EAAM,GACN5Y,EAAO2Y,EAAIE,YAAY,IAAI7P,SAAS9B,EAAK+B,OAAQ/B,EAAK4R,WAAY5R,EAAKG,aACvEnF,EAAQyW,EAAIE,YAAY,IAAI7P,SAAS9B,EAAK+B,OAAQ/B,EAAK4R,WAAa9Y,EAAKoH,KAAMF,EAAKG,WAAarH,EAAKoH,OAGrGwR,OAFH5Y,EAAAA,EAAKkH,MAAQhF,EAAMgF,KAEhB0R,KACR,CAAAnU,IAAA,cAAAvC,MAED,SAAoB6W,GAClB,IAII7W,EAJE4L,EAAUiL,EAAK1R,WAEjB/D,EAAS,EACT0V,GAAQ,EAGJ/K,OALK8K,EAAKE,SAAS,IAMpB,KAAA,EACKF,EAAAA,EAAKG,WAAW,GACd5V,GAAA,EACV,MAAA,KACG,EACHpB,IAAU6W,EAAKE,SAAS,GACd3V,GAAA,EACV,MAEG,KAAA,EACH,IAAA6V,EAAuBR,EAAIS,aAAa,IAAIpQ,SAAS+P,EAAK9P,OAAQ8P,EAAKD,WAAaxV,EAAQyV,EAAK1R,WAAa/D,IACtG4D,EADIiS,EAAJjS,KAEEE,GAFQ+R,EAAJ/R,KAId,MACG,KAAA,EACHlF,EAAQ,GACR,IAAImX,EAAW,EAIR/V,IAH4C,IAAhB,SAA9ByV,EAAK7P,UAAU4E,EAAU,MACjBuL,EAAA,GAEN/V,EAASwK,EAAU,GAAG,CAC3BwL,IAAAA,EAA8BX,EAAIY,aAAa,IAAIvQ,SAAS+P,EAAK9P,OAAQ8P,EAAKD,WAAaxV,EAAQyV,EAAK1R,WAAa/D,EAAS+V,IAAtHjS,EAAIkS,EAAJlS,KAAMF,EAAIoS,EAAJpS,KACV8R,GADqBM,EAALN,MACT,MACL9R,EAAAA,EAAKlH,MAAQkH,EAAKhF,MACdkF,GAAAA,EAER9D,GAAAA,GAAUwK,EAAU,EAEP,KAD6B,SAA7BiL,EAAK7P,UAAU5F,EAAS,MACXA,GAAA,GAG9B,MACG,KAAA,EACHpB,EAAQ,GACEoB,GAAA,EACV,IAAI+V,EAAW,EAIR/V,IAH4C,IAAhB,SAA9ByV,EAAK7P,UAAU4E,EAAU,MACjB0L,EAAA,GAENlW,EAASwK,EAAU,GAAG,CAC3B2L,IAAAA,EAA8Bd,EAAIY,aAAa,IAAIvQ,SAAS+P,EAAK9P,OAAQ8P,EAAKD,WAAaxV,EAAQyV,EAAK1R,WAAa/D,EAAS+V,IAAtHjS,EAAIqS,EAAJrS,KAAMF,EAAIuS,EAAJvS,KACV8R,GADqBS,EAALT,MACT,MACL9R,EAAAA,EAAKlH,MAAQkH,EAAKhF,MACdkF,GAAAA,EAER9D,GAAAA,GAAUwK,EAAU,EAEP,KAD6B,SAA7BiL,EAAK7P,UAAU5F,EAAS,MAE3BA,GAAA,GAId,MACG,KAAA,EACK/B,OAAAA,EACC+B,EAAA,EACD0V,GAAA,EACR,MACG,KAAA,GACH9W,EAAQ,GACFwX,IAAAA,EAAoBX,EAAK7P,UAAU,GAC/B5F,GAAA,EACV,IAAA,IAAS/C,EAAI,EAAGA,EAAImZ,EAAmBnZ,IAAK,CAC1C,IAAAoZ,EAAuBhB,EAAIE,YAAY,IAAI7P,SAAS+P,EAAK9P,OAAQ8P,EAAKD,WAAaxV,EAAQyV,EAAK1R,WAAa/D,IAArG4D,EAAIyS,EAAJzS,KAAME,EAAIuS,EAAJvS,KACdlF,EAAM3C,KAAK2H,GACDE,GAAAA,EAGZ,MACG,KAAA,GACGwS,IAAAA,EAAYb,EAAKG,WAAW5V,GAAsC,IAA5ByV,EAAKc,SAASvW,EAAS,GAC3DpB,EAAA,IAAI4X,KAAKF,GACPtW,GAAA,GAEV,MACG,KAAA,GACG7C,IAAAA,EAASsY,EAAK7P,UAAU,GACpB5F,GAAA,EACFpB,EAAA,GACJzB,EAAS,IACH8J,EAAAA,GAAKwP,OAAO,IAAIlR,WAAWkQ,EAAK9P,OAAQ8P,EAAKD,WAAaxV,EAAQ7C,KAElEA,GAAAA,EAEV,MAAA,QAESqN,EAAAA,EAIN,MAAA,CACL5G,KAAMhF,EACNkF,KAAM9D,EACN0V,MAAAA,KAEH,CAAAvU,IAAA,eAAAvC,MAED,SAAqB6W,GACbtY,IAAAA,EAASsY,EAAKiB,UAAU,GAC1B9S,EAAO,GAKJ,OAJHzG,EAAS,IACJ8J,EAAAA,GAAKwP,OAAO,IAAIlR,WAAWkQ,EAAK9P,OAAQ8P,EAAKD,WAAa,EAAGrY,KAG/D,CACLyG,KAAAA,EACAE,KAAM,EAAI3G,KAEb,CAAAgE,IAAA,eAAAvC,MAED,SAAqB6W,GACnB,KAAIA,EAAK1R,WAAa,GAAtB,CAEMrH,IAAAA,EAAO2Y,EAAIS,aAAaL,GACxB7W,EAAQyW,EAAIE,YAAY,IAAI7P,SAAS+P,EAAK9P,OAAQ8P,EAAKD,WAAa9Y,EAAKoH,KAAM2R,EAAK1R,WAAarH,EAAKoH,OAErG,MAAA,CACLF,KAAM,CACJlH,KAAMA,EAAKkH,KACXhF,MAAOA,EAAMgF,MAEfE,KAAMpH,EAAKoH,KAAOlF,EAAMkF,KACxB4R,MAAO9W,EAAM8W,YAEhBL,EAjJa,GCIVsB,GAAS,IAAIhQ,GAAO,cASbiQ,GAAU,WAarBA,SAAAA,EAAa1F,EAAYC,EAAYC,GAAepQ,OAAA4V,2BAZpC,2BACC,sBACR,2CACuB,GAUzB1F,KAAAA,WAAaA,GAAc,IAAInQ,GAC/BoQ,KAAAA,WAAaA,GAAc,IAAIvO,GAC/BwO,KAAAA,cAAgBA,GAAiB,IAAI3M,GACrCoS,KAAAA,OAAS,IAAI5F,GAASxV,KAAKyV,WAAYzV,KAAK0V,WAAY1V,KAAK2V,eAyJnEwF,OAtJD1V,EAAA0V,EAAA,CAAA,CAAAzV,IAAA,QAAAvC,MAMA,SAAOgF,GAAMyO,IAAAA,EAAatU,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,IAAAA,UAAA,GAAUuU,IAAUvU,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,KAAAA,UAAA,GACpCoT,EAA0C1V,KAA1C0V,WAAYD,EAA8BzV,KAA9ByV,WAAYE,EAAkB3V,KAAlB2V,cA4B5B,IA1BAiB,GAAkBC,IACpB7W,KAAKqb,eAAiB,MAGpBzE,IACF5W,KAAKsb,eAAgB,GAGnB1E,GACFnB,EAAW8F,QACX7F,EAAW6F,QACX5F,EAAc4F,UAEd9F,EAAW/O,QAAU,GACrBgP,EAAWhP,QAAU,GACrBiP,EAAczM,WAAa,GAC3ByM,EAAc1M,iBAAmB,GACjCwM,EAAW9O,SAAW,GACtB+O,EAAW/O,SAAW,GAElB3G,KAAKqb,iBACArO,EAAAA,GAAiBhN,KAAKqb,eAAgBlT,GAC7CnI,KAAKqb,eAAiB,QAIrBlT,EAAKzG,OACD,MAAA,CACL+T,WAAAA,EACAC,WAAAA,EACAC,cAAAA,GAIJ,IAAIpR,EAAS,EACT,IAACvE,KAAKsb,cAAe,CACvB,IAAKH,EAAWK,MAAMrT,GACd,MAAA,IAAIiB,MAAM,oBAElBsM,EAAWtP,SAAsB,EAAV+B,EAAK,MAAY,GAAO,EACpC/B,EAAAA,QAA4B,IAAP,EAAV+B,EAAK,IAC3BnI,KAAKsb,eAAgB,EACZ1N,EAAAA,GAAUzF,EAAM,GAAK,EAUxB5D,IAPR,IAEIkX,EACAC,EACAb,EACAc,EACAC,EANE7M,EAAU5G,EAAKzG,OAOb6C,EAAS,GAAMwK,IACrB0M,EAAUtT,EAAK5D,KAEXA,EAAS,IADD4D,EAAAA,EAAK5D,EAAS,IAAM,GAAO4D,EAAK5D,EAAS,IAAM,EAAK4D,EAAK5D,EAAS,IACjDwK,KAC7B8L,GACG1S,EAAK5D,EAAS,IAAM,KAAO,IAC3B4D,EAAK5D,EAAS,IAAM,KACpB4D,EAAK5D,EAAS,IAAM,GACrB4D,EAAK5D,EAAS,GAGNA,GAAA,GACVoX,EAAWxT,EAAK4B,SAASxF,EAAQA,EAASmX,GAC1B,IAAZD,EACGI,KAAAA,YAAYF,EAAUd,GACN,IAAZY,EACJK,KAAAA,YAAYH,EAAUd,GACN,KAAZY,EACJM,KAAAA,aAAaJ,EAAUd,GAE5BK,GAAO3P,KAAI,qBAAAlK,OAAsBoa,KAIrB7N,EAAAA,GAAUzF,EADduT,GAAAA,MAEU,GAAKA,GAChBnQ,GAAAA,KAAIlK,uBAAAA,OAAwBua,EAAWva,MAAAA,OAAK,GAAKqa,QAGhDnX,GAAA,EAiBL,OAdHA,EAASwK,IACNsM,KAAAA,eAAiBlT,EAAK4B,SAASxF,IAGtCmR,EAAWsG,gBAAkBvG,EAAWuG,gBAAkBvG,EAAWvP,UAAYyP,EAAczP,UAAY,IAChGA,EAAAA,UAAYwP,EAAWrO,YAAc,GAE3CqO,EAAWwB,SAAWxB,EAAWuG,aACpCvG,EAAW6F,SAER9F,EAAWyB,SAAWzB,EAAWwG,aACpCxG,EAAW8F,QAGN,CACL9F,WAAAA,EACAC,WAAAA,EACAC,cAAAA,KAIJ,CAAAjQ,IAAA,MAAAvC,MAMA,SAAKwT,EAAWC,EAAeC,GAEtB,OADP7W,KAAKob,OAAOc,IAAIvF,EAAWC,EAAeC,GACnC,CACLpB,WAAYzV,KAAKyV,WACjBC,WAAY1V,KAAK0V,WACjBC,cAAe3V,KAAK2V,iBAIxB,CAAAjQ,IAAA,cAAAvC,MAOA,SAAagF,EAAMyO,EAAeC,EAAYF,GAE5C,OADKwF,KAAAA,MAAMhU,EAAMyO,EAAeC,GACzB7W,KAAKkc,IAAIvF,EAAWC,EAAeC,KAG5C,CAAAnR,IAAA,cAAAvC,MAWA,SAAagF,EAAMpB,GACjB,GAAKoB,EAAKzG,OAAV,CAEM0a,IAAAA,GAAoB,IAAVjU,EAAK,MAAe,EAC9BsR,EAAQzZ,KAAK0V,WAEnB,GACa,KAAX0G,GACW,IAAXA,GACW,IAAXA,EAIA,OAFAlB,GAAO3P,KAAI,6BAAAlK,OAA8B+a,SACzC3C,EAAM8B,QAIR,GAAe,KAAXa,EAAe,CACXC,IAAAA,GAAuB,GAAVlU,EAAK,KAAc,EAChCmU,GAAuB,EAAVnU,EAAK,KAAc,EAChCoU,EAAuB,EAAVpU,EAAK,GAClBd,EAAAA,WAAa8T,EAAWqB,WAAWH,GACnC3C,EAAAA,WAAa4C,EAAY,GAAK,EACpC7C,EAAMnS,aAAeiV,EAAY,EAGpB,KAAXH,EACGK,KAAAA,UAAUtU,EAAMpB,GAEhB2V,KAAAA,WAAWvU,EAAMpB,EAAKqV,MAE9B,CAAA1W,IAAA,aAAAvC,MAED,SAAYgF,EAAMpB,EAAKqV,GACrB,IAAM3C,EAAQzZ,KAAK0V,WACnB+D,EAAMjS,UAAuB,IAAX4U,EAAehX,EAA0BA,EAC3DqU,EAAMpS,WAAa,IACnBoS,EAAMtT,MAAQsT,EAAMjS,UACdd,EAAAA,QAAQlG,KAAK,IAAI0H,GAAYnB,EAAKoB,EAAK4B,SAAS,OACvD,CAAArE,IAAA,YAAAvC,MAED,SAAWgF,EAAMpB,GACf,IAAM0S,EAAQzZ,KAAK0V,WAGfvN,GAFJsR,EAAMjS,UAAYpC,EAEF,IAAZ+C,EAAK,GAAU,CACjB,IAAM0R,EAAM7H,GAAI2K,yBAAyBxU,EAAK4B,SAAS,IACnD8P,GACFJ,EAAMtT,MAAQ0T,EAAI1T,MAClBsT,EAAMnS,aAAeuS,EAAIvS,aACzBmS,EAAMpS,WAAawS,EAAIxS,WACvBoS,EAAMlS,OAASsS,EAAItS,OACnBkS,EAAMhH,WAAaoH,EAAIpH,WACvBgH,EAAMmD,gBAAkB/C,EAAIvH,yBAE5BmH,EAAM8B,QACChQ,GAAAA,KAAK,mCAAoCpD,SAEnD,GAAsB,IAAZA,EAAK,GAAU,CACpBpB,GAAAA,MAAAA,EAAmC,OACjCL,EAAAA,QAAQlG,KAAK,IAAI0H,GAAYnB,EAAKoB,EAAK4B,SAAS,UAEtDmR,GAAO3P,KAAI,0BAAAlK,OAA2B8G,EAAK,OAE9C,CAAAzC,IAAA,cAAAvC,MAED,SAAagF,EAAMrB,GAAK,IAAA4P,EAAA1W,KACtB,KAAImI,EAAKzG,OAAS,GAAlB,CAEMmb,IAAAA,GAAuB,IAAV1U,EAAK,MAAe,EACjC2U,EAAoB,GAAV3U,EAAK,GAEfsR,EAAQzZ,KAAKyV,WAGjBqH,GAAY,IAAZA,GACY,KAAZA,EAIA,OAFArD,EAAM8B,aACNL,GAAO3P,KAAI,wBAAAlK,OAAyByb,IAItC,IAAM7N,EAAqB,KAAZ6N,EACfrD,EAAMjS,UAAYyH,EAAS9J,EAAsBA,EAEjD,IAAM4X,EAAa5U,EAAK,GAClB6U,GAAS7U,EAAK,IAAM,GAAOA,EAAK,IAAM,EAAMA,EAAK,KAAQ,GAAM,EAErE,GAAmB,IAAf4U,EAAkB,CACdE,IAAAA,EAAa9U,EAAK4B,SAAS,GAC3B8P,EAAM5K,EACRmE,GAAK8J,oCAAoCD,GACzCtN,GAAIwN,mCAAmCF,GAC3C,GAAIpD,EAAK,CACP,IAAQjT,EAAmDiT,EAAnDjT,KAAML,EAA6CsT,EAA7CtT,IAAKyJ,EAAwC6J,EAAxC7J,OAAQD,EAAgC8J,EAAhC9J,OAAQ0D,EAAwBoG,EAAxBpG,OAAQ7D,EAAgBiK,EAAhBjK,YACvChJ,IACIA,EAAAA,KAAO6S,EAAM7S,MAAQA,GAEzBL,IACFkT,EAAMtT,MAAQI,EAAIJ,MAClBsT,EAAM7T,MAAQW,EAAIX,MAClB6T,EAAM5T,OAASU,EAAIV,OACnB4T,EAAMhT,SAAWF,EAAIE,SACrBgT,EAAM1T,OAASQ,EAAIR,OACnB0T,EAAM3T,OAASS,EAAIT,QAEjBiK,EAAOrO,SAAQ+X,EAAMlT,IAAMwJ,GAC3BC,EAAOtO,SAAQ+X,EAAMnT,IAAM0J,GAC3ByD,GAAUA,EAAO/R,SAAQ+X,EAAMjT,IAAMiN,GACrC7D,IAAa6J,EAAM7J,YAAcA,QAE9BrE,GAAAA,KAAIlK,gBAAAA,OAAiB4N,EAAS,OAAS,MAAmC9G,8BAAAA,QAErF,GAA0B,IAAf4U,EAAkB,CACvBpV,IAAAA,EAAQkH,GAAKuO,UAAUjV,EAAK4B,SAAS,GAAI0P,EAAM7J,aAI/CjI,IAFJA,EAAQ3H,KAAKqd,wBAAwBpO,EAAQtH,EAAO8R,KAEvC9R,EAAMjG,OAAQ,CACzB,IAAM0X,EAAS,IAAI1R,GAAYZ,EAAMkW,EAAKlW,EAAKa,GAC7B,IAAdkV,GACFzD,EAAOkE,gBAEH5W,EAAAA,QAAQlG,KAAK4Y,GAEb7L,EAAAA,SAAQ,SAAAyB,GACZ,IAAME,EAAOD,EAAUD,EAAK,KAAO,EAAK,GAAiB,GAAVA,EAAK,GAC5CE,OAAAA,GACD,KAAA,EACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACA,KAAA,GACH,IAAMD,GAAmB,IAATC,GAAgBD,GAAmB,IAATC,EAAa,MACvDkK,EAAOkE,gBACP,MACG,KAAA,EACA,KAAA,GACA,KAAA,GACH,IAAMrO,GAAmB,IAATC,GAAgBD,GAAmB,IAATC,EAAa,MACvDwH,EAAKf,cAAczM,WAAW1I,KAAK,IAAIqI,GACrCgG,GAAK0O,SAAS1O,GAAKsB,UAAUnB,GAAOC,GACpCnI,EAAMkW,QAOV5D,EAAOtR,UACJ0V,KAAAA,SAEPpE,EAAOqE,MAAQzd,KAAKwd,YAEbjS,GAAAA,KAAK,qBAAsBpD,QAEZ,IAAf4U,GAGT7B,GAAO3P,KAAI,0BAAAlK,OAA2B0b,OAEzC,CAAArX,IAAA,0BAAAvC,MAED,SAAyBua,EAAM/V,EAAO8R,GACpC,OAAKiE,GAAS1d,KAAK2d,8BAKFhW,EAAMgH,KAAI,SAAA+I,GAAMA,OAAAA,EAAE,KAAO,EAAK,MAElC5K,SAAS,KACpB9M,KAAK2d,+BAAgC,EAC9BhW,IAGHkQ,EAAAA,QAAQ4B,EAAMnT,IAAI,IAClBuR,EAAAA,QAAQ4B,EAAMlT,IAAI,IAClBsR,EAAAA,QAAQ4B,EAAMjT,IAAI,IAEjBmB,EAAMsF,OAAOC,WAflBlN,KAAK2d,+BAAgC,EAC9BhW,KAeV,CAAAjC,IAAA,eAAAvC,MAED,SAAcgF,EAAMpB,GACb4O,KAAAA,cAAc1M,iBAAiBzI,KAAK,IAAIgI,GAAgBoR,GAAIrL,MAAMpG,GAAOpB,OAC/E,CAAA,CAAArB,IAAA,QAAAvC,MApMD,SAAcgF,GACRA,OAAY,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,IAAZA,EAAK,IAG9DyF,GAAUzF,EAAM,IAAM,MAC9BgT,EA1KoB,GAIgB3V,EAJ1B2V,GAAU,aAMD,CAAC,KAAM,KAAO,KAAO,OChB5B,IAAIjQ,GAAO,aCF1B,IAAa0S,GAAS,WAAA,SAAAA,IAAArY,OAAAqY,GAo9BnBA,OAp9BmBA,EAAAA,EAAA,KAAA,CAAA,CAAAlY,IAAA,UAAAvC,MACpB,SAAgBgF,EAAMpH,GAAOmL,IAAAA,EAAK5J,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC7BuX,EAAM,GACZ,IAAK1R,EAAa0R,OAAAA,EAKX1R,IAHP,IAAIE,EAAO,EACP6G,EAAO,GACP2O,EAAa,EACV1V,EAAKzG,OAAS,GAAG,CAUtB,GATA2G,EAAOuF,GAAUzF,GACVyD,EAAAA,OAAOC,aAAapJ,MAAM,KAAM0F,EAAK4B,SAAS,EAAG,IAC3C8T,EAAA,EACA,IAATxV,GACKwF,EAAAA,GAAU1F,EAAM,GACT0V,GAAA,GACJxV,IACVA,EAAOF,EAAKzG,SAETX,EAAM,IAAMmO,IAASnO,EAAM,GAAI,CAClC,IAAM+c,EAAU3V,EAAK4B,SAAS,EAAG1B,GAC7BtH,KAAAA,EAAMW,OAAS,GASVkc,OAAAA,EAAUG,QAAQD,EAAQ/T,SAAS8T,GAAa9c,EAAMI,MAAM,GAAI+K,EAAQ2R,GAR/EhE,EAAIrZ,KAAK,CACP0L,MAAAA,EACA7D,KAAAA,EACAwV,WAAAA,EACA3O,KAAAA,EACA/G,KAAM2V,IAOHzV,GAAAA,EACFF,EAAAA,EAAK4B,SAAS1B,GAGhBwR,OAAAA,IACR,CAAAnU,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC3B+V,EAAAA,QAAUtQ,GAAUzF,GACxB,IAAI+D,EAAQ,EACNiS,EAAqC,EAAZtE,EAAIuE,MAC7BC,EAA6C,EAAZxE,EAAIuE,MACrCE,EAA4C,EAAZzE,EAAIuE,MACpCG,EAAwC,GAAZ1E,EAAIuE,MAChCI,EAAyC,GAAZ3E,EAAIuE,MAEnCD,IACOjS,GAAA,EACLuS,EAAAA,eAAiB7Q,GAAUzF,EAAM+D,GAC5BA,GAAA,GAEPmS,IACEK,EAAAA,uBAAyB9Q,GAAUzF,EAAM+D,GACpCA,GAAA,GAEPoS,IACEK,EAAAA,sBAAwB/Q,GAAUzF,EAAM+D,GACnCA,GAAA,GAEPqS,IACEK,EAAAA,kBAAoBhR,GAAUzF,EAAM+D,GAC/BA,GAAA,GAEPsS,IACEK,EAAAA,mBAAqBjR,GAAUzF,EAAM+D,SAG9C,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAI+D,EAAQ,EACR4S,EAAAA,aAAelR,GAAUzF,EAAM+D,GAC1BA,GAAA,EACLhG,EAAAA,UAAY0H,GAAUzF,EAAM+D,GACvBA,GAAA,EACW,IAAhB2N,EAAIkF,SACFC,EAAAA,2BAA6BpR,GAAUzF,EAAM+D,GACxCA,GAAA,EACL+S,EAAAA,aAAerR,GAAUzF,EAAM+D,GAC1BA,GAAA,IAEL8S,EAAAA,2BAA6BnR,GAAU1F,EAAM+D,GACxCA,GAAA,EACL+S,EAAAA,aAAepR,GAAU1F,EAAM+D,GAC1BA,GAAA,GAEFA,GAAA,EACT2N,EAAIqF,WAAa,GACX9U,IAAAA,EAAQuD,GAAUxF,EAAM+D,GACrBA,GAAA,EACT,IAAA,IAAS1K,EAAI,EAAGA,EAAI4I,EAAO5I,IAAK,CAC9B,IAAM2d,EAAM,GACRD,EAAAA,WAAW1e,KAAK2e,GAChBC,IAAAA,EAAQxR,GAAUzF,EAAM+D,GACnBA,GAAA,EACLmT,EAAAA,eAAkBD,GAAS,GAAM,EACrCD,EAAIG,gBAA0B,WAARF,EAClBG,EAAAA,oBAAsB3R,GAAUzF,EAAM+D,GAElC0B,EAAAA,GAAUzF,EADT+D,GAAA,GAEAA,GAAA,EACLsT,EAAAA,gBAAmBJ,GAAS,GAAM,EAClCK,EAAAA,SAAYL,GAAS,GAAM,EAC/BD,EAAIO,eAAyB,UAARN,QAG1B,CAAA1Z,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCyT,EAAAA,KAAO/B,EAAU+B,KAAK/B,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/D0T,EAAAA,KAAOhC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAOyC,KAAI,SAAAiR,GAAQhC,OAAAA,EAAUgC,KAAKA,MAC3EC,EAAAA,KAAOjC,EAAUiC,KAAKjC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAI+D,EAAQ,EACQ,IAAhB2N,EAAIkF,SACF7Y,EAAAA,UAAY0H,GAAUzF,EAAM,IAC5BnC,EAAAA,SAAW6H,GAAU1F,EAAM,IACtB+D,GAAA,KAELhG,EAAAA,UAAY0H,GAAUzF,EAAM,GAC5BnC,EAAAA,SAAW4H,GAAUzF,EAAM,IACtB+D,GAAA,IAEX2N,EAAIiG,YAAclS,GAAUzF,EAAM+D,EAAQ,SAE7C,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClC6T,EAAAA,KAAOnC,EAAUmC,KAAKnC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/D8T,EAAAA,KAAOpC,EAAUoC,KAAKpC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAI+D,EAAQ,EACQ,IAAhB2N,EAAIkF,SACFb,EAAAA,QAAUtQ,GAAUzF,EAAM,IAC1BnC,EAAAA,SAAW6H,GAAU1F,EAAM,IACtB+D,GAAA,KAELgS,EAAAA,QAAUtQ,GAAUzF,EAAM,GAC1BnC,EAAAA,SAAW4H,GAAUzF,EAAM,IACtB+D,GAAA,IAEX2N,EAAIjU,MAAQgI,GAAUzF,EAAM+D,EAAQ,IACpC2N,EAAIhU,OAAS+H,GAAUzF,EAAM+D,EAAQ,SAExC,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClC+T,EAAAA,KAAOrC,EAAUqC,KAAKrC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DgU,EAAAA,KAAOtC,EAAUsC,KAAKtC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DiU,EAAAA,KAAOvC,EAAUuC,KAAKvC,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAI+D,EAAQ,EACQ,IAAhB2N,EAAIkF,SACF7Y,EAAAA,UAAY0H,GAAUzF,EAAM,IAC5BnC,EAAAA,SAAW6H,GAAU1F,EAAM,IACtB+D,GAAA,KAELhG,EAAAA,UAAY0H,GAAUzF,EAAM,GAC5BnC,EAAAA,SAAW4H,GAAUzF,EAAM,IACtB+D,GAAA,IAELkU,IAAAA,EAAOzS,GAAUxF,EAAM+D,GAC7B2N,EAAIwG,SAAWzU,OAAOC,aAAqC,IAAtBuU,GAAQ,GAAM,IAAqC,IAArBA,GAAQ,EAAK,IAA8B,IAAR,GAAPA,SAElG,CAAA1a,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GACX,IAAhB0R,EAAIkF,UACFuB,EAAAA,YAAc1U,OAAOC,aAAapJ,MAAM,KAAM0F,EAAK4B,SAAS,EAAG,UAGxE,CAAArE,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCqU,EAAAA,KAAO3C,EAAU2C,KAAK3C,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DsU,EAAAA,KAAO5C,EAAU4C,KAAK5C,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DuU,EAAAA,KAAO7C,EAAU6C,KAAK7C,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC3BuY,EAAAA,aAAe/S,GAAUxF,GAC7B0R,EAAI8G,QAAU,CAAChT,GAAUxF,EAAM,GAAIwF,GAAUxF,EAAM,GAAIwF,GAAUxF,EAAM,SAE1E,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC3ByY,EAAAA,QAAUjT,GAAUxF,QAE3B,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAAU,IAAA2U,EAAAC,EAAAC,EAC5CC,EAAAA,KAAOpD,EAAUoD,KAAKpD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/D+U,EAAAA,KAAOrD,EAAUqD,KAAKrD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DgV,EAAAA,KAAOtD,EAAUsD,KAAKtD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DiV,EAAAA,KAAOvD,EAAUuD,KAAKvD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DkV,EAAAA,KAAOxD,EAAUwD,KAAKxD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DmV,EAAAA,KAAOzD,EAAUyD,KAAKzD,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC9D2N,EAAIwH,OACHC,EAAAA,KAAO1D,EAAU0D,KAAK1D,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAIwH,KAAOxH,EAAIyH,MAEXC,IAAAA,EAAqCV,QAAtBA,EAAGhH,EAAImH,KAAKQ,QAAQ,cAAEX,GAAMC,QAANA,EAAnBD,EAAqBY,YAAIV,IAAAD,GAAM,QAANC,EAAzBD,EAA2BY,YAA3BX,IAA+BA,SAA/BA,EAAiCY,KAAKJ,gBAC1DK,EAAAA,KAAOhE,EAAUgE,KAAKhE,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAIgI,KAAOjE,EAAUiE,KAAKjE,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,GAAIqV,QAE1E,CAAA7b,IAAA,OAAAvC,MAED,SAAa6a,GAAK7P,IAAAA,EAAE7L,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACrB,OAAO2b,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAI+D,EAAQ,EACN4V,EAAclU,GAAUzF,EAAM+D,GAC3BA,GAAA,EACT2N,EAAInT,QAAU,GACd,IAAA,IAASlF,EAAI,EAAGA,EAAIsgB,EAAatgB,IAAK,CAGpC,IAFA,IAAM4X,EAAS,CACfA,qBAA8B,IACrB1W,EAAI,EAAGA,EAAIyL,EAAIzL,IACfqf,EAAAA,qBAAqBrf,GAAKyF,EAAK+D,EAAQxJ,GAG5CmX,GADK1L,GAAAA,EACO,EAAZ0L,EAAIuE,MAAa,CACnBhF,EAAO4I,WAAa,GACdC,IAAAA,EAAiBtU,GAAUxF,EAAM+D,GAC9BA,GAAA,EACT,IAAA,IAASxJ,EAAI,EAAGA,EAAIuf,EAAgBvf,IAAK,CACvC,IAAMwf,EAAY,GACRC,EAAAA,iBAAmBxU,GAAUxF,EAAM+D,GACpCA,GAAA,EACCkW,EAAAA,qBAAuBxU,GAAUzF,EAAM+D,GACxCA,GAAA,EACF8V,EAAAA,WAAWxhB,KAAK0hB,IAGvBxb,EAAAA,QAAQlG,KAAK4Y,SAGtB,CAAA1T,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHA,IAAMka,EAAS,GACTC,EAAW,GACbpW,EAAQ,EACH1K,EAAI,EAAGA,EAAI,GAAIA,IACtB8gB,EAAS9hB,KAAK+hB,GAAMpa,EAAK+D,EAAQ1K,KAG/BqY,GADK3N,GAAA,GACL2N,EAAIkF,QAAU,EAAG,CACbyD,IAAAA,EAAY5U,GAAUzF,EAAM+D,GACzBA,GAAA,EACT,IAAA,IAAS1K,EAAI,EAAGA,GAAK,GAAKghB,GAAW9gB,OAAQF,IAC3C,IAAA,IAASkB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAM+f,EAAQta,EAAK+D,GACVA,GAAA,EACF1L,EAAAA,KAAK+hB,GAAME,KAIlB/G,IAAAA,EAAW9N,GAAUzF,EAAM+D,GACjC2N,EAAI6I,UAAYhH,EACPxP,GAAA,EACT2N,EAAI8I,IAAMN,EACVxI,EAAI+I,UAAYN,EAChBzI,EAAI3P,OAAS/B,OAEhB,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,EAAM+D,GACjC2W,EAAAA,WAAajV,GAAUzF,GAC3B0R,EAAI2H,QAAU5D,EAAUG,QAAQ5V,EAAK4B,SAAS,GAAI,GAAImC,EAAQ,GAAGyC,KAAI,SAAAmU,GACnE,OAAQA,EAAE5T,MACH,IAAA,OACA,IAAA,OACA,IAAA,OACA,IAAA,OACI0O,OAAAA,EAAUmF,KAAKD,GACnB,IAAA,OACA,IAAA,OACIlF,OAAAA,EAAUoF,KAAKF,GACnB,IAAA,OACIlF,OAAAA,EAAUqF,KAAKH,GACnB,IAAA,OACA,IAAA,OACIlF,OAAAA,EAAUsF,KAAKJ,GACnB,IAAA,OAEH,OAAO7E,GAAS6E,GAAG,GAAO,SAACjJ,EAAK1R,EAAM+D,GACpC2N,EAAIvS,aAAeqG,GAAUxF,EAAM,IACnC0R,EAAIsJ,WAAaxV,GAAUxF,EAAM,IACjC0R,EAAIxS,WAAcuG,GAAUzF,EAAM,UAClCA,EAAOA,EAAK4B,SAAS,IACrB8P,EAAI4H,KAAO7D,EAAU6D,KAAK7D,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAIuJ,KAAOxF,EAAUwF,KAAKxF,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,OAElE,IAAA,OAEH,OAAO+R,GAAS6E,GAAG,GAAO,SAACjJ,EAAK1R,EAAM+D,GACpC2N,EAAIjU,MAAQ+H,GAAUxF,EAAM,IAC5B0R,EAAIhU,OAAS8H,GAAUxF,EAAM,IAC7B0R,EAAIwJ,gBAAkBzV,GAAUzF,EAAM,IACtC0R,EAAIyJ,eAAiB1V,GAAUzF,EAAM,IACrCA,EAAOA,EAAK4B,SAAS,IACrB8P,EAAI4H,KAAO7D,EAAU6D,KAAK7D,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAI0J,KAAO3F,EAAU2F,KAAK3F,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAIjT,KAAOgX,EAAUhX,KAAKgX,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IACnE2N,EAAI2J,KAAO5F,EAAU4F,KAAK5F,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,WAIxEe,OAAOC,cAEb,CAAAxH,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAChC,IAAI+D,EAAQ,EACZ2N,EAAI4J,oBAAsBtb,EAAK+D,GACtBA,GAAA,EACT2N,EAAI0H,gBAAkBpZ,EAAK+D,GAClBA,GAAA,EACT2N,EAAI6J,YAAc,GAClB,IAAA,IAASliB,EAAI,EAAGA,EAAI,GAAIA,IACtBqY,EAAI6J,YAAYljB,KAAK+hB,GAAMpa,EAAK+D,KACvBA,GAAA,OAGd,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCyV,EAAAA,KAAO/D,EAAU+D,KAAK/D,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCwV,EAAAA,KAAO9D,EAAU8D,KAAK9D,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DyX,EAAAA,KAAO/F,EAAU+F,KAAK/F,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAChC0R,EAAI+J,YAAc,GAClB,IAAA,IAASpiB,EAAI,EAAGA,EAAI,EAAGA,IACrBqY,EAAI+J,aAAehY,OAAOC,aAAa1D,EAAK3G,SAGjD,CAAAkE,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAChC2X,IAAAA,EAAYC,GAAuBjK,EAAK1R,GACxCwT,EAAWxT,EAAK4B,SAAS8Z,GACtBA,GAAAA,EACLN,EAAAA,KAAO3F,EAAU2F,KAAK3F,EAAUG,QAAQpC,EAAU,CAAC,QAASzP,GAAO,IACnEsX,EAAAA,KAAO5F,EAAU4F,KAAK5F,EAAUG,QAAQpC,EAAU,CAAC,QAASzP,GAAO,SAE1E,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAChC0R,EAAI1R,KAAO6V,EAAI7V,KACf0R,EAAIkK,qBAAuB5b,EAAK,GAChC0R,EAAImK,qBAAuB7b,EAAK,GAChC0R,EAAIpJ,qBAAuBtI,EAAK,GAChC0R,EAAIoK,mBAAqB9b,EAAK,GAC1BhC,EAAAA,MAAQ2H,GAAY,CAAC3F,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAC5C+b,EAAAA,mBAA+B,EAAV/b,EAAK,GAC1Bgc,EAAAA,UAAsB,GAAVhc,EAAK,GACrB0R,EAAItT,IAAM,GAEV,IADA,IAAI2F,EAAQ,EACH1K,EAAI,EAAGA,EAAIqY,EAAIsK,UAAW3iB,IAAK,CAChC6G,IAAAA,EAAOsF,GAAUxF,EAAM+D,GACpBA,GAAA,EACT2N,EAAItT,IAAI/F,KAAK2H,EAAK4B,SAASmC,EAAOA,EAAQ7D,IAGjCA,GAAAA,EAEXwR,EAAIuK,UAAYjc,EAAK+D,GACZA,GAAA,EACT2N,EAAIvT,IAAM,GACV,IAAA,IAAS9E,EAAI,EAAGA,EAAIqY,EAAIuK,UAAW5iB,IAAK,CAChC6G,IAAAA,EAAOsF,GAAUxF,EAAM+D,GACpBA,GAAA,EACT2N,EAAIvT,IAAI9F,KAAK2H,EAAK4B,SAASmC,EAAOA,GAAS7D,IAClCA,GAAAA,QAGd,CAAA3C,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAChC2X,IAAAA,EAAYC,GAAuBjK,EAAK1R,GACxCwT,EAAWxT,EAAK4B,SAAS8Z,GACtBA,GAAAA,EACLjd,EAAAA,KAAOgX,EAAUhX,KAAKgX,EAAUG,QAAQpC,EAAU,CAAC,QAASzP,GAAO,IACnEsX,EAAAA,KAAO5F,EAAU4F,KAAK5F,EAAUG,QAAQpC,EAAU,CAAC,QAASzP,GAAO,SAE1E,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAChC0R,EAAI1R,KAAO6V,EAAI7V,KACf0R,EAAI1T,MAAQ,kBACZ0T,EAAIkK,qBAAuB5b,EAAK,GAChC,IAAMkc,EAAMlc,EAAK,GACjB0R,EAAI/E,oBAAsBuP,GAAO,EAC7BxP,EAAAA,iBAAyB,GAANwP,IAAe,EACtCxK,EAAI9E,kBAA0B,GAANsP,EACpBC,EAAAA,4BAA8B1W,GAAUzF,EAAM,GAClD0R,EAAI5E,gCAAkC9M,EAAK4B,SAAS,EAAG,IACvD8P,EAAI3E,gBAAkB/M,EAAK,IACvBoc,EAAAA,aAAe5W,GAAUxF,EAAM,IACnC0R,EAAInG,YAAcvL,EAAK,IACvB0R,EAAIrT,IAAM,GACVqT,EAAItT,IAAM,GACVsT,EAAIvT,IAAM,GAKV,IAJA,IAAI4F,EAAQ,GACRgD,EAAO,EACPqE,EAAW,EACXlL,EAAO,EACF7G,EAAI,EAAGA,EAAIqY,EAAInG,YAAalS,IAAK,CACxC0N,EAAqB,GAAd/G,EAAK+D,GACDyB,EAAAA,GAAUxF,EAAM+D,EAAQ,GAC1BA,GAAA,EAET,IADA,IAQiBsY,EARXC,EAAQ,GACL/hB,EAAI,EAAGA,EAAI6Q,EAAU7Q,IACrBiL,EAAAA,GAAUxF,EAAM+D,GACdA,GAAA,EACTuY,EAAMjkB,KAAK2H,EAAK4B,SAASmC,EAAOA,EAAQ7D,IAC/BA,GAAAA,EAGX,GAAa,KAAT6G,GACFsV,EAAA3K,EAAIrT,KAAIhG,KAAIiC,MAAA+hB,EAAIC,QAClB,GAAoB,KAATvV,EAAa,CAAAwV,IAAAA,GACtBA,EAAA7K,EAAItT,KAAI/F,KAAIiC,MAAAiiB,EAAID,QAClB,GAAoB,KAATvV,EAAa,CAAAyV,IAAAA,GACtBA,EAAA9K,EAAIvT,KAAI9F,KAAIiC,MAAAkiB,EAAIF,UAIvB,CAAA/e,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAC5Byc,EAAAA,SAAWhX,GAAUzF,GACrB0c,EAAAA,SAAWjX,GAAUzF,EAAM,QAElC,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAChC2X,IAAAA,EAAYiB,GAAsBjL,EAAK1R,GAC7C0R,EAAIuJ,KAAOxF,EAAUwF,KAAKxF,EAAUG,QAAQ5V,EAAK4B,SAAS8Z,GAAY,CAAC,QAAS3X,EAAQ2X,GAAW,SAEtG,CAAAne,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B0R,EAAI1T,MAAQ,QAKZ,IAJA,IAAI+F,EAAQ,EACR6Y,EAAW,EACX1c,EAAO,EACP2c,EAAM,EACH7c,EAAKzG,QAAQ,CAKlB,IAHAsjB,EAAM7c,EADE+D,EAAA,GAER6Y,EAAW5c,EAAK+D,EAAQ,GACfA,GAAA,EACS,IAAX6Y,GACL1c,GAAmB,IAAX0c,IAAoB,EAC5BA,EAAW5c,EAAK+D,GACPA,GAAA,EAGX,GADA7D,GAAmB,IAAX0c,EACI,IAARC,EACK7c,EAAAA,EAAK4B,SAASmC,EAAQ,OAC/B,CAAA,GAAmB,IAAR8Y,EAGX,CAAA,GAAmB,IAARA,EAAW,CACpB,IAAMzd,EAASsS,EAAItS,OAASY,EAAK4B,SAASmC,EAAOA,EAAQ7D,GACrDoK,GAA0B,IAAZlL,EAAO,KAAc,EASvC,OARmB,KAAfkL,GAAqBlL,EAAO7F,QAAU,IACxC+Q,EAAa,KAAmB,EAAZlL,EAAO,KAAa,KAAmB,IAAZA,EAAO,KAAc,IAEtEsS,EAAIpH,WAAaA,EACbtM,EAAAA,OAASsM,EAAWxE,SAAS,SACO,MAApC4L,EAAI1T,MAAM0T,EAAI1T,MAAMzE,OAAS,KAC3ByE,EAAAA,MAAQ0T,EAAI1T,MAAM8e,UAAU,EAAGpL,EAAI1T,MAAMzE,OAAS,KAOxD,YAHwC,MAApCmY,EAAI1T,MAAM0T,EAAI1T,MAAMzE,OAAS,KAC3ByE,EAAAA,MAAQ0T,EAAI1T,MAAM8e,UAAU,EAAGpL,EAAI1T,MAAMzE,OAAS,KAhBpDyE,EAAAA,QAAUgC,EAAK+D,GAAO+B,SAAS,IAAM,KAAKiX,SAAS,EAAG,KACnD/c,EAAAA,EAAK4B,SAASmC,EAAQ,WAqBpC,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,GAChC2c,GAAsBjL,EAAK1R,QAE9B,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHM0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACH1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAK,CACX4J,MAAOwD,GAAUzF,EAAM+D,GACvB6M,MAAOnL,GAAUzF,EAAM+D,EAAQ,KAExBA,GAAA,EAEX2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GACzB0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACR2N,GAAgB,IAAhBA,EAAIkF,QACN,IAAA,IAASvd,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAK,CACX4J,MAAOwD,GAAUzF,EAAM+D,GACvB3H,OAAQqJ,GAAUzF,EAAM+D,EAAQ,KAEzBA,GAAA,OAGX,IAAA,IAAS1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAK,CACX4J,MAAOwD,GAAUzF,EAAM+D,GACvB3H,SAAwC,GAA7BqJ,GAAUzF,EAAM+D,EAAQ,MAE5BA,GAAA,EAGb2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHM0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACH1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAK,CACX2kB,WAAYvX,GAAUzF,EAAM+D,GAC5BkZ,gBAAiBxX,GAAUzF,EAAM+D,EAAQ,GACzCwS,uBAAwB9Q,GAAUzF,EAAM+D,EAAQ,KAEzCA,GAAA,GAEX2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GACzBuR,IAAAA,EAAa9L,GAAUzF,GACvB2Z,EAAclU,GAAUzF,EAAM,GAC9Bkd,EAAa,GACnB,IAAK3L,EAEH,IADA,IAAIxN,EAAQ,EACH1K,EAAI,EAAGA,EAAIsgB,EAAatgB,IAC/B6jB,EAAW7kB,KAAKoN,GAAUzF,EAAM+D,IACvBA,GAAA,EAGb2N,EAAIH,WAAaA,EACjBG,EAAIiI,YAAcA,EAClBjI,EAAIwL,WAAaA,OAEpB,CAAA3f,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHM0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACH1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAKoN,GAAUzF,EAAM+D,IACpBA,GAAA,EAEX2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHM0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACH1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAKqN,GAAU1F,EAAM+D,IACpBA,GAAA,EAEX2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAI/B,IAHM0a,IAAAA,EAAajV,GAAUzF,GACvBqZ,EAAU,GACZtV,EAAQ,EACH1K,EAAI,EAAGA,EAAIqhB,EAAYrhB,IAC9BggB,EAAQhhB,KAAKoN,GAAUzF,EAAM+D,IACpBA,GAAA,EAEX2N,EAAIgJ,WAAaA,EACjBhJ,EAAI2H,QAAUA,OAEjB,CAAA9b,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCoZ,EAAAA,KAAO1H,EAAU0H,KAAK1H,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DqZ,EAAAA,KAAO3H,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAOyC,KAAI,SAAA6W,GAAK5H,OAAAA,EAAU2H,KAAKC,WAE/E,CAAA9f,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC3BxC,EAAAA,eAAiBiI,GAAUzF,QAElC,CAAAzC,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAO,SAACnE,EAAK1R,EAAM+D,GAClCuZ,EAAAA,KAAO7H,EAAU6H,KAAK7H,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DwZ,EAAAA,KAAO9H,EAAU8H,KAAK9H,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,IAC/DyZ,EAAAA,KAAO/H,EAAU+H,KAAK/H,EAAUG,QAAQ5V,EAAM,CAAC,QAAS+D,GAAO,SAEtE,CAAAxG,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GAC/B,IAAQ4W,EAAmBlF,EAAnBkF,QAASX,EAAUvE,EAAVuE,MACXrP,EAAU5G,EAAKzG,OACfogB,EAAcjI,EAAIiI,YAAclU,GAAUzF,GAC5C5D,EAAS,EAUb,GATIwK,EAAUxK,GAAkB,EAAR6Z,IACtBvE,EAAI+L,aAA0C,GAA1BhY,GAAUzF,EAAM5D,IAC1BA,GAAA,GAERwK,EAAUxK,GAAkB,EAAR6Z,IAClByH,EAAAA,iBAAmBjY,GAAUzF,EAAM5D,GAC7BA,GAAA,GAEZsV,EAAInT,QAAU,GACVqI,EAAUxK,EAEZ,IADI6U,IAAAA,EACK5X,EAAI,EAAGA,EAAIsgB,EAAatgB,IAC/B4X,EAAS,GACG,IAARgF,IACKpY,EAAAA,SAAW4H,GAAUzF,EAAM5D,GACxBA,GAAA,GAEA,IAAR6Z,IACK/V,EAAAA,KAAOuF,GAAUzF,EAAM5D,GACpBA,GAAA,GAEA,KAAR6Z,IACKA,EAAAA,MAAQxQ,GAAUzF,EAAM5D,GACrBA,GAAA,GAEA,KAAR6Z,IAEAhF,EAAO4D,IADL+B,IAC4C,GAA9BnR,GAAUzF,EAAM5D,EAAS,IAE5BqJ,GAAUzF,EAAM5D,GAErBA,GAAA,GAERmC,EAAAA,QAAQlG,KAAK4Y,QAIxB,CAAA1T,IAAA,OAAAvC,MAED,SAAa6a,GACX,OAAOC,GAASD,GAAK,GAAM,SAACnE,EAAK1R,GACX,IAAhB0R,EAAIkF,QACF9Y,EAAAA,oBAAsB4H,GAAU1F,GAEhClC,EAAAA,oBAAsB2H,GAAUzF,QAGzC,CAAAzC,IAAA,QAAAvC,MAED,SAAcgF,GACZ,QAASyV,EAAUG,QAAQ5V,EAAM,CAAC,WACnC,CAAAzC,IAAA,mBAAAvC,MAED,SAAyBib,GAChB,MAAA,CACL0H,WAAuB,GAAX1H,EAAM,MAAe,EACjCpW,UAAsB,EAAXoW,EAAM,GACjB2H,cAA0B,IAAX3H,EAAM,MAAe,EACpC4H,eAA2B,GAAX5H,EAAM,MAAe,EACrC6H,cAA0B,GAAX7H,EAAM,MAAe,EACpCnW,gBAA4B,EAAXmW,EAAM,GACvB8H,oBAAsB9H,EAAM,IAAM,EAAKA,EAAM,MAEhD,CAAA1Y,IAAA,cAAAvC,MAED,SAAoBgjB,EAAM1Q,EAAYC,GAAY,IAAA0Q,EAAAC,EAC1CC,EAASH,EAAKvG,KAChB,GAAC0G,GAAWA,EAAO5kB,OAAnB,CACJ,IAAM6kB,EAASD,EAAOE,MAAK,SAAAhB,GAAC,IAAAiB,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAAjB,EAAExF,YAAI0G,IAAAD,GAAMC,QAANA,EAAND,EAAQvG,gBAAIwG,OAANA,EAANA,EAAcpG,gBACxCqG,EAASL,EAAOE,MAAK,SAAAhB,GAAC,IAAAoB,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAApB,EAAExF,YAAI6G,IAAAD,GAAMC,QAANA,EAAND,EAAQ1G,gBAAI2G,OAANA,EAANA,EAAcvG,gBAC9C,GAAIiG,GAAU9Q,EAAY,CAAA,IAAAqR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClBC,EAAI5R,EACJ6R,EAAuB,QAAdR,EAAGP,EAAOxG,YAAI,IAAA+G,OAAA,EAAXA,EAAa5I,QAC3BoJ,MAAAA,IAAiDC,EAAAA,GAAKhB,EAAOxG,KAAK7B,SACpEsJ,EAAAA,aAAejB,EAAOxG,KAAK/Z,SAC3ByhB,EAAAA,YAActB,EAAKxG,KAAK3Z,SACxB0hB,EAAAA,aAAevB,EAAKxG,KAAKzZ,UAC3BmhB,EAAEnhB,UAAYmhB,EAAErL,gBAAkBuK,EAAOvG,KAAKC,KAAK/Z,UACjDF,EAAAA,SAAWugB,EAAOvG,KAAKC,KAAKja,UAAaqhB,EAAEI,YAAcJ,EAAEK,aAAeL,EAAEnhB,UAC9E,IAyB8ByhB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAzBxBC,EAAK5B,EAAOvG,KAAKG,KAAKM,KAAKO,KAAKQ,QAAQ,GAM9C,GALA6F,EAAEzhB,MAAQuiB,EAAGviB,MACbyhB,EAAExhB,OAASsiB,EAAGtiB,OACVsiB,EAAG3E,OACL6D,EAAE5gB,SAAW,CAAC0hB,EAAG3E,KAAKoB,SAAUuD,EAAG3E,KAAKqB,WAEtCsD,EAAGvhB,KACLygB,EAAE7f,UAAYrC,EACZgB,EAAAA,MAAQgiB,EAAGvhB,KAAKT,MAChBK,EAAAA,IAAM2hB,EAAGvhB,KAAKJ,IACdD,EAAAA,IAAM4hB,EAAGvhB,KAAKL,IACdD,EAAAA,IAAM6hB,EAAGvhB,KAAKN,IACdM,EAAAA,KAAOuhB,EAAGvhB,KAAKuB,SACnB,CAAA,IAAWggB,EAAG5E,KAKN,MAAA,IAAIna,MAAM,4BAJdjD,EAAAA,MAAQgiB,EAAG5E,KAAKpd,MAChBI,EAAAA,IAAM4hB,EAAG5E,KAAKhd,IACdD,EAAAA,IAAM6hB,EAAG5E,KAAKjd,IASd6hB,GALJd,EAAEjhB,SAAU,EACZihB,EAAEe,IAAM,GACNA,EAAAA,IAAIxG,KAAkBmF,QAAdA,EAAGR,EAAOvG,gBAAI+G,GAAM,QAANC,EAAXD,EAAa5G,YAAI,IAAA6G,GAAMC,QAANA,EAAjBD,EAAmBvG,YAAnBwG,IAAuBA,SAAvBA,EAAyBrF,KACpCwG,EAAAA,IAAIlH,KAAkBgG,QAAdA,EAAGX,EAAOvG,gBAAIkH,GAAM,QAANC,EAAXD,EAAa/G,YAAI,IAAAgH,GAAMC,QAANA,EAAjBD,EAAmB1G,YAAnB2G,IAAuBA,SAAvBA,EAAyBlG,KAElCiH,GAAkB,SAAZA,EAAGjZ,KACXmY,EAAEngB,mBAAoB,EACtBihB,EAAGzE,YAAqB,QAAViE,EAAGQ,EAAG1G,YAAI,IAAAkG,GAAMC,QAANA,EAAPD,EAASjG,gBAAIkG,OAAN,EAAPA,EAAejG,KAAK+B,YACrCyE,EAAG1E,oBAA6B,QAAVoE,EAAGM,EAAG1G,YAAI,IAAAoG,GAAMC,QAANA,EAAPD,EAASnG,gBAAIoG,OAAN,EAAPA,EAAenG,KAAK8B,oBAC7C0E,EAAG5G,gBAAyB,QAAVwG,EAAGI,EAAG1G,YAAI,IAAAsG,GAAMC,QAANA,EAAPD,EAASrG,gBAAIsG,OAAN,EAAPA,EAAerG,KAAKJ,gBACvC8G,EAAAA,UAAY9B,EAAOvG,KAAKG,KAAKM,KAAKoB,MAAQ0E,EAAOvG,KAAKG,KAAKM,KAAKoB,KAAKnb,QACvEyhB,EAAGvE,YAAqBqE,QAAVA,EAAGE,EAAG1G,gBAAIwG,WAAAC,EAAPD,EAAStE,YAAI,IAAAuE,SAAbA,EAAetE,YAChCyD,EAAEiB,OAASnC,EAAKmC,OAChBjB,EAAEkB,SAAWpC,EAAKoC,SAClBlB,EAAExH,KAAOsG,EAAKtG,KACdwH,EAAEmB,KAAOL,EAIb,GAAIxB,GAAUjR,EAAY,CAAA,IAAA+S,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClBza,EAAIkH,EACJwT,EAAuB,QAAdT,EAAG9B,EAAO5G,YAAI,IAAA0I,OAAA,EAAXA,EAAavK,QAC3BgL,MAAAA,IAAiD3B,EAAAA,GAAKZ,EAAO5G,KAAK7B,SACpEsJ,EAAAA,aAAeb,EAAO5G,KAAK/Z,SAC3ByhB,EAAAA,YAActB,EAAKxG,KAAK3Z,SACxB0hB,EAAAA,aAAevB,EAAKxG,KAAKzZ,UAC3BsI,EAAEtI,UAAYsI,EAAEwN,gBAAkB2K,EAAO3G,KAAKC,KAAK/Z,UACjDF,EAAAA,SAAW2gB,EAAO3G,KAAKC,KAAKja,UAAawI,EAAEiZ,YAAcjZ,EAAEkZ,aAAelZ,EAAEtI,UAC9E,IAsC8BijB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAtCxBvB,EAAKxB,EAAO3G,KAAKG,KAAKM,KAAKO,KAAKQ,QAAQ,GAM9C,OALAhT,EAAEkL,WAAayO,EAAGzO,WAClBlL,EAAEnH,WAAa8gB,EAAG9gB,WAClBmH,EAAElH,aAAe6gB,EAAG7gB,aACpBkH,EAAEpI,SAAU,EAEJ+hB,EAAGjZ,MACJ,IAAA,OACD1H,EAAAA,UAAYgH,EAAErI,MAAQf,EACxBoJ,EAAEnH,WAAa,IACf,MACG,IAAA,OACDG,EAAAA,UAAYgH,EAAErI,MAAQf,EACxBoJ,EAAEnH,WAAa,IACf,MAAA,QAEAmH,EAAEpH,eAAiB4K,GAAIa,iBAAiBrE,EAAEnH,WAAYmH,EAAEtI,WACxDsI,EAAEoO,gBAAkB5K,GAAI2X,mBAAmBnb,EAAEnH,YAC3CoL,EAAAA,YAAoB,QAAP2T,EAAA+B,EAAG/E,YAAHgD,IAAOA,OAAPA,EAAAA,EAAS3T,aAAc,EAClC0V,EAAG/E,OAAM5U,EAAEjH,OAAS3F,MAAMgoB,KAAKzB,EAAG/E,KAAK7b,SACzCpB,EAAAA,OAAe,QAAPkgB,EAAA8B,EAAG/E,YAAHiD,IAAOA,OAAPA,EAAAA,EAASlgB,QAAS,YAkB5BgiB,GAfJ3Z,EAAEpH,eAAiB4K,GAAIa,iBAAiBrE,EAAEnH,WAAYmH,EAAEtI,WACtDuM,EAAAA,YAAoB,QAAPiW,EAAAP,EAAG/E,YAAHsF,IAAOA,OAAPA,EAAAA,EAASjW,aAAc,EAClC0V,EAAG/E,OACD+E,EAAG/E,KAAK7b,OACViH,EAAEjH,OAAS3F,MAAMgoB,KAAKzB,EAAG/E,KAAK7b,QAE9B+D,QAAQC,KAAK,wBAGfpF,EAAAA,OAAe,QAAPwiB,EAAAR,EAAG/E,YAAHuF,IAAOA,OAAPA,EAAAA,EAASxiB,QAAS,YAC5BqI,EAAEoO,gBAAkB5K,GAAI2X,mBAAmBnb,EAAEnH,YAC7CmH,EAAE4Z,IAAM,GACNA,EAAAA,IAAIxG,KAAkBgH,QAAdA,EAAGjC,EAAO3G,gBAAI4I,GAAM,QAANC,EAAXD,EAAazI,YAAI,IAAA0I,GAAMC,QAANA,EAAjBD,EAAmBpI,YAAnBqI,IAAuBA,SAAvBA,EAAyBlH,KACpCwG,EAAAA,IAAIlH,KAAkB6H,QAAdA,EAAGpC,EAAO3G,gBAAI+I,GAAM,QAANC,EAAXD,EAAa5I,YAAI,IAAA6I,GAAMC,QAANA,EAAjBD,EAAmBvI,YAAnBwI,IAAuBA,SAAvBA,EAAyB/H,KACtC1S,EAAEpI,SAAU,EACR+hB,GAAkB,SAAZA,EAAGjZ,KACXV,EAAE/G,mBAAoB,EACtB0gB,EAAGvE,YAAqBuF,QAAVA,EAAGhB,EAAG1G,gBAAI0H,WAAAC,EAAPD,EAASxF,YAAI,IAAAyF,SAAbA,EAAexF,YAChCuE,EAAGzE,YAAqB,QAAV2F,EAAGlB,EAAG1G,YAAI,IAAA4H,GAAMC,QAANA,EAAPD,EAAS3H,gBAAI4H,OAAN,EAAPA,EAAe3H,KAAK+B,YACrCyE,EAAG1E,oBAA6B,QAAV8F,EAAGpB,EAAG1G,YAAI,IAAA8H,GAAMC,QAANA,EAAPD,EAAS7H,gBAAI8H,OAAN,EAAPA,EAAe7H,KAAK8B,oBAC7C0E,EAAG5G,gBAAyB,QAAVkI,EAAGtB,EAAG1G,YAAI,IAAAgI,GAAMC,QAANA,EAAPD,EAAS/H,gBAAIgI,OAAN,EAAPA,EAAe/H,KAAKJ,gBACvCsI,EAAAA,UAAYlD,EAAO3G,KAAKG,KAAKM,KAAKoB,MAAQ8E,EAAO3G,KAAKG,KAAKM,KAAKoB,KAAKnb,QACvE8H,EAAE8Z,OAASnC,EAAKmC,OAChB9Z,EAAE+Z,SAAWpC,EAAKoC,SAClB/Z,EAAEsb,KAAO3B,EAOT1S,GAHJC,IAAeA,EAAWxO,oBAAoBuO,GAAaA,EAAWvO,mBACtEuO,IAAeA,EAAWhO,oBAAoBiO,GAAaA,EAAWjO,mBAElEgO,MAAAA,GAAAA,EAAY+S,MAAQ9S,MAAAA,GAAAA,EAAYoU,KAAM,CAAA,IAAAC,EAAAC,EAClCC,EAAOxU,MAAAA,GAAgBsU,QAANA,EAAVtU,EAAY+S,YAAZuB,IAAgBA,SAAhBA,EAAkBrG,YACzBwG,EAAOxU,MAAAA,GAAgBsU,QAANA,EAAVtU,EAAYoU,YAAZE,IAAgBA,SAAhBA,EAAkBtG,YACzBf,EAAOsH,GAAQC,GAASD,GAAQC,GAAMje,KAAK,IAAM,KACvDwJ,IAAeA,EAAWkN,IAAMA,GAChCjN,IAAeA,EAAWiN,IAAMA,GAM3B,OAHPlN,IAAeA,EAAW2I,MAAQ,MAClC1I,IAAeA,EAAW0I,MAAQ,MAE3B,CACL3I,WAAAA,EACAC,WAAAA,MAEH,CAAAhQ,IAAA,0BAAAvC,MAED,SAAgCsS,EAAYC,EAAYyU,GAAkBC,IAAAA,EAClEC,EAAmB3U,MAAAA,GAAmB0U,QAATA,EAAV1U,EAAYhP,eAAZ0jB,IAAmBA,SAAnBA,EAAqB1oB,OAG9C,OAAK2oB,EAEmB,KAAOA,EAAmB3U,EAAWxP,UAEpCuP,EAAWvP,UAAYikB,EAJlB,OAK/B,CAAAzkB,IAAA,gBAAAvC,MAED,SAAsBmnB,EAAM7U,EAAYC,GACtC,IAAMmE,EAAM,GAoDLA,OAlDHyQ,EAAKhF,OACH7P,IAAuB9P,EAAAA,eAAiB2kB,EAAKhF,KAAK3f,gBAClD+P,IAAuB/P,EAAAA,eAAiB2kB,EAAKhF,KAAK3f,iBAGnD4f,EAAAA,KAAKhY,SAAQ,SAAAgd,GAA0B,IAAvB9E,EAAI8E,EAAJ9E,KAAMC,EAAI6E,EAAJ7E,KAAMC,EAAI4E,EAAJ5E,KAC3B,GAACF,GAASE,EAAV,CACAD,IACEjQ,GAAcA,EAAW8R,KAAO9B,EAAKvH,UAASzI,EAAWxP,oBAAsByf,EAAKzf,qBACpFyP,GAAcA,EAAW6R,KAAO9B,EAAKvH,UAASxI,EAAWzP,oBAAsByf,EAAKzf,sBAEpFukB,IAAAA,EAAc/E,EAAK7G,mBAAqB,EACxC6L,EAAkBhF,EAAK9G,uBAAyBf,EAAU8M,wBAAwBjV,EAAYC,EAAYiQ,EAAKjf,QAAQhF,QAAUikB,EAAK7D,aACxIvd,EAASohB,EAAKC,YAAc,EAC5B9e,EAAM,EACN2W,GAAQ,EACZ,IAAKkI,EAAKjf,QAAQhF,QAAUikB,EAAK7D,YAAa,CACxC2D,EAAAA,EAAKvH,SAAW,GACpB,IAAA,IAAS1c,EAAI,EAAGA,EAAImkB,EAAK7D,YAAatgB,IAChCikB,EAAAA,EAAKvH,SAAS1d,KAAK,CACrB+D,OAAAA,EACAuC,IAAAA,EACAd,SAAUykB,EACVpiB,KAAMmiB,IAEDC,GAAAA,EACGD,GAAAA,OAGZ3Q,EAAI4L,EAAKvH,SAAWyH,EAAKjf,QAAQiI,KAAI,SAAC2I,EAAGqT,GAgBhCrT,OAfHA,EAAA,CACF/S,OAAAA,EACAuC,IAAAA,EACAC,IAAKD,GAAOwQ,EAAE0F,KAAO,GACrBhX,SAAUsR,EAAEtR,UAAYykB,EACxBpiB,KAAMiP,EAAEjP,MAAQmiB,EAChB/M,MAAAA,EACA3V,SAAoB,IAAV6iB,GAA6B,OAAZrT,EAAE8G,YAA8B5b,IAAZ8U,EAAE8G,QAAoC,MAAV9G,EAAE8G,SAAmB,GAAO,QAEnGtW,WACJ2V,IACAnG,EAAEmG,MAAQA,GAEZ3W,GAAOwQ,EAAEtR,SACTzB,GAAU+S,EAAEjP,KACLiP,SAKNuC,IACR,CAAAnU,IAAA,gBAAAvC,MAED,SAAsBgjB,GACpB,IAAMG,EAASH,EAAKvG,KAChB,GAAC0G,GAAWA,EAAO5kB,OAAnB,CACJ,IAAM6kB,EAASD,EAAOE,MAAK,SAAAhB,GAAC,IAAAoF,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAApF,EAAExF,YAAI6K,IAAAD,GAAMC,QAANA,EAAND,EAAQ1K,gBAAI2K,OAANA,EAANA,EAAcvK,gBACxCqG,EAASL,EAAOE,MAAK,SAAAhB,GAAC,IAAAsF,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAAtF,EAAExF,YAAI+K,IAAAD,GAAMC,QAANA,EAAND,EAAQ5K,gBAAI6K,OAANA,EAANA,EAAczK,gBAC1C,GAACiG,GAAWI,EAAZ,CACAqE,IAAAA,EACAC,EACJ,GAAI1E,EAAQ,CAAA,IAAA2E,EAAAC,EACJC,UAASF,EAAG3E,EAAOvG,YAAI,IAAAkL,GAAM,QAANC,EAAXD,EAAa/K,YAAbgL,IAAiBA,OAAN,EAAXA,EAAmB1K,KACrC,IAAK2K,EAAW,OAChB,IAAQnK,EAAuCmK,EAAvCnK,KAAME,EAAiCiK,EAAjCjK,KAAMC,EAA2BgK,EAA3BhK,KAAMC,EAAqB+J,EAArB/J,KAAMO,EAAewJ,EAAfxJ,KAAMV,EAASkK,EAATlK,KAClC,KAACD,GAASE,GAASC,GAASC,GAASO,GAAM,OAC/CoJ,EAAeK,GAAWpK,EAAME,EAAMC,EAAMC,EAAMH,EAAMU,GAE1D,GAAI+E,EAAQ,CAAA,IAAA2E,EAAAC,EAAAC,EACJC,UAASH,EAAG3E,EAAO3G,YAAI,IAAAsL,GAAM,QAANC,EAAXD,EAAanL,YAAboL,IAAiBA,OAAN,EAAXA,EAAmB9K,KACrC,IAAKgL,EAAW,OACVvlB,IAAAA,EAA4BslB,QAAnBA,EAAG7E,EAAO3G,KAAKC,YAAZuL,IAAgBA,OAAhBA,EAAAA,EAAkBtlB,UAC5B+a,EAA2BwK,EAA3BxK,KAAME,EAAqBsK,EAArBtK,KAAMC,EAAeqK,EAAfrK,KAAMC,EAASoK,EAATpK,KACtB,KAACnb,GAAc+a,GAASE,GAASC,GAASC,GAAM,OACpD4J,EAAeI,GAAWpK,EAAME,EAAMC,EAAMC,GAGvC,MAAA,CACL2J,aAAAA,EACAC,aAAAA,SAEHrN,EAp9BmB,GAu9BtB,SAASyN,GAAYpK,EAAME,EAAMC,EAAMC,EAAMH,EAAMU,GACjD,IAMI8J,EAKAC,EAUAvS,EArBE1S,EAAU,GACVklB,EAAc1K,MAAAA,OAAAA,EAAAA,EAAMM,QACpBqK,EAAc1K,EAAKK,QACnBsK,EAAczK,EAAKG,QACnBuK,EAAiB3K,EAAKiE,WACtB2G,EAAcpK,MAAAA,OAAAA,EAAAA,EAAMJ,QAEtBwK,IACFN,EAAc,GACFne,EAAAA,SAAQ,SAAAmK,GAAOgU,EAAYhU,EAAI,IAAK,MAG9CkU,IACFD,EAAU,GACEpe,EAAAA,SAAQ,SAAA0e,GAClB,IADyC,IAApB7hB,EAAK6hB,EAAL7hB,MAAO7F,EAAM0nB,EAAN1nB,OACnB/C,EAAI,EAAGA,EAAI4I,EAAO5I,IACzBmqB,EAAQnrB,KAAK+D,OAMnB,IAAIkZ,GAAQ,EACR3W,EAAM,EACNolB,EAAM,EACNC,EAAa,EACbC,EAAgB,EAChBC,EAAgB,EAChBC,EAAoBT,EAAY,GAAGzG,gBACnCmH,EAAiBV,EAAY,GAAKA,EAAY,GAAG1G,WAAa,EAAI9O,EAAAA,EA4C/D3P,OA3CF8a,EAAAA,QAAQjU,SAAQ,SAAAif,GACnB,IADyC,IAAnBpiB,EAAKoiB,EAALpiB,MAAO2O,EAAKyT,EAALzT,MACpBvX,EAAI,EAAGA,EAAI4I,EAAO5I,IAChB4X,EAAA,CACPtS,IAAAA,EACAd,SAAU+S,EACV1Q,KAAM0jB,EAAeG,IAAQ9K,EAAK1H,WAClCnV,OAAQunB,EAAYK,GAAcE,EAClC1B,MAAOuB,GAELF,IACF5S,EAAOtR,SAAW4jB,EAAYQ,GAC1B9S,EAAOtR,UACT2V,IAEFrE,EAAOqE,MAAQA,GAGbkO,GAAWO,EAAMP,EAAQjqB,SACpBqF,EAAAA,IAAMqS,EAAOtS,IAAM6kB,EAAQO,IAOpCxlB,EAAQlG,KAAK4Y,GACNL,GAAAA,IACPmT,EAEUI,EACRD,GAAiBjT,EAAO/Q,MAExB8jB,IACgBE,EAAA,EACZF,GAAcI,IAChBH,IACAG,EAAiBV,EAAYO,EAAgB,GAAKP,EAAYO,EAAgB,GAAGjH,WAAa,EAAI9O,EAAAA,GAEpGiW,GAAqBT,EAAYO,GAAehH,oBAK/C1e,EAGAod,SAAAA,GAAwBjK,EAAK1R,GAQ7B,OAPHskB,EAAAA,mBAAqB9e,GAAUxF,EAAM,GACrCvC,EAAAA,MAAQ+H,GAAUxF,EAAM,IACxBtC,EAAAA,OAAS8H,GAAUxF,EAAM,IACzBkb,EAAAA,gBAAkBzV,GAAUzF,EAAM,IAClCmb,EAAAA,eAAiB1V,GAAUzF,EAAM,IACjCukB,EAAAA,WAAa/e,GAAUxF,EAAM,IAC7BwkB,EAAAA,MAAQhf,GAAUxF,EAAM,IACrB,GAGA2c,SAAAA,GAAuBjL,EAAK1R,GAK5B,OAJHskB,EAAAA,mBAAqB9e,GAAUxF,EAAM,GACrCb,EAAAA,aAAeqG,GAAUxF,EAAM,IAC/BuR,EAAAA,WAAa/L,GAAUxF,EAAM,IACjC0R,EAAIxS,WAAauG,GAAUzF,EAAM,UAC1B,GAGA8V,SAAAA,GAAUD,EAAK4O,EAAWre,GACjC,GAAKyP,EAAL,CACIA,GAAAA,EAAI3V,OAAS2V,EAAI7V,KAAKzG,OAAQ,MAAM,IAAI0H,aAAK/H,OAAQ2c,EAAI9O,+BAC7D,IAAM2K,EAAM,CACV3N,MAAO8R,EAAI9R,MACX7D,KAAM2V,EAAI3V,KACVwV,WAAYG,EAAIH,WAChB3O,KAAM8O,EAAI9O,MAQL2K,OANH+S,IACE7N,EAAAA,QAAUf,EAAI7V,KAAK6V,EAAIH,YAC3BhE,EAAIuE,MT9iCD,SAAoBjW,GAAM3G,IAAAA,EAACc,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC3B6F,OAAAA,EAAK3G,IAAM,KAAO2G,EAAK3G,EAAI,IAAM,IAAM2G,EAAK3G,EAAI,IAAM,GS6iChDqrB,CAAU7O,EAAI7V,KAAM6V,EAAIH,WAAa,GACjDhE,EAAIgE,YAAc,GAEpBtP,EAAMsL,EAAKmE,EAAI7V,KAAK4B,SAAS8P,EAAIgE,YAAahE,EAAI3N,MAAQ2N,EAAIgE,YACvDhE,GAGT,IAAMqL,GAAW,SAAU4H,EAAKprB,EAAQqrB,GAMtC,IALMC,IAAAA,EAAUphB,OAAOmhB,GACjB1qB,EAAMX,GAAU,EAClBurB,EAAStjB,KAAKoI,KAAK1P,EAAM2qB,EAAQtrB,QAC/BwrB,EAAQ,GACRC,EAAIvhB,OAAOkhB,GACVG,KACLC,EAAM1sB,KAAKwsB,GAENE,OAAAA,EAAMjhB,KAAK,IAAIgZ,UAAU,EAAG5iB,EAAM8qB,EAAEzrB,QAAUyrB,GAGjD5K,GAAQ,WACE,IAAd,IAAM6K,EAAM,GAAE7pB,EAAAjB,UAAAZ,OADWyB,EAAKvB,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALN,EAAKM,GAAAnB,UAAAmB,GAK9B,OAHM8J,EAAAA,SAAQ,SAAAqB,GACRpO,EAAAA,KAAK0kB,GAAS9W,OAAOQ,GAAMX,SAAS,IAAK,EAAG,OAE3Cmf,EAAI,IC3lCb,SAASC,GAAQhqB,GACI,IAAnB,IAAIC,EAAc,EAACC,EAAAjB,UAAAZ,OADkB8B,MAAM5B,MAAA2B,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAnB,GAAAA,UAAAmB,GAEpC8J,EAAAA,SAAQ,SAAUpJ,GACvBb,GAAea,EAAIzC,UAEf4C,IAAAA,EAAS,IAAIjB,EAAkBC,GACjCiB,EAAS,EAKND,OAJAiJ,EAAAA,SAAQ,SAAUpJ,GAChBW,EAAAA,IAAIX,EAAKI,GAChBA,GAAUJ,EAAIzC,UAET4C,EACR,IAEKgpB,GAAM,WACV,SAAAA,IAAe/nB,OAAA+nB,GACRpjB,KAAAA,OAAS,IAAIJ,WAAW,GA4B9BwjB,OA3BA7nB,EAAA6nB,EAAA,CAAA,CAAA5nB,IAAA,QAAAvC,MAED,WACmB,IAAjB,IAAMoqB,EAAOvtB,KAAIwtB,EAAAlrB,UAAAZ,OADTwI,EAAMtI,IAAAA,MAAA4rB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANvjB,EAAMujB,GAAAnrB,UAAAmrB,GAEPlgB,EAAAA,SAAQ,SAAAqB,GACTA,EACF2e,EAAKrjB,OAASmjB,GAAOvjB,WAAYyjB,EAAKrjB,OAAQ0E,GAEvCtD,OAAAA,QAAQC,KAAKqD,SAGzB,CAAA,CAAAlJ,IAAA,cAAAvC,MAED,SAAoBA,GACX,OAAA,IAAI2G,WAAW,CACnB3G,GAAS,EAAK,IACP,IAARA,MAEH,CAAAuC,IAAA,cAAAvC,MAED,SAAoBA,GAClB,OAAO,IAAI2G,WAAW,CACpB3G,GAAS,GACRA,GAAS,GAAM,IACfA,GAAS,EAAK,IACP,IAARA,QAEHmqB,EA9BS,GCZNI,GAAa/jB,KAAA+D,IAAC,EAAI,IAAK,EAEhBigB,GAAG,WAAA,SAAAA,IAAApoB,OAAAooB,GAowCbA,OApwCaA,EAAAA,EAAA,KAAA,CAAA,CAAAjoB,IAAA,MAAAvC,MAgJd,SAAY+L,GAAkB,IAAA,IAAA3L,EAAAjB,UAAAZ,OAAT0N,MAAOxN,MAAA2B,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAnB,GAAAA,UAAAmB,GAE1B,IAAM4E,EAAO,GADH+G,EAAAA,EAAQnC,OAAOC,UACAC,QAAO,SAACC,EAAGC,GAAC,OAAMD,EAAIC,EAAE/E,aAAa,GACxDuR,EAAM,IAAI/P,WAAWzB,GACvBwR,EAAA,GAAMxR,GAAQ,GAAM,IACpBwR,EAAA,GAAMxR,GAAQ,GAAM,IACpBwR,EAAA,GAAMxR,GAAQ,EAAK,IACvBwR,EAAI,GAAY,IAAPxR,EACLvD,EAAAA,IAAIoK,EAAM,GACd,IAAI3K,EAAS,EAKNsV,OAJCtM,EAAAA,SAAQ,SAACpF,GACXrD,EAAAA,IAAIqD,EAAM5D,GACdA,GAAU4D,EAAKG,cAEVuR,IACR,CAAAnU,IAAA,OAAAvC,MAED,SAAamjB,GAEJrX,OADQqX,EAAOE,MAAK,SAAAhB,GAAC,OAAIA,EAAEtW,OAAShK,GAAmBsgB,EAAEhe,YAAcrC,KAC9DwoB,EAAIC,SAAWD,EAAIE,WACpC,CAAAnoB,IAAA,cAAAvC,MAED,SAAoBmjB,GAKXwH,OAFM9gB,GAFA2gB,EAAII,KAAKzH,GAEcqH,EAAIxH,KAAKG,MAG9C,CAAA5gB,IAAA,OAAAvC,MAED,SAAagF,GAEL6lB,IAAAA,EAAU,IAAIlkB,WAClB,CACE,EAAM,EAAM,EAAM,GAClBzI,OACA,CACE,GAAM,IAAM,IAAM,IAClB,IAAM,IAAM,GAAM,EAClB,IAAM,IAAM,GAAM,GAClB,GAAM,IAAM,IAAM,IAEpB,CAAC,EAAM,EAAM,EAAM,GACnBkN,GAAMpG,EAAKwa,KACX,CAAC,EAAM,EAAM,EAAM,KAGvB,OAAOgL,EAAI3P,IAAI2P,EAAIM,MAAMpO,KAAMmO,KAChC,CAAAtoB,IAAA,OAAAvC,MAED,SAAamjB,GACPA,GAAAA,EAAO,GAAGgC,SAAWhC,EAAO,GAAGkC,MAAQlC,EAAO,GAAGwD,MAAO,CACrDxD,EAAO,GAAGzG,OACbyG,EAAO,GAAGzG,KAAO,CACf8C,IAAK2D,EAAO,GAAG3D,MAGnB,IAAM9C,EAAO7f,KAAK6f,KAAKyG,EAAO,GAAGzG,MAEjC,OAAO8N,EAAI3P,IAAGvb,MAAPkrB,EAAG,CAAKA,EAAIM,MAAM9H,KACvBwH,EAAIhO,KAAK2G,EAAO,GAAGmB,aAAenB,EAAO,GAAGtgB,SAAUsgB,EAAO,GAAGoB,cAAgBpB,EAAO,GAAGpgB,WAC1FynB,EAAIO,KAAK5H,IAAOjlB,OAAA8sB,EACb7H,EAAO3X,KAAI,SAAC6W,GAAMmI,OAAAA,EAAI/N,KAAK4F,OAAG,CACjC3F,KAEF,OAAO8N,EAAI3P,IAAGvb,MAAPkrB,EAAQA,CAAAA,EAAIM,MAAM9H,KACvBwH,EAAIhO,KAAK2G,EAAO,GAAGmB,aAAenB,EAAO,GAAGtgB,SAAUsgB,EAAO,GAAGoB,cAAgBpB,EAAO,GAAGpgB,YAAU7E,OAAA8sB,EACjG7H,EAAO3X,KAAI,SAAC6W,GAAMmI,OAAAA,EAAI/N,KAAK4F,OAAG,CACjCmI,EAAIO,KAAK5H,QAGd,CAAA5gB,IAAA,OAAAvC,MAED,SAAa6C,GAAUE,IAAAA,EAAS5D,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC3Bqd,EAAOgO,EAAI3P,IAAI2P,EAAIM,MAAMtO,KAAM,IAAI7V,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjB5D,GAAa,GAAM,IAAOA,GAAa,GAAM,IAAOA,GAAa,EAAK,IAAkB,IAAZA,EAC5EF,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,OAGb2Z,OAAAA,IACR,CAAAja,IAAA,OAAAvC,MAED,SAAasW,GAOJmG,OANM+N,EAAI3P,IACf2P,EAAIM,MAAMrO,KACV+N,EAAI5N,KAAKtG,EAAM8N,GAAI9N,EAAM+N,cAAgB,EAAG/N,EAAM7T,MAAO6T,EAAM5T,QAC/D8nB,EAAI3N,KAAKvG,MAIZ,CAAA/T,IAAA,OAAAvC,MAED,SAAaokB,EAAIvhB,GAAUJ,IAAAA,EAAKtD,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGuD,EAAMvD,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACvCyd,EAAO4N,EAAI3P,IAAI2P,EAAIM,MAAMlO,KAAM,IAAIjW,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjByd,GAAM,GAAM,IAAOA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,EACxD,EAAM,EAAM,EAAM,EACjBvhB,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,EACjBJ,GAAS,EAAK,IAAc,IAARA,EAAc,EAAM,EACxCC,GAAU,EAAK,IAAe,IAATA,EAAe,EAAM,KAGtCka,OAAAA,IACR,CAAAra,IAAA,OAAAvC,MAED,SAAasW,GAGJuG,OAFM2N,EAAI3P,IAAI2P,EAAIM,MAAMjO,KAAM2N,EAAI1N,KAAKxG,EAAMzT,SAAUyT,EAAMvT,WAAYynB,EAAIzN,KAAKzG,EAAMvK,MAAOye,EAAIxN,KAAK1G,MAGhH,CAAA/T,IAAA,OAAAvC,MAED,SAAa6C,GAAUE,IAAAA,EAAS5D,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC3B2d,EAAO0N,EAAI3P,IAAI2P,EAAIM,MAAMhO,KAAM,IAAInW,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjB5D,GAAa,GAAM,IAAOA,GAAa,GAAM,IAAOA,GAAa,EAAK,IAAkB,IAAZA,EAC5EF,GAAY,GAAM,IAAOA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EAC1E,GAAM,IACN,EAAM,KAGDia,OAAAA,IACR,CAAAva,IAAA,OAAAvC,MAED,SAAa+L,GAGJgR,OAFMyN,EAAI3P,IAAI2P,EAAIM,MAAM/N,KAAMyN,EAAIS,WAAWlf,MAGrD,CAAAxJ,IAAA,OAAAvC,MAED,SAAasW,GAGJ0G,OAFMwN,EAAI3P,IAAI2P,EAAIM,MAAM9N,KAAM1G,EAAMvK,OAAShK,EAAkByoB,EAAIU,KAAOV,EAAIW,KAAMX,EAAIY,KAAMZ,EAAIlN,KAAKhH,MAG/G,CAAA/T,IAAA,OAAAvC,MAED,SAAasW,GACX,IAAM+U,EAAS,GAOR/N,OANHhH,GAASA,EAAM2O,KACXA,EAAAA,IAAIxG,MAAQ4M,EAAOhuB,KAAKmtB,EAAI/L,KAAKnI,EAAM2O,IAAIxG,KAAKJ,UAG3CmM,EAAI3P,IAAI2P,EAAIM,MAAMxN,KAAMkN,EAAI3M,KAAKvH,GAAQkU,EAAIc,KAAMD,EAAO,GAAIb,EAAIe,KAAMf,EAAIgB,KAAMhB,EAAIiB,QAGpG,CAAAlpB,IAAA,OAAAvC,MAED,SAAasW,GACPuU,IAAAA,EAsBGhN,OAnBO2M,EAFK,UAAflU,EAAMvK,KACJuK,EAAM6O,QAAU7O,EAAMqQ,KACd6D,EAAI7D,KAAKrQ,GAGTkU,EAAI1K,KAAKxJ,GAGZA,EAAM6O,QAAU7O,EAAM+O,KACrBmF,EAAInF,KAAK/O,GAGTkU,EAAIkB,SAASpV,GAGZkU,EAAI3P,IAAI2P,EAAIM,MAAMjN,KAAM,IAAIlX,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,IAChBkkB,KAGL,CAAAtoB,IAAA,OAAAvC,MAED,SAAagF,GACLb,IAAAA,EAAea,EAAK2hB,KAAKxiB,aACzBD,EAAac,EAAK2hB,KAAKziB,WACvB2mB,EAAU,IAAIlkB,WAAW,CAC7B,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAMxC,EACN,EAAM,GACN,EAAM,EAAM,EAAM,EACjBD,GAAc,EAAK,IACP,IAAbA,EACA,EAAM,IAEF+b,EAAOuK,EAAIvK,KAAKjb,EAAKZ,QAErBka,EAAOkM,EAAIlM,KAAKtZ,EAAK2hB,MAE3B,OAAO6D,EAAI3P,IAAI2P,EAAIM,MAAMnE,KAAMkE,EAAS5K,EAAM3B,KAC/C,CAAA/b,IAAA,OAAAvC,MAED,SAAasW,GAAO,IAAAqV,EAAAvE,EACZhkB,EAAMkT,EAAMlT,IAAI7E,OAAS,EAAI+X,EAAMlT,IAAI,GAAK,GAC5CD,EAAMmT,EAAMnT,IAAI5E,OAAS,EAAI+X,EAAMnT,IAAI,GAAK,GAC5CV,EAAQ6T,EAAM7T,MACdC,EAAS4T,EAAM5T,OACf+e,EAAWnL,EAAMhT,SAAS,GAC1Boe,EAAWpL,EAAMhT,SAAS,GAE1BunB,EAAU,IAAIlkB,WAAW,CAC7B,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EAEN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBlE,GAAS,EAAK,IACP,IAARA,EACCC,GAAU,EAAK,IACP,IAATA,EACA,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAEN,GACA,IAAM,GAAM,IAAM,IAClB,IAAM,IAAM,IAAM,IAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EACZ,EAAM,GACN,GAAM,KACFkpB,EAAO,IAAIjlB,YAAWglB,GAAAvE,EAAA,CAC1B,EACAhkB,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,IACA,IACAA,EAAI7E,SAAW,EAAI,IACN,IAAb6E,EAAI7E,SACJL,OAAMoB,MAAA8nB,EAAA4D,EAAI5nB,IAAKlF,OAAO,CACtB,EACAiF,EAAI5E,SAAW,EAAI,IACN,IAAb4E,EAAI5E,UACHL,OAAMoB,MAAAqsB,EAAAX,EAAI7nB,KACP0oB,EAAO,IAAIllB,WAAW,CAC1B,EAAM,EAAM,GAAM,GAClB,EAAM,GAAM,IAAM,IAClB,EAAM,EAAM,GAAM,KAEd2X,EAAOkM,EAAIlM,KAAKhI,EAAM+O,MACtBhF,EAAO,IAAI1Z,WAAW,CACzB8a,GAAY,GACZA,GAAY,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,EACCC,GAAY,GACZA,GAAY,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,IAEK8I,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAMzF,KAAMwF,EAASL,EAAI3P,IAAI2P,EAAIM,MAAM1K,KAAMwL,GAAOpB,EAAI3P,IAAI2P,EAAIM,MAAMe,KAAMA,GAAOvN,EAAMkM,EAAI3P,IAAI2P,EAAIM,MAAMzK,KAAMA,MACrI,CAAA9d,IAAA,OAAAvC,MAED,SAAagF,GACX,IAAM6lB,EAAU,IAAIlkB,WAAW,IACzB6X,EAAOgM,EAAIhM,KAAKxZ,GACtB,OAAOwlB,EAAI3P,IAAI2P,EAAIM,MAAMvM,KAAMsM,EAASrM,KACzC,CAAAjc,IAAA,OAAAvC,MAED,SAAagF,GAEL6lB,IAAAA,EAAU,IAAIlkB,WAClB,CACE,EAAM,EAAM,EAAM,EAAM,EAAM,EACH,IAA3B3B,EAAKsb,oBACkB,IAAvBtb,EAAKoZ,iBACLlgB,OAAOkN,GAAMpG,EAAKub,eACtB,OAAOiK,EAAI3P,IAAI2P,EAAIM,MAAMtM,KAAMqM,KAChC,CAAAtoB,IAAA,OAAAvC,MAED,SAAagF,GACX,IAAM6lB,EAAU,IAAIlkB,WAAW,IACzB6Z,EAAO,IAAI7Z,WAAW,CAC1B3B,EAAKyb,YAAYqL,WAAW,GAC5B9mB,EAAKyb,YAAYqL,WAAW,GAC5B9mB,EAAKyb,YAAYqL,WAAW,GAC5B9mB,EAAKyb,YAAYqL,WAAW,KAExBC,EAAO,IAAIplB,WAAW,CAC1B,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,GAClB,EAAM,EAAM,EAAM,IAEd4X,EAAOiM,EAAIjM,KAAKvZ,GACfwlB,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAMxM,KAAMuM,EAASL,EAAI3P,IAAI2P,EAAIM,MAAMtK,KAAMA,GAAOgK,EAAI3P,IAAI2P,EAAIM,MAAMiB,KAAMA,GAAOxN,KACvG,CAAAhc,IAAA,WAAAvC,MAED,SAAiBsW,GACTxK,IAAAA,EAASwK,EAAMjS,YAAcrC,EAC7BgqB,EAAMlgB,EAAS0e,EAAIM,MAAMjL,KAAO2K,EAAIM,MAAMlL,KAC1Cxb,EAAS0H,EAAS0e,EAAI/mB,KAAK6S,GAASkU,EAAIpK,KAAK9J,GAC7C2V,EAAQ,CACZ,IAAItlB,WAAW,CACb,EAAM,EAAM,EAAM,EAAM,EAAM,EAC9B,EAAM,EACN,EAAM,EACN,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EACjE2P,EAAM7T,OAAS,EAAK,IAAoB,IAAd6T,EAAM7T,MAChC6T,EAAM5T,QAAU,EAAK,IAAqB,IAAf4T,EAAM5T,OAClC,EAAM,GAAM,EAAM,EAClB,EAAM,GAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,GACN,GAAM,KACJ0B,GAWComB,OAPH1e,EACFmgB,EAAM5uB,KAAKmtB,EAAI3P,IAAI2P,EAAIM,MAAMoB,KAAM,IAAIvlB,WAAW,CAAC,EAAM,MAEhD2P,EAAMhT,UAAYgT,EAAMhT,SAAS/E,OAAS,GACnD0tB,EAAM5uB,KAAKmtB,EAAInK,KAAK/J,EAAMhT,WAGrBknB,EAAI3P,IAAGvb,MAAPkrB,EAAG,CAAKwB,GAAG9tB,OAAK+tB,MACxB,CAAA1pB,IAAA,OAAAvC,MAED,SAAasW,GAAO,IAAA6V,EAAArD,EAId5pB,EAHEkE,EAAM,GACND,EAAM,GAiBLqnB,OAdDpnB,EAAAA,IAAIgH,SAAQ,SAAC+J,GACjBjV,EAAMiV,EAAEhP,WACJ9H,EAAAA,KAAM6B,IAAQ,EAAK,KACnB7B,EAAAA,KAAW,IAAN6B,GACTkE,EAAI/F,KAAIiC,MAAR8D,EAAG4nB,EAAS7W,OAGRhR,EAAAA,IAAIiH,SAAQ,SAACH,GACjB/K,EAAM+K,EAAE9E,WACJ9H,EAAAA,KAAM6B,IAAQ,EAAK,KACnB7B,EAAAA,KAAW,IAAN6B,GACTiE,EAAI9F,KAAIiC,MAAR6D,EAAG6nB,EAAS/gB,OAGPugB,EAAI3P,IAAI2P,EAAIM,MAAM1K,KAAM,IAAIzZ,YAAWwlB,GAAArD,GAC5C,EACA1lB,EAAI,GACJA,EAAI,GACJA,EAAI,GACJ,IACA,IAAOkT,EAAMlT,IAAI7E,SACjBL,OAAMoB,MAAAwpB,EAAI1lB,GACTlF,OAAO,CAACoY,EAAMnT,IAAI5E,UAClBL,OAAMoB,MAAA6sB,EAAIhpB,OACd,CAAAZ,IAAA,OAAAvC,MAED,SAAasW,GACX,IAAM7S,EAAO6S,EAAM7S,KACfA,GAAAA,aAAgB2oB,aAAe3oB,aAAgBkD,WAAmBlD,OAAAA,EACtE,IACIuB,EADI3B,EAAkBiT,EAAlBjT,IAAKD,EAAakT,EAAblT,IAAKD,EAAQmT,EAARnT,IAElB,GAAIM,EAAM,CACR,IAAM4oB,EAAM5oB,EAAKoO,iCACXya,EAAM7oB,EAAKqO,gCACXvB,GAAelN,EAAI9E,QAAU,IAAM6E,EAAI7E,QAAU,IAAM4E,EAAI5E,QAAU,GACpEyG,EAAA,CACL,EACAvB,EAAKkO,qBAAuB,EAAIlO,EAAKiO,iBAAmB,EAAIjO,EAAKmO,kBACjEya,IAAQ,GAAIA,IAAQ,GAAIA,IAAQ,EAAGA,EACnCC,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAC5C7oB,EAAKsO,gBACL,IAAM,EACN,IACuB,IAAvBtO,EAAKiK,gBACqB,IAA1BjK,EAAK4N,mBACuB,IAA5B5N,EAAK6N,qBACL,EAAM,EACN7N,EAAKiN,mBAAqB,EAAIjN,EAAKqN,kBAAoB,EAAI,EAC3DP,GAEIgc,IAAAA,EAAQ,SAAChY,GAAMrO,IAAAA,EACnBlB,EAAK3H,KAAKkX,EAAEhW,QAAU,EAAGgW,EAAEhW,SAC3B2H,EAAAlB,GAAK3H,KAAIiC,MAAA4G,EAAA8kB,EAAIzW,KAEXlR,EAAI9E,SACNyG,EAAK3H,KAAK,IAAM,EAAMgG,EAAI9E,QAC1B8E,EAAI+G,QAAQmiB,IAEVnpB,EAAI7E,SACNyG,EAAK3H,KAAK,IAAM,EAAM+F,EAAI7E,QAC1B6E,EAAIgH,QAAQmiB,IAEVppB,EAAI5E,SACNyG,EAAK3H,KAAK,IAAM,EAAM8F,EAAI5E,QAC1B4E,EAAIiH,QAAQmiB,SAGPvnB,EAAA,CACL,EACA,EACA,GAAM,EAAM,EAAM,EAClB,IAAM,EAAM,EAAM,EAAM,EAAM,EAC9B,GACA,IAAM,EAAM,IAAM,IAClB,IACA,IACA,EAAM,EACN,GACA,EAGA,IAAM,EAAM,EACZ,EAAM,GACN,GAAM,EAAM,GAAM,EAAM,IAAM,IAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAAM,IAAM,EAG1I,IAAM,EAAM,EACZ,EAAM,GACN,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,IAAM,EAClH,IAAM,IAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAClH,EAAM,EAAM,EAAM,GAAM,GAGxB,IAAM,EAAM,EACZ,EAAM,EACN,GAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAGjCwlB,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAMrnB,KAAM,IAAIkD,WAAW3B,MAC/C,CAAAzC,IAAA,OAAAvC,MAED,SAAAqpB,GAAmCmD,IAAAA,EAAAC,EAAApD,EAAA,GAArB5H,EAAQ+K,EAAA,GAAE9K,EAAQ8K,EAAA,GAC9B,OAAOhC,EAAI3P,IAAI2P,EAAIM,MAAMzK,KAAM,IAAI1Z,WAAW,CAC5C8a,GAAY,GAAKA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EACjEC,GAAY,GAAKA,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,OAEpE,CAAAnf,IAAA,OAAAvC,MAED,SAAasW,GACX,OAAOkU,EAAI3P,IAAI2P,EAAIM,MAAMhL,KAAM,IAAInZ,WAAW,CAC5C,EAAM,EAAM,EACZ,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1C,EAAM2P,EAAMnS,aACZ,EAAM,GACN,EAAM,EACN,EAAM,EACLmS,EAAMpS,YAAc,EAAK,IAAyB,IAAnBoS,EAAMpS,WACtC,EAAM,IACJoS,EAAMlS,OAAO7F,OAASisB,EAAIvK,KAAK3J,EAAMlS,aAAU/E,KACpD,CAAAkD,IAAA,OAAAvC,MAED,SAAaoE,GACX,IAAMlF,EAAMkF,EAAO7F,OAuBZ0hB,OAtBMuK,EAAI3P,IAAI2P,EAAIM,MAAM7K,KAAM,IAAItZ,WAAW,CAClD,EACA,EAAM,EAAM,EACZ,EACA,GAAOzH,EACP,EAAM,EACN,EACA,EACA,GAAOA,EACP,GACA,GACA,EAAM,EAAM,EACZ,EAAM,EAAM,IAAM,IAClB,EAAM,EAAM,IAAM,IAClB,GACAhB,OAAO,CAACgB,IACPhB,OAAOkG,GACPlG,OACC,CAAC,EAAM,EAAM,QAKlB,CAAAqE,IAAA,OAAAvC,MAED,SAAamjB,GAOJ4H,OAFMP,EAAI3P,IAAGvb,MAAPkrB,EAAG,CAAKA,EAAIM,MAAMC,MAAI7sB,OAAA8sB,EAAK7H,EAAO3X,KAAI,SAAC6W,GAAMmI,OAAAA,EAAIkC,KAAKrK,EAAE+B,YAGtE,CAAA7hB,IAAA,OAAAvC,MAED,SAAaokB,GAWJsI,OAVMlC,EAAI3P,IAAI2P,EAAIM,MAAM4B,KAAM,IAAI/lB,WAAW,CAClD,EACA,EAAM,EAAM,EACZyd,GAAM,GAAKA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,EAC/C,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA7hB,IAAA,QAAAvC,MAED,SAAcokB,GAcLsI,OAbMlC,EAAI3P,IAAI2P,EAAIM,MAAM4B,KAAM,IAAI/lB,WAAW,CAClD,EACA,EAAM,EAAM,EACXyd,GAAM,GACNA,GAAM,GAAM,IACZA,GAAM,EAAK,IACN,IAALA,EACD,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA7hB,IAAA,QAAAvC,MAED,SAAcokB,GAcLsI,OAbMlC,EAAI3P,IAAI2P,EAAIM,MAAM4B,KAAM,IAAI/lB,WAAW,CAClD,EACA,EAAM,EAAM,EACXyd,GAAM,GACNA,GAAM,GAAM,IACZA,GAAM,EAAK,IACN,IAALA,EACD,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,OAIrB,CAAA7hB,IAAA,OAAAvC,MAED,SAAamjB,GAGJgE,OAFMqD,EAAI3P,IAAGvb,MAAPkrB,EAAQA,CAAAA,EAAIM,MAAM3D,KAAMqD,EAAIrI,KAAKgB,EAAO,GAAG5f,QAAU4f,EAAO,GAAG5f,QAAQ,GAAG+W,MAAQ,IAAEpc,OAAA8sB,EAAK7H,EAAO3X,KAAI,SAAC6W,GAAMmI,OAAAA,EAAIpI,KAAKC,WAIlI,CAAA9f,IAAA,OAAAvC,MAED,SAAawC,GAQJ2f,OANMqI,EAAI3P,IAAI2P,EAAIM,MAAM3I,KAAM,IAAIxb,WAAW,CAClD,EACA,EAAM,EAAM,EACZnE,GAAkB,GAAKA,GAAkB,GAAM,IAAOA,GAAkB,EAAK,IAAuB,IAAjBA,OAItF,CAAAD,IAAA,OAAAvC,MAED,SAAasW,GACX,IAAMgM,EAAOkI,EAAIlI,KAAKhM,EAAM8N,IAGtB7B,EAAOiI,EAAIjI,KAAKjM,EAAOA,EAAMxT,qBAC/B6pB,EAAa,EAeb,GAbArW,EAAMsW,SAAWtW,EAAM4O,WACf5O,EAAM4O,UACR9a,SAAQ,SAAUqB,GACxBkhB,GAA0B,EACtBlhB,EAAKoT,YAAcpT,EAAKoT,WAAWtgB,SACrCouB,GAA0B,EACbA,GAAsC,EAAzBlhB,EAAKoT,WAAWtgB,WAIhD+X,EAAMuW,gBAAkBF,EAGnBrW,EAAM6O,SAAY7O,EAAMvS,mBAAsBuS,EAAMhS,mBAUzD,CAAA,GAAWgS,EAAMvS,kBAAmB,CAClC,GAAIuS,EAAMsW,QAAS,CAEXE,IAAAA,EAAOtC,EAAIsC,KAAKxW,GAChByW,EAAOvC,EAAIuC,KAAKzW,GAChBkM,EAAOgI,EAAIwC,MAAM1W,GACjBoI,EAAO8L,EAAI9L,KAAKpI,GAGf8L,OAFMoI,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAMuK,EAAMC,EAAMvK,EAAM9D,GAK/D,GAACpI,EAAMhS,kBAKJ,CAEC2oB,IAAAA,EAAOzC,EAAIyC,OACXH,EAAOtC,EAAIsC,KAAKxW,GAChByW,EAAOvC,EAAIuC,KAAKzW,GAChBoI,EAAO8L,EAAI9L,KAAKpI,GAChBkM,EAAOgI,EAAIwC,MAAM1W,GAGhB8L,OAFMoI,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAM0K,EAAMH,EAAMC,EAAMrO,EAAM8D,GAVnEyK,IAAAA,EAAOzC,EAAIyC,OACXzK,EAAOgI,EAAIwC,MAAM1W,GAChBkU,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAM0K,EAAMzK,GAerD,GAAIlM,EAAMsW,QAAS,CACXpK,IAAAA,EAAOgI,EAAIwC,MAAM1W,GACvB,OAAOkU,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAMC,GAErCyK,IAAAA,EAAOzC,EAAIyC,OACXH,EAAOtC,EAAIsC,KAAKxW,GAChByW,EAAOvC,EAAIuC,KAAKzW,GAChBoI,EAAO8L,EAAI9L,KAAKpI,GAChBkM,EAAOgI,EAAIwC,MAAM1W,GAGhB8L,OAFMoI,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAM0K,EAAMH,EAAMC,EAAMrO,EAAM8D,GAjDrE0K,IAAAA,EAAO1C,EAAI0C,KAAK5W,GAQtB,OAAOkU,EAAI3P,IAAI2P,EAAIM,MAAM1I,KAAME,EAAMC,EAAM2K,EAAM1C,EAAIhI,KAAKlM,EAAM/S,QAAS2pB,EAAK/nB,WAN/D,OAoDlB,CAAA5C,IAAA,OAAAvC,MAED,SAAagF,GACL+B,IAAAA,EAAS,IAAIojB,GAIZK,OAHFjnB,EAAAA,QAAQ6G,SAAQ,SAAAqB,GACnB1E,EAAOwlB,MAAM,IAAI5lB,WAAW3B,EAAK4nB,QAAU,CAACnhB,EAAK9G,SAAW,GAAK,IAAM,CAAC,SAEnE6lB,EAAI3P,IAAI2P,EAAIM,MAAMoC,KAAMrwB,KAAKswB,UAAU,EAAG,GAAIpmB,EAAOA,UAC7D,CAAAxE,IAAA,QAAAvC,MAED,SAAcgF,GAGN+B,IAAAA,EAAS,IAAIojB,GACbxL,EAAcwL,GAAOiD,YAAYpoB,EAAKzB,QAAQhF,QAChD6C,EAAS,KACb,GAAI4D,EAAK4nB,QAAS,CAChB,IAAMD,EAAa3nB,EAAK6nB,gBAexBzrB,EAAS+oB,GAAOiD,YAAkC,GAAtBpoB,EAAKzB,QAAQhF,OAAcouB,EAAa,MAC/D3nB,EAAKjB,mBAAqBiB,EAAKV,oBAClClD,EAAS+oB,GAAOiD,YAAkC,GAAtBpoB,EAAKzB,QAAQhF,OAAc,SAEpD,CAWL,IAAIW,EAA4B,GAAtB8F,EAAKzB,QAAQhF,OAAc,IACjCyG,EAAKV,oBACPpF,EAA4B,GAAtB8F,EAAKzB,QAAQhF,OAAc,EAAIyG,EAAK0hB,UAAUnoB,OAAS,KAEtD4rB,EAAAA,GAAOiD,YAAYluB,GAY9B,OATKqE,EAAAA,QAAQ6G,SAAQ,SAAAqB,GACnB1E,EAAOwlB,MAAMpC,GAAOiD,YAAY3hB,EAAK5I,WACrCkE,EAAOwlB,MAAMpC,GAAOiD,YAAY3hB,EAAKvG,OACrC6B,EAAOwlB,MAAMpC,GAAOiD,YAAY3hB,EAAK9G,SAAW,SAAa,QACzDK,EAAK4nB,SACAL,EAAAA,MAAMpC,GAAOiD,YAAY3hB,EAAKoO,IAAMpO,EAAKoO,IAAM,OAInD2Q,EAAI3P,IAAI2P,EAAIM,MAAMtI,KAAM3lB,KAAKswB,UAAU,EAAGnoB,EAAKiW,OAAQ0D,EAAavd,EAAQ2F,EAAOA,UAC3F,CAAAxE,IAAA,OAAAvC,MAED,SAAagF,GACL+B,IAAAA,EAAS,IAAIojB,GACbjrB,EAAM8F,EAAKzB,QAAQhF,OACnBqQ,EAAO5J,EAAK4nB,QAAU,GAAK,EAC3BhoB,EAAOI,EAAK4nB,QAAU,EAAI,EAC5BrpB,EAAU,GACV8pB,EAAgB,EAwBpB,OAvBIroB,EAAK4nB,SACPrpB,EAAUyB,EAAKkgB,UACfmI,EAAgBroB,EAAK6nB,iBAErBtpB,EAAUyB,EAAK0hB,UAEjB2G,EAAgBA,GAAiBze,EAAO1P,EACxC6H,EAAOwlB,MACLpC,GAAOiD,YAAY,GAAKC,GAAgB7C,EAAIM,MAAMpM,KAAM7hB,KAAKswB,UAAU,EAAGvoB,IAE5EmC,EAAOwlB,MAAMpC,GAAOiD,YAAYluB,IACxBkL,EAAAA,SAAQ,SAAAqB,GACd,IAAA,IAASpN,EAAI,EAAGA,EAAIoN,EAAKmT,qBAAqBrgB,OAAQF,IAC7CkuB,EAAAA,MAAM,IAAI5lB,WAAW,CAAC8E,EAAKmT,qBAAqBvgB,MAErDoN,EAAKoT,YAAcpT,EAAKoT,WAAWtgB,SACrCwI,EAAOwlB,MAAMpC,GAAOmD,YAAY7hB,EAAKoT,WAAWtgB,SAC3CsgB,EAAAA,WAAWzU,SAAQ,SAAApK,GACtB+G,EAAOwlB,MAAMpC,GAAOmD,YAAYttB,EAAMgf,mBACtCjY,EAAOwlB,MAAMpC,GAAOiD,YAAYptB,EAAMif,8BAIrClY,EAAOA,SAEf,CAAAxE,IAAA,OAAAvC,MAED,SAAagF,GACX,IAAIzG,EAA+B,GAAtByG,EAAKzB,QAAQhF,OAAc,KACnCyG,EAAK4nB,SAAW5nB,EAAKV,oBACf/F,EAAA,KAELssB,IAAAA,EAAU,IAAIlkB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EACjBpI,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,IAEF,OAAOisB,EAAI3P,IAAI2P,EAAIM,MAAMiC,KAAMlC,KAChC,CAAAtoB,IAAA,OAAAvC,MAED,SAAagF,GACLqoB,IAAAA,EAAgBroB,EAAKzB,QAAQhF,OAC7BssB,EAAU,IAAIlkB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,GACC0mB,GAAiB,GAAM,IACvBA,GAAiB,GAAM,IACvBA,GAAiB,EAAK,IACP,IAAhBA,IAEF,OAAO7C,EAAI3P,IAAI2P,EAAIM,MAAMgC,KAAMjC,KAChC,CAAAtoB,IAAA,OAAAvC,MAED,WACQ6qB,IAAAA,EAAU,IAAIlkB,WAAW,CAC7B,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,GAClB,EAAM,EAAM,EAAM,IAEb6jB,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAMmC,KAAMpwB,KAAKswB,UAAU,EAAG,GAAItC,KACtD,CAAAtoB,IAAA,YAAAvC,MAED,SAAkB4b,EAAShX,GACzB,OAAO,IAAI+B,WAAW,CACpBiV,EACChX,GAAQ,GAAM,IACdA,GAAQ,EAAK,IACP,IAAPA,MAEH,CAAArC,IAAA,OAAAvC,MAED,SAAaokB,GACX,OAAOoG,EAAI3P,IAAI2P,EAAIM,MAAMxI,KAAM,IAAI3b,WAAW,CAC5C,EACA,EAAM,EAAM,EACZyd,GAAM,GAAKA,GAAM,GAAM,IAAOA,GAAM,EAAK,IAAW,IAALA,OAElD,CAAA7hB,IAAA,OAAAvC,MAED,SAAagF,EAAMlC,GACjB,IAAMyqB,EAA+B/mB,KAAKW,MAAMrE,GAAuBynB,GAAa,IAC9EiD,EAA+BhnB,KAAKW,MAAMrE,GAAuBynB,GAAa,IACpF,OAAIvlB,EAAKmgB,SAAWngB,EAAKjB,mBAAqBiB,EAAKV,mBAC1CkmB,EAAI3P,IAAI2P,EAAIM,MAAMvI,KAAM,IAAI5b,WAAW,CAC5C,EACA,EAAM,EAAM,EACZ6mB,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,KAGKhD,EAAI3P,IAAI2P,EAAIM,MAAMvI,KAAM,IAAI5b,WAAW,CAC5C,EACA,EAAM,EAAM,EACZ4mB,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,EACAC,GAAgC,GAC/BA,GAAgC,GAAM,IACtCA,GAAgC,EAAK,IACP,IAA/BA,OAGL,CAAAjrB,IAAA,OAAAvC,MAED,SAAauD,EAASnC,GACpB,IAAMqsB,EAAYlqB,EAAQhF,OACpBqN,EAAU,GAAM,GAAK6hB,EAC3BrsB,GAAU,EAAIwK,EACR5G,IAAAA,EAAO,IAAI2B,WAAWiF,GAC5B5G,EAAKrD,IAAI,CACP,EACA,EAAM,GAAM,EACX8rB,IAAc,GAAM,IAAOA,IAAc,GAAM,IAAOA,IAAc,EAAK,IAAkB,IAAZA,EAC/ErsB,IAAW,GAAM,IAAOA,IAAW,GAAM,IAAOA,IAAW,EAAK,IAAe,IAATA,GACtE,GACH,IAAA,IAAS/C,EAAI,EAAGA,EAAIovB,EAAWpvB,IAAK,CAClCqvB,IAAAA,EAEInqB,EAAQlF,GADVwE,EAAQ6qB,EAAR7qB,SAAUqC,EAAIwoB,EAAJxoB,KAAIyoB,EAAAD,EAAE9oB,KAAAA,OAAI,IAAA+oB,EAAG,GAAEA,EAAAC,EAAAF,EAAE7T,IAAAA,OAAM,IAAH+T,EAAG,EAACA,EAEpC5oB,EAAKrD,IAAI,CACNkB,IAAa,GAAM,IAAOA,IAAa,GAAM,IAAOA,IAAa,EAAK,IAAiB,IAAXA,EAC5EqC,IAAS,GAAM,IAAOA,IAAS,GAAM,IAAOA,IAAS,EAAK,IAAa,IAAPA,EAChEN,EAAK+d,WAAa,GAAyB,OAAnB/d,EAAKC,gBAAyCxF,IAAnBuF,EAAKC,UAA0B,EAAID,EAAKC,WAC3FD,EAAKge,cAAgB,EAAMhe,EAAKie,eAAiB,EAAMje,EAAKke,cAAgB,GAA+B,OAAzBle,EAAKE,sBAAqDzF,IAAzBuF,EAAKE,gBAAgC,EAAIF,EAAKE,iBACtI,MAA5BF,EAAKme,oBAA8D,GAA3Bne,EAAKme,oBAC5ClJ,IAAQ,GAAM,IAAOA,IAAQ,GAAM,IAAOA,IAAQ,EAAK,IAAY,IAANA,GAC7D,GAAK,GAAKxb,GAGf,OAAOmsB,EAAI3P,IAAI2P,EAAIM,MAAMtI,KAAMxd,KAChC,CAAAzC,IAAA,UAAAvC,MAED,SAAgBmjB,GACPqH,OAAAA,EAAI3P,IAAGvb,MAAPkrB,EAAQA,CAAAA,EAAIM,MAAM9H,KACvBwH,EAAIhO,KAAK2G,EAAO,GAAGtgB,SAAUsgB,EAAO,GAAGpgB,YAAU7E,OAAA8sB,EAC9C7H,EAAO3X,KAAI,SAAC6W,GAAMmI,OAAAA,EAAIqD,SAASxL,WACrC,CAAA9f,IAAA,WAAAvC,MAED,SAAiBsW,GACf,OAAOkU,EAAI3P,IACT2P,EAAIM,MAAMrO,KACV+N,EAAI5N,KAAKtG,EAAM8N,GAAI9N,EAAMzT,SAAUyT,EAAM7T,MAAO6T,EAAM5T,QACtD8nB,EAAIsD,QAAQxX,MAEf,CAAA/T,IAAA,UAAAvC,MAED,SAAgBsW,GACPkU,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAMjO,KAAM2N,EAAI1N,KAAKxG,EAAMzT,SAAUyT,EAAMvT,WAAYynB,EAAIzN,KAAKzG,EAAMvK,MAAOye,EAAIuD,QAAQzX,MAC7G,CAAA/T,IAAA,UAAAvC,MAED,SAAgBsW,GACd,OAAOkU,EAAI3P,IAAI2P,EAAIM,MAAM9N,KAAM1G,EAAMvK,OAAShK,EAAkByoB,EAAIU,KAAOV,EAAIW,KAAMX,EAAIY,KAAMZ,EAAIwD,QAAQ1X,MAC5G,CAAA/T,IAAA,UAAAvC,MAED,SAAgBsW,GACd,IAAQ2O,EAAQ3O,EAAR2O,IACFgH,EAAQ,CACZzB,EAAI3M,KAAKvH,GACTkU,EAAI1M,KAAKmH,EAAInH,MACb0M,EAAIxM,KAAKiH,EAAIjH,MACbwM,EAAIvM,KAAKgH,EAAIhH,MACbuM,EAAItM,KAAK+G,EAAI/G,OAWRsM,OARHvF,EAAIxG,KAAKlgB,QACX0tB,EAAM5uB,KAAKmtB,EAAI/L,KAAKwG,EAAIxG,OAGtBwG,EAAIlH,KAAKxf,QACX0tB,EAAM5uB,KAAKmtB,EAAIzM,KAAKkH,EAAIlH,OAGnByM,EAAI3P,IAAGvb,MAAPkrB,EAAG,CAAKA,EAAIM,MAAMxN,MAAIpf,OAAK+tB,MACnC,CAAA1pB,IAAA,OAAAvC,MAED,SAAauD,GACX,IAAMrE,EAAMqE,EAAQhF,OACdyG,EAAO,IAAI2B,WAAW,EAAIzH,GAC5BkC,EAAS,EASNopB,OARCpgB,EAAAA,SAAQ,SAAA6jB,GAAsB,IAAnBjuB,EAAKiuB,EAALjuB,MAAOiH,EAAKgnB,EAALhnB,MACnBtF,EAAAA,IAAI,CACPsF,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EACxDjH,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,GACvDoB,GACOA,GAAA,KAGLopB,EAAI3P,IAAI2P,EAAIM,MAAMhN,KAAMjU,GAAiB,IAAIlD,WAAW,CAC7D,EAAG,EAAG,EAAG,EACRzH,GAAO,GAAMA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAClD8F,MACL,CAAAzC,IAAA,OAAAvC,MAED,SAAaqe,GACX,IAAMnf,EAAMmf,EAAQ9f,OACdyG,EAAO,IAAI2B,WAAW,GAAKzH,GAC7BkC,EAAS,EASNopB,OARCpgB,EAAAA,SAAQ,SAAA8jB,GAAsD,IAAnDlM,EAAUkM,EAAVlM,WAAYC,EAAeiM,EAAfjM,gBAAiBkM,EAAeD,EAAfC,gBAC9CnpB,EAAKrD,IAAI,CACPqgB,GAAc,GAAKA,GAAc,GAAM,IAAOA,GAAc,EAAK,IAAmB,IAAbA,EACvEC,GAAmB,GAAKA,GAAmB,GAAM,IAAOA,GAAmB,EAAK,IAAwB,IAAlBA,EACtFkM,GAAmB,GAAKA,GAAmB,GAAM,IAAOA,GAAmB,EAAK,IAAwB,IAAlBA,GACrF/sB,GACOA,GAAA,MAELopB,EAAI3P,IAAI2P,EAAIM,MAAM9M,KAAMnU,GAAiB,IAAIlD,WAAW,CAC7D,EAAG,EAAG,EAAG,EACRzH,GAAO,GAAMA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAClD8F,MACL,CAAAzC,IAAA,OAAAvC,MAED,SAAaouB,GACX,IAAMlvB,EAAMkvB,EAAa7vB,OACnByG,EAAO,IAAI2B,WAAW,EAAIzH,GAC5BkC,EAAS,EAOb,OANagJ,EAAAA,SAAQ,SAACmK,GACpBvP,EAAKrD,IAAI,CACP4S,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3CnT,GACOA,GAAA,KAELopB,EAAI3P,IAAI2P,EAAIM,MAAM7M,KAAMpU,GAC7B,IAAIlD,WAAW,CACb,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACTzH,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD8F,MAEH,CAAAzC,IAAA,OAAAvC,MAED,SAAaquB,GACX,IAAMnvB,EAAMmvB,EAAQ9vB,OACdyG,EAAO,IAAI2B,WAAW,EAAIzH,GAC5BkC,EAAS,EAONopB,OANCpgB,EAAAA,SAAQ,SAACmK,GACfvP,EAAKrD,IAAI,CACP4S,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3CnT,GACOA,GAAA,KAELopB,EAAI3P,IAAI2P,EAAIM,MAAM5M,KAAMrU,GAC7B,IAAIlD,WAAW,CACb,EAAG,EAAG,EAAG,EACTzH,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD8F,MAEH,CAAAzC,IAAA,OAAAvC,MAED,SAAasuB,GACX,IAAMpvB,EAAMovB,EAAgB/vB,OACtByG,EAAO,IAAI2B,WAAW,EAAIzH,GAC5BkC,EAAS,EAONopB,OANSpgB,EAAAA,SAAQ,SAACmK,GACvBvP,EAAKrD,IAAI,CACP4S,GAAK,GAAKA,GAAK,GAAM,IAAOA,GAAK,EAAK,IAAU,IAAJA,GAC3CnT,GACOA,GAAA,KAELopB,EAAI3P,IAAI2P,EAAIM,MAAMrM,KAAM5U,GAC7B,IAAIlD,WAAW,CACb,EAAG,EAAG,EAAG,EACTzH,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAEpD8F,MAEH,CAAAzC,IAAA,OAAAvC,MAED,SAAauD,GACX,IAAMrE,EAAMqE,EAAQhF,OACdyG,EAAO,IAAI2B,WAAW,EAAIzH,GAC5BkC,EAAS,EAQNopB,OAPCpgB,EAAAA,SAAQ,SAAAmkB,GAAsB,IAAnBvuB,EAAKuuB,EAALvuB,MAAOiH,EAAKsnB,EAALtnB,MACnBtF,EAAAA,IAAI,CACPsF,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,EACxDjH,GAAS,GAAKA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,GACvDoB,GACOA,GAAA,KAELopB,EAAI3P,IAAI2P,EAAIM,MAAM/M,KAAMlU,GAAiB,IAAIlD,WAAW,CAC7D,EAAG,EAAG,EAAG,EACTzH,GAAO,GAAKA,GAAO,GAAM,IAAOA,GAAO,EAAK,IAAY,IAANA,IAChD8F,MACL,CAAAzC,IAAA,OAAAvC,MAED,WACSwqB,OAAAA,EAAI3P,IAAI2P,EAAIM,MAAM0D,KAAM,IAAI7nB,WAAW,CAC5C,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,IAAM,IAAM,IAAM,SAItB,CAAApE,IAAA,OAAAvC,MACA,SAAagF,GAEX,IAAMjC,EAAYiC,EAAKjC,UACjBF,EAAWmC,EAAKzB,QAAQ,GAAGV,SAC3B4rB,EAAgB5rB,EAAWmC,EAAKzB,QAAQhF,OACxCmwB,EAAe1pB,EAAKzB,QAAQ,GAAG0B,aAAepC,EAChD8rB,EAAW,EACVprB,EAAAA,QAAQ6G,SAAQ,SAAAqB,GACnBkjB,GAAYljB,EAAKvG,QAEnB,IAAI3G,EAAS,EACb,GAAIyG,EAAK4nB,QAAS,CAChB,IACIrpB,EADAopB,EAAa,EAEb3nB,EAAKkgB,YACP3hB,EAAUyB,EAAKkgB,WAEblgB,EAAK4nB,SACCxiB,EAAAA,SAAQ,SAAAqB,GACdkhB,GAA0B,EACtBlhB,EAAKoT,YAAcpT,EAAKoT,WAAWtgB,SACrCouB,GAA0B,EACbA,GAAsC,EAAzBlhB,EAAKoT,WAAWtgB,WAIhDyG,EAAK6nB,gBAAkBF,EACvBpuB,EAASowB,EAAW,IAA4B,GAAtB3pB,EAAKzB,QAAQhF,OAAcouB,EACjD3nB,EAAKmgB,QAAUngB,EAAKV,oBAAsBU,EAAKjB,oBACjDxF,EAASowB,EAAkC,GAAtB3pB,EAAKzB,QAAQhF,OAAe,SAGnDA,EAASowB,EAAW,IAA4B,GAAtB3pB,EAAKzB,QAAQhF,OACnCyG,EAAKmgB,QAAUngB,EAAKV,oBACbqqB,EAAAA,EAAW,IAA4B,GAAtB3pB,EAAKzB,QAAQhF,OAAc,EAAIyG,EAAK0hB,UAAUnoB,QAItEssB,IAAAA,EAAU,IAAIlkB,WAAW,CAC7B,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAgB,IAAV3B,EAAKof,GACtBrhB,GAAa,GAAM,IACnBA,GAAa,GAAM,IACnBA,GAAa,EAAK,IACP,IAAZA,EACC2rB,GAAgB,GAAM,IACtBA,GAAgB,GAAM,IACtBA,GAAgB,EAAK,IACP,IAAfA,EACA,EAAM,EAAM,EAAM,EAClB,EAAM,EACN,EAAM,EAGN,EACCnwB,GAAU,GAAM,IAChBA,GAAU,EAAK,IACP,IAATA,EACCkwB,GAAiB,GAAM,IACvBA,GAAiB,GAAM,IACvBA,GAAiB,EAAK,IACP,IAAhBA,EACA,IAAM,EAAM,EAAM,IAEpB,OAAOjE,EAAI3P,IAAI2P,EAAIM,MAAM8D,KAAM/D,KAChC,CAAAtoB,IAAA,OAAAvC,MAED,SAAagF,GAGJ6pB,OAFMrE,EAAI3P,IAAI2P,EAAIM,MAAM+D,KAAM7pB,OAGtCwlB,EApwCa,GAqwCfnoB,EArwCYmoB,GAAG,QACC,CACb,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACAxgB,QAAO,SAACC,EAAGC,GAEJD,OADPA,EAAEC,GAAK,CAACA,EAAE4hB,WAAW,GAAI5hB,EAAE4hB,WAAW,GAAI5hB,EAAE4hB,WAAW,GAAI5hB,EAAE4hB,WAAW,IACjE7hB,IACN7N,OAAOqB,OAAO,QAAM4E,EA5DZmoB,GA8DS,aAAA,CAClBsE,MAAO,IAAInoB,WAAW,CACpB,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GACpC,IAAM,IAAM,IAAM,IAAM,IAAM,IAEhCooB,MAAO,IAAIpoB,WAAW,CACpB,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,IAAM,IAAM,IAAM,IAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GACpC,IAAM,IAAM,IAAM,IAAM,IAAM,MAnFvB6jB,EAAAA,GAuFOA,WAAAA,GAAI3P,IAAI2P,GAAIM,MAAMF,KAAM,IAAIjkB,WAAW,CACvD,IAAK,IAAK,IAAK,IACf,EAAG,EAAG,EAAG,EACT,IAAK,IAAK,IAAK,IACf,GAAI,IAAK,GAAI,OA3FJ6jB,EAAAA,GA8FOA,WAAAA,GAAI3P,IAAI2P,GAAIM,MAAMF,KAAM,IAAIjkB,WAAW,CACvD,IAAK,IAAK,IAAK,IACf,EAAG,EAAG,EAAG,EACT,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,OACdtE,EAnGQmoB,GAAG,OAqGAA,GAAI3P,IAAI2P,GAAIM,MAAMkE,KAAMxE,GAAI3P,IAAI2P,GAAIM,MAAMmE,KAAM,IAAItoB,WAAW,CAC3E,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,GAClB,IAAM,IAAM,IAAM,GAClB,EACA,EAAM,EAAM,OA5GH6jB,EAAAA,GAAG,OA+GAA,GAAI3P,IAAI2P,GAAIM,MAAM1N,KAAM,IAAIzW,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,EAAM,EAAM,EAAM,EAAM,MAnHrB6jB,EAAAA,GAAG,OAsHAA,GAAI3P,IAAI2P,GAAIM,MAAMzN,KAAM,IAAI1W,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EACN,EAAM,MA1HG6jB,EAAAA,GAAG,YA6HK,IAAI7jB,WAAW,CAChC,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,KAhIT6jB,EAAAA,GAAG,OAmIAA,GAAI3P,IAAI2P,GAAIM,MAAMhN,KAAM0M,GAAI0E,YAnI/B1E,EAAAA,GAAG,OAqIAA,GAAI3P,IAAI2P,GAAIM,MAAM9M,KAAMwM,GAAI0E,YArI/B1E,EAAAA,GAAG,OAuIAA,GAAI3P,IAAI2P,GAAIM,MAAM7M,KAAM,IAAItX,WAAW,CACnD,EACA,EAAM,EAAM,EACZ,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,MA3IT6jB,EAAAA,GAAG,OA8IAA,GAAI3P,IAAI2P,GAAIM,MAAM5M,KAAMsM,GAAI0E,YCnJ5C,IAAannB,GAAM,WACjBA,SAAAA,EAAajK,EAAMqxB,GAAQ/sB,OAAA2F,GACzBlL,KAAKiB,KAAOA,GAAQ,GACpBjB,KAAKmL,QAAO9J,IAAAA,OAAOrB,KAAKiB,KAAO,KAC/BiK,EAAOG,SAAWinB,EAsCnBpnB,OArCAzF,EAAAyF,EAAA,CAAA,CAAAxF,IAAA,QAAAvC,MAED,WAAgBiI,IAAAA,EACd,IAAIF,EAAOG,SAAX,CAA2B,IAAA,IAAA9H,EAAAjB,UAAAZ,OADnBU,EAAIR,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJrB,EAAIqB,GAAAnB,UAAAmB,IAEZ2H,EAAAE,SAAQinB,MAAK9vB,MAAA2I,EAAA,CAACpL,KAAKmL,SAAO9J,OAAKe,OAChC,CAAAsD,IAAA,MAAAvC,MAED,WAAcqvB,IAAAA,EACZ,IAAItnB,EAAOG,SAAX,CAA2B,IAAA,IAAAmiB,EAAAlrB,UAAAZ,OADrBU,EAAIR,IAAAA,MAAA4rB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrrB,EAAIqrB,GAAAnrB,UAAAmrB,IAEV+E,EAAAlnB,SAAQmnB,IAAGhwB,MAAA+vB,EAAA,CAACxyB,KAAKmL,SAAO9J,OAAKe,OAC9B,CAAAsD,IAAA,OAAAvC,MAED,WAAeuvB,IAAAA,EACb,IAAIxnB,EAAOG,SAAX,CAA2B,IAAA,IAAAsnB,EAAArwB,UAAAZ,OADpBU,EAAIR,IAAAA,MAAA+wB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxwB,EAAIwwB,GAAAtwB,UAAAswB,IAEXF,EAAApnB,SAAQC,KAAI9I,MAAAiwB,EAAA,CAAC1yB,KAAKmL,SAAO9J,OAAKe,OAC/B,CAAAsD,IAAA,QAAAvC,MAED,WAAgB0vB,IAAAA,EACd,IAAI3nB,EAAOG,SAAX,CAA2B,IAAA,IAAAynB,EAAAxwB,UAAAZ,OADnBU,EAAIR,IAAAA,MAAAkxB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ3wB,EAAI2wB,GAAAzwB,UAAAywB,IAEZF,EAAAvnB,SAAQ0nB,MAAKvwB,MAAAowB,EAAA,CAAC7yB,KAAKmL,SAAO9J,OAAKe,OAChC,CAAAsD,IAAA,QAAAvC,MAED,WAAgB8vB,IAAAA,EACV/nB,EAAOG,WACH6nB,QAAAA,MAAMlzB,KAAKmL,UACnB8nB,EAAA3nB,SAAQ6nB,MAAK1wB,MAAAwwB,EAAA3wB,WACbgJ,QAAQ8nB,eACT,CAAA,CAAA1tB,IAAA,SAAAvC,MAID,WACE+H,EAAOG,UAAW,IACnB,CAAA3F,IAAA,UAAAvC,MAED,WACE+H,EAAOG,UAAW,MACnBH,EA1CgB,GAANA,EAAAA,GAAM,YAkCC,GC1BpB,ICGA,IAAamoB,GAAW,WAKtBA,SAAAA,EAAa5d,EAAYC,EAAY4d,GAAS/tB,OAAA8tB,GAC5CrzB,KAAKyV,WAAaA,EAClBzV,KAAK0V,WAAaA,EAClB,IAAM6d,EAAkB,kBAAkBC,KAAKhnB,UAAUC,WACzDzM,KAAKyzB,cAAgBF,GAAmBnlB,OAAOmlB,EAAgB,IAAM,GAChEd,KAAAA,IAAM,IAAIvnB,GAAO,eAAeooB,IAAWA,EAAQI,UAAWJ,EAAQI,SA4G5EL,OAzGD5tB,EAAA4tB,EAAA,CAAA,CAAA3tB,IAAA,QAAAvC,MAIA,WAAOwwB,IAMDC,EACAC,EAEAC,EAkBAC,EACAC,EA5BCL,EAAUrxB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,IAAAA,UAAA,GAAUgxB,EAAOhxB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7BmT,EAAazV,KAAKyV,WAClBC,EAAa1V,KAAK0V,WAClBue,EAAWxe,EAAWyB,QACtBgd,EAAWxe,EAAWwB,QAMtBoP,EAAS,GA8BR,OA5BHqN,IACEL,GAAWA,EAAQa,WACjBF,GACKzzB,EAAAA,KAAKR,KAAKyV,YAEfye,GACK1zB,EAAAA,KAAKR,KAAK0V,YAELiY,EAAAA,GAAImG,YAAYxN,KAE1B2N,IAAUL,EAAmBjG,GAAImG,YAAY,CAAC9zB,KAAKyV,cACnDye,IAAUL,EAAmBlG,GAAImG,YAAY,CAAC9zB,KAAK0V,gBAMvDue,GAAYxe,EAAWwG,cACzB8X,EAAe/zB,KAAKo0B,eAGlBF,GAAYxe,EAAWuG,cACzB+X,EAAeh0B,KAAKq0B,eAGtB5e,EAAW/O,QAAU,GACrBgP,EAAWhP,QAAU,GAEd,CACLotB,YAAAA,EACAF,iBAAAA,EACAC,iBAAAA,EACAE,aAAAA,EACAC,aAAAA,KAEH,CAAAtuB,IAAA,cAAAvC,MAED,WACE,IAAMsW,EAAQzZ,KAAKyV,WACfzV,KAAKyzB,gBACD/sB,EAAAA,QAAQ,GAAGqB,KAAO,CAAEC,UAAW,EAAGC,gBAAiB,IAE3D,IAAMvB,EAAU+S,EAAM/S,QAElBorB,EAAW,EAEPvkB,EAAAA,SAAQ,SAAC+J,GACfwa,GAAYxa,EAAE3P,MAAMwF,QAAO,SAACqY,EAAGnY,GAAC,OAAMmY,EAAInY,EAAE/E,aAAa,GAC5CgP,GAAiB,EAAjBA,EAAE3P,MAAMjG,UAMdF,IAHH8yB,IAG0Clb,EAH1Ckb,EAAQ,IAAIxqB,WAAWgoB,GACvByC,EAAW,IAAItqB,SAASqqB,EAAMpqB,QAAOsqB,EAAAA,SAAAC,EAAAC,GAGzCA,EAAShuB,EAAQlF,GAEjB,IAAIkY,EAAa,EACV/R,EAAAA,MAAM4F,SAAQ,SAAConB,GACXC,EAAAA,UAASH,EAASE,EAAErsB,YACnBmsB,GAAA,EACJ3vB,EAAAA,IAAI6vB,EAACF,GACXA,GAAUE,EAAErsB,WACZoR,GAAe,EAAIib,EAAErsB,cAEvBosB,EAAOrsB,KAAOqR,EAAUnV,EAAAkwB,EAAArb,EAAAsb,GAXjBlzB,EAAI,EAAGC,EAAIiF,EAAQhF,OAAQ6C,EAAS,EAAW/C,EAAIC,EAAGD,IAAGgzB,EAAAjwB,EAAA6U,GAa5D4Y,IAAAA,EAAOrE,GAAIqE,KAAKsC,GAGftnB,OAAAA,GADM2gB,GAAIrD,KAAK,CAAC7Q,IACOuY,KAE/B,CAAAtsB,IAAA,cAAAvC,MAED,WACE,IAAMsW,EAAQzZ,KAAK0V,WACb4e,EAAQ,IAAIxqB,WAAW2P,EAAM/S,QAAQyG,QAAO,SAACqY,EAAGnY,GAAC,OAAMmY,EAAInY,EAAEhF,OAAO,IAC1EoR,EAAM/S,QAAQyG,QAAO,SAAC5I,EAAQ+S,GAE5B,OADMxS,EAAAA,IAAIwS,EAAEnP,KAAM5D,GACXA,EAAS+S,EAAEjP,OACjB,GACG2pB,IAAAA,EAAOrE,GAAIqE,KAAKsC,GAEftnB,OAAAA,GADM2gB,GAAIrD,KAAK,CAAC7Q,IACOuY,KAC/B,CAAAtsB,IAAA,QAAAvC,MAED,WACEnD,KAAKyV,WAAW8F,QAChBvb,KAAK0V,WAAW6F,YACjB8X,EAtHqB,GCPXwB,GAAI,WAAA,SAAAA,IAAAtvB,OAAAsvB,GAedA,OAfcpvB,EAAAovB,EAAA,CAAA,CAAAnvB,IAAA,QAAAvC,MA4Bf,SAAM2xB,GACGv1B,OAAAA,OAAOw1B,OAAO/0B,KAAM80B,KAG7B,CAAApvB,IAAA,QAAAvC,MASA,WACQ6xB,IAAAA,EAAQ,IAAIh1B,KAAKi1B,YAEhBD,OADAD,OAAAA,OAAOC,EAAOh1B,MACdg1B,KACR,CAAA,CAAAtvB,IAAA,SAAAvC,MAhCD,WAAuB,IAAA,IAAAI,EAAAjB,UAAAZ,OAANU,EAAIR,IAAAA,MAAA2B,GAAAkqB,EAAA,EAAAA,EAAAlqB,EAAAkqB,IAAJrrB,EAAIqrB,GAAAnrB,UAAAmrB,GACnByH,OAAAA,EAAWl1B,KAAQoC,OACpByyB,EAfc,GAsDJM,YAASC,GAAA1sB,EAAAysB,EAAAC,GAAAzsB,IAAAA,EAAAC,EAAAusB,GAapB,SAAAA,IAAqDze,IAAAA,EAAzC2e,EAAK/yB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAIgzB,EAAQhzB,UAAAZ,eAAAc,IAAAF,UAAA,GAAAA,UAAG+yB,GAAe,EAAfA,EAAM3zB,OAAU6D,OAAA4vB,GACjDxsB,EAAAA,EAAAzH,KAAAlB,MAEA,IAAIu1B,EAAaF,EAqBjB,GAnBIE,aAAsBhG,cACXgG,EAAA,IAAIzrB,WAAWyrB,KAK5BA,aAAsBC,WACnBD,aAAsBE,mBACtBF,aAAsBG,YACtBH,aAAsBI,aACtBJ,aAAsBK,YACtBL,aAAsBM,aACtBN,aAAsBO,cACtBP,aAAsBQ,gBAEzBR,EAAa,IAAIzrB,WAAWyrB,EAAWrrB,OAAQqrB,EAAWxb,WAAYwb,EAAWjtB,aAI/EitB,aAAsBzrB,WAAY,CAMpC,IAJA,IAAMksB,EAAuBT,EAAWjtB,WAGlC2tB,EAAS,GACNz0B,EAAI,EAAGA,EAAIw0B,EAAsBx0B,GAAK,EAC7Cy0B,EAAOz0B,IAAM,IAAM+zB,EAAW/zB,IAAO,GAAMA,EAAI,EAAK,EAItDkV,EAAK2e,MAAQY,EACbvf,EAAK4e,SAAWU,OAGhBtf,EAAK2e,MAAQA,EACb3e,EAAK4e,SAAWA,EACjB5e,OAAAA,EA0CFye,OAvCD1vB,EAAA0vB,EAAA,CAAA,CAAAzvB,IAAA,WAAAvC,MAsDA,WAAS+yB,IAAAA,EAAO5zB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG6zB,GACVD,OAAAA,EAAQE,UAAUp2B,QAG3B,CAAA0F,IAAA,SAAAvC,MAWA,SAAOkzB,GAEL,IAAMC,EAAYt2B,KAAKq1B,MACjBkB,EAAYF,EAAUhB,MACtBmB,EAAex2B,KAAKs1B,SACpBmB,EAAeJ,EAAUf,SAM/B,GAHAt1B,KAAK02B,QAGDF,EAAe,EAEjB,IAAA,IAASh1B,EAAI,EAAGA,EAAIi1B,EAAcj1B,GAAK,EAAG,CACxC,IAAMm1B,EAAYJ,EAAU/0B,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,IAC/D80B,EAAWE,EAAeh1B,IAAO,IAAMm1B,GAAa,IAAOH,EAAeh1B,GAAK,EAAK,OAItF,IAAA,IAASA,EAAI,EAAGA,EAAIi1B,EAAcj1B,GAAK,EACrC80B,EAAWE,EAAeh1B,IAAO,GAAK+0B,EAAU/0B,IAAM,GAMnD,OAHPxB,KAAKs1B,UAAYmB,EAGVz2B,OAGT,CAAA0F,IAAA,QAAAvC,MAOA,WAEE,IAAQkyB,EAAoBr1B,KAApBq1B,MAAOC,EAAat1B,KAAbs1B,SAGfD,EAAMC,IAAa,IAAM,YAAe,GAAMA,EAAW,EAAK,EAC9DD,EAAM3zB,OAASiI,KAAKoI,KAAKujB,EAAW,KAGtC,CAAA5vB,IAAA,QAAAvC,MASA,WACQ6xB,IAAAA,EAAQ4B,EAAAC,EAAA1B,EAAA31B,WAAA,QAAAQ,MAAYkB,KAAKlB,MAGxBg1B,OAFPA,EAAMK,MAAQr1B,KAAKq1B,MAAMl0B,MAAM,GAExB6zB,KACR,CAAA,CAAAtvB,IAAA,SAAAvC,MAnHD,SAAc2zB,GAkBZ,IAjBA,IAiBgBC,EAjBV1B,EAAQ,GAERlI,EAAI,SAAC6J,GACT,IAAIC,EAAOD,EACPE,EAAO,UACLC,EAAO,WAEb,OAAO,WAGD7yB,IAAAA,IAFJ4yB,EAAQ,OAAiB,MAAPA,IAAkBA,GAAQ,IAASC,IAE9B,KADvBF,EAAQ,MAAiB,MAAPA,IAAkBA,GAAQ,IAASE,GACdA,EAGvC,OAFU7yB,GAAA,YACAA,GAAA,KACOqF,KAAKytB,SAAW,GAAM,GAAI,KAItC51B,EAAI,EAAWA,EAAIs1B,EAAQt1B,GAAK,EAAG,CAC1C,IAAM61B,EAAKlK,EAA8B,YAA3B4J,GAAUptB,KAAKytB,WAE7BL,EAAgB,UAAPM,IACThC,EAAM70B,KAAa,WAAP62B,IAAsB,GAG7B,OAAA,IAAIlC,EAAUE,EAAOyB,OAC7B3B,GAhG4BN,IA+LlBsB,GAAM,CAcjBC,UAAS,SAACC,GAMR,IAJA,IAAQhB,EAAoBgB,EAApBhB,MAAOC,EAAae,EAAbf,SAGTgC,EAAW,GACR91B,EAAI,EAAGA,EAAI8zB,EAAU9zB,GAAK,EAAG,CACpC,IAAM+1B,EAAQlC,EAAM7zB,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,IACvD81B,EAAS92B,MAAM+2B,IAAS,GAAGtpB,SAAS,KACpCqpB,EAAS92B,MAAa,GAAP+2B,GAAatpB,SAAS,KAGhCqpB,OAAAA,EAASrrB,KAAK,KAgBvBsC,MAAK,SAACipB,GAMJ,IAJA,IAAMC,EAAeD,EAAO91B,OAGtB2zB,EAAQ,GACL7zB,EAAI,EAAGA,EAAIi2B,EAAcj2B,GAAK,EACrC6zB,EAAM7zB,IAAM,IAAMkN,SAAS8oB,EAAOE,OAAOl2B,EAAG,GAAI,KAAQ,GAAMA,EAAI,EAAK,EAGzE,OAAO,IAAI2zB,GAAUE,EAAOoC,EAAe,KAOlCE,GAyCN,SAACC,GAMJ,IAJA,IAAMC,EAAkBD,EAAUl2B,OAG5B2zB,EAAQ,GACL7zB,EAAI,EAAGA,EAAIq2B,EAAiBr2B,GAAK,EAClCA,EAAAA,IAAM,KAAiC,IAA1Bo2B,EAAU3I,WAAWztB,KAAe,GAAMA,EAAI,EAAK,EAGjE,OAAA,IAAI2zB,GAAUE,EAAOwC,IAOnBC,GAmCN,SAACC,GACJ,OAAOJ,GAAaK,SAASC,mBAAmBF,MAavCG,YAAsBC,GAAAzvB,EAAAwvB,EAAAC,GAAApvB,IAAAA,EAAAH,EAAAsvB,GACjC,SAAAA,IAAc1gB,IAAAA,EAEYA,OAFZjS,OAAA2yB,IACZnvB,EAAAA,EAAA7H,KAAAlB,OACKo4B,eAAiB,EAAE5gB,EA+GzB0gB,OA5GDzyB,EAAAyyB,EAAA,CAAA,CAAAxyB,IAAA,QAAAvC,MAOA,WAEOkG,KAAAA,MAAQ,IAAI8rB,GACjBn1B,KAAKq4B,YAAc,IAGrB,CAAA3yB,IAAA,UAAAvC,MAYA,SAAQgF,GACN,IAAImwB,EAASnwB,EAGS,iBAAXmwB,IACAR,EAAAA,GAAWQ,IAIjBjvB,KAAAA,MAAMhI,OAAOi3B,GAClBt4B,KAAKq4B,aAAeC,EAAOhD,WAG7B,CAAA5vB,IAAA,WAAAvC,MAcA,SAASo1B,GACHC,IAAAA,EAGWrwB,EAAoBnI,KAA3BqJ,MAAaovB,EAAcz4B,KAAdy4B,UACfC,EAAYvwB,EAAKktB,MACjBsD,EAAexwB,EAAKmtB,SAItBsD,EAAeD,GAHgB,EAAZF,GAcjBI,GARWlvB,EAFb4uB,EAEa5uB,KAAKoI,KAAK6mB,GAIVjvB,KAAKmK,KAAoB,EAAf8kB,GAAoB54B,KAAKo4B,eAAgB,IAIjCK,EAG7BK,EAAcnvB,KAAKC,IAAkB,EAAdivB,EAAiBF,GAG9C,GAAIE,EAAa,CACf,IAAA,IAASt0B,EAAS,EAAGA,EAASs0B,EAAat0B,GAAUk0B,EAE9CM,KAAAA,gBAAgBL,EAAWn0B,GAIjBm0B,EAAAA,EAAUlf,OAAO,EAAGqf,GACrC1wB,EAAKmtB,UAAYwD,EAIZ,OAAA,IAAI3D,GAAUqD,EAAgBM,KAGvC,CAAApzB,IAAA,QAAAvC,MASA,WACQ6xB,IAAAA,EAAQ4B,EAAAC,EAAAqB,EAAA14B,WAAA,QAAAQ,MAAYkB,KAAKlB,MAGxBg1B,OAFPA,EAAM3rB,MAAQrJ,KAAKqJ,MAAM2rB,QAElBA,MACRkD,GAlHyCrD,IA4H/BmE,YAAMC,GAAAvwB,EAAAswB,EAAAC,GAAAC,IAAAA,EAAAtwB,EAAAowB,GACjB,SAAAA,EAAYG,GAAK3gB,IAAAA,EAWFA,OAXEjT,OAAAyzB,IACfE,EAAAA,EAAAh4B,KAAAlB,OAEKy4B,UAAY,GAKjBjgB,EAAK2gB,IAAM55B,OAAOw1B,OAAO,IAAIF,GAAQsE,GAGrC3gB,EAAK+C,QAAQ/C,EAmCdwgB,OAhCDvzB,EAAAuzB,EAAA,CAAA,CAAAtzB,IAAA,QAAAvC,MAyCA,WAEE0zB,EAAAA,EAAAmC,EAAAx5B,WAAY0B,QAAAA,MAAAA,KAAKlB,MAGjBA,KAAKo5B,aAGP,CAAA1zB,IAAA,SAAAvC,MAYA,SAAOk2B,GAQE,OANPr5B,KAAKs5B,QAAQD,GAGbr5B,KAAKu5B,WAGEv5B,OAGT,CAAA0F,IAAA,WAAAvC,MAcA,SAASk2B,GASAG,OAPHH,GACFr5B,KAAKs5B,QAAQD,GAIFr5B,KAAKy5B,iBAGnB,CAAA,CAAA/zB,IAAA,gBAAAvC,MAnFD,SAAqBu2B,GACZ,OAAA,SAACC,EAASR,GAAG,OAAK,IAAIO,EAAUP,GAAKS,SAASD,MAGvD,CAAAj0B,IAAA,oBAAAvC,MAaA,SAAyBu2B,GAChB,OAAA,SAACC,EAASj0B,GAAG,OAAK,IAAIm0B,GAAKH,EAAWh0B,GAAKk0B,SAASD,QAC5DX,GA/CyBd,IAqHf2B,YAAIC,GAAApxB,EAAAmxB,EAAAC,GAAAC,IAAAA,EAAAnxB,EAAAixB,GAWfA,SAAAA,EAAYH,EAAWh0B,GAAKs0B,IAAAA,EAAAz0B,OAAAs0B,GAC1BE,EAAAA,EAAA74B,KAAAlB,MAEMi6B,IAAAA,EAAS,IAAIP,EACnBM,EAAKE,QAAUD,EAGf,IAAIx2B,EAAOiC,EACS,iBAATjC,IACFq0B,EAAAA,GAAWr0B,IAIpB,IAAM02B,EAAkBF,EAAOxB,UACzB2B,EAAyC,EAAlBD,EAGzB12B,EAAK6xB,SAAW8E,IACXH,EAAAA,EAAOL,SAASl0B,IAIzBjC,EAAKizB,QAGC2D,IAAAA,EAAO52B,EAAKuxB,QAClBgF,EAAKM,MAAQD,EACPE,IAAAA,EAAO92B,EAAKuxB,QAClBgF,EAAKQ,MAAQD,EAOb,IAJA,IAAME,EAAYJ,EAAKhF,MACjBqF,EAAYH,EAAKlF,MAGd7zB,EAAI,EAAGA,EAAI24B,EAAiB34B,GAAK,EACxCi5B,EAAUj5B,IAAM,WAChBk5B,EAAUl5B,IAAM,UAMLw4B,OAJbK,EAAK/E,SAAW8E,EAChBG,EAAKjF,SAAW8E,EAGhBJ,EAAKze,QAAQye,EA8DdH,OA3DDp0B,EAAAo0B,EAAA,CAAA,CAAAn0B,IAAA,QAAAvC,MAOA,WAEE,IAAM82B,EAASj6B,KAAKk6B,QAGpBD,EAAO1e,QACAof,EAAAA,OAAO36B,KAAKw6B,SAGrB,CAAA90B,IAAA,SAAAvC,MAYA,SAAOk2B,GAIE,OAHFa,KAAAA,QAAQS,OAAOtB,GAGbr5B,OAGT,CAAA0F,IAAA,WAAAvC,MAcA,SAASk2B,GAEP,IAAMY,EAASj6B,KAAKk6B,QAGdU,EAAYX,EAAOL,SAASP,GAI3BwB,OAHPZ,EAAO1e,QACM0e,EAAOL,SAAS55B,KAAKs6B,MAAMtF,QAAQ3zB,OAAOu5B,QAGxDf,GApHuBhF,IC3nBbiG,GAAS,CAcpB1E,UAAS,SAACC,GAER,IAAQhB,EAAoBgB,EAApBhB,MAAOC,EAAae,EAAbf,SACT3mB,EAAM3O,KAAK+6B,KAGjB1E,EAAUK,QAIV,IADA,IAAMsE,EAAc,GACXx5B,EAAI,EAAGA,EAAI8zB,EAAU9zB,GAAK,EAOxBkB,IANT,IAIMu4B,GAJS5F,EAAM7zB,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,MAI9B,IAHX6zB,EAAO7zB,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,MAG1B,EAF3B6zB,EAAO7zB,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAI3DkB,EAAI,EAAIA,EAAI,GAAOlB,EAAQ,IAAJkB,EAAW4yB,EAAW5yB,GAAK,EAC7ClC,EAAAA,KAAKmO,EAAIusB,OAAQD,IAAa,GAAK,EAAIv4B,GAAO,KAKxDy4B,IAAAA,EAAcxsB,EAAIusB,OAAO,IAC/B,GAAIC,EACKH,KAAAA,EAAYt5B,OAAS,GAC1Bs5B,EAAYx6B,KAAK26B,GAIdH,OAAAA,EAAY/uB,KAAK,KAgB1BsC,MAAK,SAAC6sB,GAEJ,IAAIC,EAAkBD,EAAU15B,OAC1BiN,EAAM3O,KAAK+6B,KACbO,EAAat7B,KAAKu7B,YAEtB,IAAKD,EAAY,CACft7B,KAAKu7B,YAAc,GACnBD,EAAat7B,KAAKu7B,YAClB,IAAA,IAAS74B,EAAI,EAAGA,EAAIiM,EAAIjN,OAAQgB,GAAK,EACxBiM,EAAAA,EAAIsgB,WAAWvsB,IAAMA,EAK9By4B,IAAAA,EAAcxsB,EAAIusB,OAAO,IAC/B,GAAIC,EAAa,CACTK,IAAAA,EAAeJ,EAAUjpB,QAAQgpB,IACd,IAArBK,IACgBA,EAAAA,GAKfC,OAtGO,SAACL,EAAWC,EAAiBC,GAG7C,IAFA,IAAMjG,EAAQ,GACVyB,EAAS,EACJt1B,EAAI,EAAGA,EAAI65B,EAAiB75B,GAAK,EACxC,GAAIA,EAAI,EAAG,CACHk6B,IAEAC,EAFQL,EAAWF,EAAUnM,WAAWztB,EAAI,KAASA,EAAI,EAAK,EACtD85B,EAAWF,EAAUnM,WAAWztB,MAAS,EAAKA,EAAI,EAAK,EAErE6zB,EAAMyB,IAAW,IAAM6E,GAAiB,GAAM7E,EAAS,EAAK,EAClDA,GAAA,EAGP3B,OAAAA,GAAUv0B,OAAOy0B,EAAOyB,GA0FtB2E,CAAUL,EAAWC,EAAiBC,IAG/CP,KAAM,qEHvGFa,GAAI,GAGDp6B,GAAI,EAAGA,GAAI,GAAIA,IAAK,EACzBA,GAAAA,IAAkC,WAA5BmI,KAAKsO,IAAItO,KAAKkyB,IAAIr6B,GAAI,IAAqB,EAG/Cs6B,IAAAA,GAAK,SAACttB,EAAGsU,EAAGzV,EAAGG,EAAGkK,EAAGJ,EAAGkO,GAC5B,IAAMuW,EAAIvtB,GAAMsU,EAAIzV,GAAOyV,EAAItV,GAAMkK,EAAI8N,EACzC,OAASuW,GAAKzkB,EAAMykB,IAAO,GAAKzkB,GAAOwL,GAGnCkZ,GAAK,SAACxtB,EAAGsU,EAAGzV,EAAGG,EAAGkK,EAAGJ,EAAGkO,GAC5B,IAAMuW,EAAIvtB,GAAMsU,EAAItV,EAAMH,GAAKG,GAAMkK,EAAI8N,EACzC,OAASuW,GAAKzkB,EAAMykB,IAAO,GAAKzkB,GAAOwL,GAGnCmZ,GAAK,SAACztB,EAAGsU,EAAGzV,EAAGG,EAAGkK,EAAGJ,EAAGkO,GAC5B,IAAMuW,EAAIvtB,GAAKsU,EAAIzV,EAAIG,GAAKkK,EAAI8N,EAChC,OAASuW,GAAKzkB,EAAMykB,IAAO,GAAKzkB,GAAOwL,GAGnCoZ,GAAK,SAAC1tB,EAAGsU,EAAGzV,EAAGG,EAAGkK,EAAGJ,EAAGkO,GAC5B,IAAMuW,EAAIvtB,GAAKnB,GAAKyV,GAAKtV,IAAMkK,EAAI8N,EACnC,OAASuW,GAAKzkB,EAAMykB,IAAO,GAAKzkB,GAAOwL,GAM5BqZ,YAAOC,GAAA1zB,EAAAyzB,EAAAC,GAAAzzB,IAAAA,EAAAC,EAAAuzB,GAAA,SAAAA,IAAAxzB,OAAApD,OAAA42B,GAAAxzB,EAAAlG,MAAAzC,KAAAsC,WAiLjB65B,OAjLiB12B,EAAA02B,EAAA,CAAA,CAAAz2B,IAAA,WAAAvC,MAClB,WACOk5B,KAAAA,MAAQ,IAAIlH,GAAU,CACzB,WACA,WACA,WACA,cAEH,CAAAzvB,IAAA,kBAAAvC,MAED,SAAgBm5B,EAAG/3B,GAIjB,IAHA,IAAMg4B,EAAKD,EAGF96B,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAE9B,IAAMg7B,EAAWj4B,EAAS/C,EACpBi7B,EAAaH,EAAEE,GAElBA,EAAAA,GAC4C,UAA1CC,GAAc,EAAMA,IAAe,IACW,YAA1CA,GAAc,GAAOA,IAAe,GAKzCC,IAAAA,EAAI18B,KAAKq8B,MAAMhH,MAEfsH,EAAaJ,EAAGh4B,EAAS,GACzBq4B,EAAaL,EAAGh4B,EAAS,GACzBs4B,EAAaN,EAAGh4B,EAAS,GACzBu4B,EAAaP,EAAGh4B,EAAS,GACzBw4B,EAAaR,EAAGh4B,EAAS,GACzBy4B,EAAaT,EAAGh4B,EAAS,GACzB04B,EAAaV,EAAGh4B,EAAS,GACzB24B,EAAaX,EAAGh4B,EAAS,GACzB44B,EAAaZ,EAAGh4B,EAAS,GACzB64B,EAAab,EAAGh4B,EAAS,GACzB84B,EAAcd,EAAGh4B,EAAS,IAC1B+4B,EAAcf,EAAGh4B,EAAS,IAC1Bg5B,EAAchB,EAAGh4B,EAAS,IAC1Bi5B,EAAcjB,EAAGh4B,EAAS,IAC1Bk5B,EAAclB,EAAGh4B,EAAS,IAC1Bm5B,EAAcnB,EAAGh4B,EAAS,IAG5BiK,EAAIkuB,EAAE,GACN5Z,EAAI4Z,EAAE,GACNrvB,EAAIqvB,EAAE,GACNlvB,EAAIkvB,EAAE,GAGNZ,EAAAA,GAAGttB,EAAGsU,EAAGzV,EAAGG,EAAGmvB,EAAY,EAAGf,GAAE,IACpCpuB,EAAIsuB,GAAGtuB,EAAGgB,EAAGsU,EAAGzV,EAAGuvB,EAAY,GAAIhB,GAAE,IACjCE,EAAAA,GAAGzuB,EAAGG,EAAGgB,EAAGsU,EAAG+Z,EAAY,GAAIjB,GAAE,IACjCE,EAAAA,GAAGhZ,EAAGzV,EAAGG,EAAGgB,EAAGsuB,EAAY,GAAIlB,GAAE,IACjCE,EAAAA,GAAGttB,EAAGsU,EAAGzV,EAAGG,EAAGuvB,EAAY,EAAGnB,GAAE,IACpCpuB,EAAIsuB,GAAGtuB,EAAGgB,EAAGsU,EAAGzV,EAAG2vB,EAAY,GAAIpB,GAAE,IACjCE,EAAAA,GAAGzuB,EAAGG,EAAGgB,EAAGsU,EAAGma,EAAY,GAAIrB,GAAE,IACjCE,EAAAA,GAAGhZ,EAAGzV,EAAGG,EAAGgB,EAAG0uB,EAAY,GAAItB,GAAE,IACjCE,EAAAA,GAAGttB,EAAGsU,EAAGzV,EAAGG,EAAG2vB,EAAY,EAAGvB,GAAE,IACpCpuB,EAAIsuB,GAAGtuB,EAAGgB,EAAGsU,EAAGzV,EAAG+vB,EAAY,GAAIxB,GAAE,IACjCE,EAAAA,GAAGzuB,EAAGG,EAAGgB,EAAGsU,EAAGua,EAAa,GAAIzB,GAAE,KAClCE,EAAAA,GAAGhZ,EAAGzV,EAAGG,EAAGgB,EAAG8uB,EAAa,GAAI1B,GAAE,KAClCE,EAAAA,GAAGttB,EAAGsU,EAAGzV,EAAGG,EAAG+vB,EAAa,EAAG3B,GAAE,KACrCpuB,EAAIsuB,GAAGtuB,EAAGgB,EAAGsU,EAAGzV,EAAGmwB,EAAa,GAAI5B,GAAE,KAClCE,EAAAA,GAAGzuB,EAAGG,EAAGgB,EAAGsU,EAAG2a,EAAa,GAAI7B,GAAE,KAClCE,EAAAA,GAAGhZ,EAAGzV,EAAGG,EAAGgB,EAAGkvB,EAAa,GAAI9B,GAAE,KAElCI,EAAAA,GAAGxtB,EAAGsU,EAAGzV,EAAGG,EAAGovB,EAAY,EAAGhB,GAAE,KACpCpuB,EAAIwuB,GAAGxuB,EAAGgB,EAAGsU,EAAGzV,EAAG4vB,EAAY,EAAGrB,GAAE,KAChCI,EAAAA,GAAG3uB,EAAGG,EAAGgB,EAAGsU,EAAGwa,EAAa,GAAI1B,GAAE,KAClCI,EAAAA,GAAGlZ,EAAGzV,EAAGG,EAAGgB,EAAGmuB,EAAY,GAAIf,GAAE,KACjCI,EAAAA,GAAGxtB,EAAGsU,EAAGzV,EAAGG,EAAGwvB,EAAY,EAAGpB,GAAE,KACpCpuB,EAAIwuB,GAAGxuB,EAAGgB,EAAGsU,EAAGzV,EAAGgwB,EAAa,EAAGzB,GAAE,KACjCI,EAAAA,GAAG3uB,EAAGG,EAAGgB,EAAGsU,EAAG4a,EAAa,GAAI9B,GAAE,KAClCI,EAAAA,GAAGlZ,EAAGzV,EAAGG,EAAGgB,EAAGuuB,EAAY,GAAInB,GAAE,KACjCI,EAAAA,GAAGxtB,EAAGsU,EAAGzV,EAAGG,EAAG4vB,EAAY,EAAGxB,GAAE,KACpCpuB,EAAIwuB,GAAGxuB,EAAGgB,EAAGsU,EAAGzV,EAAGowB,EAAa,EAAG7B,GAAE,KACjCI,EAAAA,GAAG3uB,EAAGG,EAAGgB,EAAGsU,EAAGga,EAAY,GAAIlB,GAAE,KACjCI,EAAAA,GAAGlZ,EAAGzV,EAAGG,EAAGgB,EAAG2uB,EAAY,GAAIvB,GAAE,KACjCI,EAAAA,GAAGxtB,EAAGsU,EAAGzV,EAAGG,EAAGgwB,EAAa,EAAG5B,GAAE,KACrCpuB,EAAIwuB,GAAGxuB,EAAGgB,EAAGsU,EAAGzV,EAAGwvB,EAAY,EAAGjB,GAAE,KAChCI,EAAAA,GAAG3uB,EAAGG,EAAGgB,EAAGsU,EAAGoa,EAAY,GAAItB,GAAE,KACjCI,EAAAA,GAAGlZ,EAAGzV,EAAGG,EAAGgB,EAAG+uB,EAAa,GAAI3B,GAAE,KAElCK,EAAAA,GAAGztB,EAAGsU,EAAGzV,EAAGG,EAAGwvB,EAAY,EAAGpB,GAAE,KACpCpuB,EAAIyuB,GAAGzuB,EAAGgB,EAAGsU,EAAGzV,EAAG8vB,EAAY,GAAIvB,GAAE,KACjCK,EAAAA,GAAG5uB,EAAGG,EAAGgB,EAAGsU,EAAGwa,EAAa,GAAI1B,GAAE,KAClCK,EAAAA,GAAGnZ,EAAGzV,EAAGG,EAAGgB,EAAGivB,EAAa,GAAI7B,GAAE,KAClCK,EAAAA,GAAGztB,EAAGsU,EAAGzV,EAAGG,EAAGovB,EAAY,EAAGhB,GAAE,KACpCpuB,EAAIyuB,GAAGzuB,EAAGgB,EAAGsU,EAAGzV,EAAG0vB,EAAY,GAAInB,GAAE,KACjCK,EAAAA,GAAG5uB,EAAGG,EAAGgB,EAAGsU,EAAGoa,EAAY,GAAItB,GAAE,KACjCK,EAAAA,GAAGnZ,EAAGzV,EAAGG,EAAGgB,EAAG6uB,EAAa,GAAIzB,GAAE,KAClCK,EAAAA,GAAGztB,EAAGsU,EAAGzV,EAAGG,EAAGgwB,EAAa,EAAG5B,GAAE,KACrCpuB,EAAIyuB,GAAGzuB,EAAGgB,EAAGsU,EAAGzV,EAAGsvB,EAAY,GAAIf,GAAE,KACjCK,EAAAA,GAAG5uB,EAAGG,EAAGgB,EAAGsU,EAAGga,EAAY,GAAIlB,GAAE,KACjCK,EAAAA,GAAGnZ,EAAGzV,EAAGG,EAAGgB,EAAGyuB,EAAY,GAAIrB,GAAE,KACjCK,EAAAA,GAAGztB,EAAGsU,EAAGzV,EAAGG,EAAG4vB,EAAY,EAAGxB,GAAE,KACpCpuB,EAAIyuB,GAAGzuB,EAAGgB,EAAGsU,EAAGzV,EAAGkwB,EAAa,GAAI3B,GAAE,KAClCK,EAAAA,GAAG5uB,EAAGG,EAAGgB,EAAGsU,EAAG4a,EAAa,GAAI9B,GAAE,KAClCK,EAAAA,GAAGnZ,EAAGzV,EAAGG,EAAGgB,EAAGquB,EAAY,GAAIjB,GAAE,KAEjCM,EAAAA,GAAG1tB,EAAGsU,EAAGzV,EAAGG,EAAGmvB,EAAY,EAAGf,GAAE,KACpCpuB,EAAI0uB,GAAG1uB,EAAGgB,EAAGsU,EAAGzV,EAAG6vB,EAAY,GAAItB,GAAE,KACjCM,EAAAA,GAAG7uB,EAAGG,EAAGgB,EAAGsU,EAAG2a,EAAa,GAAI7B,GAAE,KAClCM,EAAAA,GAAGpZ,EAAGzV,EAAGG,EAAGgB,EAAGwuB,EAAY,GAAIpB,GAAE,KACjCM,EAAAA,GAAG1tB,EAAGsU,EAAGzV,EAAGG,EAAG+vB,EAAa,EAAG3B,GAAE,KACrCpuB,EAAI0uB,GAAG1uB,EAAGgB,EAAGsU,EAAGzV,EAAGyvB,EAAY,GAAIlB,GAAE,KACjCM,EAAAA,GAAG7uB,EAAGG,EAAGgB,EAAGsU,EAAGua,EAAa,GAAIzB,GAAE,KAClCM,EAAAA,GAAGpZ,EAAGzV,EAAGG,EAAGgB,EAAGouB,EAAY,GAAIhB,GAAE,KACjCM,EAAAA,GAAG1tB,EAAGsU,EAAGzV,EAAGG,EAAG2vB,EAAY,EAAGvB,GAAE,KACpCpuB,EAAI0uB,GAAG1uB,EAAGgB,EAAGsU,EAAGzV,EAAGqwB,EAAa,GAAI9B,GAAE,KAClCM,EAAAA,GAAG7uB,EAAGG,EAAGgB,EAAGsU,EAAGma,EAAY,GAAIrB,GAAE,KACjCM,EAAAA,GAAGpZ,EAAGzV,EAAGG,EAAGgB,EAAGgvB,EAAa,GAAI5B,GAAE,KAClCM,EAAAA,GAAG1tB,EAAGsU,EAAGzV,EAAGG,EAAGuvB,EAAY,EAAGnB,GAAE,KACpCpuB,EAAI0uB,GAAG1uB,EAAGgB,EAAGsU,EAAGzV,EAAGiwB,EAAa,GAAI1B,GAAE,KAClCM,EAAAA,GAAG7uB,EAAGG,EAAGgB,EAAGsU,EAAG+Z,EAAY,GAAIjB,GAAE,KACjCM,EAAAA,GAAGpZ,EAAGzV,EAAGG,EAAGgB,EAAG4uB,EAAY,GAAIxB,GAAE,KAGnCc,EAAA,GAAMA,EAAE,GAAKluB,EAAK,EAClBkuB,EAAA,GAAMA,EAAE,GAAK5Z,EAAK,EAClB4Z,EAAA,GAAMA,EAAE,GAAKrvB,EAAK,EAClBqvB,EAAA,GAAMA,EAAE,GAAKlvB,EAAK,IAEtB,CAAA9H,IAAA,cAAAvC,MAEA,WAEE,IAAMgF,EAAOnI,KAAKqJ,MACZqvB,EAAYvwB,EAAKktB,MAEjBsI,EAAgC,EAAnB39B,KAAKq4B,YAClBuF,EAA4B,EAAhBz1B,EAAKmtB,SAGvBoD,EAAUkF,IAAc,IAAM,KAAS,GAAMA,EAAY,GAEzD,IAAMC,EAAcl0B,KAAKW,MAAMqzB,EAAa,YACtCG,EAAcH,EACpBjF,EAA4C,IAA/BkF,EAAY,KAAQ,GAAM,IACU,UAA5CC,GAAe,EAAMA,IAAgB,IACW,YAA5CA,GAAe,GAAOA,IAAgB,GAE/CnF,EAA4C,IAA/BkF,EAAY,KAAQ,GAAM,IACU,UAA5CE,GAAe,EAAMA,IAAgB,IACW,YAA5CA,GAAe,GAAOA,IAAgB,GAG1CxI,EAAAA,SAAoC,GAAxBoD,EAAUh3B,OAAS,GAGpC1B,KAAKu5B,WAOL,IAJA,IAAMC,EAAOx5B,KAAKq8B,MACZK,EAAIlD,EAAKnE,MAGN7zB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAE7B,IAAMu8B,EAAMrB,EAAEl7B,GAEZA,EAAAA,GAAoC,UAA5Bu8B,GAAO,EAAMA,IAAQ,IACI,YAA5BA,GAAO,GAAOA,IAAQ,GAIxBvE,OAAAA,IACR,CAAA9zB,IAAA,QAAAvC,MAED,WACQ6xB,IAAAA,EAAQ4B,EAAAC,EAAAsF,EAAA38B,WAAA,QAAAQ,MAAYkB,KAAKlB,MAGxBg1B,OAFPA,EAAMqH,MAAQr8B,KAAKq8B,MAAMrH,QAElBA,MACRmH,GAjL0BnD,IAkMVA,GAAOgF,cAAc7B,IAgBjBnD,GAAOiF,kBAAkB9B,II5OnC+B,IAAAA,YAAU9I,GAAA1sB,EAAAw1B,EAAA9I,GAAAzsB,IAAAA,EAAAC,EAAAs1B,GAYrB,SAAAA,EAAY/E,GAAKziB,IAAAA,EAkBbA,OAlBanR,OAAA24B,IACfv1B,EAAAA,EAAAzH,KAAAlB,OASKm5B,IAAM55B,OAAOw1B,OAChB,IAAIF,GACJ,CACEsJ,QAAS,EACTlE,OAAQkC,GACRiC,WAAY,GAEdjF,GACAziB,EAkDHwnB,OA/CDz4B,EAAAy4B,EAAA,CAAA,CAAAx4B,IAAA,UAAAvC,MAYA,SAAQk7B,EAAUC,GAiBTC,IAhBHC,IAAAA,EAGIrF,EAAQn5B,KAARm5B,IAGFc,EAASd,EAAIc,OAAOr5B,SAGpB69B,EAAatJ,GAAUv0B,SAGvB29B,EAAkBE,EAAWpJ,MAC3B8I,EAAwBhF,EAAxBgF,QAASC,EAAejF,EAAfiF,WAGVG,EAAgB78B,OAASy8B,GAAS,CACnCK,GACFvE,EAAOU,OAAO6D,GAEhBA,EAAQvE,EAAOU,OAAO0D,GAAUzE,SAAS0E,GACzCrE,EAAO1e,QAGP,IAAA,IAAS/Z,EAAI,EAAGA,EAAI48B,EAAY58B,GAAK,EAC3By4B,EAAAA,EAAOL,SAAS4E,GACxBvE,EAAO1e,QAGTkjB,EAAWp9B,OAAOm9B,GAIbC,OAFPA,EAAWnJ,SAAqB,EAAV6I,EAEfM,MACRP,GAhF6BrJ,ICQnB6J,YAAMzF,GAAAvwB,EAAAg2B,EAAAzF,GAAAtwB,IAAAA,EAAAC,EAAA81B,GAcjBA,SAAAA,EAAYC,EAAWj5B,EAAKyzB,GAAKziB,IAAAA,EAelBA,OAfkBnR,OAAAm5B,IAC/B/1B,EAAAA,EAAAzH,KAAAlB,OAOKm5B,IAAM55B,OAAOw1B,OAAO,IAAIF,GAAQsE,GAGrCziB,EAAKkoB,WAAaD,EAClBjoB,EAAKjT,KAAOiC,EAGZgR,EAAK6E,QAAQ7E,EAqEdgoB,OAlEDj5B,EAAAi5B,EAAA,CAAA,CAAAh5B,IAAA,QAAAvC,MA2EA,WAEE0zB,EAAAA,EAAA6H,EAAAl/B,WAAY0B,QAAAA,MAAAA,KAAKlB,MAGjBA,KAAKo5B,aAGP,CAAA1zB,IAAA,UAAAvC,MAYA,SAAQ07B,GAKN,OAHA7+B,KAAKs5B,QAAQuF,GAGN7+B,KAAKu5B,aAGd,CAAA7zB,IAAA,WAAAvC,MAcA,SAAS07B,GASAC,OAPHD,GACF7+B,KAAKs5B,QAAQuF,GAIY7+B,KAAKy5B,iBAGjC,CAAA,CAAA/zB,IAAA,kBAAAvC,MAjHD,SAAuBuC,EAAKyzB,GAC1B,OAAOn5B,KAAKY,OAAOZ,KAAK++B,gBAAiBr5B,EAAKyzB,KAGhD,CAAAzzB,IAAA,kBAAAvC,MAcA,SAAuBuC,EAAKyzB,GAC1B,OAAOn5B,KAAKY,OAAOZ,KAAKg/B,gBAAiBt5B,EAAKyzB,KAGhD,CAAAzzB,IAAA,gBAAAvC,MAaA,SAAqB87B,GACbC,IAAAA,EAAuB,SAACx5B,GACxB,MAAe,iBAARA,EACFy5B,GAEFC,IAGF,MAAA,CACLC,iBAAQ1F,EAASj0B,EAAKyzB,GACpB,OAAO+F,EAAqBx5B,GAAK25B,QAAQJ,EAAWtF,EAASj0B,EAAKyzB,IAGpEmG,iBAAQC,EAAY75B,EAAKyzB,GACvB,OAAO+F,EAAqBx5B,GAAK45B,QAAQL,EAAWM,EAAY75B,EAAKyzB,SAG1EuF,GAlGyBxG,IAiK5BwG,GAAOK,gBAAkB,EACzBL,GAAOM,gBAAkB,EACzBN,GAAOP,QAAU,EACjBO,GAAOc,OAAS,EA2BHC,IAAAA,YAAerK,GAAA1sB,EAAA+2B,EAAArK,GAAA8D,IAAAA,EAAAtwB,EAAA62B,GAW1BA,SAAAA,EAAYC,EAAQvxB,GAAIqK,IAAAA,EAIRA,OAJQjT,OAAAk6B,IACtBvG,EAAAA,EAAAh4B,KAAAlB,OAEK2/B,QAAUD,EACflnB,EAAKonB,IAAMzxB,EAAGqK,EAiCfinB,OA9BDA,EAAAA,EAAA,KAAA,CAAA,CAAA/5B,IAAA,kBAAAvC,MAYA,SAAuBu8B,EAAQvxB,GAC7B,OAAOnO,KAAK6/B,UAAUj/B,OAAO8+B,EAAQvxB,KAGvC,CAAAzI,IAAA,kBAAAvC,MAYA,SAAuBu8B,EAAQvxB,GAC7B,OAAOnO,KAAK8/B,UAAUl/B,OAAO8+B,EAAQvxB,OACtCsxB,GAhDkC5K,IAmD5BkL,SAAAA,GAAS1K,EAAO9wB,EAAQk0B,GAC/B,IACI+F,EADEvI,EAASZ,EAITlnB,EAAKnO,KAAK4/B,IAGZzxB,GACMA,EAAAA,EAGRnO,KAAK4/B,SAAMp9B,GAEXg8B,EAAQx+B,KAAKggC,WAIf,IAAA,IAASx+B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAC3B+C,EAAAA,EAAS/C,IAAMg9B,EAAMh9B,GAWnBy+B,IAAAA,YAAGC,GAAAx3B,EAAAu3B,EAAAC,GAAAnG,IAAAA,EAAAnxB,EAAAq3B,GAAA,SAAAA,IAAAlG,OAAAx0B,OAAA06B,GAAAlG,EAAAt3B,MAAAzC,KAAAsC,WAAA,OAAAmD,EAAAw6B,IAASR,IAKrBI,GAAAA,mBAASM,GAAAz3B,EAAA03B,EAAAD,GAAAE,IAAAA,EAAAz3B,EAAAw3B,GAAA,SAAAA,IAAAC,OAAA96B,OAAA66B,GAAAC,EAAA59B,MAAAzC,KAAAsC,WAsBV89B,OAtBU36B,EAAA26B,EAAA,CAAA,CAAA16B,IAAA,eAAAvC,MAWX,SAAakyB,EAAO9wB,GAElB,IAAMm7B,EAAS1/B,KAAK2/B,QACZlH,EAAciH,EAAdjH,UAGRsH,GAAS7+B,KAAKlB,KAAMq1B,EAAO9wB,EAAQk0B,GAC5B6H,EAAAA,aAAajL,EAAO9wB,GAG3BvE,KAAKggC,WAAa3K,EAAMl0B,MAAMoD,EAAQA,EAASk0B,OAChD2H,GAtB2BH,IA2B1BH,GAAAA,mBAASS,GAAA73B,EAAA83B,EAAAD,GAAAE,IAAAA,EAAA73B,EAAA43B,GAAA,SAAAA,IAAAC,OAAAl7B,OAAAi7B,GAAAC,EAAAh+B,MAAAzC,KAAAsC,WAyBVk+B,OAzBU/6B,EAAA+6B,EAAA,CAAA,CAAA96B,IAAA,eAAAvC,MAWX,SAAakyB,EAAO9wB,GAElB,IAAMm7B,EAAS1/B,KAAK2/B,QACZlH,EAAciH,EAAdjH,UAGFiI,EAAYrL,EAAMl0B,MAAMoD,EAAQA,EAASk0B,GAGxCkI,EAAAA,aAAatL,EAAO9wB,GAC3Bw7B,GAAS7+B,KAAKlB,KAAMq1B,EAAO9wB,EAAQk0B,GAGnCz4B,KAAKggC,WAAaU,MACnBF,GAzB2BP,IA+BvB,IAAMW,GAAQ,CAanB7T,IAAGA,SAAC5kB,EAAMswB,GAeR,IAbA,IAAMoI,EAA6B,EAAZpI,EAGjBqI,EAAgBD,EAAkB14B,EAAKmtB,SAAWuL,EAGlDE,EAAeD,GAAiB,GACjCA,GAAiB,GACjBA,GAAiB,EAClBA,EAGEE,EAAe,GACZx/B,EAAI,EAAGA,EAAIs/B,EAAet/B,GAAK,EACtCw/B,EAAaxgC,KAAKugC,GAEpB,IAAME,EAAU9L,GAAUv0B,OAAOogC,EAAcF,GAG/C34B,EAAK9G,OAAO4/B,IAcdC,MAAK,SAAC/4B,GACJ,IAAMkB,EAAQlB,EAGR24B,EAA0D,IAA1Cz3B,EAAMgsB,MAAOhsB,EAAMisB,SAAW,IAAO,GAG3DjsB,EAAMisB,UAAYwL,IAWTK,YAAWC,GAAA14B,EAAAy4B,EAAAC,GAAAC,IAAAA,EAAAz4B,EAAAu4B,GACtBA,SAAAA,EAAYxC,EAAWj5B,EAAKyzB,GAAKa,IAAAA,EAeLA,OAfKz0B,OAAA47B,IAO/BnH,EAAAqH,EAAAngC,KAAMy9B,KAAAA,EAAWj5B,EAAKnG,OAAOw1B,OAC3B,CACEuM,KAAMrB,GACNgB,QAASL,IAEXzH,KAGGV,UAAY,EAASuB,EAoD3BmH,OAnDA17B,EAAA07B,EAAA,CAAA,CAAAz7B,IAAA,QAAAvC,MAED,WACMo+B,IAAAA,EAGJ1K,EAAAA,EAAAsK,EAAA3hC,WAAY0B,QAAAA,MAAAA,KAAKlB,MAGjB,IAAQm5B,EAAQn5B,KAARm5B,IACAhrB,EAAagrB,EAAbhrB,GAAImzB,EAASnI,EAATmI,KAGRthC,KAAK4+B,aAAe5+B,KAAKi1B,YAAY8J,gBACvCwC,EAAcD,EAAKE,iBAEnBD,EAAcD,EAAKG,gBAEnBzhC,KAAKo4B,eAAiB,GAGxBp4B,KAAK0hC,MAAQH,EAAYrgC,KAAKogC,EAAMthC,KAAMmO,GAAMA,EAAGknB,OACnDr1B,KAAK0hC,MAAMC,UAAYJ,IACxB,CAAA77B,IAAA,kBAAAvC,MAED,SAAgBkyB,EAAO9wB,GAChBm9B,KAAAA,MAAME,aAAavM,EAAO9wB,KAChC,CAAAmB,IAAA,cAAAvC,MAED,WACM0+B,IAAAA,EAGIZ,EAAYjhC,KAAKm5B,IAAjB8H,QAiBDY,OAdH7hC,KAAK4+B,aAAe5+B,KAAKi1B,YAAY8J,iBAEvCkC,EAAQlU,IAAI/sB,KAAKqJ,MAAOrJ,KAAKy4B,WAGNoJ,EAAA7hC,KAAKu5B,UAAS,KAGdsI,EAAA7hC,KAAKu5B,UAAS,GAGrC0H,EAAQC,MAAMW,IAGTA,MACRV,GApE8BzC,IAqFpBoD,YAAY3J,GAAAzvB,EAAAo5B,EAAA3J,GAAA4J,IAAAA,EAAAn5B,EAAAk5B,GAoBvB,SAAAA,EAAYE,GAAcC,IAAAA,EAGCA,OAHD18B,OAAAu8B,IACxBC,EAAAA,EAAA7gC,KAAAlB,OAEKkiC,MAAMF,GAAcC,EAoB1BH,OAjBDr8B,EAAAq8B,EAAA,CAAA,CAAAp8B,IAAA,WAAAvC,MAeA,SAASg/B,GACP,OAAQA,GAAaniC,KAAKmiC,WAAW/L,UAAUp2B,UAChD8hC,GA3C+BjN,IAiDrBuN,GAAmB,CAc9BhM,UAAS,SAAC4L,GACJ3L,IAGIkJ,EAAqByC,EAArBzC,WAAYjB,EAAS0D,EAAT1D,KASbjI,OANHiI,EACUnJ,GAAUv0B,OAAO,CAAC,WAAY,aAAaS,OAAOi9B,GAAMj9B,OAAOk+B,GAE/DA,GAGGtxB,SAAS6sB,KAgB5BvsB,MAAK,SAAC8zB,GACA/D,IAAAA,EAGEiB,EAAazE,GAAOvsB,MAAM8zB,GAG1BC,EAAkB/C,EAAWlK,MAYnC,OAT2B,aAAvBiN,EAAgB,IAA4C,aAAvBA,EAAgB,KAEvDhE,EAAOnJ,GAAUv0B,OAAO0hC,EAAgBnhC,MAAM,EAAG,IAGjCqY,EAAAA,OAAO,EAAG,GAC1B+lB,EAAWjK,UAAY,IAGlBwM,GAAalhC,OAAO,CAAE2+B,WAAAA,EAAYjB,KAAAA,MAOhCc,YAAkBtF,GAAApxB,EAAA02B,EAAAtF,GAAAyI,IAAAA,EAAA35B,EAAAw2B,GAAA,SAAAA,IAAAmD,OAAAh9B,OAAA65B,GAAAmD,EAAA9/B,MAAAzC,KAAAsC,WAuG5B88B,OAvG4BA,EAAAA,EAAA,KAAA,CAAA,CAAA15B,IAAA,UAAAvC,MAsB7B,SAAeu8B,EAAQ/F,EAASj0B,EAAKyzB,GAE7BqJ,IAAAA,EAAOjjC,OAAOw1B,OAAO,IAAIF,GAAQ70B,KAAKm5B,IAAKA,GAG3CsJ,EAAY/C,EAAO8B,gBAAgB97B,EAAK88B,GACxCjD,EAAakD,EAAU7I,SAASD,GAGhC+I,EAAYD,EAAUtJ,IAG5B,OAAO2I,GAAalhC,OAAO,CACzB2+B,WAAAA,EACA75B,IAAAA,EACAyI,GAAIu0B,EAAUv0B,GACdw0B,UAAWjD,EACX4B,KAAMoB,EAAUpB,KAChBL,QAASyB,EAAUzB,QACnBxI,UAAWgK,EAAUhK,UACrB0J,UAAWK,EAAKpmB,WAIpB,CAAA1W,IAAA,UAAAvC,MAqBA,SAAeu8B,EAAQH,EAAY75B,EAAKyzB,GACtC,IAAIyJ,EAAcrD,EAGZiD,EAAOjjC,OAAOw1B,OAAO,IAAIF,GAAQ70B,KAAKm5B,IAAKA,GAQ1C0J,OALPD,EAAc5iC,KAAK8iC,OAAOF,EAAaJ,EAAKpmB,QAG1BsjB,EAAO+B,gBAAgB/7B,EAAK88B,GAAM5I,SAASgJ,EAAYrD,cAK3E,CAAA75B,IAAA,SAAAvC,MAgBA,SAAco8B,EAAYnjB,GACpB,MAAsB,iBAAfmjB,EACFnjB,EAAO7N,MAAMgxB,EAAYv/B,MAE3Bu/B,MACRH,GAvGqCvK,IAiHxCuK,GAAmBjG,IAAM55B,OAAOw1B,OAC9B,IAAIF,GACJ,CAAEzY,OAAQgmB,KAML,IAAMW,GAAa,CAmBxBC,QAAO,SAAC3E,EAAUF,EAASqB,EAAQlB,GACjC,IAAI2E,EAAQ3E,EAGP2E,IACK9N,EAAAA,GAAUiC,OAAO,IAIrB1xB,IAAAA,EAAMw4B,GAAWt9B,OAAO,CAAEu9B,QAASA,EAAUqB,IAAU0D,QAAQ7E,EAAU4E,GAGzE90B,EAAKgnB,GAAUv0B,OAAO8E,EAAI2vB,MAAMl0B,MAAMg9B,GAAmB,EAATqB,GAItD,OAHA95B,EAAI4vB,SAAqB,EAAV6I,EAGR2D,GAAalhC,OAAO,CAAE8E,IAAAA,EAAKyI,GAAAA,EAAImwB,KAAM2E,MAQnC9D,YAAmBgE,GAAAz6B,EAAAy2B,EAAAgE,GAAAC,IAAAA,EAAAx6B,EAAAu2B,GAAA,SAAAA,IAAAiE,OAAA79B,OAAA45B,GAAAiE,EAAA3gC,MAAAzC,KAAAsC,WAkF7B68B,OAlF6BA,EAAAA,EAAA,KAAA,CAAA,CAAAz5B,IAAA,UAAAvC,MAoB9B,SAAeu8B,EAAQ/F,EAAS0E,EAAUlF,GAElCqJ,IAAAA,EAAOjjC,OAAOw1B,OAAO,IAAIF,GAAQ70B,KAAKm5B,IAAKA,GAG3CkK,EAAgBb,EAAKc,IAAIN,QAAQ3E,EAAUqB,EAAOvB,QAASuB,EAAOF,QAGxEgD,EAAKr0B,GAAKk1B,EAAcl1B,GAGlBoxB,IAAAA,EAAaH,GAAmBC,QACnCn+B,KAAKlB,KAAM0/B,EAAQ/F,EAAS0J,EAAc39B,IAAK88B,GAK3CjD,OAFPA,EAAW2C,MAAMmB,GAEV9D,IAGT,CAAA75B,IAAA,UAAAvC,MAqBA,SAAeu8B,EAAQH,EAAYlB,EAAUlF,GAC3C,IAAIyJ,EAAcrD,EAGZiD,EAAOjjC,OAAOw1B,OAAO,IAAIF,GAAQ70B,KAAKm5B,IAAKA,GAGjDyJ,EAAc5iC,KAAK8iC,OAAOF,EAAaJ,EAAKpmB,QAGtCinB,IAAAA,EAAgBb,EAAKc,IACxBN,QAAQ3E,EAAUqB,EAAOvB,QAASuB,EAAOF,OAAQoD,EAAYtE,MASzDuE,OANPL,EAAKr0B,GAAKk1B,EAAcl1B,GAGNixB,GAAmBE,QAClCp+B,KAAKlB,KAAM0/B,EAAQkD,EAAaS,EAAc39B,IAAK88B,OAGvDrD,GAlFsCC,IA2FzCD,GAAoBhG,IAAM55B,OAAOw1B,OAAOqK,GAAmBjG,IAAK,CAAEmK,IAAKP,KCz1BvE,IAfA,IAAMQ,GAAQ,GACRC,GAAW,GACXC,GAAa,GACbC,GAAa,GACbC,GAAa,GACbC,GAAa,GACbC,GAAgB,GAChBC,GAAgB,GAChBC,GAAgB,GAChBC,GAAgB,GAKhBx2B,GAAI,GACDhM,GAAI,EAAGA,GAAI,IAAKA,IAAK,EAE1BgM,GAAEhM,IADAA,GAAI,IACCA,IAAK,EAEJA,IAAK,EAAK,IAOtB,IAFA,IAAIkW,GAAI,EACJusB,GAAK,EACAziC,GAAI,EAAGA,GAAI,IAAKA,IAAK,EAAG,CAE3B0iC,IAAAA,GAAKD,GAAMA,IAAM,EAAMA,IAAM,EAAMA,IAAM,EAAMA,IAAM,EACnDC,GAAAA,KAAO,EAAW,IAALA,GAAa,GAChCX,GAAM7rB,IAAKwsB,GACXV,GAASU,IAAMxsB,GAGf,IAAMysB,GAAK32B,GAAEkK,IACP0sB,GAAK52B,GAAE22B,IACPE,GAAK72B,GAAE42B,IAGT5e,GAAa,IAARhY,GAAE02B,IAAqB,SAALA,GAChBxsB,GAAAA,IAAM8N,IAAK,GAAOA,KAAM,EACxB9N,GAAAA,IAAM8N,IAAK,GAAOA,KAAM,GACxB9N,GAAAA,IAAM8N,IAAK,EAAMA,KAAM,GAClCoe,GAAWlsB,IAAK8N,GAGhBA,GAAU,SAAL6e,GAAwB,MAALD,GAAsB,IAALD,GAAmB,SAAJzsB,GAC1CwsB,GAAAA,IAAO1e,IAAK,GAAOA,KAAM,EACzB0e,GAAAA,IAAO1e,IAAK,GAAOA,KAAM,GACzB0e,GAAAA,IAAO1e,IAAK,EAAMA,KAAM,GACtCwe,GAAcE,IAAM1e,GAGf9N,IAIHA,GAAIysB,GAAK32B,GAAEA,GAAEA,GAAE62B,GAAKF,MACpBF,IAAMz2B,GAAEA,GAAEy2B,MAHNA,GADCA,GAAA,EAST,IAAMK,GAAO,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAK7DC,YAAOC,GAAA97B,EAAA67B,EAAAC,GAAA77B,IAAAA,EAAAC,EAAA27B,GAAA,SAAAA,IAAA57B,OAAApD,OAAAg/B,GAAA57B,EAAAlG,MAAAzC,KAAAsC,WAgMjBiiC,OAhMiB9+B,EAAA8+B,EAAA,CAAA,CAAA7+B,IAAA,WAAAvC,MAClB,WACMqiB,IAAAA,EAGJ,IAAIxlB,KAAKykC,UAAYzkC,KAAK0kC,iBAAmB1kC,KAAKyD,KAAlD,CAKAzD,KAAK0kC,eAAiB1kC,KAAKyD,KAC3B,IAAMiC,EAAM1F,KAAK0kC,eACXC,EAAWj/B,EAAI2vB,MACf8I,EAAUz4B,EAAI4vB,SAAW,EAG/Bt1B,KAAKykC,SAAWtG,EAAU,EAC1B,IAGMyG,EAAyB,GAHf5kC,KAAKykC,SAGK,GAG1BzkC,KAAK6kC,aAAe,GAEpB,IADA,IAAMC,EAAc9kC,KAAK6kC,aAChBE,EAAQ,EAAGA,EAAQH,EAAQG,GAAS,EACvCA,EAAQ5G,EACV2G,EAAYC,GAASJ,EAASI,IAE9Bvf,EAAIsf,EAAYC,EAAQ,GAElBA,EAAQ5G,EAYHA,EAAU,GAAK4G,EAAQ5G,GAAY,IAE5C3Y,EAAK+d,GAAM/d,IAAM,KAAO,GACnB+d,GAAO/d,IAAM,GAAM,MAAS,GAC5B+d,GAAO/d,IAAM,EAAK,MAAS,EAC5B+d,GAAU,IAAJ/d,KAZVA,EAAK+d,IAHL/d,EAAKA,GAAK,EAAMA,IAAM,MAGL,KAAO,GACnB+d,GAAO/d,IAAM,GAAM,MAAS,GAC5B+d,GAAO/d,IAAM,EAAK,MAAS,EAC5B+d,GAAU,IAAJ/d,GAGVA,GAAK8e,GAAMS,EAAQ5G,EAAW,IAAM,IAS1B4G,EAAAA,GAASD,EAAYC,EAAQ5G,GAAW3Y,GAKxDxlB,KAAKglC,gBAAkB,GAEvB,IADA,IAAMC,EAAiBjlC,KAAKglC,gBACnBE,EAAW,EAAGA,EAAWN,EAAQM,GAAY,EAAG,CACvD,IAAMH,EAAQH,EAASM,EAGrB1f,EADE0f,EAAW,EACTJ,EAAYC,GAEZD,EAAYC,EAAQ,GAIxBE,EAAeC,GADbA,EAAW,GAAKH,GAAS,EACAvf,EAEAqe,GAAcN,GAAM/d,IAAM,KACjDse,GAAcP,GAAO/d,IAAM,GAAM,MACjCue,GAAcR,GAAO/d,IAAM,EAAK,MAChCwe,GAAcT,GAAU,IAAJ/d,QAG7B,CAAA9f,IAAA,eAAAvC,MAED,SAAam5B,EAAG/3B,GACT4gC,KAAAA,cACH7I,EAAG/3B,EAAQvE,KAAK6kC,aAAcpB,GAAYC,GAAYC,GAAYC,GAAYL,MAEjF,CAAA79B,IAAA,eAAAvC,MAED,SAAam5B,EAAG/3B,GACd,IAAMg4B,EAAKD,EAGP9W,EAAI+W,EAAGh4B,EAAS,GACjBA,EAAAA,EAAS,GAAKg4B,EAAGh4B,EAAS,GAC7Bg4B,EAAGh4B,EAAS,GAAKihB,EAEZ2f,KAAAA,cACH5I,EACAh4B,EACAvE,KAAKglC,gBACLnB,GACAC,GACAC,GACAC,GACAR,IAIFhe,EAAI+W,EAAGh4B,EAAS,GACbA,EAAAA,EAAS,GAAKg4B,EAAGh4B,EAAS,GAC7Bg4B,EAAGh4B,EAAS,GAAKihB,IAClB,CAAA9f,IAAA,gBAAAvC,MAED,SAAcm5B,EAAG/3B,EAAQugC,EAAaM,EAAWC,EAAWC,EAAWC,EAAWC,GAgBhF,IAfA,IAAMjJ,EAAKD,EAGLmJ,EAAUzlC,KAAKykC,SAGjBiB,EAAKnJ,EAAGh4B,GAAUugC,EAAY,GAC9Ba,EAAKpJ,EAAGh4B,EAAS,GAAKugC,EAAY,GAClCc,EAAKrJ,EAAGh4B,EAAS,GAAKugC,EAAY,GAClCe,EAAKtJ,EAAGh4B,EAAS,GAAKugC,EAAY,GAGlCC,EAAQ,EAGHjuB,EAAQ,EAAGA,EAAQ2uB,EAAS3uB,GAAS,EAAG,CAE/C,IAAMgvB,EAAKV,EAAUM,IAAO,IACxBL,EAAWM,IAAO,GAAM,KACxBL,EAAWM,IAAO,EAAK,KACvBL,EAAe,IAALM,GACVf,EAAYC,GACPA,GAAA,EACT,IAAMgB,EAAKX,EAAUO,IAAO,IACxBN,EAAWO,IAAO,GAAM,KACxBN,EAAWO,IAAO,EAAK,KACvBN,EAAe,IAALG,GACVZ,EAAYC,GACPA,GAAA,EACT,IAAMiB,EAAKZ,EAAUQ,IAAO,IACxBP,EAAWQ,IAAO,GAAM,KACxBP,EAAWI,IAAO,EAAK,KACvBH,EAAe,IAALI,GACVb,EAAYC,GACPA,GAAA,EACT,IAAMkB,EAAKb,EAAUS,IAAO,IACxBR,EAAWK,IAAO,GAAM,KACxBJ,EAAWK,IAAO,EAAK,KACvBJ,EAAe,IAALK,GACVd,EAAYC,GACPA,GAAA,EAGJe,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EACAC,EAAAA,EAIP,IAAMH,GACHN,EAAKE,IAAO,KAAO,GACfF,EAAMG,IAAO,GAAM,MAAS,GAC5BH,EAAMI,IAAO,EAAK,MAAS,EAC5BJ,EAAU,IAALK,IACPf,EAAYC,GACPA,GAAA,EACT,IAAMgB,GACHP,EAAKG,IAAO,KAAO,GACfH,EAAMI,IAAO,GAAM,MAAS,GAC5BJ,EAAMK,IAAO,EAAK,MAAS,EAC5BL,EAAU,IAALE,IACPZ,EAAYC,GACPA,GAAA,EACT,IAAMiB,GACHR,EAAKI,IAAO,KAAO,GACfJ,EAAMK,IAAO,GAAM,MAAS,GAC5BL,EAAME,IAAO,EAAK,MAAS,EAC5BF,EAAU,IAALG,IACPb,EAAYC,GACPA,GAAA,EACT,IAAMkB,GACHT,EAAKK,IAAO,KAAO,GACfL,EAAME,IAAO,GAAM,MAAS,GAAOF,EAAMG,IAAO,EAAK,MAAS,EAAKH,EAAU,IAALI,IAC3Ed,EAAYC,GACPA,GAAA,EAGTxI,EAAGh4B,GAAUuhC,EACbvJ,EAAGh4B,EAAS,GAAKwhC,EACjBxJ,EAAGh4B,EAAS,GAAKyhC,EACjBzJ,EAAGh4B,EAAS,GAAK0hC,MAClB1B,GAhM0BpD,IAkM7BoD,GAAQpG,QAAU,EAUL+H,IAAAA,GAAM/E,GAAYnD,cAAcuG,IC9QhC4B,YAAGjG,GAAAx3B,EAAAy9B,EAAAjG,GAAAv3B,IAAAA,EAAAC,EAAAu9B,GAAA,SAAAA,IAAAx9B,OAAApD,OAAA4gC,GAAAx9B,EAAAlG,MAAAzC,KAAAsC,WAAA,OAAAmD,EAAA0gC,IAAS1G,IAErBI,GAAAA,mBAASuG,GAAA19B,EAAA03B,EAAAgG,GAAAr9B,IAAAA,EAAAH,EAAAw3B,GAAA,SAAAA,IAAAr3B,OAAAxD,OAAA66B,GAAAr3B,EAAAtG,MAAAzC,KAAAsC,WA4BV89B,OA5BU36B,EAAA26B,EAAA,CAAA,CAAA16B,IAAA,eAAAvC,MACX,SAAakyB,EAAO9wB,GAClB,IAAM0xB,EAASZ,EAGTqK,EAAS1/B,KAAK2/B,QACZlH,EAAciH,EAAdjH,UACFtqB,EAAKnO,KAAK4/B,IACZyG,EAAUrmC,KAAKsmC,SAGfn4B,IACGm4B,KAAAA,SAAWn4B,EAAGhN,MAAM,GACzBklC,EAAUrmC,KAAKsmC,SAGftmC,KAAK4/B,SAAMp9B,GAEP+jC,IAAAA,EAAYF,EAAQllC,MAAM,GACzBm/B,EAAAA,aAAaiG,EAAW,GAG/BF,EAAQ5N,EAAY,GAAM4N,EAAQ5N,EAAY,GAAK,EAAK,EAGxD,IAAA,IAASj3B,EAAI,EAAGA,EAAIi3B,EAAWj3B,GAAK,EAC3B+C,EAAAA,EAAS/C,IAAM+kC,EAAU/kC,OAEnC4+B,GA5B2B+F,IA8B9BA,GAAIrG,UAAYqG,GAAItG,UCpCb,OAAM2G,GAAY,CACvBzZ,IAAGA,aAGHmU,MAAK,cCCDuF,GAAS,CAEbC,iBAAkB,SAAUC,EAAKjhC,EAAKyI,GAC9By4B,IAAAA,EAAUzQ,GAAI5nB,MAAM7I,GAEpBmhC,EAAS1Q,GAAI5nB,MAAML,GAASC,IAC5BwrB,EAAUxE,GAAUv0B,OAAO,IAAIkJ,WAAW68B,IAC1CG,EAAcZ,GAAI5G,QACtBwC,GAAalhC,OAAO,CAClB2+B,WAAY5F,IAEdiN,EACA,CACEz4B,GAAI04B,EACJvF,KAAM6E,GACNlF,QAASuF,KAGNC,OAAAA,GAAOM,sBAAsBD,IAEtCC,sBAAuB,SAAU1Q,GAM/B,IALA,IAAM50B,EAAI40B,EAAUf,SACdD,EAAQgB,EAAUhB,MAClB/wB,EAAS,IAAIwF,WAAWrI,GAC1BD,EAAI,EACJkB,EAAI,EAEFlB,IAAMC,GADC,CAEX,IAAMulC,EAAI3R,EAAM3yB,KAEhB,GADOlB,EAAAA,MAAY,WAAJwlC,KAAoB,GAC/BxlC,IAAMC,EAAK,MAEf,GADOD,EAAAA,MAAY,SAAJwlC,KAAoB,GAC/BxlC,IAAMC,EAAK,MAEf,GADOD,EAAAA,MAAY,MAAJwlC,KAAoB,EAC/BxlC,IAAMC,EAAK,MACf6C,EAAO9C,KAAY,IAAJwlC,EAEV1iC,OAAAA,GAGT2iC,2BAAmBxxB,EAAYC,EAAYwxB,GACzC,GAAIzxB,EAAW4S,UAAW,CACxB,IAAM3iB,EAAM+P,EAAW8S,SACjB1G,EAAOpM,EAAW4S,UACxB5S,EAAW/O,QAAQ6G,SAAQ,SAACqB,EAAM+b,GAChC,IAAMwc,EAAUtlB,EAAK8I,GACjByc,EAAax4B,EAAKzG,KAChBk/B,EAAgB,GAChBC,EAAgB,GAChBn5B,EAAKg5B,EAAQplB,qBACnB,GAAIolB,EAAQnlB,YAAcmlB,EAAQnlB,WAAWtgB,OACnCsgB,EAAAA,WAAWzU,SAAQ,SAAUpK,GAC7Bd,IAAAA,EAAMc,EAAMgf,iBAAmBhf,EAAMif,qBACrCmlB,EAAaH,EAAWjmC,MAAM,EAAGkB,GACvCglC,EAAc7mC,KAAK+mC,EAAWpmC,MAAM,EAAGgC,EAAMgf,mBAC7CmlB,EAAc9mC,KAAK+mC,EAAWpmC,MAAMgC,EAAMgf,mBAC7BilB,EAAAA,EAAWjmC,MAAMkB,UAE3B,CACL,IAAMA,EAAMuM,EAAKvG,KACjBg/B,EAAc7mC,KAAK4mC,EAAWjmC,MAAM,EAAG,IACvCmmC,EAAc9mC,KAAK4mC,EAAWjmC,MAAM,EAAGkB,IAC1B+kC,EAAAA,EAAWjmC,MAAMkB,GAE1BmlC,IAAAA,EAAa,IAAIla,GACZoC,EAAAA,MAAKjtB,MAAhB+kC,EAAoBF,GACpB,IAAIG,EAAYP,EAAwBA,EAAsBM,EAAWt9B,OAAQxE,EAAKyI,GAAMs4B,GAAOC,iBAAiBc,EAAWt9B,OAAQxE,EAAKyI,GACtIjE,EAAS,IAAIojB,GACL/f,EAAAA,SAAQ,SAACm6B,EAAclmC,GAC7BmmC,IAAAA,EAAmBL,EAAc9lC,GAAGE,OACpCkmC,EAAsBH,EAAUtmC,MAAM,EAAGwmC,GAC/Cz9B,EAAOwlB,MAAMgY,GACbx9B,EAAOwlB,MAAMkY,GACDH,EAAAA,EAAUtmC,MAAMwmC,MAEnBjhC,EAAAA,QAAQikB,GAAOxiB,KAAO+B,EAAOA,UAI5C,GAAIwL,EAAWmU,UAAW,CACxB,IAAMnkB,EAAMgQ,EAAW6S,SACjB1G,EAAOnM,EAAWmU,UACxBnU,EAAWhP,QAAQ6G,SAAQ,SAACqB,EAAM+b,GAChC,IAAMwc,EAAUtlB,EAAK8I,GACfkd,EAAMX,EAAwBA,EAAsBt4B,EAAKzG,KAAMzC,EAAKyhC,EAAQplB,sBAAwB0kB,GAAOC,iBAAiB93B,EAAKzG,KAAMzC,EAAKyhC,EAAQplB,sBAC/Irb,EAAAA,QAAQikB,GAAOxiB,KAAO0/B,QCvF5BC,GAAU,WAMrB,SAAAA,EAAaC,EAAgBC,EAAgBryB,EAAe2d,GAAS,IAAA5c,EAAA1W,KAAAuF,OAAAuiC,0BALrD,2BACA,+BACI,uCACQ,GAGrBryB,KAAAA,WAAa,IAAInQ,GACjBoQ,KAAAA,WAAa,IAAIvO,GACjBwO,KAAAA,cAAgBA,GAAiB,IAAI3M,GACrCypB,KAAAA,IAAM,IAAIvnB,GAAO,cAAcooB,IAAWA,EAAQI,UAAWJ,EAAQI,SAExDqU,GAAAA,EAAex6B,SAAQ,SAAAqB,GAAQq5B,IAAAA,GAC/CA,EAAAvxB,EAAKwxB,eAAc1nC,KAAIiC,MAAAwlC,EAAA9Z,EAAIvf,EAAKyD,YAEhB21B,GAAAA,EAAez6B,SAAQ,SAAAqB,GAAQu5B,IAAAA,GAC/CA,EAAAzxB,EAAK0xB,eAAc5nC,KAAIiC,MAAA0lC,EAAAha,EAAIvf,EAAKyD,YAsOnCy1B,OApOAriC,EAAAqiC,EAAA,CAAA,CAAApiC,IAAA,eAAAvC,MAED,SAAcgjB,GACZ,IAAKA,EACG,MAAA,IAAI/c,MAAM,oBAOlB,GALKpJ,KAAKyV,WAAWtP,OAAUnG,KAAK0V,WAAWvP,QAC7CyX,GAAUyqB,YAAYliB,EAAMnmB,KAAKyV,WAAYzV,KAAK0V,YAC7C2S,KAAAA,UAAYroB,KAAKyV,WAAW4S,UAC5BwB,KAAAA,UAAY7pB,KAAK0V,WAAWmU,YAE9B7pB,KAAKooC,cAAc1mC,SAAW1B,KAAKkoC,cAAcxmC,OAAQ,CACtDmY,IAAAA,EAAM+D,GAAU0qB,cAAcniB,GACpC,IAAKtM,EAAW,MAAA,IAAIzQ,MAAM,sCACrB8+B,KAAAA,cAAgBruB,EAAImR,cAAgB,GACpCod,KAAAA,cAAgBvuB,EAAIoR,cAAgB,MAE5C,CAAAvlB,IAAA,QAAAvC,MAED,SAAOgF,EAAMogC,EAAWC,EAAiBC,EAAiBtiB,GACxDnmB,KAAK0oC,aAAaviB,GAElB,IAMI/M,EACAmuB,EACAoB,EARElzB,EAAazV,KAAKyV,WAClBC,EAAa1V,KAAK0V,WAQxB,GANAD,EAAW/O,QAAU,GACrBgP,EAAWhP,QAAU,GAKjB8hC,EAAiB,CAGVhnC,IAFLonC,IAAAA,EACAp1B,EAAU,EACLhS,EAAIgnC,EAAgB,GAAI/mC,EAAI+mC,EAAgB,GAAIhnC,GAAKC,EAAGD,IAAK,CAEpE,KADA4X,EAASpZ,KAAKkoC,cAAc1mC,IAE1B,MAAM,IAAI4H,MAAK,6BAAA/H,OAA8BG,IAE/CmnC,EAAYvvB,EAAO7U,OAASgkC,EAC5BhB,EAAap/B,EAAK4B,SAAS4+B,EAAWA,EAAYvvB,EAAO/Q,OACzDugC,EAAQ,IAAIlhC,GAAY0R,EAAOrS,KAAOqS,EAAOtS,IAAKsS,EAAOtS,MACnDd,SAAWoT,EAAOpT,SACxB4iC,EAAMnrB,MAAQrE,EAAOqE,MACjBrE,EAAOtR,UAAU8gC,EAAMtrB,gBAG3B,IAFA,IAAIpR,EAAQ,EACN7J,EAAMklC,EAAW7lC,OAAS,EACzBwK,EAAQ7J,GACHuL,EAAAA,GAAU25B,EAAYr7B,GACvBA,GAAA,EACT08B,EAAMjhC,MAAMnH,KAAK+mC,EAAWx9B,SAASmC,EAAOA,EAAQsH,IAC3CA,GAAAA,EAEA9M,EAAAA,QAAQlG,KAAKooC,GAGf3iC,EAAAA,oBAAsBwP,EAAW/O,QAAQ,GAAGI,IAEzD,GAAI2hC,EAAiB,CACVjnC,IAAAA,IAAAA,EAAIinC,EAAgB,GAAIhnC,EAAIgnC,EAAgB,GAAIjnC,GAAKC,EAAGD,IAAK,CAEpE,KADA4X,EAASpZ,KAAKooC,cAAc5mC,IAE1B,MAAM,IAAI4H,MAAK,6BAAA/H,OAA8BG,IAE/CmnC,EAAYvvB,EAAO7U,OAASgkC,EAC5BhB,EAAap/B,EAAK4B,SAAS4+B,EAAWA,EAAYvvB,EAAO/Q,MAC9C3B,EAAAA,QAAQlG,KAAK,IAAI0H,GAAYkR,EAAOtS,IAAKygC,EAAYnuB,EAAOpT,WAE9DC,EAAAA,oBAAsByP,EAAWhP,QAAQ,GAAGI,IAGlD,MAAA,CACL2O,WAAAA,EACAC,WAAAA,EACAC,cAAe3V,KAAK2V,iBAEvB,CAAAjQ,IAAA,YAAAvC,MAED,SAAWgF,EAAMogC,EAAWC,EAAiBC,EAAiBtiB,EAAMmC,EAAQC,EAAU2e,GAMpF,GALAlnC,KAAK0oC,aAAaviB,GAElBnmB,KAAKyV,WAAW6S,OAASA,EACzBtoB,KAAK0V,WAAW4S,OAASA,EAErBtoB,KAAK6oC,mBAAqB7oC,KAAK6oC,kBAAkBvgC,WAAa,GAAKigC,EAAYvoC,KAAK8oC,2BAA6BP,GAAavoC,KAAK8oC,0BAA4B9oC,KAAK6oC,kBAAkBvgC,WAExL,IADA,IAAIygC,EAAS,EACNA,EAzGa,IA0Gd,IACF,IAAM7+B,EAASlK,KAAK6oC,kBAAkB9+B,SAAS,EAAGw+B,EAAYvoC,KAAK8oC,2BAC7DE,EAAO,IAAIl/B,WAAW3B,EAAKG,WAAa4B,EAAO5B,YAChDxD,EAAAA,IAAIoF,EAAQ,GACjB8+B,EAAKlkC,IAAI,IAAIgF,WAAW3B,GAAO+B,EAAO5B,YAC/B0gC,EAAAA,EACPT,GAAar+B,EAAO5B,WACpBtI,KAAK6oC,kBAAoB,KACzB7oC,KAAK8oC,0BAA4B,EAEjC,YACOG,GACP,KAAIF,EAtHY,IAyHd,MAAM,IAAI3/B,MAAM,yBAA2B6/B,EAAEC,cAF7CH,IAOR,IAQI3vB,EACAmuB,EACAoB,EAVElzB,EAAazV,KAAKyV,WAClBC,EAAa1V,KAAK0V,WAExBD,EAAW/O,QAAU,GACrBgP,EAAWhP,QAAU,GACrB+O,EAAW4S,UAAY,KACvB3S,EAAWmU,UAAY,KAKvB,IAAIsf,EAAe,EACfC,EAAe,EACnB,GAAIppC,KAAKkoC,cAAcxmC,OAAS,GAAK8mC,EAAgB9mC,OAAS,EAAG,CAG/D,IAFIknC,IAAAA,EACE95B,EAAM3G,EAAKG,WAAaigC,EACrB/mC,EAAIgnC,EAAgB,GAAIhnC,GAAKgnC,EAAgB,GAAIhnC,IAAK,CAE7D,KADA4X,EAASpZ,KAAKkoC,cAAc1mC,IAE1B,MAAM,IAAI4H,MAAK,6BAAA/H,OAA8BG,IAE3C4X,EAAO7U,QAAUgkC,GAAanvB,EAAO7U,OAAS6U,EAAO/Q,MAAQyG,IAE/Dq6B,GADAR,EAAYvvB,EAAO7U,OAASgkC,GACDnvB,EAAO/Q,KACrBF,EAAAA,EAAK4B,SAAS4+B,EAAWQ,IACtCP,EAAQ,IAAIlhC,GAAY0R,EAAOrS,KAAOqS,EAAOtS,IAAKsS,EAAOtS,MACnDd,SAAWoT,EAAOpT,SAExB4iC,EAAMnrB,MAAQrE,EAAOqE,MACrBmrB,EAAMxgC,aAAegR,EAAOuR,MAExBvR,EAAOtR,UAAU8gC,EAAMtrB,gBAC3BsrB,EAAMzgC,KAAOo/B,EACbqB,EAAMvgC,KAAO+Q,EAAO/Q,KAET3B,EAAAA,QAAQlG,KAAKooC,IAGxBnzB,EAAW/O,QAAQhF,OAAS,IACnB+b,EAAAA,MAAQhI,EAAW/O,QAAQ,GAAG+W,MAC9BxX,EAAAA,oBAAsBwP,EAAW/O,QAAQ,GAAGI,IACvD2O,EAAW4zB,SAAW5zB,EAAW/O,QAAQ,GAAGK,IAAM0O,EAAWvP,UAClDojC,EAAAA,OAAS7zB,EAAW/O,QAAQ+O,EAAW/O,QAAQhF,OAAS,GAAGqF,IAAM0O,EAAWvP,UAEnFlG,KAAKqoB,YACP5S,EAAW4S,UAAYroB,KAAKqoB,UAAUlnB,MAAMsU,EAAW/O,QAAQ,GAAG0B,aAAcqN,EAAW/O,QAAQ,GAAG0B,aAAeqN,EAAW/O,QAAQhF,QACxI+T,EAAW8S,SAAWA,IAI5B,GAAIvoB,KAAKooC,cAAc1mC,OAAS,GAAK+mC,EAAgB/mC,OAAS,EAAG,CAC/D,IAAA,IAASF,EAAIinC,EAAgB,GAAIjnC,GAAKinC,EAAgB,GAAIjnC,IAAK,CAE7D,KADA4X,EAASpZ,KAAKooC,cAAc5mC,IAE1B,MAAM,IAAI4H,MAAK,6BAAA/H,OAA8BG,IAE3C4X,EAAO7U,QAAUgkC,GAAanvB,EAAO7U,OAAS6U,EAAO/Q,MAAQF,EAAKG,WAAaigC,IAEjFa,GADAT,EAAYvvB,EAAO7U,OAASgkC,GACDnvB,EAAO/Q,KACrBF,EAAAA,EAAK4B,SAAS4+B,EAAWS,GAI3B1iC,EAAAA,QAAQlG,KAAK,IAAI0H,GAAYkR,EAAOtS,IAAKygC,EAAYnuB,EAAOpT,SAAUoT,EAAOuR,SAGxFjV,EAAWhP,QAAQhF,OAAS,IAC9BgU,EAAW+H,MAAQ/H,EAAWhP,QAAQ,GAAG+W,OAAShI,EAAWgI,MAClDxX,EAAAA,oBAAsByP,EAAWhP,QAAQ,GAAGI,IACvD4O,EAAW2zB,SAAW3zB,EAAWhP,QAAQ,GAAGK,IAAM2O,EAAWxP,UAClDojC,EAAAA,OAAS5zB,EAAWhP,QAAQgP,EAAWhP,QAAQhF,OAAS,GAAGqF,IAAM2O,EAAWxP,UAEnFlG,KAAK6pB,YACPnU,EAAWmU,UAAY7pB,KAAK6pB,UAAU1oB,MAAMuU,EAAWhP,QAAQ,GAAG0B,aAAcsN,EAAWhP,QAAQ,GAAG0B,aAAesN,EAAWhP,QAAQhF,QACxIgU,EAAW6S,SAAWA,IAIvBghB,KAAAA,YAAY9zB,EAAYC,EAAYwxB,GAEzC,IADA,IAAI1zB,EAAU,EACLhS,EAAI,EAAGA,EAAIiU,EAAW/O,QAAQhF,OAAQF,IAI7C,IAHA,IAAI0K,EAAQ,EACNq7B,EAAa9xB,EAAW/O,QAAQlF,GAAG2G,KACnC9F,EAAMklC,EAAW7lC,OAAS,EACzBwK,EAAQ7J,GACHuL,EAAAA,GAAU25B,EAAYr7B,GACvBA,GAAA,EACExF,EAAAA,QAAQlF,GAAGmG,MAAMnH,KAAK+mC,EAAWx9B,SAASmC,EAAOA,EAAQsH,IAC3DA,GAAAA,EASN,OANPxT,KAAK6oC,kBAAoB1gC,EAAK4B,SAASJ,KAAKmK,IAAIq1B,EAAcC,IAC1DppC,KAAK6oC,kBAAkBvgC,WAAa,EACtCtI,KAAK8oC,0BAA4BP,EAAYpgC,EAAKG,WAAatI,KAAK6oC,kBAAkBvgC,WAEtFtI,KAAK8oC,0BAA4B,EAE5B,CACLrzB,WAAAA,EACAC,WAAAA,EACAC,cAAe3V,KAAK2V,iBAEvB,CAAAjQ,IAAA,QAAAvC,MAED,WACEnD,KAAKkoC,cAAgB,GACrBloC,KAAKooC,cAAgB,GACrBpoC,KAAK6oC,kBAAoB,KACzB7oC,KAAK8oC,0BAA4B,EACjC9oC,KAAKyV,WAAW8F,QAChBvb,KAAK0V,WAAW6F,QAChBvb,KAAK2V,cAAc4F,UACpB,CAAA7V,IAAA,cAAAvC,MAED,SAAasS,EAAYC,EAAYwxB,GAC/BzxB,EAAW6S,QAAU5S,EAAW4S,QAC7B2e,GAAAA,kBAAkBxxB,EAAYC,EAAYwxB,MAClD,CAAA,CAAAxhC,IAAA,QAAAvC,MAED,SAAcgF,GACLyV,OAAAA,GAAUpC,MAAMrT,OACxB2/B,EAtPoB,GCHvB/oB,GAAe,SCHFuO,GAAM,WAAA,SAAAA,IAAA/nB,OAAA+nB,GAmIhBA,OAnIgBA,EAAAA,EAAA,KAAA,CAAA,CAAA5nB,IAAA,QAAAvC,MAKjB,SAAcqmC,GACR,OAACA,GAAQA,EAAI9nC,OAGE,IAAf8nC,EAAI9nC,QAAgB8nC,EAAI16B,IAAI,GAAK06B,EAAIt9B,MAAM,GAAK,MAEjC,IAAfs9B,EAAI9nC,QAAgB8nC,EAAIt9B,MAAM,GAAK,EAF0B,EAI1Ds9B,EAAIt9B,MAAM,GAPe,IAUlC,CAAAxG,IAAA,MAAAvC,MAIA,SAAYqmC,GACN,OAACA,GAAQA,EAAI9nC,OAGE,IAAf8nC,EAAI9nC,QAAgB8nC,EAAI16B,IAAI,GAAK06B,EAAIt9B,MAAM,GAAK,KAAa,EAE1Ds9B,EAAI16B,IAAI06B,EAAI9nC,OAAS,GALI,IAQlC,CAAAgE,IAAA,MAAAvC,MAIA,SAAY2f,GACV,GAAKA,EACD,IACF,OAAOA,EAAE2mB,eACFzW,OAKX,CAAAttB,IAAA,UAAAvC,MAKA,SAAgBqmC,EAAKE,GACf,IAACF,IAAQA,EAAI9nC,OAAQ,MAAO,GAGhC,IADA,IAAMioC,EAAU,GACPnoC,EAAI,EAAGC,EAAI+nC,EAAI9nC,OAAQF,EAAIC,EAAGD,IAAK,CAC1C,IAAMooC,EAASD,EAAQjoC,OACnB,GAACkoC,GAAWF,EAET,CACCziC,IAAAA,EAAO0iC,EAAQC,EAAS,GACxBC,EAAU5iC,EAAK,GAEjBiF,GADUs9B,EAAIt9B,MAAM1K,GACZqoC,GAAWH,EAAS,CACxB56B,IAAAA,EAAM06B,EAAI16B,IAAItN,GAChBsN,EAAM+6B,IACR5iC,EAAK,GAAK6H,QAGZ66B,EAAQnpC,KAAK,CAACgpC,EAAIt9B,MAAM1K,GAAIgoC,EAAI16B,IAAItN,UAXtCmoC,EAAQnpC,KAAK,CAACgpC,EAAIt9B,MAAM1K,GAAIgoC,EAAI16B,IAAItN,KAejCmoC,OAAAA,IAGT,CAAAjkC,IAAA,cAAAvC,MAKA,SAAoBwmC,GACd,OAACA,GAAYA,EAAQjoC,OAClBioC,EAAQx8B,QAAO,SAACqB,EAAGnB,GAAOmB,OAAAA,GAAMnB,EAAE,GAAKA,EAAE,MAAM,GADd,IAI1C,CAAA3H,IAAA,OAAAvC,MAOA,SAAaqmC,GAAKtd,IAAAA,EAAG5pB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGonC,EAAOpnC,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAC/B,IAACknC,IAAQA,EAAI9nC,OAAe,MAAA,CAAEwK,MAAO,EAAG4C,IAAK,EAAG66B,QAAS,IAW7D,IATA,IAAIz9B,EAAQ,EACR4C,EAAM,EACN6b,EAAQ,EACRmf,EAAY,EACZC,EAAU,EACVC,EAAY,EACZC,EAAU,EACRN,EAAUrc,EAAOqc,QAAQH,EAAKE,GAE3BloC,EAAI,EAAGC,EAAIkoC,EAAQjoC,OAAQF,EAAIC,EAAGD,IAAK,CAC9C,IAAMoN,EAAO+6B,EAAQnoC,GACrB,GAAI0qB,EAAMwd,GAAW96B,EAAK,IAAMsd,GAAOtd,EAAK,GAC1C1C,EAAQ0C,EAAK,GACbE,EAAMF,EAAK,GACHpN,EAAAA,MACC0qB,CAAAA,GAAAA,EAAMwd,EAAU96B,EAAK,GAAI,CAClCk7B,EAAYl7B,EAAK,GACjBm7B,EAAUn7B,EAAK,GACf,MACSsd,EAAMwd,EAAU96B,EAAK,KAC9Bo7B,EAAYp7B,EAAK,GACjBq7B,EAAUr7B,EAAK,KAIZ,MAAA,CACL1C,MAAAA,EACA4C,IAAAA,EACA6b,MAAAA,EACAgf,QAAAA,EACAG,UAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,YAAahe,EACbie,OAAQje,EAAMhgB,EACd4G,UAAWhE,EAAMA,EAAMod,EAAM,EAC7BxqB,OAAQ4rB,EAAOhqB,aAAegqB,EAAOhqB,YAAYqmC,QAEpDrc,EAnIgB,GCANjhB,GAA8B,oBAAXC,OCAnB89B,GAAM,CACjBC,SAAU,WACVC,QAAS,UACTC,gBAAiB,kBACjBC,kBAAkB,oBAClBC,iBAAkB,mBAClBC,8BAA8B,gCAC9BC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,IAAK,MACLC,MAAO,QACPC,QAAQ,UAERC,UAAW,CACTC,IAAK,MACLC,IAAK,MACLxd,IAAK,MACLyd,KAAM,OACNC,WAAY,aACZC,kBAAmB,oBACnBC,UAAW,YACXC,SAAU,WACVC,OAAQ,SACRC,KAAK,OACLC,QAAQ,UACRC,eAAe,iBACfC,WAAW,aACXC,WAAW,aACXC,KAAK,OACLC,iBAAiB,mBACjBC,kBAAkB,oBAClBC,sBAAuB,wBACvBC,kBAAkB,oBAClBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,4BAA4B,8BAC5BC,8BAA8B,gCAC9BC,oBAAoB,wBAIXC,IAAQjnC,EAAAknC,GAAAlnC,GAClB4kC,GAAIC,SAAW,CACdc,IAAK,KACLO,KAAK,OACNlmC,EAAAknC,GACAtC,GAAIE,QAAU,MAAI9kC,EAAAknC,GAClBtC,GAAIG,gBAAkB,MAAI/kC,EAAAknC,GAC1BtC,GAAII,kBAAmB,MAAIhlC,EAAAknC,GAC3BtC,GAAIK,iBAAkB,MAAIjlC,EAAAknC,GAC1BtC,GAAIM,8BAA+B,MAAIllC,EAAAknC,GACvCtC,GAAIO,MAAQ,CACXO,IAAK,KACLC,IAAK,KACLxd,IAAK,KACLyd,KAAM,KACNW,KAAM,OACPvmC,EAAAknC,GACAtC,GAAIQ,MAAQ,CACXQ,KAAM,KACNzd,IAAK,OACNnoB,EAAAknC,GACAtC,GAAIS,MAAQ,CACXsB,kBAAmB,KACnBC,kBAAmB,KACnBC,iBAAkB,KAClBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,oBAAqB,KACrBnB,WAAY,KACZC,kBAAmB,KACnBC,UAAW,KACXC,SAAU,KACVK,WAAW,KACXC,WAAW,OACZtmC,EAAAknC,GACAtC,GAAIU,IAAK,CACRa,QAAQ,KACRC,eAAe,OAChBpmC,EAAAknC,GACAtC,GAAIW,MAAQ,KAAIvlC,EAAAknC,GAChBtC,GAAIY,QAAS,CACZgB,iBAAiB,KACjBC,kBAAkB,KAClBC,sBAAsB,OACvBQ,IAKUC,YAAcC,GAAAlkC,EAAAikC,EAAAC,GAAAjkC,IAAAA,EAAAC,EAAA+jC,GACzB,SAAAA,EAAaz9B,EAAM29B,EAASC,EAAQ19B,EAAS29B,GAAKr2B,IAAAA,EAU/CA,OAV+CnR,OAAAonC,IAChDhkC,EAAAA,EAAAzH,KAAM6rC,KAAAA,IAAOD,MAAAA,OAAAA,EAAAA,EAAQnT,WAChBqT,UAAY99B,IAASk7B,GAAIG,gBAAkBH,GAAIE,QAAUp7B,EAC9DwH,EAAKu2B,YAAcH,EACnBp2B,EAAK0R,IAAMhZ,EACXsH,EAAKw2B,UAAYT,GAASv9B,GAAM29B,IAAYJ,GAASv9B,GACrDwH,EAAKwyB,aAAexyB,EAAKijB,QACpBjjB,EAAKw2B,YACRx2B,EAAKs2B,UAAY5C,GAAIW,MAChBmC,EAAAA,UAAYT,GAAS/1B,EAAKs2B,YAChCt2B,EA2BFi2B,OA1BAA,EAAAA,EAAA,KAAA,CAAA,CAAAjnC,IAAA,SAAAvC,MAED,SAAe+L,EAAM29B,EAASC,EAAQ19B,EAAS29B,GAC7C,OAAI79B,aAAgBy9B,EACXz9B,GACEA,aAAgB9F,QAChB8F,EAAAA,EACFA,EAAA,IAGJA,IAAMA,EAAOk7B,GAAIW,OAEf,IAAI4B,EAAez9B,EAAM29B,EAASC,EAAQ19B,EAAS29B,MAC3D,CAAArnC,IAAA,UAAAvC,MAED,SAAgB6vB,GAAOma,IAAAA,EACrB,OAAO,IAAIR,EACT3Z,MAAAA,GAAAA,EAAOoa,UAAYhD,GAAIG,gBAAkBH,GAAIE,QAC7C,KACAtX,aAAiB5pB,MAAQ4pB,EAAQ,KACjC,CACEqa,IAAKra,MAAAA,OAAAA,EAAAA,EAAOqa,IACZC,SAAUta,MAAAA,OAAAA,EAAAA,EAAOsa,SACjBC,SAAUva,MAAAA,GAAe,QAAVma,EAALna,EAAOsa,gBAAQ,IAAAH,SAAfA,EAAiBK,aAGhCb,GAtCiCvjC,EAAAA,QC1FvBqkC,GAAgB,CAC3BC,MAAS,EACTC,IAAO,EACPC,KAAQ,EACRC,MAAS,GAGLC,GAAc,CAAC,UAAW,SAAU,SAAU,YAAY,OAAQ,OAAO,UAClE5iC,GAAM,WACjBA,SAAAA,EAAajK,EAAKsG,GAAQhC,OAAA2F,GACxBlL,KAAKiB,KAAOA,GAAQ,GACpBjB,KAAKmL,QAAO9J,IAAAA,OAAOrB,KAAKiB,KAAO,KAC/BjB,KAAK+tC,eAAgBxmC,MAAAA,OAAM,EAANA,EAAQwmC,gBAAiB,EAC9C/tC,KAAKguC,YAAazmC,MAAAA,OAAM,EAANA,EAAQymC,aAPT,OAQjBhuC,KAAKiuC,QAAU,EACfjuC,KAAKkuC,aAAe,GAwErBhjC,OAvEAzF,EAAAyF,EAAA,CAAA,CAAAxF,IAAA,QAAAvC,MAED,WAAgB,IAAAiI,IAAAA,EAAA7H,EAAAjB,UAAAZ,OAANU,EAAIR,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJrB,EAAIqB,GAAAnB,UAAAmB,GACP0qC,KAAAA,SAAQ1rC,MAAbzC,KAAI,CAAUytC,GAAcC,OAAKrsC,OAAIe,IACjC8I,EAAOG,WACXD,EAAAE,SAAQinB,MAAK9vB,MAAA2I,EAAA,CAACpL,KAAKmL,QAASijC,MAAS/sC,OAAKe,MAC3C,CAAAsD,IAAA,MAAAvC,MAED,WAAc,IAAAqvB,IAAAA,EAAAhF,EAAAlrB,UAAAZ,OAANU,EAAIR,IAAAA,MAAA4rB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrrB,EAAIqrB,GAAAnrB,UAAAmrB,GACL0gB,KAAAA,SAAQ1rC,MAAbzC,KAAI,CAAUytC,GAAcE,KAAGtsC,OAAIe,IAC/B8I,EAAOG,WACXmnB,EAAAlnB,SAAQmnB,IAAGhwB,MAAA+vB,EAAA,CAACxyB,KAAKmL,QAASijC,MAAS/sC,OAAKe,MACzC,CAAAsD,IAAA,OAAAvC,MAED,WAAe,IAAAuvB,IAAAA,EAAAC,EAAArwB,UAAAZ,OAANU,EAAIR,IAAAA,MAAA+wB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxwB,EAAIwwB,GAAAtwB,UAAAswB,GACNub,KAAAA,SAAQ1rC,MAAbzC,KAAI,CAAUytC,GAAcG,MAAIvsC,OAAIe,IAChC8I,EAAOG,WACXqnB,EAAApnB,SAAQC,KAAI9I,MAAAiwB,EAAA,CAAC1yB,KAAKmL,QAASijC,MAAS/sC,OAAKe,MAC1C,CAAAsD,IAAA,QAAAvC,MAED,WAAgB,IAAA0vB,IAAAA,EAAAC,EAAAxwB,UAAAZ,OAANU,EAAIR,IAAAA,MAAAkxB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ3wB,EAAI2wB,GAAAzwB,UAAAywB,GACPob,KAAAA,SAAQ1rC,MAAbzC,KAAI,CAAUytC,GAAcI,OAAKxsC,OAAIe,IACjC8I,EAAOG,WACXwnB,EAAAvnB,SAAQ0nB,MAAKvwB,MAAAowB,EAAA,CAAC7yB,KAAKmL,QAASijC,MAAS/sC,OAAKe,MAC3C,CAAAsD,IAAA,WAAAvC,MAED,SAAU4qC,GACR,KAAIA,EAAgB/tC,KAAK+tC,eAAzB,CACA,IAAIM,EAAO,GACP,IAAA,IAAA,IAAAC,EAAAhsC,UAAAZ,OAHsB6sC,MAAO3sC,MAAA0sC,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAlsC,GAAAA,UAAAksC,GAI/B,IAAMC,EAAaF,EAAQ5/B,KAAK,SAAAC,GAAI,OAAI8/B,GAAQ9/B,MAChDy/B,EAAOruC,KAAKmL,QAAUijC,KAAaO,KAAKvY,UAAUqY,SAC3CxF,GACP,OAME,GAJA8E,GAAiB/tC,KAAK+tC,gBACxB/tC,KAAKiuC,SAAWI,EAAK3sC,OAChBwsC,KAAAA,aAAa1tC,KAAK6tC,IAErBruC,KAAKiuC,QAAUjuC,KAAKguC,WAAY,CAC5BY,IAAAA,EAAS5uC,KAAKkuC,aAAax+B,QACjC1P,KAAKiuC,SAAWW,EAAOltC,WAE1B,CAAAgE,IAAA,cAAAvC,MAED,WACE,IAAMorC,EAAUvuC,KAAKkuC,aAAajiC,KAAK,MAEhCsiC,OADPvuC,KAAKub,QACEgzB,IACR,CAAA7oC,IAAA,QAAAvC,MAED,WACEnD,KAAKkuC,aAAe,GACpBluC,KAAKiuC,QAAU,IAChB,CAAAvoC,IAAA,QAAAvC,MAED,WAAgB8vB,IAAAA,EACV/nB,EAAOG,WACH6nB,QAAAA,MAAMlzB,KAAKmL,UACnB8nB,EAAA3nB,SAAQ6nB,MAAK1wB,MAAAwwB,EAAA3wB,WACbgJ,QAAQ8nB,cACT,CAAA1tB,IAAA,cAAAvC,MAYD,SAAaqH,GACXxK,KAAK+tC,cAAgBvjC,KACtB,CAAA,CAAA9E,IAAA,SAAAvC,MAVD,WACE+H,EAAOG,UAAW,IACnB,CAAA3F,IAAA,UAAAvC,MAED,WACE+H,EAAOG,UAAW,MACnBH,EA/EgB,GAqFnB,SAASkjC,KACA,OAAA,IAAIrzB,MAAO8zB,iBAGpB,SAASC,GAAatkC,GAChBukC,GAAe,WAAfA,EAAOvkC,GACFA,OAAAA,EAEHwkC,IAAAA,EAAUzvC,OAAOC,UAAUyO,SAAS/M,KAAKsJ,GAAKrJ,MAAM,GAAK,GACvD6tC,OAAAA,GACD,IAAA,QACA,IAAA,aACA,IAAA,cAEIA,OAAAA,EAAU,IAAMxkC,EAAI9I,OAAS,IACjC,IAAA,SACI,MAAA,KAAA,QAEAstC,OAAAA,GAIJN,SAAAA,GAASzrC,EAAKgsC,EAAUtiB,GAC1BA,IAAeA,EAAA,GACfsiB,IAAqBA,EAAA,GAC1B,IAAM3qC,EAAS,GAEf,IAAKrB,GAAsB,WAAf8rC,EAAO9rC,GACVA,OAAAA,EAGH+rC,IAAAA,EAAUzvC,OAAOC,UAAUyO,SAAS/M,KAAK+B,GAAK9B,MAAM,GAAK,GAC/D,IAAK2sC,GAAYhhC,SAASkiC,GACjBA,OAAAA,EAGT,KAAIriB,EAAQsiB,GAAZ,CAKA,IAAA,IAAWvpC,KAAOzC,EACZ1D,OAAOC,UAAUC,eAAeyB,KAAK+B,EAAKyC,KACxCinB,IAAUsiB,EACLvpC,EAAAA,GAAOopC,GAAY7rC,EAAIyC,IACD,WAApBqpC,EAAO9rC,EAAIyC,IACpBpB,EAAOoB,GAAOgpC,GAAQzrC,EAAIyC,GAAMupC,EAAUtiB,EAAQ,GAElDroB,EAAOoB,GAAOzC,EAAIyC,IAIjBpB,OAAAA,GClJF,SAAS4qC,KACd,IAAIC,EAAKC,EACHC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAC9BD,EAAAA,EACAC,EAAAA,KAWDH,OATPA,EAAQI,MAAO,EACfJ,EAAQE,QAAU,WAETJ,OADPE,EAAQI,MAAO,EACRN,EAAG1sC,WAAA,EAAAH,YAEZ+sC,EAAQG,OAAS,WAERJ,OADPC,EAAQI,MAAO,EACRL,EAAG3sC,WAAA,EAAAH,YAEL+sC,EAGF,SAASjB,KACV,IACF,OAAO1/B,SAASghC,YAAYC,MAAO,UAC5B1G,GACA,OAAA,IAAIluB,MAAO60B,WDbT1kC,EAAAA,GAAM,YAuEC,GCrDb,IAAM2kC,GACF,SAAE5sC,GACL,IACK0rC,OAAAA,KAAKvY,UAAUnzB,SACfgmC,GACA,MAAA,KCzBb,SAAS6G,KAAgBC,IAAAA,IAASztC,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,KAAAA,UAAA,GAC5B,IACF,OAAK+J,GAED0jC,GAA2C,oBAAvBC,mBAA2CA,mBAE5D1jC,OAAO2jC,YAJS,WAKhBhH,KAGX,SAASiH,GAAOC,GACd,MAAO,uBAAuBvjC,KAAKrN,OAAOC,UAAUyO,SAAS/M,KAAKivC,IAyBpE,IAAMC,GACI,eADJA,GAEI,eAFJA,GAGY,iBAeLC,GAAG,WA2DdA,SAAAA,EAAaC,EAAO/oC,GAAQ,IAAAiQ,EAAAxX,KAAAuF,OAAA8qC,kBAjCpB,2BAGM,MAAI7qC,EAAAxF,KAAA,eAEHkvC,MAAqB1pC,gBAEpB5E,OAAAA,OAAO,OAAK4E,uBAEL5E,OAAAA,OAAO,OAAK4E,EAAAxF,KAAA,eAEpB,iBAET,kBAEE,oBAEE,uBAEA,oBACH,kCA8Ga,WACbuwC,EAAAA,QAAQhe,MAAM,+CAMH,WACXge,EAAAA,QAAQhe,MAAM,mBACpB/sB,EAAAxF,KAAA,kBA8WgB,SAACkP,GACVshC,IAAAA,EAAQh5B,EAAKi5B,OAAOvhC,GAC1B,GAAIshC,EAAO,CACT,IAAME,EAAKF,EAAM,GAIjB,IAHME,MAAAA,OAAAA,EAAAA,EAAIC,UAAWP,IACnBI,EAAM9gC,QAEJghC,EAAI,CAAAE,IAAAA,EACAC,EAAWzC,KAAY52B,EAAKs5B,MAClCt5B,EAAK+4B,QAAQhe,MAAKlxB,aAAAA,OAAc6N,EAAI,KAAA7N,OAAIqvC,EAAGC,OAAM,KAAKd,GAjkB9D,SAAwBpG,GACtB,IAAMsH,EAAS,GAEf,GAAItH,aAAoBuH,WACtB,IAAA,IAASxvC,EAAI,EAAGA,EAAIioC,EAAS/nC,OAAQF,IACnCuvC,EAAOvwC,KAAK,CACV0L,MAAOu9B,EAASv9B,MAAM1K,GACtBsN,IAAK26B,EAAS36B,IAAItN,KAIjBuvC,OAAAA,EAsjBwEE,CAAsC,QAAzBL,EAACp5B,EAAK05B,cAAchiC,UAAnB0hC,IAAwBA,OAAxBA,EAAAA,EAA0BnH,WAAYoH,EAAUH,EAAG5wC,SAC1I4wC,EAAGrB,QAAQE,QAAQ,CAACtuC,KAAMyvC,EAAGC,OAAQ7wC,QAAS4wC,EAAG5wC,QAAS+wC,SAAAA,IAC1Dr5B,EAAK25B,YAAYjiC,QAGtB1J,EAEkBxF,KAAA,oBAAA,SAACkP,EAAM/O,GAClBqwC,IAAAA,EAAQh5B,EAAKi5B,OAAOvhC,GAC1B,GAAIshC,EAAO,CACT,IAAME,EAAKF,EAAM,GACbE,IACFl5B,EAAK+4B,QAAQvd,MAAM,cAAe9jB,EAAMwhC,EAAGC,OAAQD,EAAG5wC,SACnDuvC,EAAAA,QAAQG,OAAO,IAAI7C,GAAevC,GAAIS,MAAOT,GAAIa,UAAUK,kBAAmBnrC,SA7erFH,KAAKoxC,QAAU7xC,OAAOw1B,OAAOsb,EAAIgB,mBAAoB9pC,GACjD+oC,GAAOtwC,KAAKsxC,UAAUhB,GACrBC,KAAAA,QAAU,IAAIrlC,GAAO,OACtBlL,KAAKoxC,QAAQ1d,SACfxoB,GAAOonB,SAuZV,IAAAif,EA7QDC,EAnCAC,EAjHCpB,OAYA5qC,EAAA4qC,EAAA,CAAA,CAAA3qC,IAAA,WAAAmB,IAED,WAAgB6qC,IAAAA,EACPA,MAAiC,UAAjB,QAAhBA,EAAI1xC,KAACmwC,mBAAW,IAAAuB,OAAA,EAAhBA,EAAkBC,cAC1B,CAAAjsC,IAAA,aAAAmB,IAED,WAAkB,IAAA2R,EAAAxY,KACZ+H,GAAO,EAOJA,OANPxI,OAAOqyC,KAAK5xC,KAAKywC,QAAQljC,SAAQ,SAAAskC,GACzBrB,IAAAA,EAAQh4B,EAAKi4B,OAAOoB,GACtBjwC,MAAM6M,QAAQ+hC,KAChBzoC,IAAAA,EAASyoC,EAAM9uC,OAAS,OAGrBqG,IACR,CAAArC,IAAA,MAAAmB,IAED,WACE,OAAO7G,KAAK8xC,OACb,CAAApsC,IAAA,WAAAmB,IAED,WAAgBkrC,IAAAA,EACPA,OAAgB,QAAhBA,EAAI/xC,KAACmwC,mBAAW,IAAA4B,OAAA,EAAhBA,EAAkB/rC,YAAY,IACtC,CAAAN,IAAA,UAAAmB,IAED,WACE,QAAO7G,KAAKmwC,aAA8C,UAAhCnwC,KAAKmwC,YAAYwB,aAC5C,CAAAjsC,IAAA,YAAAmB,IAED,WACE,OAAOqpC,GAAMlwC,KAAKmwC,cAAenwC,KAAKmwC,YAAY6B,YACnD,CAAAtsC,IAAA,SAAAvC,MAED,SAAQ+L,GACN,OAAOA,EAAOlP,KAAKiyC,aAAa/iC,GAAQlP,KAAKiyC,aAAa5B,EAAI6B,SAGhE,CAAAxsC,IAAA,iBAAAvC,MAIA,SAAgB6C,GAAU,IAAAg0B,EAAAh6B,KAClBmyC,EAAmBnyC,KAAKmwC,aAAenwC,KAAKmwC,YAAYnqC,SAAWA,EACzE,GAAIhG,KAAKmwC,aAAenwC,KAAKmwC,YAAYnqC,SAAWA,EAAU,CAC5D,IAAIosC,EAAY,EAQhB,GAPA7yC,OAAOqyC,KAAK5xC,KAAKkxC,eAAe3jC,SAAQ,SAAAskC,GAClC,IACFO,EAAYzoC,KAAKmK,IAAIkmB,EAAKoY,UAAUP,IAAM,EAAGO,SACtCpf,QAIPhtB,EAAWosC,EAEb,OAAO9C,QAAQC,UAIZ,OAAAvvC,KAAKqyC,oBAAmB,WACzBrY,EAAKsY,QACF/B,EAAAA,QAAQhe,MAAM,yBAGjByH,EAAKmW,cACPnW,EAAKmW,YAAYnqC,SAAWA,EACvBuqC,EAAAA,QAAQhe,MAAM,cAAevsB,MAEnCoqC,GAAyB,CAAC+B,iBAAAA,MAG/B,CAAAzsC,IAAA,OAAAvC,MACA,WAAQ,IAAA8+B,EAAAjiC,KACN,GAAIA,KAAKuyC,aAAa9C,OAASzvC,KAAKwyC,UAAYxyC,KAAKmwC,YAAa,CAChE,IAAMsC,EAAKzyC,KAAKmwC,YAObuC,EAAAA,iBAAiB,cANL,SAATC,IACEC,IAAAA,EAAWxE,KAAYnM,EAAK4Q,IAC7BtC,EAAAA,QAAQhe,MAAM,aAAcqgB,GAC9BE,EAAAA,oBAAoB,aAAcH,GACrC1Q,EAAKsQ,aAAahD,QAAQ,CAACsB,SAAU+B,OAGvC5yC,KAAKuyC,aAAerD,KAGtB,OAAOlvC,KAAKuyC,eACb,CAAA7sC,IAAA,YAAAvC,OAgBDsuC,EAAAsB,EAAAC,IAAAC,MAIA,SAAAC,EAAiB5C,GAAK,IAAAL,EAAAwC,EAAAU,EAAAR,EAAAS,EAAApzC,KAAA,OAAAgzC,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAAA,IAChBjE,KAAKmwC,cAAenwC,KAAKswC,MAAK,CAAAgD,EAAArvC,KAAA,EAAA,MAAA,OAAAqvC,EAAArvC,KAAA,EAAQjE,KAAKwzC,cAAa,KAAA,EAEF,GAApDvD,EAAcH,GAAe9vC,KAAKoxC,QAAQrB,WAE3CO,GAAUL,EAAW,CAAAqD,EAAArvC,KAAA,EAAA,MAAQ,MAAA,IAAImF,MAAM,6CAA4C,KAAA,EAqBpD,OApBpCpJ,KAAKswC,MAAQA,EACFmC,EAAAzyC,KAAKmwC,YAAc,IAAIF,EAC5BkD,EAASjD,GAAMuC,GACrBzyC,KAAK6yC,IAAMzE,KAELuE,EAAS,SAATA,IACEC,IAAAA,EAAWxE,KAAYgF,EAAKP,IAC7BtC,EAAAA,QAAQhe,MAAM,cAChBugB,EAAAA,oBAAoB,aAAcH,GACjCc,IAAAA,gBAAgBnD,EAAMoD,KAC1BN,EAAKb,aAAahD,QAAQ,CAACsB,SAAU+B,KAEpCF,EAAAA,iBAAiB,aAAcC,GAC9BQ,IACCT,EAAAA,iBAAiB,iBAAkB1yC,KAAK2zC,mBACxCjB,EAAAA,iBAAiB,eAAgB1yC,KAAK4zC,kBAGtC9B,KAAAA,KAAO+B,IAAIC,gBAAgBrB,GAChCnC,EAAMoD,IAAM1zC,KAAK8xC,KACjBxB,EAAMyD,sBAAwBZ,EAAMG,EAAAU,OAE7B,SAAAh0C,KAAKuyC,cAAY,KAAA,GAAA,IAAA,MAAA,OAAAe,EAAAW,UAAAf,EAAAlzC,UACzB,SAAAk0C,GAAAzC,OAAAA,EAAAhvC,MAAAzC,KAAAsC,cAED,CAAAoD,IAAA,cAAAvC,OAAAquC,EAAAuB,EAAAC,IAAAC,MACA,SAAAkB,IAAA,IAAA1B,EAAA2B,EAAAC,EAAAC,EAAAt0C,KAAA,OAAAgzC,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EAIE,GAHKjE,KAAKuyC,aAAa9C,MAAMzvC,KAAKuyC,aAAahD,UACzCkD,EAAKzyC,KAAKmwC,YAER,CAWN,GAVA5wC,OAAOqyC,KAAK5xC,KAAKywC,QAAQljC,SAAQ,SAACiY,GAC1BgrB,IAAAA,EAAQ8D,EAAK7D,OAAOjrB,GACtBgrB,GACIjjC,EAAAA,SAAQ,SAAAmK,GAAC,IAAA88B,EAAAC,EAAA,OAAaD,QAAbA,EAAI98B,EAAE23B,mBAAOmF,WAAAC,EAATD,EAAWjF,eAAO,IAAAkF,SAAlBA,EAAAvzC,KAAAszC,SAIjBJ,IAAgBp0C,KAAKswC,OAAStwC,KAAKswC,MAAMqB,YAAc,EACvD0C,EAA4B,SAAlB5B,EAAGd,WAEfyC,GAAeC,EACb,IACF5B,EAAGiC,oBACI1hB,IAKXzzB,OAAOqyC,KAAK5xC,KAAKkxC,eAAe3jC,SAAQ,SAAAskC,GAClC,IACC8C,EAAAA,mBAAmBL,EAAKpD,cAAcW,UAClC7e,QAKPkd,GAAMuC,KACLK,EAAAA,oBAAoB,iBAAkB9yC,KAAK2zC,mBAC3Cb,EAAAA,oBAAoB,eAAgB9yC,KAAK4zC,kBAIhD,GAAI5zC,KAAKswC,MAAO,CACdtwC,KAAKswC,MAAMyD,uBAAwB,EAC9BzD,KAAAA,MAAMsE,gBAAgB,OACvB,IACF50C,KAAKswC,MAAMuE,aACJ7hB,IAGThzB,KAAKswC,MAAQ,KAGftwC,KAAKmwC,YAAc,KACnBnwC,KAAKuyC,aAAerD,KACfuB,KAAAA,OAAgB7vC,OAAAA,OAAO,MACvBswC,KAAAA,cAAuBtwC,OAAAA,OAAO,MAAK,KAAA,EAAA,IAAA,MAAA,OAAA2zC,EAAAN,UAAAE,EAAAn0C,UACzC,WAAAwxC,OAAAA,EAAA/uC,MAAAzC,KAAAsC,cAED,CAAAoD,IAAA,eAAAvC,MAIA,SAAc+L,EAAM4lC,GAClB,IAAI90C,KAAKkxC,cAAchiC,IAAUlP,KAAKmwC,YAAtC,CACI4E,IAAAA,EACA,IACFA,EAAK/0C,KAAKkxC,cAAchiC,GAAQlP,KAAKmwC,YAAY6E,gBAAgBF,SAC1D9hB,GACP,MAAM,IAAI2Z,GAAevC,GAAIS,MAAOT,GAAIa,UAAUI,WAAYrY,GAEhE+hB,EAAGD,SAAWA,EACdC,EAAGrC,iBAAiB,YAAa1yC,KAAKi1C,eAAeC,KAAKl1C,KAAMkP,IAChE6lC,EAAGrC,iBAAiB,QAAS1yC,KAAKm1C,iBAAiBD,KAAKl1C,KAAMkP,OAGhE,CAAAxJ,IAAA,aAAAvC,MAKA,SAAY+L,EAAM4lC,GAAU,IAAAM,EAAAp1C,KACpB+0C,EAAK/0C,KAAKkxC,cAAchiC,GAC9B,OAAKlP,KAAKmwC,aAAgB4E,GAAMA,EAAGD,WAAaA,EAEnB,mBAAlBC,EAAGM,WAAkC/F,QAAQE,SAEjDxvC,KAAKs1C,WAAWpmC,GAAM,WAC3B6lC,EAAGM,WAAWP,GACdC,EAAGD,SAAWA,EACdM,EAAKH,eAAe/lC,KACnB,aAAc,CAAC4lC,SAAAA,IAR+CxF,QAAQC,YAW3E,CAAA7pC,IAAA,uBAAAvC,MAKA,SAAsB+L,EAAM4lC,GAEnB,OADFS,KAAAA,aAAarmC,EAAM4lC,GACjB90C,KAAKq1C,WAAWnmC,EAAM4lC,KAG/B,CAAApvC,IAAA,SAAAvC,MAKA,SAAQ+L,EAAMhF,EAAQpK,GAAS,IAAA01C,EAAAx1C,KAC7B,OAAKkK,GAAWA,EAAO5B,YAIlBtI,KAAKkxC,cAAchiC,GAEjBlP,KAAKs1C,WAAWpmC,GAAM,WAAMumC,IAAAA,EAC5BD,EAAKrF,cAAeqF,EAAKlF,MAAMtd,QAC/Bud,EAAAA,QAAQhe,MAAM,mBAAoBzyB,GACvC01C,EAAK1E,MAAQ1C,KACWqH,QAAxBA,EAAAD,EAAKtE,cAAchiC,cAAKumC,GAAxBA,EAA0BC,aAAaxrC,MACtCkmC,GAAgBtwC,GAVVwvC,QAAQC,YAcnB,CAAA7pC,IAAA,SAAAvC,MAMA,SAAQ+L,EAAMyH,EAAWg/B,EAAS71C,GAAS,IAAA81C,EAAA51C,KAErC61C,GAAe,EAIZ,OAHH71C,KAAKiyC,aAAa/iC,KACL2mC,GAAA,GAEV71C,KAAKs1C,WAAWpmC,GAAM,WAC3B,GAAK0mC,EAAKzF,cAAeyF,EAAKtF,MAAMtd,MAApC,CACM+hB,IAAAA,EAAKa,EAAK1E,cAAchiC,GAC1ByH,GAAag/B,IAAYZ,EAC3Ba,EAAKX,eAAe/lC,IAGtB0mC,EAAK9E,MAAQ1C,KACbwH,EAAKrF,QAAQhe,MAAM,mBAAoBrjB,EAAMyH,EAAWg/B,EAAS71C,GAC9Dg2C,EAAAA,OAAOn/B,EAAWg/B,OACpBvF,GAAgBtwC,EAAS+1C,KAC7B,CAAAnwC,IAAA,cAAAvC,MAED,SAAawT,EAAWg/B,GAAS,IAC3BvoC,EAD2B2oC,EAAA/1C,KAKxBoN,OAHP7N,OAAOqyC,KAAK5xC,KAAKkxC,eAAe3jC,SAAQ,SAAAskC,GACtCzkC,EAAI2oC,EAAKD,OAAOjE,EAAGl7B,EAAWg/B,MAEzBvoC,GAAKkiC,QAAQC,YACrB,CAAA7pC,IAAA,iBAAAvC,MAED,WAAkB,IACZiK,EADY4oC,EAAAh2C,KAMToN,OAJP7N,OAAOqyC,KAAK5xC,KAAKkxC,eAAe3jC,SAAQ,SAAAskC,GAChCkD,IAAAA,EAAKiB,EAAK9E,cAAcW,GAC1BmE,EAAAA,EAAKF,OAAOjE,EAAG,EAAGvkB,GAAOxe,IAAIwe,GAAOzmB,IAAIkuC,QAEvC3nC,IACR,CAAA1H,IAAA,gBAAAvC,MAED,SAAe+L,EAAM+mC,GAAUC,IAAAA,EACxB3F,KAAAA,QAAQhe,MAAM,0BACbie,IAAAA,EAAQxwC,KAAKywC,OAAOvhC,GAC1B,GAAI+mC,GAAYzF,EACTC,KAAAA,OAAOvhC,GAAQ,QAGtB,GAAKshC,GAAUA,EAAMthC,MAASshC,EAAM9uC,OAAS,GAA7C,CACA,IAAMy0C,EAAY,GACZ5oC,EAAAA,SAAQ,SAAAmjC,GACRA,EAAG5wC,SAAW4wC,EAAG5wC,QAAQs2C,QAC3BD,EAAU31C,KAAKkwC,MAGnB1wC,KAAKywC,OAAOvhC,GAAQshC,EAAMrvC,MAAM,EAAG,GACzBO,EAAAA,OAAS,IAAKw0C,OAAKzF,OAAOvhC,IAAM1O,KAAIiC,MAAAyzC,EAAIC,MAGpD,CAAAzwC,IAAA,cAAAvC,MAIA,SAAakzC,GAAQ,IAAAC,EAAAt2C,KACnB,OAAKA,KAAKmwC,aAA+C,SAAhCnwC,KAAKmwC,YAAYwB,WACnC3xC,KAAKqyC,oBAAmB,WAC7B,IAAMI,EAAK6D,EAAKnG,YACXsC,GAAwB,SAAlBA,EAAGd,aACTpB,EAAAA,QAAQhe,MAAM,yBACf8jB,EACF5D,EAAGiC,YAAY2B,GAEf5D,EAAGiC,iBAEJ,eAVqEpF,QAAQC,YAWjF,CAAA7pC,IAAA,uBAAAvC,MAED,SAAsB+I,EAAO4C,GAC3B,IAAM2jC,EAAKzyC,KAAKmwC,YACZjkC,EAAQ,GAAK4C,EAAM5C,GAAUumC,MAAAA,IAAAA,EAAI8D,sBAA0C,SAAlB9D,EAAGd,YAC7D4E,EAAAA,qBAAqBrqC,EAAO4C,KAGjC,CAAApJ,IAAA,kBAAAvC,MAIA,SAAiB+L,GACf,OAAOlP,KAAKkxC,cAAchiC,KAG5B,CAAAxJ,IAAA,WAAAvC,MAIA,SAAU+L,GACR,OAAOoe,GAAOzmB,IAAI7G,KAAKkxC,cAAchiC,MAGvC,CAAAxJ,IAAA,cAAAvC,MAIA,SAAa+L,GACX,OAAOoe,GAAOphB,MAAMlM,KAAKypC,SAASv6B,MAGpC,CAAAxJ,IAAA,YAAAvC,MAIA,SAAW+L,GACT,OAAOoe,GAAOxe,IAAI9O,KAAKypC,SAASv6B,MACjC,CAAAxJ,IAAA,aAAAvC,MAED,SAAY+L,EAAMskB,EAAMmd,EAAQ7wC,EAAS+1C,GAAc,IAAAW,EAAAx2C,KACrD,IAAKA,KAAKmwC,YAAa,OAAOb,QAAQC,UACtC,IAAMiB,EAAQxwC,KAAKywC,OAAOvhC,GAAQlP,KAAKywC,OAAOvhC,IAAS,GACjDwhC,EAAK,CACTld,KAAAA,EACA6b,QAASH,KACTyB,OAAAA,EACA7wC,QAAAA,GAwBF,OArBI+1C,GACIr8B,EAAAA,OAAO,EAAG,EAAGk3B,GACnB1wC,KAAKiyC,aAAa/iC,IAAQ,EAC1BlP,KAAKmxC,YAAYjiC,IAEjBshC,EAAMhwC,KAAKkwC,GAGT1wC,KAAKwyC,UAAYxyC,KAAKsyC,QACH,IAAjB9B,EAAM9uC,QACR1B,KAAKmxC,YAAYjiC,GAGdqjC,KAAAA,aAAakE,MAAK,WACA,IAAjBjG,EAAM9uC,QACR80C,EAAKrF,YAAYjiC,MAMhBwhC,EAAGrB,UACX,CAAA3pC,IAAA,qBAAAvC,OAAAouC,EAAAwB,MAAAE,MAED,SAAAyD,EAA0BljB,EAAMmd,EAAQ7wC,GAAO,IAAAmuB,EAAA0oB,EAAAC,EAAA52C,KAAA,OAAAgzC,IAAAK,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5yC,MAAA,KAAA,EAAA,GACxCjE,KAAKmwC,YAAW,CAAA0G,EAAA5yC,KAAA,EAAA,MAAA,OAAA4yC,EAAA7C,OAAA,SAAS1E,QAAQC,WAAS,KAAA,EACF,IAA/BhwC,EAAAA,OAAOqyC,KAAK5xC,KAAKkxC,gBACpBxvC,OAAM,CAAAm1C,EAAA5yC,KAAA,EAAA,MAAA,OAAA4yC,EAAA7C,OACRxgB,SAAAA,KAAM,KAAA,EAabqjB,OAVIF,EAAU,GACVppC,EAAAA,SAAQ,SAAAiY,GACNgrB,IAAAA,EAAQoG,EAAKnG,OAAOjrB,GACpBsxB,EAAO5H,KACbyH,EAAQn2C,KAAKs2C,GACbtG,EAAMhwC,KAAK,CAACgzB,KAAM,WAChBsjB,EAAKvH,WAAYF,QAASyH,EAAMnG,OAAAA,EAAQ7wC,QAAAA,IACrB,IAAjB0wC,EAAM9uC,QACRk1C,EAAKzF,YAAY3rB,MAEnBqxB,EAAA7C,OAAA,SAEK1E,QAAQyH,IAAIJ,GAASF,MAAK,WAC3B,IACF,OAAOjjB,IACC,QACFjmB,EAAAA,SAAQ,SAAAiY,GACNgrB,IAAAA,EAAQoG,EAAKnG,OAAOjrB,GACpBuvB,EAAK6B,EAAK1F,cAAc1rB,GAC9BgrB,MAAAA,GAAAA,EAAO9gC,QACFqlC,GAAOA,EAAGiC,UACbJ,EAAKzF,YAAY3rB,WAIvB,KAAA,EAAA,IAAA,MAAA,OAAAqxB,EAAA5C,UAAAyC,EAAA12C,UACHqyC,SAAA4E,EAAAC,EAAAC,GAAA5F,OAAAA,EAAA9uC,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,cAAAvC,MAED,SAAa+L,GACLshC,IAAAA,EAAQxwC,KAAKywC,OAAOvhC,GAC1B,GAAIshC,EAAO,CACT,IAAME,EAAKF,EAAM,GACjB,GAAIE,IAAO1wC,KAAKiyC,aAAa/iC,GACvB,IACFwhC,EAAGld,aACIR,GACHA,GAASA,EAAM2G,SAAW3G,EAAM2G,QAAQxnB,QAAQ,yBAA2B,GAC7EnS,KAAKiyC,aAAa/iC,IAAQ,EACrBqhC,KAAAA,QAAQvd,MAAM,yBAA0B0d,EAAG5wC,QAAS,UAAW4wC,EAAGC,OAAQ,6BAC5EtB,EAAAA,QAAQG,OAAO,IAAI7C,GAAevC,GAAIS,MAAOT,GAAIa,UAAUO,SAAUxY,MAEnEud,KAAAA,QAAQvd,MAAMA,GAChBqc,EAAAA,QAAQG,OAAO,IAAI7C,GAAevC,GAAIS,MAAOT,GAAIa,UAAUM,UAAWvY,IACzEwd,EAAM9gC,QACN1P,KAAKmxC,YAAYjiC,QAK1B,CAAAxJ,IAAA,gBAAAvC,MA8BD,SAAe+L,EAAMkoC,EAAiBt3C,GAAS,IAAAu3C,EAAAr3C,KACtC,OAAAA,KAAKs1C,WAAWpmC,GAAM,WACvBkoC,EAAkB,IACDA,GAAA,MAEhBlG,EAAAA,cAAchiC,GAAMkoC,gBAAkBA,EAC3CC,EAAKpC,eAAe/lC,KACnB,gBAAiBpP,KAGtB,CAAA4F,IAAA,QAAAvC,MACA,SAAO+L,EAAMpP,GAAS,IAAAw3C,EAAAt3C,KAChB,OAACA,KAAKwyC,SAGHxyC,KAAKs1C,WAAWpmC,GAAM,WACtBgiC,EAAAA,cAAchiC,GAAMqoC,QACzBD,EAAKrC,eAAe/lC,KACnB,QAASpP,GALHwvC,QAAQC,aAMlB,CAAA,CAAA7pC,IAAA,cAAAvC,MAxjBD,WAAoBq0C,IAAAA,EAAIl1C,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,4CACnB2tC,EAAcH,KACpB,IAAKG,EAAoB,OAAA,EACrB,IACKA,OAAAA,EAAYwH,gBAAgBD,SAC5BxkB,GAEA,OADFud,KAAAA,QAAQvd,MAAMwkB,EAAMxkB,IAClB,KAEV,CAAAttB,IAAA,YAAAvC,MAED,WACE,MAAqC,oBAAvB6sC,oBAA6D,oBAAhBC,cAC5D,CAAAvqC,IAAA,mBAAAvC,MA0BD,WACS,MAAA,CACLuwB,SAAS,EACTqc,WAAW,OAEdM,EAtDa,GAAHA,EAAAA,GAAG,QACC,SADJA,EAAAA,GAAG,QAGC,SChEV,IAAMqH,GACJ,QADIA,GAEN,MAGMC,GACG,cADHA,GAEL,OAFKA,GAGL,OCNKC,YAAQhL,GAAAlkC,EAAAkvC,EAAAhL,GAAAjkC,IAAAA,EAAAC,EAAAgvC,GAQnB,SAAAA,EAAavK,EAAKwK,EAASvK,EAAUP,GAAKr2B,IAAAA,EAIhBA,OAJgBnR,OAAAqyC,GAC9BpyC,EAAAsyC,EAAVnvC,EAAAA,EAAAzH,UAAM6rC,iBARK,GAACvnC,EAAAsyC,EAAAphC,gBACF,GAAKlR,EAAAsyC,EAAAphC,GACJghC,aAAAA,IAAgBlyC,EAAAsyC,EAAAphC,eACjB,GAAClR,EAAAsyC,EAAAphC,aACH,GAAClR,EAAAsyC,EAAAphC,GAAA,UACD,IAIRA,EAAK22B,IAAMA,EACX32B,EAAKmhC,QAAUA,EACfnhC,EAAK42B,SAAWA,EAAQ52B,EACzB,OAAAjR,EAAAmyC,IAb2BxuC,EAAAA,QCFxB6E,GAAW1O,OAAOC,UAAUyO,SAM3B,SAAS8pC,GAAevtC,GAC7B,GAA2B,oBAAvByD,GAAS/M,KAAKsJ,GACT,OAAA,EAGHhL,IAAAA,EAAYD,OAAOy4C,eAAextC,GACjChL,OAAc,OAAdA,GAAsBA,IAAcD,OAAOC,UCV7C,SAASy4C,GAAe90C,GAC7B,GAAKA,GAAsB,OAAbA,EAAM,SAA4BX,IAAbW,EAAM,KAAkC,IAAbA,EAAM,IAA0B,OAAbA,EAAM,SAA4BX,IAAbW,EAAM,IAA5G,CAGI0W,IAAAA,EAAM,SAAW1W,EAAM,GAAK,IAEzB0W,OADH1W,EAAM,KAAI0W,GAAO1W,EAAM,IACpB0W,GAGT,SAASq+B,GAAQ1tC,GACRytB,OAAAA,mBAAmBztB,GACvB2tC,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAGNC,SAAAA,GAAc/K,EAAKgL,GACjC,GAAKhL,EAAL,CACA,IAAKgL,EAAehL,OAAAA,EAChBhmB,IAAAA,EACEyF,EAAMvtB,OAAOqyC,KAAKyG,GAAQ1pC,KAAI,SAAAkjC,GAE9BxqB,GAAAA,OADJA,EAAIgxB,EAAOxG,IAQJxqB,OANHzlB,MAAM6M,QAAQ4Y,GAChBwqB,GAAQ,KAERxqB,EAAI,CAACA,GAGAA,EAAE1Y,KAAI,SAAA+I,GDnBV,IAAiBlJ,ECyBlB,ODzBkBA,ECoBPkJ,EDnBa,kBAArBzJ,GAAS/M,KAAKsN,GCoBfkJ,EAAIA,EAAE4gC,cDlCP,SAAmB9pC,GACxB,OAAa,OAANA,GAA2B,WAAbugC,EAAOvgC,GCkCb+pC,CAAS7gC,KAClBA,EAAIi3B,KAAKvY,UAAU1e,IAErB,GAAArW,OAAU62C,GAAOrG,GAAExwC,KAAAA,OAAI62C,GAAOxgC,OAC7BzL,KAAK,QACPgB,OAAOC,SAASjB,KAAK,KAExB,GAAI6gB,EAAK,CACD0rB,IAAAA,EAAYnL,EAAIl7B,QAAQ,MACR,IAAlBqmC,IACInL,EAAAA,EAAIlsC,MAAM,EAAGq3C,IAGrBnL,KAA6B,IAArBA,EAAIl7B,QAAQ,KAAc,IAAM,KAAO2a,EAG1CugB,OAAAA,GAGOoL,SAAAA,GACdtwC,EACAjE,EACAopC,EACAoL,EACAC,EACAhiC,EACAiiC,EACAjuB,EACAkuB,EACAC,EACAC,GAMO,OAJPJ,EAAOA,MAAAA,EAAqCK,WAAWL,GAAO,KAC9CjqC,EAAAA,SAASgqC,GAAiB,IAAK,IAC3CtqC,OAAO6qC,MAAMP,KAAgCA,EAAA,GAE1C,CAAEvwC,KAAAA,EAAMjE,KAAAA,EAAMovB,QADL,CAAEulB,MAAAA,EAAOC,IAAAA,EAAKnuB,MAAAA,EAAO+tB,cAAAA,EAAeC,IAAAA,EAAKhiC,UAAAA,EAAWiiC,cAAAA,EAAejD,QAAS56B,KAAK40B,MAAOoJ,WAAAA,GAC1EzL,SAAAA,GAGhB4L,SAAAA,GAAgBC,EAASC,GACvC,OAAOzvC,KAAKmN,MAAgB,EAAVqiC,EAAc,IAAOC,EAAW,MC7E7C,IAAMC,GAkCM,kBC7BbC,GAAY,QACLC,YAAWC,GAAA9wC,EAAA6wC,EAAAC,GAAA7wC,IAoKrB8wC,EApKqB9wC,EAAAC,EAAA2wC,GAgBtB,SAAAA,IAAe7iC,IAAAA,EAFGA,OAEHnR,OAAAg0C,GACN/zC,EAAAsyC,EAAPnvC,EAAAA,EAAAzH,KAAAlB,0BAhBiB,MAAIwF,EAAAsyC,EAAAphC,mBACP,MAAIlR,EAAAsyC,EAAAphC,aACV,MAAIlR,EAAAsyC,EAAAphC,eACF,MAAIlR,EAAAsyC,EAAAphC,eACL,GAAKlR,EAAAsyC,EAAAphC,GAAA,UACL,GAAAlR,EAAAsyC,EAAAphC,YACF,MAAIlR,EAAAsyC,EAAAphC,qBACK,GAAClR,EAAAsyC,EAAAphC,eACR,GAAKlR,EAAAsyC,EAAAphC,aACN,MAAIlR,EAAAsyC,EAAAphC,UACP,IAAElR,EAAAsyC,EAAAphC,sBACU,GAAClR,EAAAsyC,EAAAphC,eACR,MAAIlR,EAAAsyC,EAAAphC,iBACF,MAAIA,EA8SjB6iC,OA1SA9zC,EAAA8zC,EAAA,CAAA,CAAA7zC,IAAA,OAAAvC,MAED,SAAAonB,GA0BG,IAAAmvB,EAAAliC,EAAAxX,KAzBDqtC,EAAG9iB,EAAH8iB,IACAyL,EAAGvuB,EAAHuuB,IACAa,EAAOpvB,EAAPovB,QACAC,EAAYrvB,EAAZqvB,aACAC,EAAUtvB,EAAVsvB,WACAlvB,EAAKJ,EAALI,MACAmvB,EAASvvB,EAATuvB,UACAC,EAAQxvB,EAARwvB,SACAlB,EAAKtuB,EAALsuB,MACAmB,EAAiBzvB,EAAjByvB,kBACAnC,EAAOttB,EAAPstB,QACAQ,EAAM9tB,EAAN8tB,OACAn9B,EAAMqP,EAANrP,OAEA++B,EAAM1vB,EAAN0vB,OACAC,EAAO3vB,EAAP2vB,QACAC,EAAI5vB,EAAJ4vB,KACA7Y,EAAI/W,EAAJ+W,KACA8Y,EAAW7vB,EAAX6vB,YACAC,EAAK9vB,EAAL8vB,MACAC,EAAQ/vB,EAAR+vB,SACAC,EAAQhwB,EAARgwB,SACAC,EAAcjwB,EAAdiwB,eACAC,EAAelwB,EAAfkwB,gBACA1B,EAAUxuB,EAAVwuB,WAEA/4C,KAAKuwC,QAAUr1B,EACflb,KAAK06C,UAAW,EAChB16C,KAAK26C,iBAAmBF,EACxBz6C,KAAK46C,UAAYb,EACjB/5C,KAAK66C,iBAA8C,oBAApBC,iBAAmC,IAAIA,gBACtE96C,KAAK+6C,UAAW,EAChB/6C,KAAKg7C,OAASrwB,EACd3qB,KAAKi7C,OAASpC,GAAS,CAAC,EAAG,GAC3B74C,KAAKk7C,KAAOpC,GAAOzL,EACd8N,KAAAA,YAAcpC,GAAc,GACjC,IAAMjrB,EAAO,CACXmsB,OAAAA,EACAC,QAAAA,EACAC,KAAAA,EACA7Y,KAAAA,EACA8Y,YAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAY,OAA6B1B,QAAvBA,EAAE15C,KAAK66C,wBAALnB,IAAqBA,OAArBA,EAAAA,EAAuB0B,QAG7BhO,GAAY,EAChBiO,aAAar7C,KAAKs7C,eAEZlD,EAAAA,GAAa/K,EAAKgL,GAElBkD,IAAAA,EAAatD,GAAcY,GAC7B0C,IAEArB,EADErC,EACQA,EAAQqC,QAERpsB,EAAKosB,QAAUpsB,EAAKosB,UAAYsB,QAAU,IAAIA,QAAY,IAElEA,SAAWtB,aAAmBsB,QACxBC,EAAAA,OAAO,QAASF,GAExBrB,EAAQwB,MAAQH,GAIhB5B,IACG2B,KAAAA,cAAgBK,YAAW,WAG9B,GAFYvO,GAAA,EACZ51B,EAAKokC,SACD9B,EAAW,CACb,IAAM9mB,EAAQ,IAAI4kB,GAASvK,EAAKvf,EAAM,KAAM,WAC5CkF,EAAMoa,WAAY,EAClB0M,EAAU9mB,EAAO,CAACrI,MAAOnT,EAAKwjC,OAAQnC,MAAOrhC,EAAKyjC,OAAQnC,IAAKthC,EAAK0jC,KAAMnC,WAAYvhC,EAAK2jC,iBAE5FxB,IAGChjC,IAAAA,EAAYoE,KAAK40B,MAEvB,OADA3vC,KAAKuwC,QAAQhe,MAAM,6BAA8B5H,EAAO,UAAWkuB,GAC5D,IAAIvJ,SAAQ,SAACC,EAASC,GAC3BqM,MAAMhE,GAAWxK,EAAKwK,OAAUr1C,EAAYsrB,GAAM2oB,KAAI,WAAA,IAAAxqB,EAAA8mB,EAAAC,IAAAC,MAAC,SAAAC,EAAO5F,GAAQsL,IAAAA,EAAAzwC,EAAAyqC,EAAAkJ,EAAA,OAAA9I,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAE3C,GADzBo3C,aAAa7jC,EAAK8jC,eAClB9jC,EAAKukC,UAAYzO,GACb91B,EAAKkjC,UAAaljC,EAAKujC,SAAQ,CAAAzH,EAAArvC,KAAA,EAAA,MAAAqvC,OAAAA,EAAAU,OAAA,UAAA,KAAA,EAGlC,GAFGgG,IACSA,EAAAA,EAAkB1M,EAAUD,IAAQC,GAE5CA,EAAS0O,GAAE,CAAA1I,EAAArvC,KAAA,EAAA,MAAA,MACR,IAAI2zC,GAASvK,EAAKvf,EAAMwf,EAAU,wBAAuB,KAAA,EAGjC,GAA1BsL,EAAgB79B,KAAK40B,MAEvBiK,IAAiBjC,GAAiB,CAAArE,EAAArvC,KAAA,GAAA,MAAA,OAAAqvC,EAAArvC,KAAA,GACvBqpC,EAASe,OAAM,KAAA,GAA5BlmC,EAAImrC,EAAA2I,KACJzkC,EAAKujC,UAAW,EAAKzH,EAAArvC,KAAA,GAAA,MAAA,KAAA,GAAA,GACZ21C,IAAiBjC,GAAiB,CAAArE,EAAArvC,KAAA,GAAA,MAAA,OAAAqvC,EAAArvC,KAAA,GAC9BqpC,EAAS4O,OAAM,KAAA,GAA5B/zC,EAAImrC,EAAA2I,KACJzkC,EAAKujC,UAAW,EAAKzH,EAAArvC,KAAA,GAAA,MAAA,KAAA,GAAA,IAEjB41C,EAAU,CAAAvG,EAAArvC,KAAA,GAAA,MAGmDqvC,OAF/D97B,EAAK+3B,QAAUA,EACf/3B,EAAKg4B,OAASA,EACdh4B,EAAK2kC,WAAW7O,EAAUuM,EAAYljC,EAAWiiC,GAActF,EAAAU,OAAA,UAAA,KAAA,GAAA,OAAAV,EAAArvC,KAAA,GAGlDqpC,EAAS8O,cAAa,KAAA,GAAnCj0C,EAAImrC,EAAA2I,KACG9zC,EAAA,IAAI2B,WAAW3B,GACtBqP,EAAKujC,UAAW,EACChgC,EAAAA,KAAK40B,MAAQh5B,EAChBuiC,EAAAA,GAAe/wC,EAAKG,WAAYsqC,GACzC9wC,EAAAA,KAAKu3C,GAAuB,CAACyC,MAAAA,EAAMz5C,IAAK8F,EAAKG,WAAYiP,KAAMq7B,EAAUkG,IAAKthC,EAAK0jC,KAAMvwB,MAAOnT,EAAKwjC,OAAQnC,MAAOrhC,EAAKyjC,OAAQlC,WAAYvhC,EAAK2jC,cAAa,KAAA,GAGxK3jC,EAAK+4B,QAAQhe,MAAM,2BAA4B5H,EAAO,UAAWkuB,GACzDJ,EAAAA,GACNtwC,GACA,EACAmlC,EACAA,EAAS4M,QAAQrzC,IAAI,kBACrBymC,EAAS4M,QAAQrzC,IAAI,OACrB8P,EACAiiC,EACAjuB,EACAkuB,EACArhC,EAAK0jC,KACL1jC,EAAK2jC,cACL,KAAA,GAAA,IAAA,MAAA,OAAA7H,EAAAW,UAAAf,OACH,OAAA,SAAAgB,GAAAjoB,OAAAA,EAAAxpB,MAAAzC,KAAAsC,YAhDqD,IAgDnD+5C,OAAM,SAACrpB,GAAUspB,IAAAA,EAClBjB,aAAa7jC,EAAK8jC,eAClB9jC,EAAKujC,UAAW,EACZvjC,EAAKkjC,WAAatN,KACtBpa,EAAQA,aAAiB4kB,GAAW5kB,EAAQ,IAAI4kB,GAASvK,EAAKvf,EAAM,KAAWwuB,QAAPA,EAAEtpB,SAAAspB,IAAKA,OAALA,EAAAA,EAAO3iB,UAC3EhjB,UAAYA,EACZg/B,EAAAA,QAAU56B,KAAK40B,MACrB3c,EAAMoa,UAAYA,EAClBpa,EAAMM,QAAU,CAAC3I,MAAOnT,EAAKwjC,OAAQnC,MAAOrhC,EAAKyjC,OAAQnC,IAAKthC,EAAK0jC,KAAMnC,WAAYvhC,EAAK2jC,aAC1F3L,EAAOxc,YAGZ,CAAAttB,IAAA,SAAAvC,OAAAs2C,EAAA1G,EAAAC,IAAAC,MAED,SAAAkB,IAAA,OAAAnB,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EACM,IAAAjE,KAAK06C,SAAQ,CAAAnG,EAAAtwC,KAAA,EAAA,MAAAswC,OAAAA,EAAAP,OAAA,UAAA,KAAA,EAGb,GAFJh0C,KAAK06C,UAAW,EAChB16C,KAAK+6C,UAAW,GACZ/6C,KAAK+7C,UAAS,CAAAxH,EAAAtwC,KAAA,GAAA,MAGV,GAHUswC,EAAAhB,KAAA,GAGVvzC,KAAKu8C,QAAO,CAAAhI,EAAAtwC,KAAA,EAAA,MACR,OADQswC,EAAAtwC,KAAA,EACRjE,KAAKu8C,QAAQX,SAAQ,KAAA,EAAArH,EAAAtwC,KAAA,GAAA,MAAA,KAAA,GAAAswC,EAAAhB,KAAA,GAAAzN,EAAAA,GAAAyO,EAAA,MAAA,GAAA,KAAA,GAK1BwH,KAAAA,UAAY/7C,KAAKu8C,QAAU,KAAI,KAAA,GAGtC,GAAIv8C,KAAK66C,iBAAkB,CACrB,IACF76C,KAAK66C,iBAAiBtD,cACfvkB,IAGThzB,KAAK66C,iBAAmB,KAEtB76C,KAAK46C,WACP56C,KAAK46C,UAAU,CAACjwB,MAAO3qB,KAAKg7C,OAAQnC,MAAO74C,KAAKi7C,OAAQnC,IAAK94C,KAAKk7C,KAAMnC,WAAY/4C,KAAKm7C,cAC1F,KAAA,GAAA,IAAA,MAAA,OAAA5G,EAAAN,UAAAE,EAAAn0C,KAAA,CAAA,CAAA,EAAA,UACF,WAAAy5C,OAAAA,EAAAh3C,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,aAAAvC,MAED,SAAYmqC,EAAUuM,EAAY2C,EAAI5D,GAAe,IAAApgC,EAAAxY,KACnD,IAAKstC,EAAS6M,OAAS7M,EAAS6M,KAAKsC,UAAW,CAC9Cz8C,KAAK+6C,UAAW,EAChB,IAAM32C,EAAM,IAAIwzC,GAAStK,EAASD,IAAK,GAAIC,EAAU,6CAGrD,OAFAlpC,EAAIkvB,QAAU,CAAC3I,MAAO3qB,KAAKg7C,OAAQnC,MAAO74C,KAAKi7C,OAAQnC,IAAK94C,KAAKk7C,KAAMnC,WAAY/4C,KAAKm7C,kBACxFn7C,KAAKwvC,OAAOprC,GAGVpE,KAAK26C,iBAAmB,IACrB+B,KAAAA,OAAS,IAAI5yC,WAAWwvC,IAC7Bt5C,KAAK28C,UAAY,GAEnB,IACIx0C,EAEAwO,EACAg/B,EAJEiH,EAAS58C,KAAKu8C,QAAUjP,EAAS6M,KAAKsC,YAKtCI,EAAI,WAAA,IAAArwB,EAAAumB,EAAAC,IAAAC,MAAG,SAAAyD,IAAAoG,IAAAA,EAAAC,EAAApU,EAAAqU,EAAAC,EAAAjU,EAAA4J,EAAAkJ,EAAA,OAAA9I,IAAAK,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5yC,MAAA,KAAA,EACW,OAAtB0S,EAAYoE,KAAK40B,MAAKkH,EAAAtD,KAAA,EAAAsD,EAAA5yC,KAAA,EAEP24C,EAAOM,OAAM,KAAA,EAA1B/0C,EAAI0uC,EAAAoF,KACJtG,EAAU56B,KAAK40B,MAAKkH,EAAA5yC,KAAA,GAAA,MAAA,KAAA,EAQnB4yC,OARmBA,EAAAtD,KAAA,EAAAzN,EAAAA,GAAA+Q,EAAA,MAAA,GAGpBlB,EAAU56B,KAAK40B,MACVn3B,EAAKkiC,WACRliC,EAAKuiC,UAAW,EAChBlE,EAAA/Q,GAAExS,QAAU,CAAC3I,MAAOnS,EAAKwiC,OAAQnC,MAAOrgC,EAAKyiC,OAAQnC,IAAKtgC,EAAK0iC,KAAMnC,WAAYvgC,EAAK2iC,aACjF3L,EAAAA,OAAMqH,EAAA/Q,KACZ+Q,EAAA7C,OAAA,UAAA,KAAA,GAKCx7B,GAFEukC,GAAwBD,QAAXA,EAAAtkC,EAAKyiC,cAAL6B,IAAWA,OAAXA,EAAAA,EAAap7C,QAAS,EAAI8W,EAAKyiC,OAAO,GAAK,EACxDtS,EAAYoU,EAAavkC,EAAK2kC,iBAChC3kC,EAAKkiC,SAAQ,CAAA7D,EAAA5yC,KAAA,GAAA,MAEkK4yC,OADjLr+B,EAAKuiC,UAAW,EAChBlB,OAAWr3C,GAAW,EAAO,CAAEq2C,MAAO,CAAClQ,EAAWA,GAAYmQ,IAAKtgC,EAAK0iC,KAAMvwB,MAAOnS,EAAKwiC,OAAQrkC,UAAAA,EAAWg/B,QAAAA,EAAS6G,GAAAA,EAAI5D,cAAAA,EAAeG,WAAWvgC,EAAK2iC,aAAe7N,GAASuJ,EAAA7C,OAAA,UAAA,KAAA,GAG7KgJ,EAAS70C,EAAKhF,MAAQgF,EAAKhF,MAAMmF,WAAa,EACpDkQ,EAAK2kC,iBAAmBH,EACxBxkC,EAAK+3B,QAAQhe,MAAM,sCAAuC/Z,EAAKyiC,OAAQ,WAAYtS,EAAW,SAAUoU,EAAavkC,EAAK2kC,gBAAiB,UAAWh1C,EAAKjE,MAEvJsU,EAAKmiC,iBAAmB,EACtBniC,EAAKmkC,UAAYK,GAAUxkC,EAAKmiC,kBAAoBxyC,EAAKjE,OAC3D+4C,EAAU,IAAInzC,WAAW0O,EAAKmkC,UAAYK,IAClCl4C,IAAI0T,EAAKkkC,OAAOv7C,MAAM,EAAGqX,EAAKmkC,WAAY,GAClDK,EAAS,GAAKC,EAAQn4C,IAAIqD,EAAKhF,MAAOqV,EAAKmkC,WAC3CnkC,EAAKmkC,UAAY,EACZpM,EAAAA,QAAQhe,MAAM,wCAAyCpqB,EAAKjE,KAAM,QAAS+4C,EAAQ30C,WAAY,cAAekQ,EAAKmkC,YAEpHK,EAAS,GAAKxkC,EAAKmkC,UAAYK,EAAS1D,IAC1C9gC,EAAKkkC,OAAO53C,IAAIqD,EAAKhF,MAAOqV,EAAKmkC,WACjCnkC,EAAKmkC,WAAaK,EAClBxkC,EAAK+3B,QAAQhe,MAAM,sCAAuCyqB,EAAQ,cAAexkC,EAAKmkC,YAC7EK,EAAS,IACZhU,EAAO,IAAIl/B,WAAW0O,EAAKmkC,UAAYK,EAAS,MACjDzM,EAAAA,QAAQhe,MAAM,6CAA8C/Z,EAAKmkC,UAAYK,EAAS,KAAM,aAAcA,EAAQ,cAAexkC,EAAKmkC,WACtI73C,EAAAA,IAAI0T,EAAKkkC,OAAOv7C,MAAM,EAAGqX,EAAKmkC,WAAY,GAC/CK,EAAS,GAAKhU,EAAKlkC,IAAIqD,EAAKhF,MAAOqV,EAAKmkC,WACxCnkC,EAAKmkC,WAAaK,SACXxkC,EAAKkkC,OACZlkC,EAAKkkC,OAAS1T,EACdxwB,EAAK+3B,QAAQhe,MAAM,0CAA2CyqB,EAAQ,cAAexkC,EAAKmkC,YAI9FM,EAAU90C,EAAKhF,OAEb85C,GAAWA,EAAQ30C,WAAa,GAAKH,EAAKjE,OACjC+4C,EAAAA,EAAS90C,EAAKjE,KAAM,CAC7B20C,MAAO,CAACrgC,EAAKyiC,OAAO,GAAKziC,EAAK2kC,iBAAmBF,EAAUA,EAAQ30C,WAAa,GAAIkQ,EAAKyiC,OAAO,GAAKziC,EAAK2kC,iBAC1GrE,IAAKtgC,EAAK0iC,KACVvwB,MAAOnS,EAAKwiC,OACZrkC,UAAAA,EACAg/B,QAAAA,EACA6G,GAAAA,EACA5D,cAAAA,EACAG,WAAWvgC,EAAK2iC,aACf7N,GAEAnlC,EAAKjE,MAGS6W,EAAAA,KAAK40B,MAAQ6M,EAChBtD,EAAAA,GAAe1gC,EAAK2kC,gBAAiBvK,GAC9C9wC,EAAAA,KAAKu3C,GAAuB,CAACyC,MAAAA,EAAMz5C,IAAKmW,EAAK2kC,gBAAiB5lC,KAAMq7B,EAAUkG,IAAKtgC,EAAK0iC,KAAMvwB,MAAOnS,EAAKwiC,OAAQnC,MAAOrgC,EAAKyiC,OAAQlC,WAAYvgC,EAAK2iC,cAC5J3iC,EAAKuiC,UAAW,EAChBviC,EAAK+3B,QAAQhe,MAAM,qCAAsC/Z,EAAKyiC,OAAQ,SAAU9yC,EAAKjE,MAChFqrC,EAAAA,QAAQkJ,GACXtwC,GACA,EACAmlC,EACAA,EAAS4M,QAAQrzC,IAAI,kBACrBymC,EAAS4M,QAAQrzC,IAAI,OACrB21C,EACA5D,EACApgC,EAAKwiC,OACLxiC,EAAKyiC,OACLziC,EAAK0iC,KACL1iC,EAAK2iC,mBAER,KAAA,GAAA,IAAA,MAAA,OAAAtE,EAAA5C,UAAAyC,EAAA,KAAA,CAAA,CAAA,EAAA,SACF,OAAA,WAtFSlqB,OAAAA,EAAA/pB,MAAAzC,KAAAsC,YAAA,SAwFX,CAAAoD,IAAA,aAAAmB,IAED,WACE,OAAO7G,KAAKm9C,kBACb,CAAAz3C,IAAA,UAAAmB,IAED,WACE,OAAO7G,KAAK+6C,UACbj2C,IAED,SAAa0oC,GACXxtC,KAAK+6C,SAAWvN,KACjB,CAAA,CAAA9nC,IAAA,cAAAvC,MAED,WACS,QAAoB,oBAAV04C,WAClBtC,GA5T8B54C,GCDpBy8C,IAAAA,YAAS5D,GAAA9wC,EAAA00C,EAAA5D,GAAA7wC,IAAAA,EAAAC,EAAAw0C,GAmCpB,SAAAA,IAAe1mC,IAAAA,EAHGA,OAGHnR,OAAA63C,GACN53C,EAAAsyC,EAAPnvC,EAAAA,EAAAzH,KAAAlB,cAlCK,MAAIwF,EAAAsyC,EAAAphC,eACA,GAAKlR,EAAAsyC,EAAAphC,mBACA,MAAIlR,EAAAsyC,EAAAphC,YACX,MAAIlR,EAAAsyC,EAAAphC,qBACK,GAAClR,EAAAsyC,EAAAphC,UACZ,MAAIlR,EAAAsyC,EAAAphC,iBACG,MAAIlR,EAAAsyC,EAAAphC,GAAA,UACP,GAAAlR,EAAAsyC,EAAAphC,cACA,MAGXlR,EAAAsyC,EAAAphC,yBAEsB,KAAGlR,EAAAsyC,EAAAphC,cACd,MAAIlR,EAAAsyC,EAAAphC,UACR,MAAIlR,EAAAsyC,EAAAphC,sBACQ,MAAIlR,EAAAsyC,EAAAphC,GAAA,cACR,GACflR,EAAAsyC,EAAAphC,0BACuB,MAAIlR,EAAAsyC,EAAAphC,yBACL,MAAIlR,EAAAsyC,EAAAphC,cAChB,GAAKlR,EAAAsyC,EAAAphC,cACL,GAAKlR,EAAAsyC,EAAAphC,UACR,IAAElR,EAAAsyC,EAAAphC,GAAA,qBAAA,GAAAlR,EAAAsyC,EAAAphC,GAAA,oBAAA,GAAAlR,EAAAsyC,EAAAphC,GAAA,eAAA,GAAAlR,EAAAsyC,EAAAphC,GAAA,0BAAA,GAAAlR,EAAAsyC,EAAAphC,GAAA,iBAAA,GAAAlR,EAAAsyC,EAAAphC,eAMG,MAAIlR,EAAAsyC,EAAAphC,iBACF,MAAIA,EAwMjB0mC,OAnMA33C,EAAA23C,EAAA,CAAA,CAAA13C,IAAA,OAAAvC,MAED,SAAMk6C,GAAK,IAAA7lC,EAAAxX,KACTq7C,aAAar7C,KAAKs7C,eAClBt7C,KAAKuwC,QAAU8M,EAAIniC,OACnBlb,KAAKi7C,OAASoC,EAAIxE,MAClB74C,KAAKs9C,YAAcD,EAAIxD,WACvB75C,KAAKg7C,OAASqC,EAAI1yB,MAClB3qB,KAAKu9C,SAAWF,EAAInD,QACpBl6C,KAAKw9C,iBAAuC,YAApBH,EAAIjD,aAAiD,gBAApBiD,EAAIjD,YACxDqD,KAAAA,MAAQJ,EAAIlD,MAAQ,KACrBF,EAAAA,SAAWj6C,KAAK09C,QAAUL,EAAIpD,QAC7B0D,KAAAA,SAAWN,EAAI1D,SAAW,KAC/B35C,KAAK49C,SAAU,EACV1C,KAAAA,KAAOmC,EAAIvE,KAAOuE,EAAIhQ,IAC3BrtC,KAAK69C,cAAgBR,EAAIzD,aACzB55C,KAAK89C,WAAY,EACjB99C,KAAK+9C,WAAaV,EAAIvD,UACtB95C,KAAK46C,UAAYyC,EAAItD,SACrB/5C,KAAKg+C,SAAWX,EAAIxF,QACfsD,KAAAA,YAAckC,EAAItE,YAAc,GACrC/4C,KAAKuwC,QAAQhe,MAAM,0BAA2BvyB,KAAKi7C,QAEnDj7C,KAAK8xC,KAAOsG,GAAaiF,EAAIhQ,IAAKgQ,EAAIhF,QAEhC1hC,IAAAA,EAAYoE,KAAK40B,MACvB,OAAO,IAAIL,SAAQ,SAACC,EAASC,GAC3Bh4B,EAAKymC,qBAAuB1O,EAC5B/3B,EAAK0mC,oBAAsB1O,EAC3Bh4B,EAAK2mC,gBACJ9B,OAAM,SAACrpB,GAGR,GAFAqoB,aAAa7jC,EAAK8jC,eAClB9jC,EAAKomC,SAAU,GACXpmC,EAAKkjC,SAKH1nB,MAJEA,EAAAA,aAAiB4kB,GAAW5kB,EAAQ,IAAI4kB,GAASpgC,EAAKs6B,KAAMt6B,EAAKwmC,WACnErnC,UAAYA,EACZg/B,EAAAA,QAAU56B,KAAK40B,MACrB3c,EAAMM,QAAU,CAAC3I,MAAOnT,EAAKwjC,OAAQlC,IAAKthC,EAAK0jC,KAAMnC,WAAYvhC,EAAK2jC,aAChEnoB,OAET,CAAAttB,IAAA,aAAAvC,MAED,WACE,IAAI01C,EAAQ,KACR,GAAA74C,KAAK69C,gBAAkBlG,IAA6B33C,KAAKi7C,QAAUj7C,KAAKi7C,OAAOv5C,OAAS,EAC1F,GAAI1B,KAAKs9C,YAAa,CACpBt9C,KAAK89C,WAAY,EACXM,IAAAA,EAAuC,KAA3Bp+C,KAAKq+C,oBACjBz0B,EAAO5pB,KAAKi7C,OAAO,GAAKj7C,KAAKm9C,gBAC/BmB,EAAKt+C,KAAKi7C,OAAO,GACjBmD,EAAYp+C,KAAKi7C,OAAO,GAAKrxB,IAC/B00B,EAAK10B,EAAOw0B,GAENvF,EAAA,CAACjvB,EAAM00B,GACft+C,KAAKuwC,QAAQhe,MAAM,wBAAyBvyB,KAAKi7C,OAAQ,eAAgBpC,QAEzEA,EAAQ74C,KAAKi7C,OACbj7C,KAAKuwC,QAAQhe,MAAM,wBAAyBvyB,KAAKi7C,OAAQ,eAAgBpC,GAG7E74C,KAAKu+C,cAAc1F,KACpB,CAAAnzC,IAAA,gBAAAvC,MAED,SAAe01C,GAAO,IAAArgC,EAAAxY,KAChB,IACGw+C,KAAAA,WAAazjC,KAAK40B,MACvB,IAAM8O,EAAMz+C,KAAK0+C,KAAO,IAAIC,eAC5BF,EAAIG,KAAK5+C,KAAK09C,SAAW,MAAO19C,KAAK8xC,MAAM,GAC3C2M,EAAI7E,aAAe55C,KAAK69C,cACnBF,KAAAA,WAAac,EAAI9E,QAAU35C,KAAK29C,UACrCc,EAAII,gBAAkB7+C,KAAKw9C,iBAC3BiB,EAAIK,OAAS9+C,KAAK++C,QAAQ7J,KAAKl1C,MAC/By+C,EAAIO,mBAAqBh/C,KAAKi/C,oBAAoB/J,KAAKl1C,MACnDk/C,EAAAA,QAAU,SAACC,GAAe,IAAAC,EAAAC,EAAAC,EAC5B9mC,EAAKuiC,UAAW,EACV/nB,IAAAA,EAAQ,IAAI4kB,GAASp/B,EAAKs5B,KAAMt5B,EAAKwlC,SAAUmB,MAAAA,GAAyB,QAAfC,EAAVD,EAAYI,qBAAa,IAAAH,OAAf,EAAVA,EAA2B9R,SAAW,uBAAwB6R,MAAAA,GAAyBE,QAAfA,EAAVF,EAAYI,qBAAZF,IAAyBA,OAAfA,EAAVA,EAA2B7R,QAAS,gBAAiB2R,MAAAA,GAAyBG,QAAfA,EAAVH,EAAYI,qBAAZD,IAAyBA,OAAf,EAAVA,EAA2BE,aACnMxsB,EAAMM,QAAU,CAAC3I,MAAOnS,EAAKwiC,OAAQnC,MAAOrgC,EAAKyiC,OAAQnC,IAAKtgC,EAAK0iC,KAAMnC,WAAYvgC,EAAK2iC,aAC1F3iC,EAAK0lC,oBAAoBlrB,IAEvBysB,EAAAA,UAAY,SAACt/C,GACfqY,EAAKojC,SACL,IAAM5oB,EAAQ,IAAI4kB,GAASp/B,EAAKs5B,KAAMt5B,EAAKwlC,SAAU,CAACxQ,OAAO,KAAM,WAC/Dh1B,EAAKulC,aACP/qB,EAAMoa,WAAY,EAClB50B,EAAKulC,WAAW/qB,EAAM,CAACrI,MAAOnS,EAAKwiC,OAAQnC,MAAOrgC,EAAKyiC,OAAQnC,IAAKtgC,EAAK0iC,KAAMnC,WAAYvgC,EAAK2iC,eAElGnoB,EAAMM,QAAU,CAAC3I,MAAOnS,EAAKwiC,OAAQnC,MAAOrgC,EAAKyiC,OAAQnC,IAAKtgC,EAAK0iC,KAAMnC,WAAYvgC,EAAK2iC,aAC1F3iC,EAAK0lC,oBAAoBlrB,IAErBknB,IAAAA,EAAUl6C,KAAKu9C,UAAY,GAC3BhC,EAAatD,GAAcY,GAC7B0C,IACFrB,EAAQwB,MAAQH,GAEdrB,GACF36C,OAAOqyC,KAAKsI,GAAS3sC,SAAQ,SAAAskC,GACvB6N,EAAAA,iBAAiB7N,EAAGqI,EAAQrI,OAGpC7xC,KAAKuwC,QAAQhe,MAAM,qBAAsBvyB,KAAKi7C,OAAQ,oBAAqBpC,GACvE8G,EAAAA,KAAK3/C,KAAKy9C,aACPxU,GACPA,EAAE3V,QAAU,CAAC3I,MAAO3qB,KAAKg7C,OAAQnC,MAAAA,EAAOC,IAAK94C,KAAKk7C,KAAMnC,WAAY/4C,KAAKm7C,aACzEn7C,KAAKk+C,oBAAoBjV,MAE5B,CAAAvjC,IAAA,sBAAAvC,MAED,SAAqB8lC,GAEI,IADXA,EAAE2W,OACNjO,YACN3xC,KAAK89C,UAAY,IAAM99C,KAAK89C,UAAY/iC,KAAK40B,SAEhD,CAAAjqC,IAAA,UAAAvC,MAED,SAAS8lC,GAAG4W,IAAAA,EACJrS,EAASvE,EAAE2W,OAAOpS,OACpBA,GAAAA,EAAS,KAAOA,EAAS,IAAK,CAChC,IAAMxa,EAAQ,IAAI4kB,GAAS53C,KAAK8xC,KAAM,KAAIgO,EAAAA,EAAA,GAAO7W,EAAE2W,OAAOtS,UAAQ,GAAA,CAAEE,OAAAA,IAAU,uBAAyBA,GAEhG,OADPxa,EAAMM,QAAU,CAAC3I,MAAO3qB,KAAKg7C,OAAQnC,MAAO74C,KAAKi7C,OAAQnC,IAAK94C,KAAKk7C,KAAMnC,WAAY/4C,KAAKm7C,aACnFn7C,KAAKk+C,oBAAoBlrB,GAElC,IAEI+sB,EAFA53C,EAAO,KACPjE,GAAO,EAEL64C,GAAyB8C,QAAXA,OAAK5E,cAAL4E,IAAWA,OAAXA,EAAAA,EAAan+C,QAAS,EAAI1B,KAAKi7C,OAAQ,GAAK,EAC5D,GAAAj7C,KAAK69C,gBAAkBlG,GAA2B,CAAAqI,IAAAA,EAC9CC,EAAQ,IAAIn2C,WAAWm/B,EAAE2W,OAAOtS,UAElC2S,GADJF,EAAYhD,EAAa/8C,KAAKm9C,gBAC1B8C,GAASA,EAAM33C,WAAa,EAAG,CACjCtI,KAAKm9C,iBAAmB8C,EAAM33C,WAC9B,IAAMsqC,EAAW73B,KAAK40B,MAAQ3vC,KAAKw+C,WAC7B1C,EAAQ5C,GAAel5C,KAAKm9C,gBAAiBvK,GAC9C9wC,KAAAA,KAAKu3C,GAAuB,CAACyC,MAAAA,EAAOz5C,IAAKrC,KAAKm9C,gBAAiB5lC,KAAMq7B,EAAUkG,IAAK94C,KAAKk7C,KAAMvwB,MAAO3qB,KAAKg7C,OAAQnC,MAAO,CAACkH,EAAWhD,EAAa/8C,KAAKm9C,iBAAkBpE,WAAY/4C,KAAKm7C,cAE3L8E,EAAAA,EAEE/7C,aADL87C,EAAAhgD,KAAKi7C,cAAM,IAAA+E,OAAA,EAAXA,EAAat+C,QAAS,GAAK1B,KAAKi7C,OAAO,IAAMj7C,KAAKm9C,gBAAkBn9C,KAAKi7C,OAAO,GAAKj7C,KAAKi7C,OAAO,IAKhG1K,KAAAA,QAAQhe,MAAM,4BAA6BvyB,KAAKi7C,OAAQ,UAAW8E,EAAW,OAAQhD,EAAa/8C,KAAKm9C,gBAAiB,YAAc8C,EAAQA,EAAM33C,WAAa,EAAI,kBAAmBtI,KAAKm9C,gBAAiB,UAAWn9C,KAAKg7C,OAAQ,UAAW92C,QAEhPA,GAAA,EACPiE,EAAO8gC,EAAE2W,OAAOtS,SAElB,IAAIA,EAAW,CACb0O,GAAIxO,GAAU,KAAOA,EAAS,IAC9BA,OAAAA,EACAgS,WAAYx/C,KAAK0+C,KAAKc,WACtBnS,IAAKrtC,KAAK0+C,KAAKwB,YACfhG,QAASl6C,KAAKmgD,YAAYngD,KAAK0+C,MAC/BvE,KAAMn6C,KAAK0+C,KAAKpR,UAEdttC,KAAKogD,qBACP9S,EAAWttC,KAAKogD,mBAAmB9S,EAAUttC,KAAK8xC,OAASxE,GAEzDttC,KAAKs9C,aACFA,KAAAA,YAAYn1C,EAAMjE,EAAM,CAAEymB,MAAO3qB,KAAKg7C,OAAQlC,IAAK94C,KAAKk7C,KAAMrC,MAAO,CAACkH,EAAWhD,EAAa/8C,KAAKm9C,iBAAkBxmC,UAAW3W,KAAKw+C,WAAY7I,QAAS56B,KAAK40B,MAAOoJ,WAAY/4C,KAAKm7C,aAAe7N,GAGxMppC,GAGHlE,KAAK49C,SAAU,EACf59C,KAAKi+C,sBAAwBj+C,KAAKi+C,qBAAqBxF,GACrDz4C,KAAKs9C,YAAc,KAAOn1C,EAC1BjE,EACAopC,EACAA,EAAS4M,QAAQ,kBACjB5M,EAAS4M,QAAQvB,IACjB34C,KAAKw+C,WACLx+C,KAAK89C,UACL99C,KAAKg7C,OACLh7C,KAAKi7C,OACLj7C,KAAKk7C,KACLl7C,KAAKm7C,eAdPn7C,KAAKm+C,eAiBR,CAAAz4C,IAAA,SAAAvC,MAED,WACE,IAAInD,KAAK06C,SAOT,OANA16C,KAAK06C,UAAW,EAChB16C,KAAK49C,SAAU,EACf/mB,EAAAA,EAAAumB,EAAA59C,sCAAA0B,KAAAlB,MACIA,KAAK46C,WACP56C,KAAK46C,UAAU,CAACjwB,MAAO3qB,KAAKg7C,OAAQnC,MAAO74C,KAAKi7C,OAAQnC,IAAK94C,KAAKk7C,KAAMnC,WAAY/4C,KAAKm7C,cAEvFn7C,KAAK0+C,KACA1+C,KAAK0+C,KAAKnH,aADnB,IAGD,CAAA7xC,IAAA,aAAAmB,IAMD,WACE,OAAO7G,KAAKm9C,kBACb,CAAAz3C,IAAA,UAAAmB,IAED,WACE,OAAO7G,KAAK+6C,UACbj2C,IAED,SAAa0oC,GACXxtC,KAAK+6C,SAAWvN,IACjB,CAAA9nC,IAAA,cAAAvC,MAED,SAAas7C,GACX,IAEgC56C,EAD1Bq2C,EAAU,GAAEp2C,koBAAAu8C,CADE5B,EAAI6B,wBAAwBC,OAAOC,MAAM,SAE7B,IAAhC18C,IAAAA,EAAAwT,MAAAzT,EAAAC,EAAAi4B,KAAA73B,MAAkC,CAAA,IAC1Bu8C,EADS58C,EAAAV,MACMq9C,MAAM,MACnBC,EAAAA,EAAM,GAAGC,eAAiBD,EAAMt/C,MAAM,GAAG8K,KAAK,aACvD7H,GAAAN,EAAAmlC,EAAA7kC,GAAA,QAAAN,EAAA68C,IACMzG,OAAAA,KACR,CAAA,CAAAx0C,IAAA,cAAAvC,MAxBD,WACE,MAAiC,oBAAnBw7C,mBACfvB,GAxO4Bz8C,6DCClBigD,GAAI,WACfA,SAAAA,EAAa1xC,EAAM3H,GAAQhC,OAAAq7C,GACzB5gD,KAAKqvC,QAAUH,KACV2R,KAAAA,QAAUt5C,EAAOsyC,YACrBtyC,EAAO2T,SAAW3T,EAAO2T,OAAS,IAAIhQ,GAAO,WAC9ClL,KAAK8gD,YAAc5xC,EACd6xC,KAAAA,QAAU7xC,IAASwoC,IAAqC,oBAAVmE,MAAwB,IAAItC,GAAgB,IAAI6D,GACnGp9C,KAAKoxC,QAAU7pC,EACfvH,KAAKghD,YAAc,EACnBhhD,KAAKihD,YAAc,KACnBjhD,KAAKkhD,WAAY,EACjBlhD,KAAKmhD,gBAAkB55C,EAAO65C,eAC9BphD,KAAKuwC,QAAUhpC,EAAO2T,OAgDvB,IAAAu+B,EAeAmH,OA9DAn7C,EAAAm7C,EAAA,CAAA,CAAAl7C,IAAA,OAAAvC,MAED,WAAQ,IAAAuT,EAAA1W,KACNqhD,EAMIrhD,KAAKoxC,QALPkQ,EAAKD,EAALC,MACAC,EAAUF,EAAVE,WACAC,EAAYH,EAAZG,aACAC,EAAcJ,EAAdI,eACGC,EAAIC,EAAAN,EAAAO,IAGH/J,EAAO,WAAA,IAAAttB,EAAAwoB,EAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAA5F,EAAAta,EAAA6uB,EAAA,OAAA7O,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAEWyS,OAFX48B,EAAAC,KAAA,EAAAD,EAAArvC,KAAA,EAEWyS,EAAKqqC,QAAQlM,KAAK6M,GAAK,KAAA,EAAxCpU,EAAQgG,EAAA2I,KACT5M,EAAAA,QAAQE,QAAQjC,GAASgG,EAAArvC,KAAA,GAAA,MAAA,KAAA,EAI1ByS,GAJ0B48B,EAAAC,KAAA,EAAAzN,EAAAA,GAAAwN,EAAA,MAAA,GAE9B58B,EAAKqqC,QAAQe,SAAU,EACvBprC,EAAK65B,QAAQhe,MAAM,2BAA0B+gB,EAAAxN,KACzCpvB,EAAKwqC,UAAS,CAAA5N,EAAArvC,KAAA,GAAA,MAAAqvC,OAAAA,EAAAU,OAAA,UAAA,KAAA,GAgBjB,GAdDlO,EAAAA,GAAEic,WAAarrC,EAAKoqC,YACpBhb,EAAAA,GAAEkc,WAAatrC,EAAKsqC,YAEhBhuB,EAAKsgB,EAAAxN,GACL2b,IACMA,EAAAA,EAAezuB,IAAUA,GAG/BwuB,GAAgB9qC,EAAKsqC,YAAc,GAAgBhuB,EAAAA,EAAOtc,EAAKsqC,YAAa,CAACr2B,MAAO+2B,EAAK/2B,MAAOmuB,IAAK4I,EAAK5I,IAAKD,MAAO6I,EAAK7I,MAAOE,WAAY2I,EAAK3I,aAElJiI,EAAAA,cACSa,GAAA,EACVnrC,EAAKyqC,kBACGzqC,EAAAA,EAAKyqC,gBAAe7N,EAAAxN,OAE5B+b,GAAWnrC,EAAKsqC,aAAeM,GAAK,CAAAhO,EAAArvC,KAAA,GAAA,MAGYqvC,OAFlD+H,aAAa3kC,EAAKuqC,aAClBvqC,EAAK65B,QAAQhe,MAAM,kCAAmC7b,EAAKsqC,YAAa,gBAAiBU,EAAK7I,OACzFoI,EAAAA,YAActF,WAAW9D,EAAS0J,GAAWjO,EAAAU,OAAA,UAAA,KAAA,GAG/C3E,EAAAA,QAAQG,OAAOxc,GAAM,KAAA,GAAA,IAAA,MAAA,OAAAsgB,EAAAW,UAAAf,EAAA,KAAA,CAAA,CAAA,EAAA,SAE7B,OAAA,WAhCY3oB,OAAAA,EAAA9nB,MAAAzC,KAAAsC,YAAA,GAmCb,WAAOtC,KAAKqvC,UACb,CAAA3pC,IAAA,SAAAvC,OAAAs2C,EAAA1G,EAAAC,IAAAC,MAED,SAAAkB,IAAA,OAAAnB,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EAG8B,OAF5Bo3C,aAAar7C,KAAKihD,aAClBjhD,KAAKkhD,WAAY,EACjBlhD,KAAK+gD,QAAQe,SAAU,EAAKvN,EAAAP,OACrB,SAAAh0C,KAAK+gD,QAAQnF,UAAQ,KAAA,EAAA,IAAA,MAAA,OAAArH,EAAAN,UAAAE,EAAAn0C,UAC7B,WAAAy5C,OAAAA,EAAAh3C,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,UAAAmB,IAED,WACS,OAAA7G,KAAK+gD,SAAW/gD,KAAK+gD,QAAQe,UACrC,CAAAp8C,IAAA,SAAAmB,IAED,WACE,OAAO7G,KAAK+gD,YACbH,EA3Ec,GCoBV,SAAS5zC,KAA0B,IAAA,IAAAzJ,EAAAjB,UAAAZ,OAALyC,EAAGvC,IAAAA,MAAA2B,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAHU,EAAGV,GAAAnB,UAAAmB,GAEtC,IADMU,EAAAA,EAAI8I,OAAOC,UACTxL,OAAS,EAAG,OAAOyC,EAAI,GAC/B,IAAMgE,EAAO,IAAI2B,WAAW3F,EAAIgJ,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,EAAE/E,aAAY,IAC/DgF,EAAU,EAKPnF,OAJHoF,EAAAA,SAAQ,SAACC,GACN1I,EAAAA,IAAI0I,EAAGF,GACZA,GAAWE,EAAElF,cAERH,EAGF,SAAS85C,KAAOz8B,IAAAA,EAACljB,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAClB,OAAA,IAAIgtC,SAAQ,SAACC,GAAYoM,OAAAA,WAAWpM,EAAS/pB,MCzBzC08B,IAAAA,YAAS1I,GAAA9wC,EAAAw5C,EAAA1I,GAAA7wC,IA6DnB8wC,EA7DmB9wC,EAAAC,EAAAs5C,GAapB,SAAAA,EAAa/oB,GAAKziB,IAAAA,EASKA,OATLnR,OAAA28C,GACN18C,EAAAsyC,EAAVnvC,EAAAA,EAAAzH,UAAMi4B,IAbDue,OAAAA,IAAgBlyC,EAAAsyC,EAAAphC,YAEd,IAAElR,EAAAsyC,EAAAphC,YAEF,IAAElR,EAAAsyC,EAAAphC,kBAEI,MAAIlR,EAAAsyC,EAAAphC,gBAEN,IAAElR,EAAAsyC,EAAAphC,GAAA,eAAA,GAMR06B,EAAAA,QC3BF,SAAoBjY,GACzB,OAAA2mB,EAAA,CACEiC,WAAYrK,GACZ4J,MAAO,EACPC,WAAY,EACZ5H,QAAS,EACT9B,QAAS,KACTiC,eAAWt3C,EACXq3C,gBAAYr3C,EACZg/C,kBAAch/C,EACd2/C,sBAAkB3/C,EAClBw3C,uBAAmBx3C,EACnBi/C,oBAAgBj/C,EAChBo3C,aAAcjC,GACdkB,WAAOr2C,EACP6qC,IAAK,GACLgL,YAAQ71C,EACRy3C,OAAQ,MACRC,QAAS,GACTC,UAAM33C,EACN8+B,UAAM9+B,EACN43C,iBAAa53C,EACb63C,WAAO73C,EACP83C,cAAU93C,EACV+3C,cAAU/3C,EACVg4C,oBAAgBh4C,EAChB4/C,eAAW5/C,EACXi4C,gBAAiB,GACdthB,GDDYkpB,CAAUlpB,GAEvBziB,EAAK06B,QAAQ2Q,aAAerK,IAC3B6B,GAAY+I,gBAEb5rC,EAAKxH,KAAOwoC,IAEdhhC,EAAK+b,IAAM0G,EAAIje,OAAMxE,EAStBwrC,OARAz8C,EAAAy8C,EAAA,CAAA,CAAAx8C,IAAA,UAAAvC,MAED,WACS,OAAAnD,KAAKkP,OAASwoC,KACtB,CAAAhyC,IAAA,OAAAvC,MAMD,SAAMkqC,GAAkB,IAAA71B,EAAAxX,KAAbuH,EAAMjF,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACC,iBAAR+qC,GAAqBA,EAGrBA,EAAAA,EAFT9lC,EAAO8lC,IAAMA,GAAO9lC,EAAO8lC,KAAOrtC,KAAKoxC,QAAQ/D,KAKjD9lC,EAAShI,OAAOw1B,OAAO,GAAI/0B,KAAKoxC,QAAS7pC,IAE9B8wC,SAAQ9wC,EAAO8wC,OAAS94C,OAAOw1B,OAAO,GAAIxtB,EAAO8wC,SACxD9wC,EAAO2yC,SAAWnC,GAAcxwC,EAAO2yC,WAAU3yC,EAAO2yC,QAAU36C,OAAOw1B,OAAO,GAAIxtB,EAAO2yC,UAC3F3yC,EAAO4yC,MAAQpC,GAAcxwC,EAAO4yC,QAAO5yC,EAAO4yC,KAAO56C,OAAOw1B,OAAO,GAAIxtB,EAAO4yC,OAElF5yC,EAAO46C,mBACA56C,EAAAA,EAAO46C,iBAAiB56C,IAAWA,GAE9CA,EAAO2T,OAASlb,KAAKyyB,IAErB,IAAM8vB,EAAO,IAAI3B,GAAK5gD,KAAKkP,KAAM3H,GASjC,OARAg7C,EAAKC,OAAO7/C,GAAG02C,IAAuB,SAAClxC,GAChCrG,EAAAA,KAAKu3C,GAAuBlxC,MAE9BsoC,KAAAA,OAAOjwC,KAAK+hD,GACU,IAAvBviD,KAAKywC,OAAO/uC,QAAkB1B,KAAKyiD,cAAiBziD,KAAKyiD,aAAaX,SACxE9hD,KAAK0iD,eAGAH,EAAKlT,UACb,CAAA3pC,IAAA,SAAAvC,OAAAs2C,EAAA1G,EAAAC,IAAAC,MAED,SAAAC,IAAAyP,IAAAA,EAAA,OAAA3P,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAOQqrC,OANAqT,EAAU3iD,KAAKywC,OAAO9hC,KAAI,SAAA6W,GAAC,OAAIA,EAAEo2B,YAAUv6C,OAAOrB,KAAK4iD,OAAOj0C,KAAI,SAAA6W,GAAC,OAAIA,EAAEo2B,aAC3E57C,KAAKyiD,cACPE,EAAQniD,KAAKR,KAAKyiD,aAAa7G,UAEjC57C,KAAKywC,OAAS,GACdzwC,KAAK4iD,OAAS,GAAEtP,EAAArvC,KAAA,EACVqrC,QAAQyH,IAAI4L,GAAQ,KAAA,EAAA,OAAArP,EAAArvC,KAAA,EACpBg+C,KAAO,KAAA,EAAA,IAAA,MAAA,OAAA3O,EAAAW,UAAAf,EAAAlzC,UACd,WAAAy5C,OAAAA,EAAAh3C,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,eAAAvC,MAED,WAAgB,IAAAqV,EAAAxY,KAEd,GADKyiD,KAAAA,aAAeziD,KAAKywC,OAAO/gC,QAC3B1P,KAAKyiD,aAAV,CAEIziD,KAAKyiD,aAAa5B,OACf+B,KAAAA,OAAOpiD,KAAKR,KAAKyiD,cAExB,IAAMpF,EAAMr9C,KAAKyiD,aAAajvB,OAAO6oB,OAAM,SAAApT,OAErCoU,GAA8B,mBAAhBA,EAAIwF,SAExBxF,EAAIwF,SAAQ,WAAM,IAAAC,EAAAC,EACK,QAAjBD,EAAAtqC,EAAKiqC,oBAAY,IAAAK,GAAjBA,EAAmBjC,QAAoBkC,QAAXA,EAAAvqC,EAAKoqC,cAALG,IAAWA,OAAXA,EAAAA,EAAarhD,QAAS,IACpD8W,EAAKoqC,OAASpqC,EAAKoqC,OAAO31C,QAAO,SAAAs1C,GAAQA,OAAAA,GAAQA,IAAS/pC,EAAKiqC,iBAEjEjqC,EAAKkqC,sBAGR,CAAA,CAAAh9C,IAAA,iBAAAvC,MA/DD,WACE,OAAOo2C,GAAY+I,kBACpBJ,GA/B4BvhD,GEXzBqiD,GAAc,CAClB,IAAKvW,GAASrC,GAAIM,+BAClB,IAAK+B,GAASrC,GAAII,mBAClB,IAAKiC,GAASrC,GAAIK,kBAClBkP,QAASlN,GAASrC,GAAIG,iBACtB,MAAK,GAAAlpC,OAAKorC,GAASrC,GAAIE,SAAc,OACrC,MAAK,GAAAjpC,OAAKorC,GAASrC,GAAIE,SAAc,OACrC2Y,aAAcxW,GAASrC,GAAIE,SAC3B4Y,aAAY,GAAA7hD,OAAKorC,GAASrC,GAAIE,SAAuB,gBACrD6Y,IAAK1W,GAASrC,GAAIS,OAAOT,GAAIa,UAAUM,WACvC8I,QAAS5H,GAASrC,GAAIS,OAAOT,GAAIa,UAAUI,YAC3C+X,UAAW3W,GAASrC,GAAIS,OAAOT,GAAIa,UAAUK,mBAC7C+X,WAAY5W,GAASrC,GAAIS,OAAOT,GAAIa,UAAUY,YAC9CyX,WAAY7W,GAASrC,GAAIS,OAAOT,GAAIa,UAAUa,YAC9CyX,UAAW9W,GAASrC,GAAIO,OAAOP,GAAIa,UAAUtd,KAC7C61B,SAAU/W,GAASrC,GAAIQ,OAAOR,GAAIa,UAAUG,MAC5CqY,MAAOhX,GAASrC,GAAIW,OACpB2Y,YAAajX,GAASrC,GAAIY,SAASZ,GAAIa,UAAUgB,mBACjD0X,sBAAwBlX,GAASrC,GAAIY,SAASZ,GAAIa,UAAUiB,uBAC5D0X,IAAKnX,GAASrC,GAAIU,KAAKV,GAAIa,UAAUU,UAEjCkY,GAAczZ,GASnB,IACK0Z,GACJr+C,GAAA,SAAAq+C,EAAa50C,EAAMq+B,EAAUztC,GAASyF,OAAAu+C,GACpC,IAAIC,EAAa,EACbC,EAAW,EACXlkD,GAAWA,EAAQ+4C,OAAS/4C,EAAQ+4C,MAAMn3C,OAAS,IACrDqiD,EAAajkD,EAAQ+4C,MAAM,GAC3BmL,EAAWlkD,EAAQ+4C,MAAM,IAErBoL,IAAAA,EAXV,SAAiC1W,GAC/B,OAAOyV,GAAYzV,IAAaA,EAUb2W,CAAuB3W,GACjC,MAAA,CACLL,UAAW+W,EACXjX,UAAW99B,EAEXg6B,cAAcppC,MAAAA,SAAAA,EAASqkD,YAAYrkD,MAAAA,OAAAA,EAAAA,EAAS65B,SAC5C0T,IAAKvtC,MAAAA,OAAAA,EAAAA,EAASutC,IACdE,SAAAA,EACAxuB,QAAAA,GACAglC,WAAAA,EACAC,SAAAA,EACA57B,IAAKtoB,EACLskD,WAAY,CACVC,KAAMJ,EACNtqB,SAAS75B,MAAAA,SAAAA,EAASqkD,YAAYrkD,MAAAA,OAAAA,EAAAA,EAAS65B,cAMzC2qB,GACJ7+C,GAAA,SAAA6+C,EAAap1C,EAAMg+B,EAAW9kB,GACrB,OAD0B7iB,OAAA++C,GAC1B,CACLpX,UAAAA,EACAF,UAAW99B,EAEX6P,QAAAA,GACAmqB,aAAc9gB,EAAI2kB,IAClB3kB,IAAAA,EACAg8B,WAAY,CACVC,KAAMnX,EACNvT,QAASvR,EAAI2kB,SCxEfwX,GAAO,GAEbA,GAAKnW,QAAU,WACT,IACF,OAAO1/B,SAASghC,YAAYC,MAAO,UAC5B1G,GACA,OAAA,IAAIluB,MAAO60B,YAKjB4U,GAAAA,WAAa,SAAUvyB,EAAOC,GACjC,IAAMuyB,EAAa,GACfC,EAAa,EACbzyB,GACFwyB,EAAWjkD,KAAKyxB,GAEdC,GACFuyB,EAAWjkD,KAAK0xB,GAEPyyB,EAAAA,OAAM,SAAA/1C,GAER,OADPA,IAAS81C,GAAc91C,EAAKtG,aACrB,KAEH4B,IAAAA,EAAS,IAAIJ,WAAW46C,GAC1BngD,EAAS,EAQN2F,OAPIy6C,EAAAA,OAAM,SAAA/1C,GAKR,OAJHA,IACK9J,EAAAA,IAAI8J,EAAMrK,GACjBA,GAAUqK,EAAKtG,aAEV,KAEF4B,GClCI06C,IAAAA,GAAUn/C,GACrB,SAAAm/C,EAAa7X,EAAK5kC,GAAM5C,OAAAq/C,GACtB5kD,KAAKkP,KAAO,OACZlP,KAAK25B,QAAUoT,EACf/sC,KAAKmI,KAAOA,KCJH08C,GAAK,WAAA,SAAAA,IAAAt/C,OAAAs/C,GAAAr/C,eACD5E,OAAAA,OAAO,OAYrBikD,OAZ0Bp/C,EAAAo/C,EAAA,CAAA,CAAAn/C,IAAA,MAAAvC,MAE3B,SAAKokB,EAAIpf,GACPnI,KAAKqJ,MAAMke,GAAMpf,IAClB,CAAAzC,IAAA,MAAAvC,MAED,SAAKokB,GACH,OAAOvnB,KAAKqJ,MAAMke,KACnB,CAAA7hB,IAAA,QAAAvC,MAED,WACOkG,KAAAA,MAAezI,OAAAA,OAAO,UAC5BikD,EAbe,GCCFC,SAAAA,GAAgB3+B,EAAMngB,GACpC,IAAMsgB,EAASH,EAAKvG,KAChB,GAAC0G,GAAWA,EAAO5kB,OAAnB,CACJ,IAAM+T,EAAa6Q,EAAOE,MAAK,SAAAhB,GAAC,IAAAiB,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAAjB,EAAExF,YAAI0G,IAAAD,GAAMC,QAANA,EAAND,EAAQvG,gBAAIwG,OAANA,EAANA,EAAcpG,gBAC5C5K,EAAa4Q,EAAOE,MAAK,SAAAhB,GAAC,IAAAoB,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAApB,EAAExF,YAAI6G,IAAAD,GAAMC,QAANA,EAAND,EAAQ1G,gBAAI2G,OAANA,EAANA,EAAcvG,gBAC9C,GAAC7K,GAAeC,EAAhB,CAEJ,IAGIqvC,EAHAC,EAAgB,GAChBC,EAAgB,GAGpB,GAAIxvC,EAAY,CAAA,IAAAyvC,EAAAC,EAAAC,EACRh6B,UAAS85B,EAAGzvC,EAAWuK,YAAI,IAAAklC,GAAM,QAANC,EAAfD,EAAiB/kC,YAAjBglC,IAAqBA,OAAN,EAAfA,EAAuB1kC,KACzC,IAAK2K,EAAW,OACVllB,IAAAA,EAAgCk/C,QAAvBA,EAAG3vC,EAAWuK,KAAKC,YAAhBmlC,IAAoBA,OAApBA,EAAAA,EAAsBl/C,UAChC+a,EAAuCmK,EAAvCnK,KAAME,EAAiCiK,EAAjCjK,KAAMC,EAA2BgK,EAA3BhK,KAAMC,EAAqB+J,EAArB/J,KAAMO,EAAewJ,EAAfxJ,KAAMV,EAASkK,EAATlK,KAClC,KAAChb,GAAc+a,GAASE,GAASC,GAASC,GAASO,GAAM,OAE1CojC,GADHK,EAAAA,GAAYr/C,EAAUE,EAAW+a,EAAME,EAAMC,EAAMC,EAAMO,EAAMV,IAC9CvS,KAAI,SAAA+I,GAAC,OAAIA,EAAE1R,YAE9C,GAAI0P,EAAY,CAAA,IAAA4vC,EAAAC,EAAAC,EACR/5B,UAAS65B,EAAG5vC,EAAWsK,YAAI,IAAAslC,GAAM,QAANC,EAAfD,EAAiBnlC,YAAjBolC,IAAqBA,OAAN,EAAfA,EAAuB9kC,KACzC,IAAKgL,EAAW,OACVvlB,IAAAA,EAAgCs/C,QAAvBA,EAAG9vC,EAAWsK,KAAKC,YAAhBulC,IAAoBA,OAApBA,EAAAA,EAAsBt/C,UAChC+a,EAA2BwK,EAA3BxK,KAAME,EAAqBsK,EAArBtK,KAAMC,EAAeqK,EAAfrK,KAAMC,EAASoK,EAATpK,KACtB,KAACnb,GAAc+a,GAASE,GAASC,GAASC,GAAM,OACpCgkC,EAAAA,GAAYr/C,EAAUE,EAAW+a,EAAME,EAAMC,EAAMC,EAAM,KAAM,KAAM0jC,GAGhF,MAAA,CACLC,cAAAA,EACAC,cAAAA,KAIKI,SAAAA,GAAaI,EAAav/C,EAAW+a,EAAME,EAAMC,EAAMC,EAAMO,EAAMV,EAAM6jC,GAChF,IAQIp5B,EASAD,EAMAkd,EACA5iC,EAxBEqM,EAAS,GACTqzC,EAAM,GACNC,EAAc,GACd95B,EAAc1K,EAAKK,QACnBsK,EAAczK,EAAKG,QACnBuK,EAAiB3K,EAAKiE,WACtB2G,EAAcpK,MAAAA,OAAAA,EAAAA,EAAMJ,QACpBoK,EAAc1K,MAAAA,OAAAA,EAAAA,EAAMM,QAEtBoK,IACFD,EAAU,GACEpe,EAAAA,SAAQ,SAAAgd,GAClB,IADyC,IAApBngB,EAAKmgB,EAALngB,MAAO7F,EAAMgmB,EAANhmB,OACnB/C,EAAI,EAAGA,EAAI4I,EAAO5I,IACzBmqB,EAAQnrB,KAAK+D,OAKfynB,IACFN,EAAc,GACFne,EAAAA,SAAQ,SAAAmK,GAAOgU,EAAYhU,EAAI,IAAK,MAKlD,IAAIf,EAAY,EACZuV,EAAM,EACNC,EAAa,EACbC,EAAgB,EAChBC,EAAgB,EAChBC,EAAoBT,EAAY,GAAGzG,gBACnCmH,EAAiBV,EAAY,GAAKA,EAAY,GAAG1G,WAAa,EAAI9O,EAAAA,EAClEvP,EAAM,EACN2W,GAAQ,EACP+D,EAAAA,QAAQjU,SAAQ,SAAA0e,GAAsB,IAAnB7hB,EAAK6hB,EAAL7hB,MAAO2O,EAAKkT,EAALlT,MAClBA,EAAAA,EACX,IAAA,IAASvX,EAAI,EAAGA,EAAI4I,EAAO5I,IACjBonC,EAAA,CACN9hC,IAAAA,EACA6P,UAAAA,EACA3Q,SAAAA,EACAqC,KAAM0jB,EAAeG,IAAQ9K,EAAK1H,WAClCnV,OAAQunB,EAAYK,GAAcE,EAClC1B,MAAOuB,GAELF,IACF4c,EAAM9gC,SAAW4jB,EAAYQ,GACzB0c,EAAM9gC,UACR2V,IACIjd,EAAAA,KAAK,CAACooC,IACEpoC,EAAAA,KAAKooC,EAAM5iC,YAEvB0/C,EAAIA,EAAIhkD,OAAS,GAAGlB,KAAKooC,GACb8c,EAAAA,EAAIhkD,OAAS,IAAMknC,EAAM5iC,UAEvC4iC,EAAMnrB,MAAQA,GAEZkO,GAAWO,EAAMP,EAAQjqB,SACrBqF,EAAAA,IAAMD,EAAM6kB,EAAQO,IAEhB,IAARA,IACF0c,EAAM7hC,IAAM,GAEdsL,EAAO7R,KAAKooC,GACC5iC,GAAAA,EACN+S,GAAAA,IACPmT,EAEUI,EACRD,GAAiBuc,EAAMvgC,MAEvB8jB,IACgBE,EAAA,EACZF,GAAcI,IAChBH,IACAG,EAAiBV,EAAYO,EAAgB,GAAKP,EAAYO,EAAgB,GAAGjH,WAAa,EAAI9O,EAAAA,GAEpGiW,GAAqBT,EAAYO,GAAehH,oBAKtD,IAAM3jB,EAAI4Q,EAAO3Q,OACjB,GAAKD,KAAMmgB,GAASvP,EAAO,GAAGvK,UAA9B,CAEA,IAGI89C,EAHEC,EAAW,GACbC,EAAY,GACZvuC,EAAO,EAEPwuC,EAAS,EACPC,EAAc,SAAChgD,GAAaigD,IAAAA,EACpBH,EAAAA,EAAUA,EAAUpkD,OAAS,GACzCmkD,EAASrlD,KAAK,CACZmqB,MAAOk7B,EAASnkD,OAChBiV,WAAyC,QAA7BsvC,EAAAJ,EAASA,EAASnkD,OAAS,UAA3BukD,IAA6BA,OAA7BA,EAAAA,EAA+BtQ,UAAWmQ,EAAU,GAAGnvC,UAAYzQ,EAC/EyvC,SAAUiQ,EAAUjvC,UAAYivC,EAAU5/C,UAAYE,EACtDF,SAAUA,EACV6yC,MAAO,CAACiN,EAAU,GAAGvhD,OAAQqhD,EAAUrhD,OAASqhD,EAAUv9C,MAC1DgK,OAAQyzC,IAEHvuC,EAAA,EACPuuC,EAAY,IAGd,GAAIlkC,EAEF,IADA,IAAM5b,EAAWy/C,EAAcv/C,EACtB1E,EAAI,EAAGC,EAAIikD,EAAIhkD,OAAQF,EAAIC,EAAGD,IAAK,CAAA0kD,IAAAA,EAC1C3uC,GAAQouC,EAAYnkD,IACpB0kD,EAAAJ,GAAUtlD,KAAIiC,MAAAyjD,EAAA/3B,EAAIu3B,EAAIlkD,KAClBA,EAAI,EAAIC,GACA,IAAND,GAAW+V,EAAOvR,IACpBggD,EAAYzuC,EAAOrR,GAGrB8/C,EAAYzuC,EAAOrR,QAMvB,IADIF,IAAAA,GADJ++C,EAAmBA,GAAoB,IACP,IAAMU,EAC7BjkD,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CAChBhB,EAAAA,KAAK6R,EAAO7Q,IAEtB,IAAM2kD,GADN5uC,GAAQlF,EAAO7Q,GAAGwE,UACKE,GACnB1E,EAAI,GAAKC,GAAK0kD,EAAUJ,GAAU//C,KACpC+/C,GAAUI,EAAUngD,EACpBggD,EAAYG,GACDpB,EAAAA,EAAiBc,EAASnkD,SAAW+jD,GAK/CI,OAAAA,GAGF,SAASO,GAAYjgC,GAC1B,IAAIkgC,EAAa,GACbC,EAAa,GACb1gD,EAAQ,EACRC,EAAS,EACT0gD,EAAoB,EACpBC,EAAkB,EAClBxgD,EAAW,EACXygD,EAAiB,EACjBC,EAAiB,EACjBvgC,EAAKxG,OACP3Z,EAAWmgB,EAAKxG,KAAK3Z,SAAWmgB,EAAKxG,KAAKzZ,WAG5C,IAAMogB,EAASH,EAAKvG,KAEpB,GAAI0G,EAAQ,CACV,IAGIqgC,EACYC,EAAAC,EAAAC,EAENC,EAAAC,EAAAx6B,EAKkB7E,EAAAC,EAKZq/B,EAAAC,EAAAC,EAENC,EAAAC,EAAAC,EAKkBz/B,EAAAC,EAvBtBrS,EAAa6Q,EAAOE,MAAK,SAAAhB,GAAC,IAAAoF,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAApF,EAAExF,YAAI6K,IAAAD,GAAMC,QAANA,EAAND,EAAQ1K,gBAAI2K,OAANA,EAANA,EAAcvK,gBAC5C5K,EAAa4Q,EAAOE,MAAK,SAAAhB,GAAC,IAAAsF,EAAAC,EAAA,MAAkC,UAAxB,QAAND,EAAAtF,EAAExF,YAAI+K,IAAAD,GAAMC,QAANA,EAAND,EAAQ5K,gBAAI6K,OAANA,EAANA,EAAczK,gBAC9C6H,EAAK,KAET,GAAI1S,EAEF,GADEmxC,EAAkB,QAAlBA,EAAGnxC,EAAWuK,YAAI,IAAA4mC,GAAMC,QAANA,EAAfD,EAAiBzmC,YAAI2mC,IAAAD,WAAAC,EAArBD,EAAuBpmC,YAAI,IAAAqmC,OAAZ,EAAfA,EAA6B9lC,KAAKQ,QAAQ,GAMzC2G,GAJJviB,EAAQuiB,EAAGviB,MACXC,EAASsiB,EAAGtiB,OACZ4gD,UAAcM,EAAGtxC,EAAWuK,YAAI,IAAA+mC,GAAM,QAANC,EAAfD,EAAiB9mC,YAAjB+mC,IAAqBA,OAAN,EAAfA,EAAuB9gD,UAC9BsmB,EAAsBA,QAAtBA,EAAIrE,EAAG5E,MAAQ4E,EAAGvhB,YAAf4lB,IAAmBA,OAAnBA,EAAAA,EAAsBrmB,MACnB,SAAZgiB,EAAGjZ,KACLy3C,EAAoB,QAAVh/B,EAAGQ,EAAG1G,YAAImG,IAAAD,GAAMC,QAANA,EAAPD,EAASjG,gBAAIkG,OAANA,EAAPA,EAAejG,KAAK+B,YAIvC,GAAIhO,EAEF,GADEuxC,EAAkB,QAAlBA,EAAGvxC,EAAWsK,YAAI,IAAAinC,GAAMC,QAANA,EAAfD,EAAiB9mC,YAAIgnC,IAAAD,WAAAC,EAArBD,EAAuBzmC,YAAI,IAAA0mC,OAAZ,EAAfA,EAA6BnmC,KAAKQ,QAAQ,GAMzC2G,GAJJo+B,EAAoBp+B,EAAG7gB,aACvBk/C,EAAkBr+B,EAAG9gB,WACrBi/C,EAAoB,QAAVc,EAAGj/B,EAAG/E,YAAI,IAAAgkC,OAAA,EAAPA,EAASjhD,MACtBugD,UAAcW,EAAG3xC,EAAWsK,YAAI,IAAAqnC,GAAM,QAANC,EAAfD,EAAiBpnC,YAAjBqnC,IAAqBA,OAAN,EAAfA,EAAuBphD,UACxB,SAAZiiB,EAAGjZ,KACLy3C,EAAaA,IAAqB,QAAX9+B,EAAIM,EAAG1G,YAAI,IAAAoG,GAAMC,QAANA,EAAPD,EAASnG,gBAAIoG,OAAN,EAAPA,EAAenG,KAAK+B,aAI9C,MAAA,CACLf,IAAKgkC,EAAaA,EAAW16C,KAAK,IAAM,KACxCo6C,WAAAA,EACAC,WAAAA,EACA1gD,MAAAA,EACAC,OAAAA,EACA4gD,eAAAA,EACAF,kBAAAA,EACAC,gBAAAA,EACAxgD,SAAAA,EACA0gD,eAAAA,EACAvgC,KAAAA,IAKC,SAASohC,GAAUxrB,GACxB,MAAoB,iBAANA,IAAmB3tB,OAAO6qC,MAAMld,0BClOnCyrB,YAAShO,GAAA9wC,EAAA8+C,EAAAhO,GAAA7wC,IAmTnB8+C,EAzBAC,EANAC,EAdAC,EAzBAC,EATAC,EARAC,EA9EAC,EA1EAC,EALAC,EAPAC,EAxDmBx/C,EAAAC,EAAA4+C,GAapB,SAAAA,EAAajgD,GAAQmP,IAAAA,EAAAnR,OAAAiiD,GACZhiD,EAAAsyC,EAAPnvC,EAAAA,EAAAzH,KAAAlB,aAbI,IAAEwF,EAAAsyC,EAAAphC,SACF,IAAElR,EAAAsyC,EAAAphC,GAAA,OACD,IAAElR,EAAAsyC,EAAAphC,kBACM,IAAElR,EAAAsyC,EAAAphC,mBACD,IAAElR,EAAAsyC,EAAAphC,mBACF,IAAElR,EAAAsyC,EAAAphC,WACV,MAAIlR,EAAAsyC,EAAAphC,GAAA,wBACa,GAAAlR,EAAAsyC,EAAAphC,GAAA,+BACO,GAAAlR,EAAAsyC,EAAAphC,GAAA,cAAA,GAAAlR,EAAAsyC,EAAAphC,GAAA,cAAA,GAAAlR,EAAAsyC,EAAAphC,GA2Ud,mBAAA,SAACsc,GAEVA,OAAAA,KAvUFoe,EAAAA,QCtBP0O,EAAA,CACEhH,IAAK,GACLsP,QAAS,IACTC,gBAAiB,EACjBC,oBAAqB,GACrB1O,aAAc,cACdS,MAAO,MDgBkB9yC,GACzB,IAAA85C,EAII3qC,EAAK06B,QAHP0H,EAAGuI,EAAHvI,IACAuB,EAAKgH,EAALhH,MACGqH,EAAIC,EAAAN,EAAAO,IAaPlrC,OAXG2jC,EAAAA,MAAQA,GAAS,IAAIwK,GACrB/L,EAAAA,IAAMA,GAAO4I,EAAKrU,IACvB32B,EAAK22B,IAAMqU,EAAKrU,IAChBqU,EAAKD,eAAiB/qC,EAAK6xC,gBAC3B7xC,EAAKwE,OAAS,IAAIhQ,GAAO,aAAewL,EAAKoiC,KAC3CvxC,EAAOmsB,SAAWxoB,GAAOonB,SAC3BovB,EAAKxmC,OAASxE,EAAKwE,OAEd6lC,EAAAA,QAAU,IAAImB,GAAUR,GAC7BhrC,EAAKqqC,QAAQp+C,GAAG02C,IAAuB,SAAClxC,GACjCrG,EAAAA,KAAKu3C,GAAuBlxC,MACjCuO,EA2TH8wC,OA1TA/hD,EAAA+hD,EAAA,CAAA,CAAA9hD,IAAA,eAAAmB,IAED,WACE,OAAO7G,KAAKglD,cAActjD,QAAU1B,KAAKilD,cAAcvjD,SACxD,CAAAgE,IAAA,oBAAAvC,MAED,SAAmBqlD,GACbjB,GAASiB,KACXxoD,KAAKyoD,qBAAuBD,KAE/B,CAAA9iD,IAAA,gBAAAvC,MAED,SAAeqlD,GACW,IAAAE,EAAAC,EAApBpB,QAAAA,GAASiB,IAEJA,aADWE,OAAK1D,cAAchlD,KAAKglD,cAActjD,OAAS,UAAE,IAAAgnD,OAAA,EAAjDA,EAAmD/9B,iBAAKg+B,EAAI3oD,KAAKilD,cAAcjlD,KAAKilD,cAAcvjD,OAAS,UAAE,IAAAinD,OAAA,EAAjDA,EAAmDh+B,QAAS,KAK7I,CAAAjlB,IAAA,mBAAAvC,MAED,SAAkBqlD,GAChB,OAAOA,IAAaxoD,KAAK4oD,8BAC1B,CAAAljD,IAAA,YAAAvC,OAAAglD,EAAApV,EAAAC,IAAAC,MAED,SAAAC,EAAiB7F,GAAGyL,IAAAA,EAAAsP,EAAAS,EAAAC,EAAAxmD,UAAA,OAAA0wC,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EACZ,OADc60C,EAAGgQ,EAAApnD,OAAA,QAAAc,IAAAsmD,EAAA,GAAAA,EAAA,GAAGzb,EAAK+a,EAAOU,EAAApnD,OAAAonD,EAAAA,UAAAtmD,EAAEqmD,EAAeC,EAAApnD,OAAAonD,EAAAA,UAAAtmD,EAAA8wC,EAAArvC,KAAA,EACjDjE,KAAKub,MAAMstC,GAAgB,KAAA,EAC7Bxb,IAAKrtC,KAAKqtC,IAAMA,GAChByL,IAAK94C,KAAK84C,IAAMA,GAChBsP,IAASpoD,KAAKoxC,QAAQgX,QAAUA,GAAO,KAAA,EAAA,IAAA,MAAA,OAAA9U,EAAAW,UAAAf,EAAAlzC,UAC5C,SAAAk0C,GAAAiU,OAAAA,EAAA1lD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,gBAAAvC,OAAA+kD,EAAAnV,EAAAC,IAAAC,MAED,SAAAkB,EAAqBkG,GAAK,OAAArH,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EAAA,GACnBjE,KAAK+oD,aAAY,CAAAxU,EAAAtwC,KAAA,EAAA,MAAQ,OAARswC,EAAAtwC,KAAA,EAAQjE,KAAKgpD,SAAS3O,GAAM,KAAA,EAAA,OAAA9F,EAAAP,OAC3C,SAAAh0C,KAAKipD,MAAI,KAAA,EAAA,IAAA,MAAA,OAAA1U,EAAAN,UAAAE,EAAAn0C,UACjB,SAAAi3C,GAAAiR,OAAAA,EAAAzlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,kBAAAvC,OAAA8kD,EAAAlV,EAAAC,IAAAC,MAED,SAAAiW,EAAuB7O,EAAK9vB,EAAwBsvB,EAAYtyC,GAAM,IAAA0kB,EAAAk9B,EAAAf,EAAAgB,EAAA5xC,EAAAxX,KAAA,OAAAgzC,IAAAK,MAAA,SAAAgW,GAAA,cAAAA,EAAA9V,KAAA8V,EAAAplD,MAAA,KAAA,EAuE9D,OAvE8D2rB,EAAAA,EAAArF,EAAA,GAAvC4+B,EAASl9B,EAAA,GAAEm8B,EAAOn8B,EAAA,GAC/CjsB,KAAKs8C,QAAS,EACdt8C,KAAKkb,OAAOqX,MAAM,kCAAmC,CAAC42B,EAAWf,IAC3DgB,EAAgB,WAAA58B,IAAAA,EAAAumB,MAAAE,MAAG,SAAAyD,EAAOvuC,EAAMmhD,EAAOh2B,GAAO,IAAAnN,EAAA6L,EAAAu3B,EAAApa,EAAAqa,EAAA3D,EAAAb,EAAAC,EAAA,OAAAjS,IAAAK,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5yC,MAAA,KAAA,EAU6B,GAT3EuT,EAAKyxC,MAALzxC,MAAa8b,GAAAA,EAASulB,OAASvlB,EAAQulB,MAAMn3C,OAAS,GAAK4xB,EAAQulB,MAAM,IAAMuP,IACzEkB,GAAA,EACR9xC,EAAK0D,OAAOqX,MAAM,8CAA+C42B,EAAWf,EAAS,MAEnFkB,GAAAA,MAASh2B,GAAAA,EAASulB,OAASvlB,EAAQulB,MAAMn3C,OAAS,GAAK4xB,EAAQulB,MAAM,GAAKuP,IACpEkB,GAAA,EACR9xC,EAAK0D,OAAOqX,MAAM,mDAAoD42B,EAAWf,EAAS,MAE5F5wC,EAAK0D,OAAOqX,MAAM,2BAA4B42B,EAAWf,EAAS,YAAa90B,EAAQulB,MAAO,YAAc1wC,EAAOA,EAAKG,gBAAa9F,EAAY,WAAY8mD,EAAO,QAAQ9xC,EAAK8kC,SAChL9kC,EAAK8kC,QAAUn0C,GAAQA,EAAKG,WAAa,GAAKuxC,EAAW1xC,EAAMmhD,EAAOh2B,IACnE9b,EAAKyxC,KAAK9iC,OAAQ3O,EAAK8kC,OAAM,CAAAzF,EAAA5yC,KAAA,EAAA,MAAA4yC,OAAAA,EAAA7C,OAAA,UAAA,KAAA,EAAA,KAC7B7rC,GAAQA,EAAKG,WAAa,GAAC,CAAAuuC,EAAA5yC,KAAA,GAAA,MAEyB,GADtDuT,EAAKtN,OAAS8C,GAAiBwK,EAAKtN,OAAQ/B,GACxCge,EAAOvI,GAAUG,QAAQvG,EAAKtN,OAAQ,CAAC,SAAS,GAC3C,CAAA2sC,EAAA5yC,KAAA,GAAA,MACiD,GAAlD+tB,EAAOpU,GAAUG,QAAQvG,EAAKtN,OAAQ,CAAC,SAAS,IAClDo/C,EAAK,CAAAzS,EAAA5yC,KAAA,GAAA,MAAA,GACF+tB,EAAI,CAAA6kB,EAAA5yC,KAAA,GAAA,MAE+D4yC,OADtEr/B,EAAK8kC,QAAS,EACHzC,EAAA,KAAMyP,EAAOh2B,EAAS,CAAClvB,IAAI,iCAAgCyyC,EAAA7C,OAAA,UAAA,KAAA,GAI9B,OAAtBhiB,EAAAA,EAAK9lB,MAAQ8lB,EAAK3pB,KAAIwuC,EAAA5yC,KAAA,GACtBuT,EAAKiyC,SAAS,CAACN,EAAW,IAAK9O,EAAO9yC,GAAO,KAAA,IAAzD4nC,EAAG0H,EAAAoF,QAEP91B,EAAOvI,GAAUG,QAAQoxB,EAAIhnC,KAAM,CAAC,SAAS,IAC9C,KAAA,GAAA,KAIHge,GAAQmjC,GAASnjC,EAAK9d,KAAO8d,EAAKhe,KAAKzG,QAAM,CAAAm1C,EAAA5yC,KAAA,GAAA,MACsF,OAAhIiX,EAAAA,OAAOqX,MAAM,yCAA0Ce,EAAQulB,MAAM,GAAI,YAAarhC,EAAKtN,OAAO5B,WAAY,WAAYghD,GAAMzS,EAAA5yC,KAAA,GAC/HuT,EAAKkyC,gBAAgBrP,EAAO,CAAC/mB,EAAQulB,MAAM,GAAI1yB,EAAKja,MAAQia,EAAK9d,KAAO,GAAIwxC,GAAW,KAAA,GAAA,KAE3F1zB,GAAQA,EAAK9d,MAAQ8d,EAAKhe,KAAKzG,SAAW8V,EAAKyxC,KAAK9iC,KAAI,CAAA0wB,EAAA5yC,KAAA,GAAA,MACnB,GAApB2Z,EAAAA,GAAUuI,KAAKA,GACnB,CAAA0wB,EAAA5yC,KAAA,GAAA,MAEkD4yC,OAD/Dr/B,EAAK8kC,QAAS,EACHzC,EAAA,KAAMyP,EAAOh2B,EAAS,CAAClvB,IAAI,0BAAyByyC,EAAA7C,OAAA,UAAA,KAAA,GAKQ,GAAnE6R,EAAWf,GAAe0E,EAAYhyC,EAAK45B,QAAQiX,iBAC5C,CAAAxR,EAAA5yC,KAAA,GAAA,MAEoD4yC,OAD/Dr/B,EAAK8kC,QAAS,EACHzC,EAAA,KAAMyP,EAAOh2B,EAAS,CAAClvB,IAAI,0BAAyByyC,EAAA7C,OAAA,UAAA,KAAA,GAK5DiV,EAAAA,KAAO7C,GAAWoD,GACkB3D,EAAAA,EAAjCb,cAAeC,EAAkBY,EAAlBZ,cACvBztC,EAAKwtC,cAAgBA,EACrBxtC,EAAKytC,cAAgBA,EAChB/pC,EAAAA,OAAOqX,MAAM,6BAClBsnB,OAAWr3C,EAAW8mD,EAAO,CAC3BL,KAAM,CACJA,KAAMzxC,EAAKyxC,KACXjE,cAAAA,EACAC,cAAAA,KAEF,KAAA,GAAA,IAAA,MAAA,OAAApO,EAAA5C,UAAAyC,OAGP,OAAA,SAnEqBiT,EAAAC,EAAAC,GAAAr9B,OAAAA,EAAA/pB,MAAAzC,KAAAsC,YAAA,GAAA+mD,EAAAplD,KAAA,EAoEhBjE,KAAKypD,SAAS,CAACN,EAAWf,GAAWpoD,KAAKoxC,QAAQgX,SAAU/N,EAAKyF,EAAA,CAAIjG,WAAYuP,GAAqB7hD,IAAQ,KAAA,EAAA,IAAA,MAAA,OAAA8hD,EAAApV,UAAAiV,EAAAlpD,UACrH,SAAAk3C,EAAAC,EAAA2S,EAAAC,GAAA9B,OAAAA,EAAAxlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,WAAAvC,OAAA6kD,EAAAjV,MAAAE,MAED,SAAA+W,EAAgB3P,EAAO+N,EAAS7gD,GAAM,IAAA0iD,EAAA9a,EAAAhpB,EAAA6L,EAAAm3B,EAAAK,EAAA3D,EAAAb,EAAAC,EAAA,OAAAjS,IAAAK,MAAA,SAAA6W,GAAA,cAAAA,EAAA3W,KAAA2W,EAAAjmD,MAAA,KAAA,EAGpB,OAFVgmD,EAAY,GACb/uC,KAAAA,OAAOqX,MAAM,oBAAmB23B,EAAAjmD,KAAA,EACrBjE,KAAKypD,SAAS,CAAC,EAAGrB,GAAWpoD,KAAKoxC,QAAQgX,SAAU/N,EAAO9yC,GAAO,KAAA,EAA3E,GAAH4nC,EAAG+a,EAAAjO,KACC,CAAAiO,EAAAjmD,KAAA,EAAA,MAAAimD,OAAAA,EAAAlW,OAAA,UAAA,KAAA,EAE2C,GADnDiW,EAAUzpD,KAAK2uC,GACXhpB,EAAOvI,GAAUG,QAAQoxB,EAAIhnC,KAAM,CAAC,SAAS,GACxC,CAAA+hD,EAAAjmD,KAAA,GAAA,MAC8C,GAA/C+tB,EAAOpU,GAAUG,QAAQoxB,EAAIhnC,KAAM,CAAC,SAAS,GAC1C,CAAA+hD,EAAAjmD,KAAA,GAAA,MAAA,MACD,IAAI2gD,GAAW,+BAAgCzV,EAAIhnC,MAAK,KAAA,GAExB,OAAtB6pB,EAAAA,EAAK9lB,MAAQ8lB,EAAK3pB,KAAI6hD,EAAAjmD,KAAA,GAC5BjE,KAAKypD,SAAS,CAACN,GAAY9O,EAAO9yC,GAAO,KAAA,GAAlD,GAAH4nC,EAAG+a,EAAAjO,KACK,CAAAiO,EAAAjmD,KAAA,GAAA,MAAAimD,OAAAA,EAAAlW,OAAA,UAAA,KAAA,GAEkD,GAD1DiW,EAAUzpD,KAAK2uC,GACRvxB,EAAAA,GAAUG,QAAQoxB,EAAIhnC,KAAM,CAAC,QAASghD,GAAW,GAC/C,CAAAe,EAAAjmD,KAAA,GAAA,MAAA,MACD,IAAI2gD,GAAW,uBAAwBzV,EAAIhnC,MAAK,KAAA,GAAA,KAGtDge,EAAK9d,KAAO8d,EAAKhe,KAAKzG,QAAM,CAAAwoD,EAAAjmD,KAAA,GAAA,MAAA,OAAAimD,EAAAjmD,KAAA,GAClBjE,KAAKypD,SAAS,CAACta,EAAIhnC,KAAKzG,OAAQykB,EAAKja,MAAQia,EAAK9d,KAAO,GAAIgyC,EAAO9yC,GAAO,KAAA,GAApF,GAAH4nC,EAAG+a,EAAAjO,KACK,CAAAiO,EAAAjmD,KAAA,GAAA,MAAAimD,OAAAA,EAAAlW,OAAA,UAAA,KAAA,GACRiW,EAAUzpD,KAAK2uC,GACfhpB,EAAKhe,KAAO6E,GAAiBmZ,EAAKhe,KAAMgnC,EAAIhnC,MAAK,KAAA,GAEZ,GAApByV,EAAAA,GAAUuI,KAAKA,GACnB,CAAA+jC,EAAAjmD,KAAA,GAAA,MAAA,MACP,IAAI2gD,GAAW,wBAAyBz+B,EAAKhe,MAAK,KAAA,GAGe,GAAnE09C,EAAWf,GAAe0E,EAAYxpD,KAAKoxC,QAAQiX,iBAC5C,CAAA6B,EAAAjmD,KAAA,GAAA,MAAA,MACL,IAAI2gD,GAAW,wBAAyBz+B,EAAKhe,MAAK,KAAA,GAOjB+hD,OAJpCjB,KAAAA,KAAO7C,GAAWoD,GACkB3D,EAAAA,EAAjCb,cAAeC,EAAkBY,EAAlBZ,cACvBjlD,KAAKglD,cAAgBA,EACrBhlD,KAAKilD,cAAgBA,EAChB/pC,KAAAA,OAAOqX,MAAM,wBAAuB23B,EAAAlW,OAClC,SAAA,CACLiV,KAAMjpD,KAAKipD,KACXjE,cAAAA,EACAC,cAAAA,EACAgF,UAAAA,IACD,KAAA,GAAA,IAAA,MAAA,OAAAC,EAAAjW,UAAA+V,EAAAhqD,UACFgpD,SAAAmB,EAAAC,EAAAC,GAAArC,OAAAA,EAAAvlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,gBAAAvC,MAED,SAAe8lD,EAAMqB,GACnB,IACMzE,EAAWf,GADAmE,EAAT9iC,KAC8BnmB,KAAKoxC,QAAQiX,iBAC3CrD,EAAiCa,EAAjCb,cAAeC,EAAkBY,EAAlBZ,cACvBjlD,KAAKglD,cAAgBA,EACrBhlD,KAAKilD,cAAgBA,EACrBjlD,KAAKyoD,qBAAuB6B,EAC5BtqD,KAAKipD,KAAOA,IACb,CAAAvjD,IAAA,mBAAAvC,MAED,SAAkBoU,GACZ0a,IAAAA,EACAC,EAUG,OATFlyB,KAAKglD,cAActjD,QAGtBuwB,EAAQjyB,KAAKglD,cAAcx+B,MAAK,SAAA9O,GAAC,OAAIA,EAAEf,WAAaY,GAAQG,EAAEi+B,QAAUp+B,QAE9D2a,EAAAlyB,KAAKilD,cAAchzB,EAAMtH,QAJnCuH,EAAQlyB,KAAKilD,cAAcz+B,MAAK,SAAA9O,GAAC,OAAIA,EAAEf,WAAaY,GAAQG,EAAEi+B,QAAUp+B,KAQnE,CACL0a,MAAAA,EACAC,MAAAA,KAEH,CAAAxsB,IAAA,oBAAAvC,OAAA4kD,EAAAhV,EAAAC,IAAAC,MAED,SAAAsX,EAAyBhzC,EAAM8iC,GAAK,IAAAmQ,EAAAjjD,EAAAkjD,EAAAx4B,EAAAC,EAAAw4B,EAAApoD,UAAA,OAAA0wC,IAAAK,MAAA,SAAAsX,GAAA,cAAAA,EAAApX,KAAAoX,EAAA1mD,MAAA,KAAA,EAAmC,GAAjCumD,IAAaE,EAAAhpD,OAAA,QAAAc,IAAAkoD,EAAA,KAAAA,EAAA,GAAeA,EAAAA,EAAAhpD,OAAAgpD,QAAAloD,IAAAkoD,EAAAloD,GAAAkoD,EAAG,GAAA,GAC9D1qD,KAAK+oD,aAAY,CAAA4B,EAAA1mD,KAAA,EAAA,MACd,OADc0mD,EAAA1mD,KAAA,EACdjE,KAAKgpD,SAAS3O,GAAM,KAAA,EAERsQ,OAAKF,EAAAzqD,KAAK4qD,iBAAiBrzC,GAAvC0a,EAAKw4B,EAALx4B,MAAOC,EAAKu4B,EAALv4B,MAAKy4B,EAAA3W,OACb,SAAAh0C,KAAK6qD,aAAa54B,EAAOC,EAAOmoB,EAAOmQ,EAAejjD,IAAO,KAAA,EAAA,IAAA,MAAA,OAAAojD,EAAA1W,UAAAsW,EAAAvqD,UACrE8qD,SAAAC,EAAAC,GAAAjD,OAAAA,EAAAtlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,kBAAAvC,OAAA2kD,EAAA/U,EAAAC,IAAAC,MAED,SAAAgY,EAAuB5Q,GAAK,IAAAmQ,EAAAjjD,EAAA0qB,EAAAC,EAAAg5B,EAAA5oD,UAAA,OAAA0wC,IAAAK,MAAA,SAAA8X,GAAA,cAAAA,EAAA5X,KAAA4X,EAAAlnD,MAAA,KAAA,EAAmC,GAAjCumD,IAAaU,EAAAxpD,OAAA,QAAAc,IAAA0oD,EAAA,KAAAA,EAAA,GAAeA,EAAAA,EAAAxpD,OAAAwpD,QAAA1oD,IAAA0oD,EAAA1oD,GAAA0oD,EAAG,GAAA,GACtDlrD,KAAK+oD,aAAY,CAAAoC,EAAAlnD,KAAA,EAAA,MAAA,OAAAknD,EAAAlnD,KAAA,EACdjE,KAAKgpD,WAAU,KAAA,EAGwCmC,OADjDl5B,EAAAjyB,KAAKglD,cAAchlD,KAAKyoD,qBAAuB,GAC/Cv2B,EAAAlyB,KAAKilD,cAAcjlD,KAAKyoD,qBAAuB,GAAE0C,EAAAnX,OACxD,SAAAh0C,KAAK6qD,aAAa54B,EAAOC,EAAOmoB,EAAOmQ,EAAejjD,IAAO,KAAA,EAAA,IAAA,MAAA,OAAA4jD,EAAAlX,UAAAgX,EAAAjrD,UACrE,SAAAorD,GAAAtD,OAAAA,EAAArlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,UAAAvC,OAAA0kD,EAAA9U,EAAAC,IAAAC,MAED,SAAAoY,EAAe9zC,GAAI,IAAA+zC,EAAAr5B,EAAAC,EAAAvH,EAAA4gC,EAAAC,EAAA3W,EAAAr8B,EAAAxY,KAAA,OAAAgzC,IAAAK,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAAxnD,MAAA,KAAA,EAAA,GACZjE,KAAK+oD,aAAY,CAAA0C,EAAAxnD,KAAA,EAAA,MACd,OADcwnD,EAAAxnD,KAAA,EACdjE,KAAKgpD,UAAS,GAAK,KAAA,EAAA,GAEtBzxC,KAAQA,EAAO,GAAC,CAAAk0C,EAAAxnD,KAAA,EAAA,MAAAwnD,OAAAA,EAAAzX,OAAA,UAAA,KAAA,EAEuC,GADnCsX,EAAAtrD,KAAK4qD,iBAAiBrzC,GAAvC0a,EAAKq5B,EAALr5B,MAAOC,EAAKo5B,EAALp5B,MACTvH,EAAQhhB,KAAKmK,KAAIme,MAAAA,OAAAA,EAAAA,EAAOtH,QAAS,GAAGuH,MAAAA,OAAAA,EAAAA,EAAOvH,QAAS,GAChD,CAAA8gC,EAAAxnD,KAAA,EAAA,MAAAwnD,OAAAA,EAAAzX,OAAA,UAAA,KAAA,EAKA,OAHJuX,EAASvrD,KAAKglD,cAAc7jD,MAAM,EAAGwpB,GACrC6gC,EAASxrD,KAAKilD,cAAc9jD,MAAM,EAAGwpB,GAErCkqB,EAAI,WAAA,IAAAllB,EAAAojB,EAAAC,IAAAC,MAAG,SAAAyY,EAAOlqD,GAAC,OAAAwxC,IAAAK,MAAA,SAAAsY,GAAA,cAAAA,EAAApY,KAAAoY,EAAA1nD,MAAA,KAAA,EACfzC,KAAAA,EAAImpB,GAAK,CAAAghC,EAAA1nD,KAAA,EAAA,MAAA0nD,OAAAA,EAAA3X,OAAA,UAAA,KAAA,EAAA,OAAA2X,EAAA1nD,KAAA,EACPuU,EAAKqyC,aAAaU,EAAO/pD,GAAIgqD,EAAOhqD,IAAI,GAAM,GAAM,KAAA,EACpDqzC,OADoD8W,EAAA1nD,KAAA,EACpD4wC,EAAKrzC,EAAI,GAAE,KAAA,EAAA,IAAA,MAAA,OAAAmqD,EAAA1X,UAAAyX,OAHb7W,OAAAA,SAAI+W,GAAAj8B,OAAAA,EAAAltB,MAAAzC,KAAAsC,YAAA,GAAAmpD,EAAAxnD,KAAA,GAMJ4wC,EAAK,GAAE,KAAA,GAAA,IAAA,MAAA,OAAA4W,EAAAxX,UAAAoX,EAAArrD,UACd,SAAA6rD,GAAAhE,OAAAA,EAAAplD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,SAAAvC,MAED,WACS,OAAAnD,KAAK+gD,QAAQnF,WACrB,CAAAl2C,IAAA,QAAAvC,OAAAykD,EAAA7U,EAAAC,IAAAC,MAED,SAAA6Y,IAAA,IAAAC,EAAAzpD,UAAA,OAAA0wC,IAAAK,MAAA,SAAA2Y,GAAA,cAAAA,EAAAzY,KAAAyY,EAAA/nD,MAAA,KAAA,EAAoC,GAAR8nD,EAAArqD,OAAA,QAAAc,IAAAupD,EAAA,IAAAA,EAAA,GACN,CAAAC,EAAA/nD,KAAA,EAAA,MAEZ,OADDiX,KAAAA,OAAOqX,MAAM,6CAA4Cy5B,EAAA/nD,KAAA,EACxDjE,KAAK+gD,QAAQnF,SAAQ,KAAA,EAExB9C,KAAAA,IAAM94C,KAAKqtC,IAAM,GACtBrtC,KAAKipD,KAAO,GACZjpD,KAAKisD,aAAe,GACpBjsD,KAAKglD,cAAgB,GACrBhlD,KAAKilD,cAAgB,GACrBjlD,KAAKyoD,sBAAuB,EAC5BzoD,KAAK4oD,6BAA8B,EAAE,KAAA,GAAA,IAAA,MAAA,OAAAoD,EAAA/X,UAAA6X,EAAA9rD,UACtC,WAAA4nD,OAAAA,EAAAnlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,UAAAvC,OAAAwkD,EAAA5U,EAAAC,IAAAC,MAED,SAAAiZ,IAAA,OAAAlZ,IAAAK,MAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAAloD,MAAA,KAAA,EAAA,OAAAkoD,EAAAloD,KAAA,EACQjE,KAAKub,QAAO,KAAA,EAElBvb,KAAKq6C,MAAM+R,QAAO,KAAA,EAAA,IAAA,MAAA,OAAAD,EAAAlY,UAAAiY,EAAAlsD,UACnB,WAAA2nD,OAAAA,EAAAllD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,eAAAvC,OAAAukD,EAAA3U,EAAAC,IAAAC,MAED,SAAAoZ,EAAoBp6B,EAAOC,EAAOmoB,EAAOmQ,EAAejjD,GAAM,IAAAihD,EAAArZ,EAAA,OAAA6D,IAAAK,MAAA,SAAAiZ,GAAA,cAAAA,EAAA/Y,KAAA+Y,EAAAroD,MAAA,KAAA,EAAA,GACvDguB,GAAUC,EAAK,CAAAo6B,EAAAroD,KAAA,EAAA,MAAAqoD,OAAAA,EAAAtY,OAAA,UAAA,KAAA,EAKN,OAJRwU,GAAWv2B,MAAAA,OAAK,EAALA,EAAOtH,SAASuH,MAAAA,OAAK,EAALA,EAAOvH,QAAS,EACjD3qB,KAAK4oD,4BAA8BJ,EAAQ8D,EAAA/Y,KAAA,EAAA+Y,EAAAroD,KAAA,EAG7BjE,KAAKypD,SAAS,CACxB9/C,KAAKC,KAAIqoB,MAAAA,OAAK,EAALA,EAAO4mB,MAAM,KAAMxiC,EAAAA,GAAU6b,MAAAA,OAAAA,EAAAA,EAAO2mB,MAAM,KAAMxiC,EAAAA,GACzD1M,KAAKmK,KAAIme,MAAAA,OAAK,EAALA,EAAO4mB,MAAM,KAAM,GAAG3mB,MAAAA,OAAAA,EAAAA,EAAO2mB,MAAM,KAAM,IACjDwB,EAAO9yC,GAAO,KAAA,EAHjB4nC,EAAGmd,EAAArQ,KAAA,KAAA,EAKkCqQ,OALlCA,EAAA/Y,KAAA,EAKHvzC,KAAK4oD,6BAA8B,EAAE0D,EAAAC,OAAA,GAAA,KAAA,GAAA,GAElCpd,EAAG,CAAAmd,EAAAroD,KAAA,GAAA,MAAAqoD,OAAAA,EAAAtY,OAAA,UAAA,KAAA,GAOSsY,OALb9B,IACFxqD,KAAKyoD,qBAAuBD,GAG9BrZ,EAAIld,MAAQA,EACZkd,EAAIjd,MAAQA,EAAKo6B,EAAAtY,OAAA,SAEV7E,GAAG,KAAA,GAAA,IAAA,MAAA,OAAAmd,EAAArY,UAAAoY,EAAArsD,KAAA,CAAA,CAAA,EAAA,CAAA,EAAA,UACX,SAAAwsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAAlF,OAAAA,EAAAjlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,WAAAvC,OAAAskD,EAAA1U,MAAAE,MAED,SAAA4Z,EAAgBhU,EAAOwB,EAAO9yC,GAAMulD,IAAAA,EAAA3kD,EAAAgnC,EAAA9B,EAAA,OAAA2F,IAAAK,MAAA,SAAA0Z,GAAA,cAAAA,EAAAxZ,KAAAwZ,EAAA9oD,MAAA,KAAA,EAEf,OADF6oD,EAAA9sD,KAAKgtD,aAAanU,GAAMkU,EAAA9oD,KAAA,EACtBjE,KAAKq6C,MAAMxzC,IAAIimD,GAAS,KAAA,EAAjC,GAAJ3kD,EAAI4kD,EAAA9Q,KAED,CAAA8Q,EAAA9oD,KAAA,GAAA,MACiD,OAAlDopC,EAAM9lC,GAAUA,EAAO8lC,IAAM9lC,EAAO8lC,IAAMrtC,KAAKqtC,IAAG0f,EAAA9oD,KAAA,EAC5CjE,KAAK+gD,QAAQlM,KAAKxH,EAAGyS,EAAA,CAAIjH,MAAAA,EAAOC,IAAK94C,KAAK84C,KAAQvxC,IAAS,KAAA,EAAvE4nC,EAAG4d,EAAA9Q,KAAA8Q,EAAA9oD,KAAA,GAAA,MAAA,KAAA,GAEGkrC,EAAA,CAAEhnC,KAAAA,EAAMmhD,OAAO,EAAMh2B,QAAS,CAAE25B,WAAW,EAAMpU,MAAAA,EAAOC,IAAK94C,KAAK84C,MAAO,KAAA,GAAA,GAE5E3J,EAAG,CAAA4d,EAAA9oD,KAAA,GAAA,MAAA8oD,OAAAA,EAAA/Y,OAAA,UAAA,KAAA,GAiBR+Y,OAhBK5kD,IACCA,EAAAA,MAAQnI,KAAKisD,aAAazrD,KAAK,CACjCmW,UAAWw4B,EAAIx4B,UACfg/B,QAASxG,EAAIwG,QACbttC,KAAM8mC,EAAIhnC,KAAKG,WACfuwC,MAAAA,IAEE74C,KAAKisD,cAAgBjsD,KAAKisD,aAAavqD,OAAS1B,KAAKoxC,QAAQkX,sBAC/DtoD,KAAKisD,aAAejsD,KAAKisD,aAAa9qD,OAAOnB,KAAKoxC,QAAQkX,uBAQ9DyE,EAAA/Y,OAAA,SACO7E,GAAG,KAAA,GAAA,IAAA,MAAA,OAAA4d,EAAA9Y,UAAA4Y,EAAA7sD,UACXypD,SAAAyD,EAAAC,EAAAC,GAAA3F,OAAAA,EAAAhlD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,eAAAvC,MAOD,SAAc01C,GACZ,OAAQ74C,KAAK84C,KAAO94C,KAAKqtC,KAAO,IAAMwL,MACvC2O,GA3V4B7mD,GEPzB0sD,GAGN,WACM,IAEA,MAAwB,oBAAjBC,cACD,YAAahhD,OAAOghD,gBAClBhhD,OAAOghD,aAAaC,cAEvBtkB,GACA,OAAA,GA4BFukB,KAxBT,WACE,IAAMC,EAAsB,6BAExB,IAGK,OAFAH,OAAAA,aAAaC,QAAQE,GAAqB,GAC1CH,OAAAA,aAAaI,WAAWD,IACxB,QACAxkB,GACA,OAAA,GAgBiB0kB,GAtCfj6B,GAAUk6B,KA0BhB,SAASA,KACd,GAAIP,GACE,IACF,QAAS/gD,OAAOghD,aAAaO,QAAQ,mBAC9B5kB,GACA,OAAA,EAGJ,OAAA,EAOF,SAASxW,GAAMkH,GAA4B,IAAAvuB,IAAAA,EAAA7H,EAAAjB,UAAAZ,OAAhBosD,MAAclsD,MAAA2B,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAnB,GAAAA,UAAAmB,GAC9CiwB,IAAWpoB,QAAQmnB,MAAOrnB,EAAAE,SAAQmnB,IAAGhwB,MAAA2I,EAAA,CAAC,WAAYm5C,GAAKnW,UAAWzU,GAAOt4B,OAAKysD,KAGzE,WACL,GAAIT,GACE,IACF,QAAS/gD,OAAOghD,aAAaO,QAAQ,uBAC9B5kB,GACA,OAAA,GAjDgC8kB,62lICAxBC,IAAAA,YAAuBxU,GAAA9wC,EAAAslD,EAAAxU,GAAA7wC,IAAAA,EAAAC,EAAAolD,GAC1C,SAAAA,EAAa16B,GAAS5c,IAAAA,EAalBA,OAbkBnR,OAAAyoD,IACpBrlD,EAAAA,EAAAzH,KAAAlB,OACKiuD,QAAU36B,EAAQI,QACvBhd,EAAKlP,UAAY8rB,EAAQ9rB,UACzBkP,EAAKw3C,YAAc56B,EAAQ46B,YACtBC,EAAAA,OAAS,IAAIC,GACbD,EAAAA,OAAOE,UAAY,SAACplB,GACvBvyB,EAAK5U,KAAKmnC,EAAE9gC,KAAK8xC,OAAQhR,EAAE9gC,OAE7BuO,EAAKy3C,OAAOG,YAAY,CACtBrU,OAAQ,OACR1yB,GAAI+L,EAAQ/L,IAAM,EAClBnlB,KAAM,CAAE6rD,QAASv3C,EAAKu3C,QAASC,YAAax3C,EAAKw3C,YAAa1mD,UAAWkP,EAAKlP,aAC9EkP,EAqBHs3C,OApBAvoD,EAAAuoD,EAAA,CAAA,CAAAtoD,IAAA,WAAAvC,MAED,SAAUokB,EAAIpf,EAAM+D,EAAOqiD,EAAUC,EAAUroC,EAAMmC,EAAQC,EAAUzoB,GACrE,IAAMoK,EAAS/B,EAAK+B,OACfikD,KAAAA,QAAUnuD,KAAKmuD,OAAOG,YAAY,CACrCrU,OAAQ,WACR1yB,GAAAA,EACArd,OAAAA,EACA9H,KAAM,CAAE8J,MAAAA,EAAOqiD,SAAAA,EAAUC,SAAAA,EAAUroC,KAAAA,EAAMmC,OAAAA,EAAQC,SAAAA,EAAUzoB,QAAAA,IAC3D,CAACoK,MACJ,CAAAxE,IAAA,QAAAvC,MAED,WACOgrD,KAAAA,QAAUnuD,KAAKmuD,OAAOG,YAAY,CACrCrU,OAAQ,YAEX,CAAAv0C,IAAA,UAAAvC,MAED,WACOgrD,KAAAA,QAAUnuD,KAAKmuD,OAAOM,gBAC5BT,GAnCkDrtD,GCM/C+tD,GACG,QADHA,GAEQ,YAFRA,GAGe,wBAHfA,GAIa,0BAGb/gC,YAAG6rB,GAAA9wC,EAAAilB,EAAA6rB,GAAA7wC,IAqiBNgmD,EAvBAxQ,EAzCAyQ,EApNAC,EApDAC,EArEAC,EAhCAC,EAvBDC,EAhBCC,EAjFMvmD,EAAAC,EAAA+kB,GAyBPA,SAAAA,EAAa0f,EAAK/Z,GAAS5c,IAAAA,EAkCzB,GAlCyBnR,OAAAooB,GAClBnoB,EAAAsyC,EAAPnvC,EAAAA,EAAAzH,KAAAlB,OAAO,uBAAA,WAAAuqB,IAAAA,EAAAwoB,MAAAE,MAyWc,SAAAC,EAAO/qC,EAAMmhD,EAAOh2B,GAAO67B,IAAAA,EAAA,OAAAnc,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAC5CkE,GAAQA,EAAKG,WAAa,KACRoO,EAAAA,EAAK04C,UAAU97B,EAAQ3I,OAAOkuB,QAC/BvlB,EAAQulB,MAAM,IAAMsW,EAAY,KAAO7F,IAChDA,GAAA,GAEV5yC,EAAK+b,IAAI,oEAAqEa,EAAQ3I,MAAO,UAAWgkB,KAAKvY,UAAU9C,EAAQulB,OAAQ,aAAc1wC,EAAKG,YAC1JoO,EAAK24C,KAAKlnD,EAAMmrB,EAAQulB,MAAM,GAAIvlB,EAAQ3I,MAAO2+B,IAE/CA,IACG8F,EAAAA,UAAU97B,EAAQ3I,OAAO2kC,YAAa,EAC3C54C,EAAK64C,iBAAkB,EACvB74C,EAAK+b,IAAI,gCAAgCa,EAAQ3I,MAAM,aAAa2I,EAAQulB,MAAM,KACnF,KAAA,EAAA,IAAA,MAAA,OAAAvF,EAAAW,UAAAf,OACF,OAAA,SAAAgB,EAAA+C,EAAAC,GAAA3sB,OAAAA,EAAA9nB,MAAAzC,KAAAsC,YAvXQ,IACPoU,EAAK22B,IAAMA,EACN/Z,EAAAA,QAAU3F,EAAI0jB,mBAEnB9xC,OAAOqyC,KAAKte,GAAS3kB,KAAI,SAAAjJ,QACNlD,IAATkD,EAAAA,IAAuC,OAAjB4tB,EAAQ5tB,KAAkBgR,EAAK4c,QAAQ5tB,GAAO4tB,EAAQ5tB,OAEtFgR,EAAK04C,UAAY,GACZI,EAAAA,WAAa94C,EAAK4c,QAAQ8qB,UAC1BqR,EAAAA,aAAe,IAAI3lD,WAAW,GACnC4M,EAAK64C,gBAAkB,EACvB74C,EAAKuyC,KAAO,KACZvyC,EAAKg5C,UAAY,KACjBh5C,EAAKi5C,UAAY,KACjBj5C,EAAKk5C,aAAc,EACnBl5C,EAAKm5C,qBAAuB,KAC5Bn5C,EAAKo5C,YAAa,EAClBp5C,EAAKq5C,cAAe,EACpBr5C,EAAK8wC,UAAY,IAAIA,GAAS1H,EAAAA,EAAA,CAC5BuI,gBAAiB3xC,EAAK4c,QAAQ+0B,gBAC9Bhb,IAAAA,EACAyL,IAAKxlB,EAAQwlB,IACbwI,MAAO5qC,EAAK4c,QAAQ0uB,WACpBT,WAAY7qC,EAAK4c,QAAQiuB,WACzB5H,QAASjjC,EAAK4c,QAAQqmB,SACnBrmB,EAAQ08B,YAAU,GAAA,CACrBt8B,QAASk6B,QAEXl3C,EAAKoxB,WAAa,KAClBpxB,EAAK2c,YAAc,KACnB3c,EAAKu5C,kBAAmB,EACxBv5C,EAAKw5C,gBAAiB,EACjBC,EAAAA,aAAez5C,EAAK4c,QAAQ68B,aAC7Bz5C,EAAKy5C,cAAkC,oBAAXC,OAC1B,IACF15C,EAAK25C,eAAiB,EACjBC,EAAAA,wBAA0B,IAAItC,GAAwB,CAACzmC,GAAI7Q,EAAK25C,eAAgB7oD,UAAY8rB,EAAQ9rB,UAAW0mD,YAAax3C,EAAK4c,QAAQ46B,YAAax6B,QAASk6B,OACpKl3C,EAAK45C,wBAAwB3tD,GAAG,YAAY,SAAC4tD,GAC3C,IAAMphB,EAAMohB,EAAOnuD,KACnBsU,EAAK+b,IAAI,kCAAkCkc,KAAKvY,UAAU+Y,EAAI0J,OAAQ,YAAY1J,EAAIjlC,OAAO5B,WAAY6mC,EAAIrvC,SACxG+vD,EAAAA,sBAAwBn5C,EAAKm5C,qBAAqB1gB,YAGlDnc,GACFP,EAAAA,IAAI,mBAAoBO,GAC7Btc,EAAKy5C,cAAe,EACpBz5C,EAAK45C,wBAA0B,KAQR55C,OALtBA,EAAKy5C,eACRz5C,EAAKoxB,WAAa,KAClBpxB,EAAK2c,YAAc,MAErB3c,EAAK85C,UAAW,EAChB95C,EAAK+5C,mBAAoB,EAAE/5C,EAjE5BiX,OAkEAloB,EAAAkoB,EAAA,CAAA,CAAAjoB,IAAA,gBAAAvC,OAAA+rD,EAAAnc,EAAAC,IAAAC,MAGD,SAAAkB,EAAqBuc,GAAW,OAAA1d,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EACJ,OAA1BjE,KAAKqtC,IAAMqjB,EAAYrjB,IAAGkH,EAAAtwC,KAAA,EACpBjE,KAAKwnD,UAAUmJ,UAAU3wD,KAAKqtC,IAAKrtC,KAAKszB,QAAQwlB,IAAM/9B,KAAK40B,MAAO3vC,KAAKwvD,YAAW,KAAA,EACxFxvD,KAAKkwD,gBAAiB,EACjBz9B,KAAAA,IAAI,sCAAsCzyB,KAAKqtC,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAkH,EAAAN,UAAAE,EAAAn0C,UACzD,SAAAm3C,GAAA+X,OAAAA,EAAAzsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,MAAAvC,MAED,SAAKw2B,GAEiG,IADpG,IAAQrG,EAAYtzB,KAAZszB,QACFs9B,EAAct9B,GAAWA,EAAQwlB,aAAGz3C,OAAaiyB,EAAQwlB,SAAGz3C,OAAIs4B,GAAOt4B,SAAAA,OAAcs4B,GAASp2B,EAAAjB,UAAAZ,OAFrFosD,MAAclsD,MAAA2B,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAnB,GAAAA,UAAAmB,GAG7BgvB,GAAGhwB,WAACmuD,EAAAA,CAAAA,GAAUvvD,OAAKysD,MAGrB,CAAApoD,IAAA,eAAAvC,OAAA8rD,EAAAlc,EAAAC,IAAAC,MAKA,SAAAyD,EAAoB1jB,EAAOs2B,GAAKhc,IAAAA,EAAA3T,EAAAmf,EAAAwD,EAAA,OAAAtJ,IAAAK,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5yC,MAAA,KAAA,EACA+uB,EAAAA,EAAtBsa,SAAU3T,EAAY3G,EAAZ2G,QACZmf,EAAM94C,KAAKszB,QAAUtzB,KAAKszB,QAAQwlB,IAAM,GACjCwD,EAAA,KACbt8C,KAAK8vD,YAAa,EACdxiB,GACFgP,EAAS,IAAIwH,GAAa,UAAWxW,EAASE,OAAQ,CACpD2W,SAAU7W,EAAS6W,SACnBxqB,QAAAA,EACA0T,IAAKC,EAASD,MAEXvrC,KAAAA,KAAK4sD,GAAkBpS,KAG5BhxC,QAAQmnB,IAAGpxB,UAAAA,OAAWy3C,EAAG,mBAAmB9lB,GACnCA,EAAAA,EACJlxB,KAAAA,KAAK4sD,GAAkBpS,IAC7B,KAAA,EAAA,IAAA,MAAA,OAAAzF,EAAA5C,UAAAyC,EAAA12C,UACF6wD,SAAA/G,EAAAC,GAAAkF,OAAAA,EAAAxsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,OAAAvC,OAAA6rD,EAAAjc,EAAAC,IAAAC,MAGD,SAAAiW,IAAA,OAAAlW,IAAAK,MAAA,SAAAgW,GAAA,cAAAA,EAAA9V,KAAA8V,EAAAplD,MAAA,KAAA,EACM,IAAAjE,KAAKqtC,IAAG,CAAAgc,EAAAplD,KAAA,EAAA,MAAA,OAAAolD,EAAAplD,KAAA,EAAQjE,KAAKwnD,UAAUmJ,UAAU3wD,KAAKqtC,IAAKrtC,KAAKszB,QAAQwlB,IAAM/9B,KAAK40B,MAAO3vC,KAAKwvD,YAAW,KAAA,EAAA,OAAAnG,EAAAplD,KAAA,EAChGjE,KAAK8wD,cAAa,KAAA,EAAA,IAAA,MAAA,OAAAzH,EAAApV,UAAAiV,EAAAlpD,UACzB,WAAAgvD,OAAAA,EAAAvsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,eAAAvC,MAED,WAGW3B,IAFT,IAAMq3C,EAAQ,GACVuW,EAAY,KACP5tD,EAAI,EAAGxB,KAAK0vD,WAAaluD,EAAIxB,KAAK0vD,UAAUhuD,OAAQF,IAC/C4tD,EAAA,CACVz4C,UAAW3W,KAAK0vD,UAAUluD,GAAGmV,UAC7Bg/B,QAAS31C,KAAK0vD,UAAUluD,GAAGm0C,QAC3B2Z,YAAa,EACbyB,WAAY,GAEdlY,EAAMr4C,KAAK4uD,GAEb,GAAIpvD,KAAK2vD,WAAa3vD,KAAK2vD,UAAUjuD,OAASm3C,EAAMn3C,OAClD,IAAA,IAASgB,EAAIm2C,EAAMn3C,OAAQgB,EAAI1C,KAAK2vD,UAAUjuD,OAAQgB,IACxC0sD,EAAA,CACVz4C,UAAWhN,KAAKmK,IAAI9T,KAAK2vD,UAAUjtD,GAAGiU,UAAWy4C,EAAYA,EAAUzZ,QAAU,GACjFA,QAAShsC,KAAKmK,IAAI9T,KAAK2vD,UAAUjtD,GAAGizC,QAASyZ,EAAYA,EAAUzZ,QAAU,GAC7E2Z,YAAa,EACbyB,WAAY,GAEdlY,EAAMr4C,KAAK4uD,GAGRvW,OAAAA,IACR,CAAAnzC,IAAA,cAAAvC,OAAA4rD,EAAAhc,EAAAC,IAAAC,MAED,SAAAsX,IAAA,IAAAyG,EAAAC,EAAAC,EAAA15C,EAAAxX,KAAA0qD,EAAApoD,UAAA,OAAA0wC,IAAAK,MAAA,SAAAsX,GAAA,cAAAA,EAAApX,KAAAoX,EAAA1mD,MAAA,KAAA,EAoCU,OApCS+sD,IAAetG,EAAAhpD,OAAA,QAAAc,IAAAkoD,EAAA,KAAAA,EAAA,GAAOC,EAAApX,KAAA,EAErCvzC,KAAK+vD,cAAe,EACpB/vD,KAAKyyB,IAAI,qBACJg9B,KAAAA,aAAe,IAAI3lD,WAAW,GACpBmnD,EAAA,EACTC,EAAgB,WAAAjlC,IAAAA,EAAA8mB,MAAAE,MAAG,SAAA+W,EAAO7hD,EAAMmhD,EAAOh2B,GAAO69B,IAAAA,EAAA,OAAAne,IAAAK,MAAA,SAAA6W,GAAA,cAAAA,EAAA3W,KAAA2W,EAAAjmD,MAAA,KAAA,EAClDuT,EAAKib,IAAI,yCAA0CtqB,EAAOA,EAAKG,YAAa,EAAI,WAAWghD,EAAO,UAAU3a,KAAKvY,UAAU9C,EAAQulB,QAC/H1wC,GACEmrB,EAAQulB,MAAM,KAAOoY,IAClBxB,EAAAA,aAAepiC,EAAOvjB,WAAY0N,EAAKi4C,aAAc,IAAI3lD,WAAW3B,IACzE8oD,GAAY9oD,EAAKG,YAGjBgrB,EAAQ21B,OAASzxC,EAAKyxC,OAClBkI,EAAW79B,EAAQ21B,KACzBzxC,EAAKk4C,UAAYyB,EAASnM,cAC1BxtC,EAAKm4C,UAAYwB,EAASlM,cACrBmK,EAAAA,UAAY53C,EAAK45C,eACjBnI,EAAAA,KAAInJ,EAAAA,EAAA,GAAOqR,EAASlI,MAAI,GAAA,CAAE7gC,IAAI,CAACsnC,UAAWl4C,EAAKk4C,UAAWC,UAAWn4C,EAAKm4C,aAC/EwB,EAAS1B,aAAej4C,EAAKi4C,aAC7Bj4C,EAAKib,IAAI,cACLu+B,GACFx5C,EAAK1V,KAAK4sD,GAAuBl3C,EAAKyxC,OAGtCzxC,EAAKyxC,MAAQK,IACf9xC,EAAKib,IAAI,yBACTjb,EAAKu4C,cAAe,GAGlBv4C,EAAKyxC,OAAS9gD,GAAQmhD,KACxB9xC,EAAKib,IAAI,0BACJ3wB,EAAAA,KAAK4sD,KACX,KAAA,EAAA,IAAA,MAAA,OAAAxE,EAAAjW,UAAA+V,OACF,OAAA,SA7BqBL,EAAAC,EAAAC,GAAA59B,OAAAA,EAAAxpB,MAAAzC,KAAAsC,YAAA,GAAAqoD,EAAA1mD,KAAA,EA8BhBjE,KAAKwnD,UAAUkC,gBAAgB1pD,KAAKwnD,UAAUnN,MAAO,CAAC,EAAGr6C,KAAKwvD,YAAa0B,GAAiB,KAAA,EAAAvG,EAAA1mD,KAAA,GAAA,MAAA,KAAA,GAAA0mD,EAAApX,KAAA,GAAAzN,EAAAA,GAAA6kB,EAAA,MAAA,GAE1F33B,QAAAA,MAAM,yCAAwC,OAAA23B,EAAA7kB,SAAC6kB,IAADA,EAAA7kB,QAAC6kB,EAAAA,EAAA7kB,GAAOnM,SACzD03B,KAAAA,UAAS1G,EAAA7kB,GAAQ,eAAc,KAAA,GAAA,IAAA,MAAA,OAAA6kB,EAAA1W,UAAAsW,EAAAvqD,KAAA,CAAA,CAAA,EAAA,UAEvC,WAAA+uD,OAAAA,EAAAtsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,iBAAAvC,MAED,SAAgBoU,GACV0a,IAAAA,EACAC,EACA,GAAClyB,KAAK0vD,UAAUhuD,OAGb,CAGL,GAFAuwB,EAAQjyB,KAAK0vD,UAAUlpC,MAAK,SAAA9O,GAAC,OAAIA,EAAEf,WAAaY,GAAQG,EAAEi+B,QAAUp+B,KACpE2a,EAAQlyB,KAAK2vD,UAAUnpC,MAAK,SAAA9O,GAAC,OAAIA,EAAEf,WAAaY,GAAQG,EAAEi+B,QAAUp+B,KAChE0a,GAASC,EACX,OAAOvoB,KAAKC,IAAIqoB,EAAMtH,MAAOuH,EAAMvH,OACrC,GAAWsH,GAASC,EACXD,OAAAA,EAAQA,EAAMtH,MAAQuH,EAAMvH,MAEnC,IAAI1jB,EAAOmH,OAAOkjD,UAOXrqD,OANHjH,KAAK0vD,WAAa1vD,KAAK0vD,UAAUhuD,OAAS,IACrCuF,EAAAjH,KAAK0vD,UAAUhuD,OAAS,GAE7B1B,KAAK2vD,WAAa3vD,KAAK2vD,UAAUjuD,OAAS,IAC5CuF,EAAO0C,KAAKC,IAAI5J,KAAK2vD,UAAUjuD,OAAS,EAAGuF,IAEtCA,EAhBFirB,OADPA,EAAQlyB,KAAK2vD,UAAUnpC,MAAK,SAAA9O,GAAC,OAAIA,EAAEf,WAAaY,GAAQG,EAAEi+B,QAAUp+B,MACrD2a,EAAMvH,MAAQ,IAmBhC,CAAAjlB,IAAA,gBAAAvC,OAAA2rD,EAAA/b,EAAAC,IAAAC,MAED,SAAAgY,IAAAkG,IAAAA,EAAA,OAAAne,IAAAK,MAAA,SAAA8X,GAAA,cAAAA,EAAA5X,KAAA4X,EAAAlnD,MAAA,KAAA,EAGyB,OAFvBjE,KAAKyyB,IAAI,mBACTzyB,KAAK+vD,cAAe,EAAI5E,EAAAlnD,KAAA,EACDjE,KAAKwnD,UAAUwB,SAAShpD,KAAKwnD,UAAUnN,MAAO1wC,KAAKmN,MAAM9W,KAAKwvD,WAAa,IAAG,KAAA,EAO5DrE,OAPnCgG,EAAQhG,EAAAlP,KACdj8C,KAAK+vD,cAAe,EACpB/vD,KAAK0vD,UAAYyB,EAASnM,cAC1BhlD,KAAK2vD,UAAYwB,EAASlM,cACrBgE,KAAAA,KAAInJ,EAAAA,EAAA,GAAOqR,EAASlI,MAAI,GAAA,CAAE7gC,IAAI,CAACsnC,UAAW1vD,KAAK0vD,UAAWC,UAAW3vD,KAAK2vD,aAC1EP,KAAAA,UAAYpvD,KAAKoxD,eACjB3B,KAAAA,aAAe,IAAI3lD,WAAW,GACnCqnD,EAAS1B,aAAezvD,KAAKyvD,aAAYtE,EAAAnX,OAAA,UAClC,GAAI,KAAA,GAAA,IAAA,MAAA,OAAAmX,EAAAlX,UAAAgX,EAAAjrD,UACZ,WAAA8uD,OAAAA,EAAArsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,yBAAAvC,MAED,SAAwBouD,GACtB,IAAA,IAAS/vD,EAAI,EAAGA,EAAIxB,KAAKovD,UAAU1tD,OAAQF,IACrCA,EAAI+vD,GACDnC,KAAAA,UAAU5tD,GAAG8tD,YAAa,EAC1BF,KAAAA,UAAU5tD,GAAGuvD,WAAY,IAEzB3B,KAAAA,UAAU5tD,GAAG8tD,YAAa,EAC1BF,KAAAA,UAAU5tD,GAAGuvD,WAAY,KAGnC,CAAArrD,IAAA,eAAAvC,MAED,SAAcouD,GAAWC,IAAAA,EAAAC,EAAAC,EAAAC,EACnBC,EAAW,KACX5xD,KAAK0vD,YACI6B,EAAAA,EAAYvxD,KAAK0vD,UAAUhuD,OAAS1B,KAAK0vD,UAAU6B,GAAavxD,KAAK0vD,UAAU1vD,KAAK0vD,UAAUhuD,OAAS,IAEpH,IAAImwD,EAAW,KACV7xD,KAAK2vD,YACG4B,EAAAA,EAAYvxD,KAAK2vD,UAAUjuD,OAAS1B,KAAK2vD,UAAU4B,GAAavxD,KAAK2vD,UAAU3vD,KAAK2vD,UAAUjuD,OAAS,IAEhHowD,IAAAA,EAAY,EAAGC,EAAY,EAC3B/xD,KAAK0vD,WAAa6B,GAAavxD,KAAK0vD,UAAUhuD,OAAS,IAC7CowD,GAAA,GAEV9xD,KAAK2vD,WAAa4B,GAAavxD,KAAK2vD,UAAUjuD,OAAS,IAC7CqwD,GAAA,GAERlZ,IAAAA,EAAQ,CACZlvC,KAAKC,KAAY4nD,QAARA,EAAAI,aAAQJ,SAARA,EAAU3Y,MAAM,KAAMxiC,EAAAA,GAAkBo7C,QAARA,EAAAI,SAAAJ,IAAQA,OAARA,EAAAA,EAAU5Y,MAAM,KAAMxiC,EAAAA,GAC/D1M,KAAKmK,KAAa49C,QAATA,EAACE,SAAAF,IAAQA,OAARA,EAAAA,EAAW7Y,MAAM,IAAMiZ,GAAa,GAAYH,QAATA,EAACE,aAAQF,SAARA,EAAU9Y,MAAM,IAAMkZ,GAAa,IAKhFlZ,OAHH0Y,EAAYvxD,KAAKovD,UAAU1tD,SACxB0tD,KAAAA,UAAUmC,GAAW1Y,MAAQA,GAE7BA,IACR,CAAAnzC,IAAA,OAAAvC,OAAA0rD,EAAA9b,EAAAC,IAAAC,MAED,SAAAyY,EAAY6F,EAAWS,GAAe,IAAAC,EAAApZ,EAAAqZ,EAAA,OAAAlf,IAAAK,MAAA,SAAAsY,GAAA,cAAAA,EAAApY,KAAAoY,EAAA1nD,MAAA,KAAA,EACO,GAA3CjE,KAAK6vD,qBAAuBmC,GACxBhyD,KAAKkwD,gBAAmBlwD,KAAK+vD,aAAY,CAAApE,EAAA1nD,KAAA,GAAA,MAC4J,OAAvMjE,KAAKyyB,IAAI,oDAAqD8+B,GAAavxD,KAAK0vD,UAAUhuD,OAAS1B,KAAK2vD,UAAU4B,GAAW56C,UAAY3W,KAAK0vD,UAAU6B,GAAW56C,UAAW,eAAe46C,GAAU5F,EAAA1nD,KAAA,EAC/KjE,KAAKmyD,gBAAe,KAAA,EAAtCF,EAAStG,EAAA1P,KACXj8C,KAAKywD,kBAAoB,IACvBzwD,KAAKovD,UAAUmC,GAAW56C,WAAa3W,KAAKywD,mBAAqBzwD,KAAKywD,kBAAoBzwD,KAAKovD,UAAUmC,GAAW5b,QACtH31C,KAAKyyB,IAAI,kDAAmD8+B,EAAU,WAAWvxD,KAAKywD,oBAG1Ec,EAAAvxD,KAAKoyD,eAAepyD,KAAKywD,mBACrCzwD,KAAKyyB,IAAI,8CAA+C8+B,EAAU,WAAWvxD,KAAKywD,kBAAmB,wBAAwBzwD,KAAKovD,UAAUmC,GAAW56C,UAAU,IAAI3W,KAAKovD,UAAUmC,GAAW5b,SAC1L7zC,KAAAA,KAAK4sD,GAA4B6C,IAExCvxD,KAAKwwD,SAAWxwD,KAAKywD,kBACrBzwD,KAAKywD,mBAAoB,GAE3BzwD,KAAKqyD,uBAAuBd,GACvB9+B,KAAAA,IAAI,0CAA2C8+B,GACpDvxD,KAAKiwD,kBAAmB,EACxBjwD,KAAKsyD,iBACDL,IACFjyD,KAAKkwD,gBAAiB,GACvB,KAAA,GAAA,IAGClwD,KAAKkwD,iBAAkBlwD,KAAK+vD,aAAY,CAAApE,EAAA1nD,KAAA,GAAA,MAAA0nD,OAAAA,EAAA3X,OAAA,UAAA,KAAA,GAG9B6E,EAAA74C,KAAKuyD,aAAahB,GAChCvxD,KAAKyyB,IAAI,gBAAgB8+B,EAAW,UAAU5iB,KAAKvY,UAAUyiB,IACzD74C,KAAKwwD,SAAW,GACZ0B,EAAWlyD,KAAKwyD,YAAYjB,EAAWvxD,KAAKwwD,SAAU3X,GACvD4Z,KAAAA,aAAalB,EAAWW,GAC7BlyD,KAAKwwD,UAAW,GAEXiC,KAAAA,aAAalB,EAAW1Y,GAC9B,KAAA,GAAA,IAAA,MAAA,OAAA8S,EAAA1X,UAAAyX,EAAA1rD,UACF60C,SAAAsV,EAAAC,GAAAyE,OAAAA,EAAApsD,MAAAzC,KAAAsC,cAED,CAAAoD,IAAA,cAAAvC,MAWA,SAAaouD,EAAWh6C,EAAMshC,GAC5B,IAAI6Z,EAAkB7Z,EAAM,GACxB8Z,EAAkB9Z,EAAM,GACxBr3C,EAAI,EACJglB,GAAO,EAEX,GADAxmB,KAAKyyB,IAAI,yBAAyBlb,EAAMo3B,KAAKvY,UAAUyiB,IACnD74C,KAAK0vD,UAAW,CAClB,IAAMkC,EAAWL,EAAYvxD,KAAK0vD,UAAUhuD,OAAS1B,KAAK0vD,UAAU6B,GAAavxD,KAAK0vD,UAAU1vD,KAAK0vD,UAAUhuD,OAAS,GAClHkxD,EAAehB,EAASv/C,OAAOpF,OAAO4lD,IACtCpM,EAAiBzmD,KAAKipD,KAAKxC,eAC7B9vC,EAAYi8C,EAAa,GAAGj8C,UAAY8vC,EAC5CzmD,KAAKyyB,IAAI,qCAAqCm/B,EAASj7C,UAAU,YAAYi7C,EAASjc,SACtF,IAAA,IAASjzC,EAAI,EAAGA,EAAIkwD,EAAalxD,OAAQgB,IAClC+vB,KAAAA,IAAI,kDAAkDmgC,EAAalwD,GAAGiU,UAAY8vC,EAAe,UAAUmM,EAAalwD,GAAG6B,QAE3H/C,KAAAA,EAAIoxD,EAAalxD,OAAQF,IAAK,CAC7Bm0C,IAAAA,EAAUid,EAAapxD,GAAGmV,UAAY8vC,EACvC9vC,GAAAA,GAAaY,GAAQA,EAAOo+B,GAAWkD,EAAM,GAAK+Z,EAAapxD,EAAI,GAAG+C,OAAQ,CAC/DquD,EAAAA,EAAapxD,EAAI,GAAG+C,OAC/BiiB,GAAA,EACFiM,KAAAA,IAAI,yCAAyC9b,EAAW,YAAYg/B,EAAS,eAAe+c,EAAiB,mBAAmBlxD,EAAI,GACzI,MAEUm0C,EAAAA,GAETnvB,GAAQ7P,GAAaY,GAAQA,EAAOq6C,EAASjc,QAAU,KACxCid,EAAAA,EAAapxD,EAAI,GAAG+C,OACtCvE,KAAKyyB,IAAI,0CAA0C9b,EAAW,YAAYi7C,EAASjc,QAAS,eAAe+c,IAI/G,GADAlxD,EAAI,EACAxB,KAAK2vD,UAAW,CAClB,IAAMkC,EAAWN,EAAYvxD,KAAK2vD,UAAUjuD,OAAS1B,KAAK2vD,UAAU4B,GAAavxD,KAAK2vD,UAAU3vD,KAAK2vD,UAAUjuD,OAAS,GAClHoxD,EAAYjB,EAASx/C,OACrBq0C,EAAiB1mD,KAAKipD,KAAKvC,eACjCllD,EAAImI,KAAKW,OAAOiN,EAAOmvC,EAAiBoM,EAAU,GAAGn8C,WAAak7C,EAASx/C,OAAO,GAAGrM,UAGrF,IADI+sD,IAAAA,GADJvxD,EAAImI,KAAKC,IAAIkpD,EAAUpxD,OAAS,EAAGF,IACf,EAAIsxD,EAAUtxD,EAAI,GAAGmV,UAAY+vC,EAAiBoM,EAAU,GAAGn8C,UAAY+vC,EACvFllD,GAAK,GAAKA,EAAIsxD,EAAUpxD,QAC1BF,GAAAA,EAAI,GAAKuxD,EAAYx7C,EAEXu7C,EAAAA,EADZtxD,GAAK,GACoBmV,UAAY+vC,MAFnCllD,CAKJ,IAAMwxD,GAAWF,EAAUtxD,GAAGmV,UAAYm8C,EAAUtxD,GAAGwE,UAAY0gD,EAC/DqM,GAAAA,GAAax7C,GAAQA,EAAOy7C,GAAWna,EAAM,GAAKia,EAAUtxD,GAAG+C,OAAQ,CACzEouD,EAAkBG,EAAUtxD,GAAG+C,OACxBiiB,GAAA,EACFiM,KAAAA,IAAI,yCAA0CsgC,EAAW,YAAaC,EAAS,eAAgBL,EAAiB,WAAYnxD,GACjI,MAEUwxD,EAAAA,EACZxxD,KAGEyxD,IAAAA,EAAa,CAACtpD,KAAKC,IAAI+oD,EAAiBD,GAAkB7Z,EAAM,IAE/Doa,OADFxgC,KAAAA,IAAI,+BAAgCkc,KAAKvY,UAAU68B,GAAa,aAAatkB,KAAKvY,UAAUyiB,IAC1Foa,IACR,CAAAvtD,IAAA,OAAAvC,MAmBD,SAAM+G,EAAQgC,EAAOqlD,EAAWjI,GAC9B,IAAM9gB,EAAkBxoC,KAAKkzD,gBAAgB3B,EAAW,SAClD9oB,EAAkBzoC,KAAKkzD,gBAAgB3B,EAAW,SAClD1Y,EAAQ,CAAC3sC,EAAOA,EAAQhC,EAAO5B,YACrC,GAAItI,KAAKswD,wBAAyB,CAChC,IAAMxwD,EAAU,CACd+4C,MAAAA,EACAyQ,MAAAA,EACAiI,UAAAA,GAEG9+B,KAAAA,IAAI,oCAAoCkc,KAAKvY,UAAUyiB,GAAQ,YAAY3uC,EAAO5B,WAAYxI,GACnGE,KAAKswD,wBAAwB6C,SAASnzD,KAAKqwD,eAAgBnmD,EAAQgC,EAAOs8B,EAAiBC,EAAiBzoC,KAAKipD,KAAK9iC,KAAMnmB,KAAKsoB,OAAQtoB,KAAKuoB,SAAUzoB,QAEpJ,IACGE,KAAK8nC,aACR9nC,KAAK8nC,WAAa,IAAIA,GAAW9nC,KAAK0vD,UAAW1vD,KAAK2vD,UAAW,KAAK,CAACj8B,QAASk6B,QAElF,IAIIze,EAJEikB,EAAWpzD,KAAK8nC,WAAWurB,UAAUnpD,EAAQgC,EAAOs8B,EAAiBC,EAAiBzoC,KAAKipD,KAAK9iC,KAAMnmB,KAAKsoB,OAAQtoB,KAAKuoB,UACzHvoB,KAAKqzB,aAAiBrzB,KAAKszD,mBAAoBtzD,KAAKszB,QAAQ46B,cAC1D76B,KAAAA,YAAc,IAAIA,GAAYrzB,KAAK8nC,WAAWryB,WAAYzV,KAAK8nC,WAAWpyB,WAAY,CAACge,QAASk6B,QAGlGn7B,KAAAA,IAAI,yBAAyB2gC,EAAS39C,WAAa,CAAC29C,EAAS39C,WAAW4zB,SAAU+pB,EAAS39C,WAAW6zB,QAAU,KAAM,mBAAmB8pB,EAAS19C,WAAa,CAAC09C,EAAS19C,WAAW2zB,SAAU+pB,EAAS19C,WAAW4zB,QAAU,MAC3ND,IAEA+lB,EAAY,CAFDzlD,KAAKC,IAAIwpD,EAAS39C,WAAW4zB,SAAU+pB,EAAS19C,WAAW2zB,UAC7D1/B,KAAKmK,IAAIs/C,EAAS39C,WAAW6zB,OAAQ8pB,EAAS19C,WAAW4zB,SAExE,GAAItpC,KAAKqzB,YAAa,CACpB,IAAMkgC,EAAWvzD,KAAKqzB,YAAYmgC,MAAMxzD,KAAKiwD,iBAAkB,CAAC97B,WAAW,EAAM0kB,MAAAA,IACxE/kB,EAAAA,cAAgB9zB,KAAKiwD,kBAAmB,GAE3C9gB,EAAA,CACJjlC,OAFWq6C,GAAKC,WAAW+O,EAASv/B,aAAau/B,EAASx/B,cAG1D8kB,MAAAA,EACAyQ,MAAAA,EACAxpD,QAAS,CACP+4C,MAAAA,EAAO0Y,UAAAA,EAAWnC,UAAAA,GAEpBqE,QAASF,EAASz/B,kBAGdqb,EAAA,CACJ15B,WAAY29C,EAAS39C,WACrBC,WAAY09C,EAAS19C,WACrBxL,OAAQ,KACR2uC,MAAAA,EACAyQ,MAAAA,EACAxpD,QAAS,CACP+4C,MAAAA,EAAO0Y,UAAAA,EAAWnC,UAAAA,IAInBS,KAAAA,sBAAwB7vD,KAAK6vD,qBAAqB1gB,SAChDlG,GACCjW,QAAAA,MAAM,WAAYiW,GAC1B,IAAM7kC,EAAM,IAAIkgD,GAAYT,GAAY2P,MAAOxQ,GAAYQ,SAAU,CAACzW,IAAI4B,KAAKvY,UAAU6S,KACpF4nB,KAAAA,aAAazsD,EAAK,MAAO,CAACmtD,UAAAA,EAAW1Y,MAAO,CAAC3sC,EAAOA,EAAQhC,EAAO5B,iBAG7E,CAAA5C,IAAA,kBAAAvC,MAED,SAAiBuwD,EAAaxkD,GAC5B,IAAM2pC,EAAQ,GACN3pC,OAAAA,GACD,IAAA,QACH,GAAIlP,KAAK0vD,WAAagE,EAAc1zD,KAAK0vD,UAAUhuD,OAAS,CACpD2Q,IAAAA,EAASrS,KAAK0vD,UAAUgE,GAAarhD,OACrC7R,EAAAA,KAAK6R,EAAO,GAAGsY,OACrBkuB,EAAMr4C,KAAK6R,EAAOA,EAAO3Q,OAAS,GAAGipB,OAEvC,MACG,IAAA,QACH,GAAI3qB,KAAK2vD,WAAa+D,EAAc1zD,KAAK2vD,UAAUjuD,OAAS,CACpD2Q,IAAAA,EAASrS,KAAK2vD,UAAU+D,GAAarhD,OACrC7R,EAAAA,KAAK6R,EAAO,GAAGsY,OACrBkuB,EAAMr4C,KAAK6R,EAAOA,EAAO3Q,OAAS,GAAGipB,OAEvC,MAAA,QAEQpf,QAAAA,KAAK,0BAA2B2D,EAAM,eAG3C2pC,OAAAA,IACR,CAAAnzC,IAAA,eAAAvC,OAAAyrD,EAAA7b,EAAAC,IAAAC,MAED,SAAAoY,EAAoBkG,EAAW1Y,GAAK3sC,IAAAA,EAAAhC,EAAAypD,EAAAC,EAAA,OAAA5gB,IAAAK,MAAA,SAAAoY,GAAA,cAAAA,EAAAlY,KAAAkY,EAAAxnD,MAAA,KAAA,EAAA,KAC9BjE,KAAK8vD,YAAejX,EAAMn3C,OAAS,GAAkB,IAAbm3C,EAAM,IAAyB,IAAbA,EAAM,IAAa74C,KAAKovD,UAAUmC,GAAWR,WAAS,CAAAtF,EAAAxnD,KAAA,EAAA,MAAAwnD,OAAAA,EAAAzX,OAAA,UAAA,KAAA,EAGsC,GAA1Jh0C,KAAKyyB,IAAI,iCAAkC8+B,EAAW,UAAW1Y,EAAO,SAAUA,EAAM,GAAKA,EAAM,GAAG,sBAAuB74C,KAAKyvD,aAAannD,cAC3IuwC,EAAMn3C,QAAU,GAAKm3C,EAAM,IAAMA,EAAM,GAAK,GAAKA,EAAM,IAAM74C,KAAKyvD,aAAannD,YAAU,CAAAmjD,EAAAxnD,KAAA,GAAA,MACtFmrD,KAAAA,UAAUmC,GAAWR,WAAY,EAChC7kD,EAAQvC,KAAKmK,IAAI+kC,EAAM,GAAI74C,KAAKuvD,iBACvBrlD,EAAA,IAAIJ,WAAW9J,KAAKyvD,aAAatuD,MAAM+K,EAAO2sC,EAAM,KACnE74C,KAAKyyB,IAAI,oCAAqCvmB,EAAO2sC,EAAM,IACtDuW,KAAAA,UAAUmC,GAAWjC,YAAa,EACvCtvD,KAAKuvD,iBAAkB,EACvBvvD,KAAKqvD,KAAKnlD,EAAQgC,EAAOqlD,GAAW,GAAK9F,EAAAxnD,KAAA,GAAA,MAAA,KAAA,GAGrC40C,KAAAA,EAAMn3C,QAAU,GAAKm3C,EAAM,IAAMA,EAAM,IAAM74C,KAAKyvD,aAAannD,YAAU,CAAAmjD,EAAAxnD,KAAA,GAAA,MACtE,GAAAjE,KAAKovD,UAAUmC,GAAWR,UAAS,CAAAtF,EAAAxnD,KAAA,GAAA,MAEiC,GADjEiI,EAAQvC,KAAKmK,IAAI+kC,EAAM,GAAI74C,KAAKuvD,oBACvBqE,EAAA,IAAI9pD,WAAW9J,KAAKyvD,aAAatuD,MAAM+K,EAAO2sC,EAAM,MACxDvwC,WAAa,GAAC,CAAAmjD,EAAAxnD,KAAA,GAAA,MAG8CwnD,OAFhE8D,KAAAA,gBAAkBrjD,EAAQhC,EAAO5B,WACtCtI,KAAKyyB,IAAI,qCAAsCvmB,EAAOA,EAAQhC,EAAO5B,YACrEtI,KAAKqvD,KAAKnlD,EAAQgC,EAAOqlD,EAAW1Y,EAAM,IAAM74C,KAAKuvD,iBAAgB9D,EAAAzX,OAAA,UAAA,KAAA,GAAA,GAGlEh0C,KAAK+vD,cAAiB/vD,KAAKovD,UAAUmC,GAAWR,UAAS,CAAAtF,EAAAxnD,KAAA,GAAA,MAGtD,OAFNjE,KAAKyyB,IAAI,kDAAmDzyB,KAAKyvD,aAAannD,WAAYuwC,EAAM,IAC3FuW,KAAAA,UAAUmC,GAAWR,WAAY,EAAItF,EAAAxnD,KAAA,GACpCjE,KAAK6zD,UAAU,CAAC7zD,KAAKyvD,aAAannD,WAAYuwC,EAAM,IAAI0Y,GAAU,KAAA,GAAA9F,EAAAxnD,KAAA,GAAA,MAAA,KAAA,GAAA,GAItEjE,KAAK+vD,gBAAgBlX,EAAM,IAAM74C,KAAKwvD,aAAiBxvD,KAAKovD,UAAUmC,GAAWR,UAAS,CAAAtF,EAAAxnD,KAAA,GAAA,MAGxF,OAFDmrD,KAAAA,UAAUmC,GAAWR,WAAY,EACtC/wD,KAAKyyB,IAAI,0DAA2D8+B,EAAW,cAAe5iB,KAAKvY,UAAUyiB,IAAO4S,EAAAxnD,KAAA,GAC9GjE,KAAK6zD,UAAUhb,EAAM0Y,GAAU,KAAA,GAAA,IAAA,MAAA,OAAA9F,EAAAxX,UAAAoX,EAAArrD,UAI5CyyD,SAAApI,EAAAU,GAAA6D,OAAAA,EAAAnsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,YAAAvC,OAAAg7C,EAAApL,EAAAC,IAAAC,MAED,SAAA6Y,EAAiBjT,EAAO0Y,GAAS,OAAAve,IAAAK,MAAA,SAAA2Y,GAAA,cAAAA,EAAAzY,KAAAyY,EAAA/nD,MAAA,KAAA,EAAA,OAAA+nD,EAAAzY,KAAA,EAAAyY,EAAA/nD,KAAA,EAEvBjE,KAAKwnD,UAAUiC,SAAS5Q,EAAO74C,KAAKwnD,UAAUnN,MAAO,CACzD1vB,MAAO4mC,EACP1X,WAAY75C,KAAK8zD,qBACjBrZ,gBAAiBz6C,KAAKszB,QAAQmnB,kBAC9B,KAAA,EAAAuR,EAAA/nD,KAAA,EAAA,MAAA,KAAA,EAAA+nD,EAAAzY,KAAA,EAAAzN,EAAAA,GAAAkmB,EAAA,MAAA,GAEMh5B,QAAAA,MAAM,yCAAwC,OAAAg5B,EAAAlmB,SAAEkmB,IAAFA,EAAAlmB,QAAEkmB,EAAAA,EAAAlmB,GAAGnM,SACtD03B,KAAAA,UAASrF,EAAAlmB,GAAI,eAAgB,CAAC+S,MAAAA,EAAO0Y,UAAAA,IAAW,KAAA,EAAA,IAAA,MAAA,OAAAvF,EAAA/X,UAAA6X,EAAA9rD,KAAA,CAAA,CAAA,EAAA,SAExD6zD,SAAA7I,EAAAI,GAAAjN,OAAAA,EAAA17C,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,YAAAvC,MAED,SAAW8lC,EAAG8qB,EAAWj0D,GAASk0D,IAAAA,GAC/B/qB,EAAEqE,WAAarE,EAAEqE,SAAW,IACzBrE,EAAEmE,UACJnE,EAAEqE,SAASE,OAAS,UACVvE,MAAAA,GAAW+qB,QAAVA,EAAD/qB,EAAGqE,oBAAQ0mB,GAAXA,EAAaxmB,SACvBvE,EAAEqE,SAASE,OAAS,gBAEjBqjB,KAAAA,aAAa5nB,EAAG8qB,EAAWj0D,KACjC,CAAA4F,IAAA,gBAAAvC,OAAAwrD,EAAA5b,EAAAC,IAAAC,MAED,SAAAiZ,IAAA,OAAAlZ,IAAAK,MAAA,SAAA8Y,GAAA,cAAAA,EAAA5Y,KAAA4Y,EAAAloD,MAAA,KAAA,EAAA,OAAAkoD,EAAAloD,KAAA,EACQjE,KAAKwnD,UAAS,KAAA,EAAA2E,GAAAA,EAAArmB,GAAAqmB,EAAAlQ,MAAAkQ,EAAArmB,GAAA,CAAAqmB,EAAAloD,KAAA,EAAA,MAAIjE,KAAKwnD,UAAU5L,SAAQ,KAAA,EAAA,IAAA,MAAA,OAAAuQ,EAAAlY,UAAAiY,EAAAlsD,UAChD,WAAA2uD,OAAAA,EAAAlsD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,SAAAvC,MAED,SAAQkqC,GACNrtC,KAAKqtC,IAAMA,IACZ,CAAA3nC,IAAA,iBAAAvC,MAGD,WAIS8wD,OAHOj0D,KAAKipD,OAASjpD,KAAKipD,KAAK5C,WAAWl0C,QAAQ,YACvDnS,KAAKipD,KAAK5C,WAAWl0C,QAAQ,SAAU,KAG1C,CAAAzM,IAAA,UAAAvC,MAED,WACMnD,KAAKk0D,eAGTl0D,KAAKsyD,iBACAhC,KAAAA,yBAA2BtwD,KAAKswD,wBAAwB6D,UAC7Dn0D,KAAK8vD,YAAa,EAClB9vD,KAAK+vD,cAAe,EACpB/vD,KAAKuvD,gBAAkB,EAClBE,KAAAA,aAAe,IAAI3lD,WAAW,GAC/B9J,KAAKwnD,YACPxnD,KAAKwnD,UAAU5L,SACf57C,KAAKwnD,UAAU2M,WAEjBn0D,KAAKk0D,cAAe,KACrB,CAAAxuD,IAAA,iBAAAvC,MAED,WACO2kC,KAAAA,YAAc9nC,KAAK8nC,WAAWvsB,QACnCvb,KAAK8nC,WAAa,KACbzU,KAAAA,aAAerzB,KAAKqzB,YAAY9X,QACrCvb,KAAKqzB,YAAc,KACdi9B,KAAAA,yBAA2BtwD,KAAKswD,wBAAwB/0C,WAC9D,CAAA,CAAA7V,IAAA,mBAAAvC,MA5kBD,WACS,MAAA,CACLklD,gBAAiB,EACjB5N,gBAAiB,KACjB2D,UAAW,IACX4D,WAAY,EACZT,WAAY,IACZ5H,QAAS,IACTwW,cAAc,EACdiE,SAAU,GACVtb,IAAK,GACL1wB,IAAK,QAERuF,GAfehtB,GAslBlB,SAASkyD,GAAiBjqB,GACxB,GAAIA,EAAM9gC,SAAiB8gC,OAAAA,MCvmBRyrB,GAAK,WACxB,SAAAA,EAAaC,GAAQ/uD,OAAA8uD,GACnBr0D,KAAKu0D,QAAUD,EACft0D,KAAKw0D,eAAiB,KAsCvBH,OArCA5uD,EAAA4uD,EAAA,CAAA,CAAA3uD,IAAA,YAAAvC,MAED,SAAWsxD,GAAiC,IAAA/9C,EAAA1W,KAAjB00D,EAAQpyD,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACpCtC,KAAKi0C,OACL,IAAI4M,GAAQ,EACR8T,EAAY,KAEhB30D,KAAKw0D,eAAiB,WACpBloD,OAAO+uC,aAAasZ,GACZ9T,GAAA,GAGJyT,IAAAA,EAAS,WACTzT,IACFnqC,EAAK69C,UACDG,SAQD,OAFPC,EAAYroD,OAAOqvC,WAAW2Y,EAAyB,IAAjBG,GAE/Bz0D,OACR,CAAA0F,IAAA,YAAAvC,MAED,SAAWyxD,GAAS,IAAAp9C,EAAAxX,KACb60D,KAAAA,UAAUD,GAAS,WACtBp9C,EAAKs9C,UAAUF,QAElB,CAAAlvD,IAAA,OAAAvC,MAED,WACMnD,KAAKw0D,iBACPx0D,KAAKw0D,iBACLx0D,KAAKw0D,eAAiB,UAEzBH,EAzCuB,GCALU,GAAY,WAC/B,SAAAA,IACMC,IAAAA,EACAC,EAFS1vD,OAAAwvD,GAIb,IAKMG,EALU,IAAI5lB,SAAQ,SAACC,EAASC,GACnBD,EAAAA,EACDC,EAAAA,KAeX0lB,OAXO3lB,EAAAA,QAAU,SAAUpnC,GAChC6sD,EAAe7sD,GACf+sD,EAAc5L,MAAQ,aAEV9Z,EAAAA,OAAS,SAAUxc,GAC/BiiC,EAAcjiC,GACdkiC,EAAc5L,MAAQ,WACtB4L,EAAcC,QAAoB,cAAVniC,GAE1BkiC,EAAc5L,MAAQ,UAEf4L,EAaRH,OATDtvD,EAAAsvD,EAAA,CAAA,CAAArvD,IAAA,UAAAvC,MACA,SAASA,MAKT,CAAAuC,IAAA,SAAAvC,MACA,SAAQkzC,QAEP0e,EAnC8B,GCa7BK,GAAkB,KAElBC,GAAmB,KAEnBC,GAA0B,KAE1BC,GAAmB,KAEFC,YAASC,GAAA/sD,EAAA8sD,EAAAC,GAAA9sD,IA+b3B+sD,EAlEDC,EA5CAC,EAjV4BjtD,EAAAC,EAAA4sD,GAuB5B,SAAAA,EAAaliC,GAAS5c,IAAAA,EAOMA,OAPNnR,OAAAiwD,GACNhwD,EAAAsyC,EAAdnvC,EAAAA,EAAAzH,UAAMoyB,0BAwJa,WACf5c,EAAKm/C,YACPn/C,EAAKo/C,mBAERtwD,EAAAsyC,EAAAphC,GAEiB,mBAAA,SAACuyC,GACjB,IAAQ1hD,EAARuwC,EAAAphC,GAAQnP,OACFwuD,EAASr/C,EAAKs/C,IAAI1C,iBACpB,IACF,GAAIyC,IAAWr/C,EAAKnP,OAAO2mD,YAAa,CACtC,IAAMv0B,EAAU,2BACVs8B,EAAO,IAAIC,SAAOx/C,EAAKy/C,OAAQ,CACnCnpB,UAAW,UACXopB,cAAevS,GAAYwS,QAC3BnpB,UAAW8V,GAAYsT,UACvBptB,aAAcvP,EACdmf,IAAKvxC,EAAOuxC,IACZsL,WAAY,CAAEC,KAAMrB,GAAYsT,UAAW38B,QAAAA,KAE7CjjB,EAAKu4C,cAAcgH,QAEnBv/C,EAAK6/C,SAAStN,GACdvyC,EAAK8/C,aAAajnB,gBAEbtG,GACP,IAAMgtB,EAAO,IAAIC,SAAOx/C,EAAKy/C,OAAQ,CACnCnpB,UAAW,UACXopB,cAAevS,GAAYwS,QAC3BnpB,UAAW8V,GAAYG,IACvBja,aAAcD,MAAAA,OAAAA,EAAAA,EAAGtP,QACjBmf,IAAKvxC,EAAOuxC,IACZsL,WAAY,CAAEC,KAAMrB,GAAYyT,OAAQ98B,QAASsP,MAAAA,OAAC,EAADA,EAAGtP,WAGtD,YADAjjB,EAAKu4C,cAAcgH,GAGrBv/C,EAAK+wC,eACNjiD,EAAAsyC,EAAAphC,GAkCa,eAAA,SAACtS,GACL00C,IAAAA,EAAQpiC,EAAKggD,aAAb5d,IACA9lB,QAAAA,MAAM,sBAAuB8lB,EAAK10C,GAC1CsS,EAAKu4C,cAAc7qD,MACpBoB,EAAAsyC,EAAAphC,GAiNkB,oBAAA,SAACvO,GAClB,IAAIuO,EAAKigD,WAAcjgD,EAAKysC,IAA5B,CAGAzsC,EAAK+b,IAAI,mCAAoCkc,KAAKvY,UAAUjuB,EAAKrI,QAAQ+4C,OAAQ,YAAa1wC,EAAK+B,OAAS/B,EAAK+B,OAAO5B,WAAa,EAAGH,EAAKmhD,OACzI,IACEnhD,EAAKsrD,UACFmD,EAAAA,eAAezuD,EAAKsrD,WACpBtrD,EAAK+B,QAAU/B,EAAK+B,OAAO5B,WAAa,KAC3CoO,EAAK+b,IAAI,2BACT/b,EAAKo/C,kBAGT,IAAO5rD,EAA2B/B,EAA3B+B,OAAQo/C,EAAmBnhD,EAAnBmhD,MAAOxpD,EAAYqI,EAAZrI,QAEtB,GAAI4W,EAAKysC,KAAOmG,KAAWp/C,GAAUA,EAAO5B,YAAc,IAAMxI,EAAQyxD,YAAc76C,EAAKs/C,IAAI5G,UAAU1tD,OAAS,EAAG,CAC7G+nC,IAAAA,EAAW/yB,EAAKy/C,OAAO1sB,SACzBA,GAAYA,EAAS/nC,OAAS,IAChCgV,EAAKmgD,cAAgBptB,EAAS36B,IAAI26B,EAAS/nC,OAAS,IAEtDgV,EAAKogD,WACLpgD,EAAK+b,IAAI,wBAAyBkc,KAAKvY,UAAUt2B,EAAQ+4C,OAAQ,eAAe/4C,EAAQyxD,UAAW,mBAAmB76C,EAAKmgD,cAAe,kBAAkBngD,EAAKs/C,IAAI/M,KAAKjjD,UAE5K,GAAI0Q,EAAKysC,KAAOmG,GAASxpD,EAAQyxD,YAAc76C,EAAKs/C,IAAI5G,UAAU1tD,OAAS,KAAOwI,GAAUA,EAAO5B,YAAc,GAAI,CAC7GmhC,IAAAA,EAAW/yB,EAAKy/C,OAAO1sB,SACzBA,GAAYA,EAAS/nC,OAAS,IAChCgV,EAAKmgD,cAAgBptB,EAAS36B,IAAI26B,EAAS/nC,OAAS,IAEtDgV,EAAKogD,WACArkC,EAAAA,IAAI,sBAAuB/b,EAAKggD,aAAa5d,IAAKnK,KAAKvY,UAAUt2B,EAAQ+4C,OAAQ,eAAe/4C,EAAQyxD,UAAW,mBAAmB76C,EAAKmgD,cAAe,kBAAkBngD,EAAKs/C,IAAI/M,KAAKjjD,UAE7LkE,GAAUwM,EAAKysC,KACbj5C,GAAUA,EAAO5B,WAAa,GAChCoO,EAAKqgD,cAAc1mB,GAAI6B,MAAOhoC,EAAQpK,EAASwpD,SAG5CrgB,GAEFxW,EAAAA,IAAI,qBAAsBwW,GAC/B,IAAMgtB,EAAO,IAAIC,SAAOx/C,EAAKy/C,OAAQ,CACnCnpB,UAAW,UACXopB,cAAevS,GAAYwS,QAC3BnpB,UAAW8V,GAAYG,IACvBrK,IAAKpiC,EAAKy/C,OAAO5uD,OAAOuxC,IACxB5P,aAAcD,EAAEtP,QAChByqB,WAAY,CAACC,KAAMrB,GAAYG,IAAKxpB,QAASsP,EAAEtP,WAEjDjjB,EAAKu4C,cAAcgH,GAEjB9tD,MAAAA,GAAAA,EAAMmhD,OACR5yC,EAAKo/C,oBAERtwD,EAAAsyC,EAAAphC,iBAEY,WACXsgD,IAAAA,EAAAlf,EAAAphC,GAAQy/C,EAAMa,EAANb,OAAQ5uD,EAAMyvD,EAANzvD,OAChB8zC,aAAa3kC,EAAKugD,oBAClBvgD,EAAKugD,mBAAqB,KAC1B,IAAM9Q,EAAUgQ,EAAOjsB,YAEjBhgC,EAASisD,EAAOe,cAClBhtD,EAAO4E,IAAM,GAAK5E,EAAO4E,IAAMqnD,EAAOjsB,aAAe,GACnDxzB,EAAKygD,mBAAqB5vD,EAAO6vD,uBAC9BH,EAAAA,mBAAqBtb,YAAW,WAC9Bwb,EAAAA,qBACEjtB,EAAAA,YAAcisB,EAAOjsB,YAAc,GACrCzX,EAAAA,IAAI,4CAA6C/b,EAAKygD,mBAAoB,YAAahR,EAAS5B,GAAKnW,aACzG7mC,EAAO8vD,4BAGfvf,EAAAA,EAAAphC,GAAAq8B,eAAAE,IAAAA,MAEY,SAAAC,IAAAokB,IAAAA,EAAAnB,EAAAH,EAAA7P,EAAA1c,EAAA8tB,EAAAhG,EAAAiG,EAAArU,EAAAsU,EAAAC,EAAA,OAAA1kB,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAArvC,MAAA,KAAA,EAGuE,GAHvEqzD,EAAAxf,EAAAphC,GACHy/C,EAAMmB,EAANnB,OAAQH,EAAGsB,EAAHtB,IACV7P,EAAUgQ,EAAOjsB,YACvBxzB,EAAK+b,IAAI,uBAAuB0zB,EAAS,WAAWgQ,EAAOwB,UAAUC,cAChE5B,GAAQA,EAAI/M,KAAI,CAAA3V,EAAArvC,KAAA,EAAA,MAAAqvC,OAAAA,EAAAU,OAAA,UAAA,KAAA,EAQJ,GALjBt9B,EAAKmhD,aAAc,EACnB7B,EAAIzG,iBAAkB,EACtByG,EAAIjG,cAAe,EACbtmB,EAAW0sB,EAAOe,cACNK,GAAA,EACFhG,EAAA,IACZ9nB,EAAS36B,IAAM,GAAC,CAAAwkC,EAAArvC,KAAA,GAAA,MACA,GAAJszD,GAAA,IACVvB,EAAI/M,KAAKjjD,SAAWyjC,EAAS36B,IAAM,IAAG,CAAAwkC,EAAArvC,KAAA,GAAA,MAE2DqvC,OADnG58B,EAAKohD,iBACLphD,EAAK+b,IAAI,2CAA2CgX,EAAS36B,IAAK,cAAeknD,EAAI/M,KAAKjjD,UAASstC,EAAAU,OAAA,UAAA,KAAA,GAGzD,GAAhCgiB,EAAAA,EAAI5D,eAAe3oB,EAAS36B,KACpC4H,EAAKqhD,qBAAuBxG,EAAS,CAAAje,EAAArvC,KAAA,GAAA,MAEsDqvC,OAD7F58B,EAAKohD,iBACArlC,EAAAA,IAAI,yEAA0E8+B,GAAUje,EAAAU,OAAA,UAAA,KAAA,GAG/FgiB,EAAIxF,SAAW/mB,EAAS36B,IACZyiD,EAAA,IAAMA,EAAY76C,EAAKqhD,oBAC9BtlC,EAAAA,IAAI,yCAA0C0zB,EAAQ,gBAAgB1c,EAASv9B,MAAO,IAAIu9B,EAAS36B,IAAK,eAAgByiD,GAAU,KAAA,GAcxI,OAZIgG,IACHvB,EAAIxF,SAAWrK,GACH6P,EAAAA,EAAI5D,eAAejM,IACnB,IAAMoL,EAAY76C,EAAKqhD,oBACnCrhD,EAAK+b,IAAI,wCAAyC0zB,EAAS,SAAUoL,GAAUiG,EAAA1f,EAAAphC,IACvEysC,EAAGqU,EAAHrU,MACGA,EAAI6U,WACPP,EAAatB,EAAOwB,UAAUC,aAChBH,EAAAA,EAAWA,EAAW/1D,OAAS,GAC/Cu2D,EAAAA,cAAc5nB,GAAI6B,OACjBgmB,EAAAA,yBAAyB,CAACR,EAAYxrD,MAAOwrD,EAAY5oD,KAAMqnD,EAAOjsB,aAAc,GAAM,KAElGoJ,EAAArvC,KAAA,GACK+xD,EAAImC,gBAAe,KAAA,GACzBnC,EAAI3D,uBAAuBd,GAC3B76C,EAAKqhD,mBAAqBxG,EAC1B76C,EAAKo/C,gBACLp/C,EAAKohD,iBACLphD,EAAKogD,WAAU,KAAA,GAAA,IAAA,MAAA,OAAAxjB,EAAAW,UAAAf,QAChB4E,EAAAA,EAAAphC,GAqHqB,uBAAA,SAACwzB,EAAakuB,EAAQxuC,EAAM00B,GAChD,IAAQ6X,EAARre,EAAAphC,GAAQy/C,OACJA,EAAOkC,MACTlC,EAAOjsB,YAAc,GAGlBzX,EAAAA,IAAI,8CAA8C/b,EAAK4hD,iBAC5DnC,EAAOjsB,YAAcxzB,EAAK4hD,gBAAkB5hD,EAAK4hD,gBAAgBpuB,YAAcA,GAC/DxzB,EAAK4hD,gBAAkB5hD,EAAK4hD,gBAAgBF,OAASA,GAEnEjC,EAAOoC,QAEPpC,EAAOqC,OAET9hD,EAAK4hD,gBAAkB,KAChBx2D,EAAAA,KAAKnC,EAAMA,OAAC84D,wBAAyB,CAAE7uC,KAAAA,EAAM00B,GAAAA,QACrD94C,EAAAsyC,EAAAphC,GAAA,mBAAA,WAAAuV,IAAAA,EAAA8mB,EAAAC,IAAAC,MAEkB,SAAAkB,EAAOmK,EAAI10B,GAAI,IAAA8uC,EAAAvC,EAAA5uD,EAAAyuD,EAAA2C,EAAApH,EAAA9nB,EAAA,OAAAuJ,IAAAK,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAtwC,MAAA,KAAA,EAQ5BsD,GAR4BuwC,EAAAA,EAAAphC,GACxBy/C,EAAMuC,EAANvC,OAAQ5uD,EAAMmxD,EAANnxD,OAAQyuD,EAAG0C,EAAH1C,IAEnBpsC,IACHA,EAAOusC,EAAOyC,eAEhBliD,EAAKmiD,WAAY,GAEbtxD,EAAOuxD,gBAAe,CAAAvkB,EAAAtwC,KAAA,EAAA,MACUswC,OAA7BwkB,EAAAA,oBAAoBza,EAAI10B,GAAK2qB,EAAAP,OAAA,UAAA,KAAA,EAQwG,GAJrIlyC,EAAAA,KAAKnC,EAAMA,OAACq5D,kBAAmB,CAACpvC,KAAAA,EAAM00B,GAAAA,IACvCqa,EAAYxC,EAAOjsB,aACT8rB,EAAAA,EAAI5D,eAAeuG,IACvB,IAAMpH,EAAY76C,EAAKqhD,oBAC9BtlC,EAAAA,IAAI,iCAAkC8+B,EAAW,cAAeyE,EAAI5G,UAAUmC,GAAW56C,UAAW,gBAAgBw/C,EAAOjsB,cAC5H8rB,EAAG,CAAAzhB,EAAAtwC,KAAA,GAAA,MACiC,OAAtCyS,EAAKs/C,IAAIvF,kBAAoBkI,EAASpkB,EAAAtwC,KAAA,GAChC+xD,EAAImC,gBAAe,KAAA,GACrBpI,EAAAA,eAAiBiG,EAAIjG,cAAe,GAAM,KAAA,GAa1Cr5C,OAXDuiD,EAAAA,oBAAsBjD,EAAI5G,UAAUmC,GAAW56C,UACpDD,EAAKwiD,qBAAsB,GACV/C,EAAAA,EAAOgD,iBAAiBhD,EAAO1sB,WAEnC,GAAK,GAAKA,EAAS,GAAK0sB,EAAOjsB,YAAc,IACnDiZ,EAAAA,IAAI8U,cAAc5nB,GAAI6B,OACtBiR,EAAAA,IAAIrN,OAAOzF,GAAI6B,MAAOikB,EAAOjsB,YAAc,EAAGT,EAAS,KAEzDhX,EAAAA,IAAI,yCAA0C8+B,GACnDyE,EAAI3D,uBAAuBd,GAC3B76C,EAAKqhD,mBAAqBxG,EAAShd,EAAAtwC,KAAA,GAC7ByS,EAAKs/C,IAAIoD,cAAc9a,GAAG,KAAA,GAChC5nC,EAAKo/C,gBACEh0D,EAAAA,KAAK,oBAAqBw8C,GAAG,KAAA,GAAA,IAAA,MAAA,OAAA/J,EAAAN,UAAAE,OACrCD,OAAAA,SAAAA,EAAA+C,GAAAhrB,OAAAA,EAAAxpB,MAAAzC,KAAAsC,YAvCA,IAuCAkD,EAAAsyC,EAAAphC,kBAiDa,WAAM2iD,IAAAA,EAEX,OADI,QAAXA,EAAA3iD,EAAKy/C,cAAM,IAAAkD,GAAXA,EAAab,QACN,KACRhzD,EAAAsyC,EAAAphC,iBAEY,WAEJ,OADPA,EAAK4iD,oBACE,KAjxBP5iD,EAAKs/C,IAAM,KACXt/C,EAAKysC,IAAM,KACXzsC,EAAKygD,mBAAqB,EACrBoC,EAAAA,eAAiBhV,GAAKnW,UAC3B13B,EAAKuiD,oBAAsB,EAC3BviD,EAAK8iD,iBAAmB,GAAE9iD,EAT3B8+C,OAUA/vD,EAAA+vD,EAAA,CAAA,CAAA9vD,IAAA,cAAAvC,MAED,WAAe,IAAAqU,EAAAxX,KACbsM,OAAOmtD,YAAcz5D,KACjB,iBACS05D,qBAAqB15D,KAAKm2D,OAAQ,CAC3CwD,MAAO,CACL9yD,IAAK,WACC,IACF,OAAO2Q,EAAK2rC,IAAM3rC,EAAK2rC,IAAI9V,IAAM71B,EAAKjQ,OAAO8lC,UACtCra,GACA,OAAA,gBAKRiW,IAITjpC,KAAK45D,iBACN,CAAAl0D,IAAA,eAAAvC,MAED,WACEnD,KAAK6C,IAAIlD,EAAMA,OAACk6D,QAAS75D,KAAK85D,YAC9B95D,KAAK2C,GAAGhD,EAAMA,OAACk6D,QAAS75D,KAAK85D,YAC7B95D,KAAK2C,GAAGhD,EAAMA,OAACo6D,QAAS/5D,KAAKg6D,YAC7Bh6D,KAAK6C,IAAIlD,EAAMA,OAACs6D,WAAYj6D,KAAKk6D,WACjCl6D,KAAK2C,GAAGhD,EAAMA,OAACs6D,WAAYj6D,KAAKk6D,aACjC,CAAAx0D,IAAA,eAAAvC,MAED,WACEnD,KAAK6C,IAAIlD,EAAMA,OAACk6D,QAAS75D,KAAK85D,YAC9B95D,KAAK6C,IAAIlD,EAAMA,OAACo6D,QAAS/5D,KAAKg6D,YAC9Bh6D,KAAK6C,IAAIlD,EAAMA,OAACs6D,WAAYj6D,KAAKk6D,aAGnC,CAAAx0D,IAAA,eAAAvC,MAIA,WAAgB,IAAAqV,EAAAxY,KACsB,mBAAzBA,KAAKm2D,OAAOgE,WACrB/E,GAAkBp1D,KAAKm2D,OAAOgE,UAE3BhE,KAAAA,OAAOgE,SAAW,WAChBA,EAAAA,SAAQ13D,MAAb+V,EAAIlW,YAGN+yD,GAAmBr1D,KAAKm2D,OAAOiE,WAC/B7E,GAAmBv1D,KAAKm2D,OAAO+D,UAC/B5E,GAA0Bt1D,KAAKm2D,OAAOkE,iBAEtCr6D,KAAKm2D,OAAOiE,WAAap6D,KAAKq1D,iBAAiBngB,KAAKl1C,MACpDA,KAAKm2D,OAAO+D,UAAYl6D,KAAKk6D,UAAUhlB,KAAKl1C,MAC5CA,KAAKm2D,OAAOkE,iBAAmBr6D,KAAKq6D,iBAAiBnlB,KAAKl1C,MAE1DA,KAAKm2D,OAAOmE,YAAY,SAAUt6D,KAAKu6D,aAEvCv6D,KAAKm2D,OAAOmE,YAAY,QAASt6D,KAAKw6D,cACvC,CAAA90D,IAAA,mBAAAvC,MAED,SAAkBkqC,GAAK,IAAArT,EAAAh6B,KACbuH,EAAyBvH,KAAzBuH,OAAQmvD,EAAiB12D,KAAjB02D,kBACWl0D,IAAvB+E,EAAO2mD,aACE,OAAPuM,EAAOA,cAAA,IAAPA,EAAAA,SAAAA,EAAAA,QAASC,iBAAmBD,UAAQC,oBACtCnzD,EAAO2mD,aAAc,GAGnBr0C,IAAAA,EAAM7Z,KAAK26D,UACjB36D,KAAKw2D,aAAe38C,EACf+gD,KAAAA,mBAAmB56D,KAAKw2D,cACzBx2D,KAAKmjD,KAA4B,WAArB0X,EAAAA,KAAKC,OAAOztB,IAAqB,QAAQzgC,KAAKygC,IAAQA,IAAQrtC,KAAKmjD,IAAI9V,MACrFA,EAAMqpB,EAAarpB,KAErBxzB,EAAI48B,MAAK,WACHzc,EAAKmpB,MACP9V,EAAMrT,EAAKmpB,IAAI9V,KAEjBrT,EAAK+gC,eACL/gC,EAAK89B,oBACJzb,OAAM,SAACpT,GACR,IAAMksB,IAAUn7B,EAAKw8B,cAAex8B,EAAKw8B,aAAarB,QAClDn7B,IAAAA,EAAK28B,YAAaxB,EAAlBn7B,CAIJ,IAAI51B,EAAM6kC,EACL7kC,EAAI8oC,aACP9oC,EAAM,IAAI8xD,EAAAA,OAAOl8B,EAAKm8B,OAAQ,CAC5BnpB,UAAW6W,GAAY7Y,QAEvBkC,WAAWjE,MAAAA,OAAC,EAADA,EAAGiE,YAAa8V,GAAYS,MACvC3K,IAAK9e,EAAK08B,aAAa5d,IACvB5P,cAAcD,MAAAA,SAAAA,EAAGC,gBAAgBD,MAAAA,OAAAA,EAAAA,EAAGtP,SACpCyqB,WAAY,CACVC,MAAMpb,MAAAA,OAAC,EAADA,EAAGsE,WAAYyV,GAAYS,MACjC9pB,SAASsP,MAAAA,SAAAA,EAAGC,gBAAgBD,MAAAA,OAAAA,EAAAA,EAAGtP,SAC/BqT,UAAU/D,MAAAA,OAAC,EAADA,EAAG+D,cAGbK,IAAMA,GAEZrT,EAAKghC,cAAe,EACpBhhC,EAAKm8B,OAAO8E,MAAQ,QACpBjhC,EAAKm8B,OAAOr0D,KAAK,YAAak4B,EAAKm8B,OAAO8E,MAAO72D,OAChDy+C,SAAQ,WACL,GAAC7oB,EAAKw8B,aAAN,CAGIrB,IAAAA,EAAYn7B,EAAKw8B,aAAjBrB,QACJA,IAGJn7B,EAAKw8B,cAAgBx8B,EAAKkhC,sBAAsBlhC,EAAKw8B,cACrDx8B,EAAKw8B,aAAe,MACnBx8B,EAAK28B,YAAcxB,GAAWE,GAAiBn0D,KAAK84B,EAAKm8B,OAAQ9oB,UAErE,CAAA3nC,IAAA,UAAAvC,MAED,WAAW,IAAA8+B,EAAAjiC,KACDm2D,EAAWn2D,KAAXm2D,OACHA,EAAO5uD,OAAOuxC,MACVvxC,EAAAA,OAAOuxC,IAAM/9B,KAAK40B,OAErBwrB,IAAAA,EAAW,IAAIpG,GAiBdoG,OAhBHn7D,KAAKg2D,MACPh2D,KAAKg2D,IAAInzD,IAAI6rD,GAAuB1uD,KAAKo7D,iBACzCp7D,KAAKg2D,IAAInzD,IAAI6rD,GAAkB1uD,KAAKq7D,aACpCr7D,KAAKg2D,IAAInzD,IAAI6rD,GAA8B1uD,KAAKs7D,oBAChDt7D,KAAKg2D,IAAI7B,UACTn0D,KAAKg2D,IAAM,MAEbh2D,KAAKg2D,IAAM,IAAIroC,GAAIwoC,EAAO5uD,OAAO8lC,IAAGyS,EAAAA,EAAM,GAAA9/C,KAAKuH,QAAM,GAAA,CAAEuxC,IAAKqd,EAAO5uD,OAAOuxC,OAC1E94C,KAAKg2D,IAAIrzD,GAAG+rD,GAAuB1uD,KAAKo7D,iBACxCp7D,KAAKg2D,IAAIrzD,GAAG+rD,GAAkB1uD,KAAKq7D,aACnCr7D,KAAKg2D,IAAIrzD,GAAG+rD,GAA8B1uD,KAAKs7D,oBAC/Ct7D,KAAKg2D,IAAIrzD,GAAG+rD,IAA4B,SAAC6M,GACvCt5B,EAAK81B,mBAAqBwD,EACrB9oC,EAAAA,IAAI,6BAA6B8oC,MAExCv7D,KAAKg2D,IAAIloC,OACFqtC,IACR,CAAAz1D,IAAA,YAAAvC,MA0CD,SAAWq4D,GACTx7D,KAAKuH,OAAShI,OAAOw1B,OAAO/0B,KAAKuH,OAAQi0D,KAG3C,CAAA91D,IAAA,WAAAvC,MAIA,SAAUq4D,GACR,IAAQrF,EAAWn2D,KAAXm2D,OACRn2D,KAAKy7D,YAAa,EAElBtF,EAAOuF,aACPvF,EAAOwF,aAAe,EACtBxF,EAAOyF,UAAY,EACnBzF,EAAO0F,WAAY,EACnB77D,KAAK64D,WAAY,EACjB1C,EAAOoC,QACPv4D,KAAK4nD,SACLuO,EAAO2F,UAAUN,GACZ/oC,KAAAA,IAAI,mBAAoB+oC,GAC7BrF,EAAOqC,OAEPx4D,KAAK8B,KAAK,cACX,CAAA4D,IAAA,eAAAvC,MAED,SAAc6vB,GAEL,OADoBhzB,KAAKuH,OAAxBw0D,gBACqC,iBAAnB/oC,EAAMua,WACjC,CAAA7nC,IAAA,gBAAAvC,MASD,SAAeiB,GAAK43D,IAAAA,EACX7F,EAAkBn2D,KAAlBm2D,OAAQ5uD,EAAUvH,KAAVuH,OACX,GAAC4uD,IAAUn2D,KAAKg7D,aAAhB,EAGC52D,EAAIipC,aAAG2uB,EAAIh8D,KAAKg2D,WAAG,IAAAgG,GAARA,EAAU3uB,MACpBA,EAAAA,IAAMrtC,KAAKg2D,IAAI3oB,KAErB,IAAM4uB,EAAW9F,EAAOiC,OAKxB,GAJA9sD,QAAQ0nB,MAAM,qBAAsBzrB,EAAOuxC,IAAK10C,GAChDpE,KAAKm2D,OAAO8E,MAAQ,QACpBj7D,KAAKm2D,OAAOr0D,KAAK,YAAa9B,KAAKm2D,OAAO8E,MAAO72D,GAC/BpE,KAAKk8D,aAAa93D,GAE9BpE,KAAKw2D,aACPx2D,KAAKm8D,4BAA4B/3D,GAE5Bg4D,KAAAA,uBAAuBh4D,EAAK63D,OAE9B,CACLj8D,KAAKm2D,OAAOoC,QACZv4D,KAAK4nD,SACL,IAAQ1d,EAAgBisB,EAAhBjsB,YACRlqC,KAAKq8D,aACLlG,EAAOjsB,YAAcA,EAChBpoC,KAAAA,KAAK,QAASsC,OAIvB,CAAAsB,IAAA,yBAAAvC,MAGA,SAAwBiB,EAAK63D,GAAU,IAAA7oB,EAAApzC,KACrCsL,QAAQmnB,IAAI,6BACZ,IAAQ0jC,EAAyBn2D,KAAzBm2D,OAAQO,EAAiB12D,KAAjB02D,aAChB12D,KAAKg7D,cAAe,EACpBh7D,KAAKq8D,aACLr8D,KAAK27D,aAAexF,EAAOjsB,YAC3BlqC,KAAKs8D,mBAAqB,WACpBlpB,EAAKuoB,eACPxF,EAAOjsB,YAAckJ,EAAKuoB,cAExBM,EACF7oB,EAAK+iB,OAAOoC,QAEZnlB,EAAK+iB,OAAOqC,OAEdrC,EAAO7lB,MAAMwC,oBAAoB,iBAAkBM,EAAKkpB,oBACxDlpB,EAAKkpB,mBAAqB,MAE5BnG,EAAO7lB,MAAMoC,iBAAiB,iBAAkB1yC,KAAKs8D,oBACrD,IAAMxqB,EAAO4kB,EAAarpB,IAC1B8oB,EAAO7lB,MAAMoD,IAAM5B,IACpB,CAAApsC,IAAA,qBAAAvC,MAED,SAAoBiK,GACbosD,KAAAA,iBAAiBh5D,KAAK4M,KAC5B,CAAA1H,IAAA,wBAAAvC,MAED,SAAuBiK,GAErB,IAAMmvD,EAAMv8D,KAAKw5D,iBAAiBrnD,QAAQ/E,GACtCmvD,GAAU,GACP/C,KAAAA,iBAAiBhgD,OAAO+iD,EAAK,KAErC,CAAA72D,IAAA,yBAAAvC,MAED,WACMnD,KAAKw5D,iBAAiB93D,OAAS,GAC5B83D,KAAAA,iBAAiBjsD,SAAQ,SAAA8hC,GAC5BA,EAAQG,OA9UE,gBAiVdxvC,KAAKw5D,iBAAmB,KACzB,CAAA9zD,IAAA,8BAAAvC,MAED,SAA6B6vB,GACvBhzB,KAAKw2D,eACF0E,KAAAA,sBAAsBl7D,KAAKw2D,cAC3BA,KAAAA,aAAahnB,OAAOxc,MAI7B,CAAAttB,IAAA,WAAAvC,OAAAyyD,EAAA7iB,EAAAC,IAAAC,MAOA,SAAAyD,EAAgBuS,GAAI,IAAAgL,EAAAhgC,EAAAC,EAAA/tB,EAAAq2D,EAAAloB,EAAAt0C,KAAA,OAAAgzC,IAAAK,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAA5yC,MAAA,KAAA,EACd,IAAAjE,KAAKmjD,IAAG,CAAAtM,EAAA5yC,KAAA,EAAA,MACJ,OADI4yC,EAAA5yC,KAAA,EACJjE,KAAKmjD,IAAI3P,cAAa,KAAA,EAC5BxzC,KAAKmjD,IAAM,KAAI,KAAA,EAEX8Q,EAAQj0D,KAAKg2D,KAAOh2D,KAAKg2D,IAAI1C,iBAClBr/B,IAAEg1B,EAAK5C,WACPnyB,IAAE+0B,EAAK3C,WAItBngD,EADE8tB,GAAYC,EACN+/B,EAAQ,iDAAmD,6CAC1DhgC,EACDggC,EAAQ,sCAAwC,kCAEhD,gCAGJuI,EAAYh3D,EAAA,GAAM6qC,GAAI6B,MAAQ,CAAE4C,SAAU,YAAa3uC,MAAAA,IACxDg9C,KAAAA,IAAM,IAAI9S,GACKrwC,KAAKmjD,IAAI7R,UAAUtxC,KAAKm2D,OAAOlkC,OACvCwkB,MAAK,WACTgmB,IAAAA,EAAoBl9D,OAAOqyC,KAAK4qB,GAClC,IACF,IAAA,IAASh7D,EAAI,EAAGA,EAAIi7D,EAAkB/6D,OAAQF,IAAK,CACjD,IAAM0N,EAAOutD,EAAkBj7D,GAC/B8yC,EAAK6O,IAAI5N,aAAarmC,EAAMstD,EAAattD,GAAM/I,cAE1C8iC,GACCjW,QAAAA,MAAM,cAAciW,GAC5BqL,EAAK2a,cAAchmB,GAErBqL,EAAKuhB,YAAa,EAClBvhB,EAAKwhB,mBACL,KAAA,GAAA,IAAA,MAAA,OAAAjf,EAAA5C,UAAAyC,EAAA12C,UACH,SAAAk3C,GAAA0e,OAAAA,EAAAnzD,MAAAzC,KAAAsC,cAED,CAAAoD,IAAA,aAAAvC,OAAAwyD,EAAA5iB,EAAAC,IAAAC,MAGA,SAAAiW,IAAAwT,IAAAA,EAAA,OAAA1pB,IAAAK,MAAA,SAAAgW,GAAA,cAAAA,EAAA9V,KAAA8V,EAAAplD,MAAA,KAAA,EAAAy4D,OAAArT,EAAAplD,KAAA,EACgB,QADhBy4D,EACQ18D,KAAKmjD,WAAG,IAAAuZ,OAAA,EAARA,EAAUlpB,cAAa,KAAA,EAC7BxzC,KAAKmjD,IAAM,KAAI,KAAA,EAAA,IAAA,MAAA,OAAAkG,EAAApV,UAAAiV,EAAAlpD,UAChB,WAAA21D,OAAAA,EAAAlzD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,gBAAAvC,MAED,WAAiB,IAAAiyC,EAAAp1C,KACPmjD,EAA6BnjD,KAA7BmjD,IAAK6S,EAAwBh2D,KAAxBg2D,IAAKG,EAAmBn2D,KAAnBm2D,OAAQ5uD,EAAWvH,KAAXuH,OAC1B,GAAKyuD,EAAL,CACA,IAAM5G,EAAY4G,EAAI5G,UAChBvW,EAAQsd,EAAOgD,iBAAiBhD,EAAOwB,WACxCxU,GAAAA,GAAO6S,GAAOA,EAAIpG,YAAa,CAC9BrL,GAAKnW,UAAYpuC,KAAKu5D,eAAiB,MACpCA,KAAAA,eAAiBhV,GAAKnW,UAC3BpuC,KAAK28D,kBACAzE,KAAAA,yBAAyBrf,EAAOsd,EAAOjsB,cAExC0yB,IAAAA,EAAezG,EAAOiC,OAASjC,EAAOjsB,YAAc3iC,EAAOs1D,gBAAkB1G,EAAOjsB,YAAc3iC,EAAOu1D,gBAC3GjkB,EAAM,GAAK+jB,EAAe,GAClBjY,EAAAA,OAAM,SAAC/1C,EAAM2tD,GACrB,QAAI3tD,EAAK0gD,cAIJla,EAAK8jB,qBAAuBtqD,EAAK+mC,QAAU/mC,EAAK+H,UAAY,GAAKy+B,EAAK2nB,YAAYnuD,IACrFA,EAAK0gD,YAAa,EAClB1gD,EAAKmiD,WAAY,EACZt+B,EAAAA,IAAGpxB,iBAAAA,OAAkBk7D,EAAG,iCAAgC3tD,EAAK+H,UAAW/H,EAAK+mC,UAC3E,QAEL/mC,EAAK+H,UAAYw/C,EAAOjsB,YAAc3iC,EAAOu1D,kBAC/C1nB,EAAK2iB,mBAAqBwE,EAC1BnnB,EAAK3iB,IAAI,mCAAoC8pC,EAAK,kBAAmB3tD,EAAK+H,UAAW,IAAK/H,EAAK+mC,QAAS,aAAckD,EAAM,GAAI,gBAAiBsd,EAAOjsB,YAAa,eAAgB2O,EAAM,GAAKsd,EAAOjsB,YAAa,oBAAoBkL,EAAK+gB,OAAOwB,UAAYviB,EAAK+gB,OAAOwB,UAAUC,aAAe,MACrSxiB,EAAKqS,kBAIXznD,KAAK82D,WAEP92D,KAAKg9D,iCACN,CAAAt3D,IAAA,8BAAAvC,MAED,WACE,IAAQggD,EAAgBnjD,KAAhBmjD,IAAKgT,EAAWn2D,KAAXm2D,OACRhT,GAAOnjD,KAAKi5D,oBAAsB,GAAK9C,EAAOjsB,YAAclqC,KAAKi5D,oBAAsB,IACrFxmC,KAAAA,IAAI,4BAA4BzyB,KAAKi5D,qBAC1C9V,EAAIrN,OAAOzF,GAAI6B,MAAO,EAAGlyC,KAAKi5D,oBAAsB,GACpDj5D,KAAKi5D,oBAAsB,KAI/B,CAAAvzD,IAAA,cAAAvC,MACA,SAAayL,GAGX,IAHiBquD,IAAAA,EAAG36D,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACnB46D,GAAW,EACTzzB,EAAWzpC,KAAKm2D,OAAOlkC,MAAMwX,SAC1BjoC,EAAI,EAAGA,EAAIioC,EAAS/nC,OAAQF,IAAK,CACxC,IAAM0K,EAAQu9B,EAASv9B,MAAM1K,GAAKy7D,EAC5BnuD,EAAM26B,EAAS36B,IAAItN,GAAKy7D,EAC9B,GAAI/wD,GAAS0C,EAAK+H,WAAa/H,EAAK+mC,SAAW7mC,EAAK,CACvCouD,GAAA,EACX,OAGGA,OAAAA,IACR,CAAAx3D,IAAA,YAAAvC,OAAAuyD,EAAA3iB,EAAAC,IAAAC,MAED,SAAA+W,IAAA,OAAAhX,IAAAK,MAAA,SAAA6W,GAAA,cAAAA,EAAA3W,KAAA2W,EAAAjmD,MAAA,KAAA,EAAA,GACOjE,KAAKg2D,KAAQh2D,KAAK61D,WAAU,CAAA3L,EAAAjmD,KAAA,EAAA,MACuBimD,OAAjDz3B,KAAAA,IAAI,4BAA6BzyB,KAAK61D,YAAW3L,EAAAlW,OAAA,UAAA,KAAA,EAAA,OAAAkW,EAAA3W,KAAA,EAAA2W,EAAAjmD,KAAA,EAIhDjE,KAAKg2D,IAAInhB,KAAK70C,KAAK+3D,mBAAoB/3D,KAAKm9D,kBAAiB,KAAA,EAAAjT,EAAAjmD,KAAA,GAAA,MAAA,KAAA,EAAAimD,EAAA3W,KAAA,EAAAzN,EAAAA,GAAAokB,EAAA,MAAA,GAEnE5+C,QAAQ0nB,MAAM,0BAA2BhzB,KAAK02D,aAAa5d,IAAGoR,EAAApkB,IAAK,KAAA,GAAA,IAAA,MAAA,OAAAokB,EAAAjW,UAAA+V,EAAAhqD,KAAA,CAAA,CAAA,EAAA,SAEtE,WAAA01D,OAAAA,EAAAjzD,MAAAzC,KAAAsC,cAAA,CAAAoD,IAAA,iBAAAvC,MA8HD,SAAgBswD,GAAS,IAAAje,EAAAx1C,KAElBA,KAAKg2D,KAAQh2D,KAAKmjD,KACvBnjD,KAAKmjD,IAAI1H,OAAOpL,GAAI6B,MAAOuhB,EAAS,CAAC3a,IAAK94C,KAAK02D,aAAa5d,IAAKD,MAAO,KAAM9pC,QAAS0kD,EAAQnrD,WAAY8tC,QAAQ,IAAOK,MAAK,SAACtuC,GACzHsqB,EAAAA,IAAI,0BAA2BtqB,EAAKrI,QAAUqI,EAAKrI,QAAU,KAAM,cAAeqI,EAAK0oC,eAE/F,CAAAnrC,IAAA,gBAAAvC,MAGD,SAAegD,EAAO+D,GAA4B,IAAA0rC,EAAA51C,KAApBF,EAAOwC,UAAAZ,OAAA,QAAAc,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAGgnD,EAAKhnD,UAAAZ,OAAAY,EAAAA,kBAAAE,EACtC2gD,EAAgBnjD,KAAhBmjD,IAAK57C,EAAWvH,KAAXuH,OACTk0C,EAAAA,OAAOt1C,EAAO+D,EAAQ,CAAC4uC,IAAIvxC,EAAOuxC,IAAKyY,UAAWzxD,EAAQyxD,UAAW1Y,MAAO/4C,EAAQ+4C,MAAO9pC,QAAS7E,EAAO5B,WAAYghD,MAAAA,IAAQ7S,MAAK,SAACtuC,GAEnIytC,GADJA,EAAKnjB,IAAI,gCAAiCtqB,EAAKrI,QAAUqI,EAAKrI,QAAU,KAAM,cAAeqI,EAAK0oC,SAAU,SAAU1oC,EAAKlH,KAAK,gBAAgB20C,EAAKugB,OAAOgD,oBACxJvjB,EAAKuN,KAAOrjD,EAAQwpD,OAASxpD,EAAQyxD,YAAc3b,EAAKogB,IAAI5G,UAAU1tD,OAAS,EAAG,CAC9E+nC,IAAAA,EAAWmM,EAAKugB,OAAO1sB,SACzBA,GAAYA,EAAS/nC,OAAS,IAChCk0C,EAAKihB,cAAgBptB,EAAS36B,IAAI26B,EAAS/nC,OAAS,IAEtDk0C,EAAKkhB,WACLlhB,EAAKnjB,IAAI,wBAAyB3yB,EAAQ+4C,MAAO,eAAe/4C,EAAQyxD,UAAW,mBAAmB3b,EAAKihB,cAAe,kBAAkBjhB,EAAKogB,IAAI/M,KAAKjjD,cAE3Jq2C,OAAM,SAACrpB,GAER,GADQP,QAAAA,IAAI,cAAeO,GACvBA,GAAAA,MAASmwB,GAAAA,EAAK6U,SAAU,CAC1B,IAAMN,EAAc9hB,EAAKugB,OAAOgD,iBAAiBvjB,EAAKugB,OAAOwB,WAC7D/hB,EAAKsiB,yBAAyBR,EAAa9hB,EAAKugB,OAAOjsB,aAAa,SAK1E,CAAAxkC,IAAA,2BAAAvC,MAGA,SAA0Bi6D,EAAmBlzB,EAAamzB,GAAW,IAAAtnB,EAAA/1C,KAC3DmjD,EAAqBnjD,KAArBmjD,IAAK6S,EAAgBh2D,KAAhBg2D,IAAKG,EAAWn2D,KAAXm2D,OAClB,GAAKhT,GAAQ6S,GAAQG,IACjBkH,IACFhiB,aAAar7C,KAAKs9D,oBAClBt9D,KAAKs9D,mBAAqB,MAEvBF,IAAuCjH,EAAAA,EAAOgD,iBAAiBhD,EAAOwB,YACtEztB,IAAaA,EAAcisB,EAAOjsB,gBAClCmzB,GAAa9Y,GAAKnW,UAAYpuC,KAAKu9D,4BAA8Bv9D,KAAKuH,OAAOi2D,iBAAmBx9D,KAAK63D,eACrG0F,KAAAA,2BAA6BhZ,GAAKnW,UACnCgvB,GAAqBA,EAAkB,IAAM,IAAMlzB,EAAckzB,EAAkB,GAAKp9D,KAAKuH,OAAOi2D,iBAAmBra,EAAI6U,YAAW,CACxI,IAAMzgD,EAAO6lD,EAAkB,GACzBK,EAAazH,EAAI5D,eAAe76C,GACtC,GAAIkmD,GAAc,GAAMzH,EAAI5G,UAAUqO,GAAY9mD,UAAYuzB,EAAc,CACpEwzB,IAAAA,EAAW/zD,KAAKW,MAAMX,KAAKC,IAAIosD,EAAI5G,UAAUqO,GAAY9mD,UAAWymD,EAAkB,KACxFA,EAAkB,GAAKM,GACzB19D,KAAKyyB,IAAI,+CAAgD2qC,EAAkB,GAAIM,GAC/Eva,EAAIrN,OAAOzF,GAAI6B,MAAOkrB,EAAkB,GAAIM,IACnCva,EAAI6U,WAAah4D,KAAKs9D,qBAC1BA,KAAAA,mBAAqB3hB,YAAY,WAAYuc,EAAAA,yBAA0B,KAAM,MAAM,KAAQ,UAMxG,CAAAxyD,IAAA,WAAAvC,MAIA,WACE,IAAQgzD,EAAgBn2D,KAAhBm2D,OAAQH,EAAQh2D,KAARg2D,IACVvsB,EAAW0sB,EAAOe,cAClByG,EAAOl0B,EAAWA,EAAS36B,IAAM,EAMnCknD,OALCh2D,KAAK63D,aAAe73D,KAAKmjD,KAAO6S,EAAI/M,KAAKjjD,SAAWmwD,EAAOjsB,YAAc,KACvEzX,KAAAA,IAAI,4DAA4D0jC,EAAOjsB,YAAa,eAAeyzB,EAAM,cAAc3H,EAAI/M,KAAKjjD,UACrIhG,KAAK63D,aAAc,EACnB73D,KAAKmjD,IAAIzO,kBAEPshB,GAAOA,EAAI/M,MAAQ+M,EAAI/M,KAAKjjD,SAAWmwD,EAAOjsB,YAAc,MAC9DlqC,KAAK49D,gBACAnrC,KAAAA,IAAI,oEAAoE0jC,EAAOjsB,YAAa,eAAeyzB,EAAM,cAAc3H,EAAI/M,KAAKjjD,UACxIm9C,KAAAA,KAAOnjD,KAAKmjD,IAAIzO,eACd,KAMX,CAAAhvC,IAAA,YAAAvC,MAIA,SAAW06D,GACT79D,KAAKq6D,iBAAiBwD,KACvB,CAAAn4D,IAAA,sBAAAvC,MAED,SAAqBm7C,EAAI10B,GAAM,IAAAosB,EAAAh2C,KACrBuH,EAAmBvH,KAAnBuH,OAAQ4uD,EAAWn2D,KAAXm2D,OAChBn2D,KAAKyyB,IAAI,qCAAqC0jC,EAAOjsB,YAAa,SAAStgB,EAAM,OAAO00B,GACxF,IAAQpU,EAAuBisB,EAAvBjsB,YAAakuB,EAAUjC,EAAViC,OAChBp4D,KAAKs4D,kBACRt4D,KAAKs4D,gBAAkB,CAACpuB,YAAAA,EAA0BkuB,OAAAA,GAClDp4D,KAAKyyB,IAAI,qCAAqC0jC,EAAOjsB,YAAa,UAAUkuB,IAEvE7wD,EAAAA,OAAO8lC,IAAMiR,EAAGjR,IACvB9lC,EAAOu2D,qBAAsB,EAC7B3H,EAAOjsB,YAAc,EACrBisB,EAAOoC,QACPv4D,KAAK4nD,SACL5nD,KAAK61D,YAAa,EAClB71D,KAAK+9D,sBAAwB5H,EAAOtzD,IAAI,UAAW7C,KAAK+9D,sBACxD/9D,KAAK+9D,qBAAuB,WAC1B/nB,EAAKgoB,oBAAoB9zB,EAAakuB,EAAQxuC,EAAM00B,GACpDtI,EAAK+nB,qBAAuB,MAEvBh+D,EAAAA,KAAK,UAAWC,KAAK+9D,sBACvB5H,KAAAA,OAAOlkC,MAAM4iB,OAClB70C,KAAK26D,YACN,CAAAj1D,IAAA,kBAAAvC,MA+DD,WAAmB,IAAAmzC,EAAAt2C,KACTuH,EAAoBvH,KAApBuH,OAAS4uD,EAAWn2D,KAAXm2D,OACZ5uD,EAAO02D,0BACN9H,EAAOjsB,aAAelqC,KAAKk+D,kBAAoB,GAAK,IAAO/H,EAAOiC,OACtC,IAA1Bp4D,KAAKm+D,kBAAoD,IAA1Bn+D,KAAKm+D,mBACtCn+D,KAAKyyB,IAAI,iBACTzyB,KAAKm+D,iBAAmB,EACxB9iB,aAAar7C,KAAKo+D,mBAClBp+D,KAAKm+D,iBAAmB,MAIrBn+D,KAAKm+D,mBACRn+D,KAAKm+D,iBAAmB,EACxBn+D,KAAKyyB,IAAGpxB,aAAAA,OAAckG,EAAO82D,eAAc,YACtCD,KAAAA,kBAAoBziB,YAAW,WAC9BrF,EAAKqgB,YAGqB,IAA1BrgB,EAAK6nB,mBACP7nB,EAAK6nB,iBAAmB,EACxB7nB,EAAK7jB,IAAI,WACT6jB,EAAK2Y,cAAc,IAAIiH,SAAO5f,EAAK6f,OAAQ,CACzCnpB,UAAW,UACXopB,cAAevS,GAAYwS,QAC3BnpB,UAAW8V,GAAYU,YACvBxa,aAAc,eACd4P,IAAKvxC,EAAOuxC,QAGhBxC,EAAK8nB,kBAAoB,QACxB72D,EAAO82D,iBAGdr+D,KAAKk+D,iBAAmB/H,EAAOjsB,eAElC,CAAAxkC,IAAA,YAAAmB,IAED,WACE,OAAQ7G,KAAKm2D,SACd,CAAAzwD,IAAA,gBAAAvC,MAaD,WACEnD,KAAKs+D,mBAAoB,EACrBt+D,KAAKu+D,gBACPv+D,KAAKu+D,cAActqB,OACnBj0C,KAAKu+D,cAAgB,MAEnBv+D,KAAKo+D,oBACP/iB,aAAar7C,KAAKo+D,mBAClBp+D,KAAKo+D,kBAAoB,KACzBp+D,KAAKm+D,sBAAmB37D,KAE3B,CAAAkD,IAAA,iBAAAvC,MAED,WAAkB,IAAAqzC,EAAAx2C,KACZA,KAAKs+D,oBAGTt+D,KAAK49D,gBACAW,KAAAA,cAAgB,IAAIlK,IAAM,WACzB7d,EAAK+nB,eACP/nB,EAAKsf,mBAGT91D,KAAKu+D,cAAczJ,UAAU90D,KAAKuH,OAAOi3D,eACzCx+D,KAAKs+D,mBAAoB,KAC1B,CAAA54D,IAAA,MAAAvC,MAGD,SAAKw2B,GAEmH,IADtH,IAAQ+8B,EAAiB12D,KAAjB02D,aACF9F,EAAc8F,GAAgBA,EAAa5d,cAAGz3C,OAAcq1D,EAAa5d,SAAGz3C,OAAIs4B,GAAOt4B,WAAAA,OAAgBs4B,GAASp2B,EAAAjB,UAAAZ,OAFvGosD,MAAclsD,MAAA2B,EAAAA,EAAAA,OAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAA,EAAAA,EAAAnB,GAAAA,UAAAmB,GAG7BgvB,GAAGhwB,WAACmuD,EAAAA,CAAAA,GAAUvvD,OAAKysD,MAGrB,CAAApoD,IAAA,SAAAvC,MAGA,WACEnD,KAAK61D,YAAa,EAClB71D,KAAK63D,aAAc,EAEnB73D,KAAK+3D,mBAAqB,EAC1B/3D,KAAKi5D,oBAAsB,EAC3Bj5D,KAAKk5D,qBAAsB,EAC3Bl5D,KAAK49D,gBACD59D,KAAKg2D,MACPh2D,KAAKg2D,IAAInzD,IAAI6rD,GAAuB1uD,KAAKo7D,iBACzCp7D,KAAKg2D,IAAInzD,IAAI6rD,GAAkB1uD,KAAKq7D,aACpCr7D,KAAKg2D,IAAInzD,IAAI6rD,GAA8B1uD,KAAKs7D,oBAChDt7D,KAAKg2D,IAAI7B,UACTn0D,KAAKg2D,IAAM,MAETh2D,KAAKmjD,MACPnjD,KAAKmjD,IAAI3P,cACTxzC,KAAKmjD,IAAM,MAEbnjD,KAAKy+D,iBAGP,CAAA/4D,IAAA,eAAAvC,MACA,WACE,IAAQgzD,EAAWn2D,KAAXm2D,OACJ,IACFn2D,KAAKyyB,IAAG,mBAAApxB,OAAoB80D,EAAOlkC,MAAMyhB,MACrCyiB,EAAOlkC,OAASkkC,EAAOlkC,MAAMyhB,MACxBzhB,EAAAA,MAAM2iB,gBAAgB,OAC7BuhB,EAAOlkC,MAAM4iB,cAER7hB,GACFP,KAAAA,IAAI,oBAAqBO,MAEjC,CAAAttB,IAAA,UAAAvC,MAGD,WACE,IAAQgzD,EAAWn2D,KAAXm2D,OAEDmE,EAAAA,YAAY,SAAUt6D,KAAKu6D,aAE3BD,EAAAA,YAAY,QAASt6D,KAAKw6D,YAEjCx6D,KAAK0+D,eACL1+D,KAAK4nD,SAEL5nD,KAAKm2D,OAAOgE,SAAW/E,GACvBp1D,KAAKm2D,OAAOiE,WAAa/E,GACzBr1D,KAAKm2D,OAAOkE,iBAAmB/E,GAC/Bt1D,KAAKm2D,OAAO+D,UAAY3E,GAEpBv1D,KAAKo+D,mBACPO,cAAc3+D,KAAKo+D,mBAEjBp+D,KAAKs9D,qBACPjiB,aAAar7C,KAAKs9D,oBAClBt9D,KAAKs9D,mBAAqB,MAExBt9D,KAAKi3D,qBACP5b,aAAar7C,KAAKi3D,oBAClBj3D,KAAKi3D,mBAAqB,SAE7B,CAAA,CAAAvxD,IAAA,aAAAmB,IAh5BD,WACS,MAAA,cACR,CAAAnB,IAAA,gBAAAmB,IAED,WACS,MAAA,CACLi2D,gBAAiB,GACjBD,gBAAiB,EACjBoB,yBAAyB,EACzBI,eAAgB,KAChBhH,uBAAwB,IACxBD,qBAAqB,EACrBoH,cAAe,GACfxO,WAAY,KACZ+L,gBAAgB,KAEnB,CAAAr2D,IAAA,UAAAmB,IAED,WACS,MAAA,aACR2uD,GArBoCoJ,EAAUA"}